//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DNETRsvpRequest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Retrofit2HttpField.h"
#include "Retrofit2HttpFormUrlEncoded.h"
#include "Retrofit2HttpPOST.h"
#include "Retrofit2HttpPath.h"
#include "java/lang/annotation/Annotation.h"

@interface DNETRsvpRequest : NSObject

@end

__attribute__((unused)) static IOSObjectArray *DNETRsvpRequest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DNETRsvpRequest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *DNETRsvpRequest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *DNETRsvpRequest__Annotations$3();

@implementation DNETRsvpRequest

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIoReactivexObservable;", 0x401, 0, 1, -1, 2, 3, 4 },
    { NULL, "LIoReactivexObservable;", 0x401, 5, 1, -1, 2, 6, 7 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(rsvpWithJavaLangLong:withNSString:);
  methods[1].selector = @selector(unRsvpWithJavaLangLong:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "rsvp", "LJavaLangLong;LNSString;", "(Ljava/lang/Long;Ljava/lang/String;)Lio/reactivex/Observable<Lco/touchlab/droidconandroid/shared/network/dao/JustId;>;", (void *)&DNETRsvpRequest__Annotations$0, (void *)&DNETRsvpRequest__Annotations$1, "unRsvp", (void *)&DNETRsvpRequest__Annotations$2, (void *)&DNETRsvpRequest__Annotations$3 };
  static const J2ObjcClassInfo _DNETRsvpRequest = { "RsvpRequest", "co.touchlab.droidconandroid.shared.network", ptrTable, methods, NULL, 7, 0x609, 2, 0, -1, -1, -1, -1, -1 };
  return &_DNETRsvpRequest;
}

@end

IOSObjectArray *DNETRsvpRequest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_Retrofit2HttpPOST(@"/dataTest/rsvpEventAnon/{id}"), create_Retrofit2HttpFormUrlEncoded() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DNETRsvpRequest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_Retrofit2HttpPath(false, @"id") } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_Retrofit2HttpField(false, @"uuid") } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *DNETRsvpRequest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_Retrofit2HttpPOST(@"/dataTest/unRsvpEventAnon/{id}"), create_Retrofit2HttpFormUrlEncoded() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DNETRsvpRequest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_Retrofit2HttpPath(false, @"id") } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_Retrofit2HttpField(false, @"uuid") } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DNETRsvpRequest)
