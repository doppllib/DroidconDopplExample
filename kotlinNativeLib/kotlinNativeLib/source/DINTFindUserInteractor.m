//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDroidconandroidCrashReport.h"
#include "DDATDatabaseHelper.h"
#include "DDATUserAccount.h"
#include "DINTFindUserInteractor.h"
#include "DNETDNetworkUserAccount.h"
#include "DNETDUserInfoResponse.h"
#include "DNETFindUserRequest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexCompletable.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFunctionsAction.h"
#include "IoReactivexFunctionsConsumer.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexObservable.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/inject/Inject.h"
#include "javax/inject/Singleton.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface DINTFindUserInteractor () {
 @public
  DDATDatabaseHelper *helper_;
  id<DNETFindUserRequest> request_;
}

- (IoReactivexObservable *)saveUserResponseWithDNETDNetworkUserAccount:(DNETDNetworkUserAccount *)networkUserAccount;

@end

J2OBJC_FIELD_SETTER(DINTFindUserInteractor, helper_, DDATDatabaseHelper *)
J2OBJC_FIELD_SETTER(DINTFindUserInteractor, request_, id<DNETFindUserRequest>)

__attribute__((unused)) static IoReactivexObservable *DINTFindUserInteractor_saveUserResponseWithDNETDNetworkUserAccount_(DINTFindUserInteractor *self, DNETDNetworkUserAccount *networkUserAccount);

__attribute__((unused)) static IOSObjectArray *DINTFindUserInteractor__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DINTFindUserInteractor__Annotations$1();

@interface DINTFindUserInteractor_$Lambda$1 : NSObject < IoReactivexFunctionsFunction > {
 @public
  DINTFindUserInteractor *this$0_;
}

- (id)applyWithId:(DNETDUserInfoResponse *)info;

@end

J2OBJC_EMPTY_STATIC_INIT(DINTFindUserInteractor_$Lambda$1)

__attribute__((unused)) static void DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(DINTFindUserInteractor_$Lambda$1 *self, DINTFindUserInteractor *outer$);

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$1 *new_DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(DINTFindUserInteractor *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$1 *create_DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(DINTFindUserInteractor *outer$);

@interface DINTFindUserInteractor_$Lambda$2 : NSObject < IoReactivexFunctionsConsumer >

- (void)acceptWithId:(DDATUserAccount *)userAccount;

@end

J2OBJC_STATIC_INIT(DINTFindUserInteractor_$Lambda$2)

inline DINTFindUserInteractor_$Lambda$2 *DINTFindUserInteractor_$Lambda$2_get_instance();
static DINTFindUserInteractor_$Lambda$2 *DINTFindUserInteractor_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(DINTFindUserInteractor_$Lambda$2, instance, DINTFindUserInteractor_$Lambda$2 *)

__attribute__((unused)) static void DINTFindUserInteractor_$Lambda$2_init(DINTFindUserInteractor_$Lambda$2 *self);

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$2 *new_DINTFindUserInteractor_$Lambda$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$2 *create_DINTFindUserInteractor_$Lambda$2_init();

@interface DINTFindUserInteractor_$Lambda$3 : NSObject < IoReactivexFunctionsConsumer >

- (void)acceptWithId:(JavaLangThrowable *)a;

@end

J2OBJC_STATIC_INIT(DINTFindUserInteractor_$Lambda$3)

inline DINTFindUserInteractor_$Lambda$3 *DINTFindUserInteractor_$Lambda$3_get_instance();
static DINTFindUserInteractor_$Lambda$3 *DINTFindUserInteractor_$Lambda$3_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(DINTFindUserInteractor_$Lambda$3, instance, DINTFindUserInteractor_$Lambda$3 *)

__attribute__((unused)) static void DINTFindUserInteractor_$Lambda$3_init(DINTFindUserInteractor_$Lambda$3 *self);

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$3 *new_DINTFindUserInteractor_$Lambda$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$3 *create_DINTFindUserInteractor_$Lambda$3_init();

@interface DINTFindUserInteractor_$Lambda$4 : NSObject < IoReactivexFunctionsAction > {
 @public
  DINTFindUserInteractor *this$0_;
  DDATUserAccount *val$newDbUser_;
}

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DINTFindUserInteractor_$Lambda$4)

__attribute__((unused)) static void DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(DINTFindUserInteractor_$Lambda$4 *self, DINTFindUserInteractor *outer$, DDATUserAccount *capture$0);

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$4 *new_DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(DINTFindUserInteractor *outer$, DDATUserAccount *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DINTFindUserInteractor_$Lambda$4 *create_DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(DINTFindUserInteractor *outer$, DDATUserAccount *capture$0);

@implementation DINTFindUserInteractor

- (instancetype)initWithDDATDatabaseHelper:(DDATDatabaseHelper *)helper
                   withDNETFindUserRequest:(id<DNETFindUserRequest>)request {
  DINTFindUserInteractor_initWithDDATDatabaseHelper_withDNETFindUserRequest_(self, helper, request);
  return self;
}

- (IoReactivexFlowable *)loadUserAccountWithLong:(jlong)userId {
  [((IoReactivexObservable *) nil_chk([((IoReactivexObservable *) nil_chk([((id<DNETFindUserRequest>) nil_chk(request_)) getUserInfoWithLong:userId])) flatMapWithIoReactivexFunctionsFunction:create_DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(self)])) subscribeWithIoReactivexFunctionsConsumer:JreLoadStatic(DINTFindUserInteractor_$Lambda$2, instance) withIoReactivexFunctionsConsumer:JreLoadStatic(DINTFindUserInteractor_$Lambda$3, instance)];
  return [((DDATDatabaseHelper *) nil_chk(helper_)) flowUserAccountWithLong:userId];
}

- (IoReactivexObservable *)saveUserResponseWithDNETDNetworkUserAccount:(DNETDNetworkUserAccount *)networkUserAccount {
  return DINTFindUserInteractor_saveUserResponseWithDNETDNetworkUserAccount_(self, networkUserAccount);
}

- (void)dealloc {
  RELEASE_(helper_);
  RELEASE_(request_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIoReactivexObservable;", 0x2, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDDATDatabaseHelper:withDNETFindUserRequest:);
  methods[1].selector = @selector(loadUserAccountWithLong:);
  methods[2].selector = @selector(saveUserResponseWithDNETDNetworkUserAccount:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LDDATDatabaseHelper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "request_", "LDNETFindUserRequest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDDATDatabaseHelper;LDNETFindUserRequest;", (void *)&DINTFindUserInteractor__Annotations$0, "loadUserAccount", "J", "(J)Lio/reactivex/Flowable<Lco/touchlab/droidconandroid/shared/data/UserAccount;>;", "saveUserResponse", "LDNETDNetworkUserAccount;", "(Lco/touchlab/droidconandroid/shared/network/dao/NetworkUserAccount;)Lio/reactivex/Observable<Lco/touchlab/droidconandroid/shared/data/UserAccount;>;", (void *)&DINTFindUserInteractor__Annotations$1 };
  static const J2ObjcClassInfo _DINTFindUserInteractor = { "FindUserInteractor", "co.touchlab.droidconandroid.shared.interactors", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, 8 };
  return &_DINTFindUserInteractor;
}

@end

void DINTFindUserInteractor_initWithDDATDatabaseHelper_withDNETFindUserRequest_(DINTFindUserInteractor *self, DDATDatabaseHelper *helper, id<DNETFindUserRequest> request) {
  NSObject_init(self);
  JreStrongAssign(&self->helper_, helper);
  JreStrongAssign(&self->request_, request);
}

DINTFindUserInteractor *new_DINTFindUserInteractor_initWithDDATDatabaseHelper_withDNETFindUserRequest_(DDATDatabaseHelper *helper, id<DNETFindUserRequest> request) {
  J2OBJC_NEW_IMPL(DINTFindUserInteractor, initWithDDATDatabaseHelper_withDNETFindUserRequest_, helper, request)
}

DINTFindUserInteractor *create_DINTFindUserInteractor_initWithDDATDatabaseHelper_withDNETFindUserRequest_(DDATDatabaseHelper *helper, id<DNETFindUserRequest> request) {
  J2OBJC_CREATE_IMPL(DINTFindUserInteractor, initWithDDATDatabaseHelper_withDNETFindUserRequest_, helper, request)
}

IoReactivexObservable *DINTFindUserInteractor_saveUserResponseWithDNETDNetworkUserAccount_(DINTFindUserInteractor *self, DNETDNetworkUserAccount *networkUserAccount) {
  DDATUserAccount *newDbUser = create_DDATUserAccount_init();
  [((DDATDatabaseHelper *) nil_chk(self->helper_)) userAccountToDbWithDNETDNetworkUserAccount:networkUserAccount withDDATUserAccount:newDbUser];
  return [((IoReactivexCompletable *) nil_chk(IoReactivexCompletable_fromActionWithIoReactivexFunctionsAction_(create_DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(self, newDbUser)))) andThenWithIoReactivexObservableSource:IoReactivexObservable_justWithId_(newDbUser)];
}

IOSObjectArray *DINTFindUserInteractor__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectInject() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTFindUserInteractor__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectSingleton() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DINTFindUserInteractor)

@implementation DINTFindUserInteractor_$Lambda$1

- (id)applyWithId:(DNETDUserInfoResponse *)info {
  return DINTFindUserInteractor_saveUserResponseWithDNETDNetworkUserAccount_(this$0_, ((DNETDUserInfoResponse *) nil_chk(info))->user_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

@end

void DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(DINTFindUserInteractor_$Lambda$1 *self, DINTFindUserInteractor *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

DINTFindUserInteractor_$Lambda$1 *new_DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(DINTFindUserInteractor *outer$) {
  J2OBJC_NEW_IMPL(DINTFindUserInteractor_$Lambda$1, initWithDINTFindUserInteractor_, outer$)
}

DINTFindUserInteractor_$Lambda$1 *create_DINTFindUserInteractor_$Lambda$1_initWithDINTFindUserInteractor_(DINTFindUserInteractor *outer$) {
  J2OBJC_CREATE_IMPL(DINTFindUserInteractor_$Lambda$1, initWithDINTFindUserInteractor_, outer$)
}

J2OBJC_INITIALIZED_DEFN(DINTFindUserInteractor_$Lambda$2)

@implementation DINTFindUserInteractor_$Lambda$2

- (void)acceptWithId:(DDATUserAccount *)userAccount {
}

+ (void)initialize {
  if (self == [DINTFindUserInteractor_$Lambda$2 class]) {
    JreStrongAssignAndConsume(&DINTFindUserInteractor_$Lambda$2_instance, new_DINTFindUserInteractor_$Lambda$2_init());
    J2OBJC_SET_INITIALIZED(DINTFindUserInteractor_$Lambda$2)
  }
}

@end

void DINTFindUserInteractor_$Lambda$2_init(DINTFindUserInteractor_$Lambda$2 *self) {
  NSObject_init(self);
}

DINTFindUserInteractor_$Lambda$2 *new_DINTFindUserInteractor_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(DINTFindUserInteractor_$Lambda$2, init)
}

DINTFindUserInteractor_$Lambda$2 *create_DINTFindUserInteractor_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(DINTFindUserInteractor_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(DINTFindUserInteractor_$Lambda$3)

@implementation DINTFindUserInteractor_$Lambda$3

- (void)acceptWithId:(JavaLangThrowable *)a {
  CoTouchlabDroidconandroidCrashReport_logExceptionWithJavaLangThrowable_(a);
}

+ (void)initialize {
  if (self == [DINTFindUserInteractor_$Lambda$3 class]) {
    JreStrongAssignAndConsume(&DINTFindUserInteractor_$Lambda$3_instance, new_DINTFindUserInteractor_$Lambda$3_init());
    J2OBJC_SET_INITIALIZED(DINTFindUserInteractor_$Lambda$3)
  }
}

@end

void DINTFindUserInteractor_$Lambda$3_init(DINTFindUserInteractor_$Lambda$3 *self) {
  NSObject_init(self);
}

DINTFindUserInteractor_$Lambda$3 *new_DINTFindUserInteractor_$Lambda$3_init() {
  J2OBJC_NEW_IMPL(DINTFindUserInteractor_$Lambda$3, init)
}

DINTFindUserInteractor_$Lambda$3 *create_DINTFindUserInteractor_$Lambda$3_init() {
  J2OBJC_CREATE_IMPL(DINTFindUserInteractor_$Lambda$3, init)
}

@implementation DINTFindUserInteractor_$Lambda$4

- (void)run {
  [((DDATDatabaseHelper *) nil_chk(this$0_->helper_)) saveUserAccountWithDDATUserAccount:val$newDbUser_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$newDbUser_);
  [super dealloc];
}

@end

void DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(DINTFindUserInteractor_$Lambda$4 *self, DINTFindUserInteractor *outer$, DDATUserAccount *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$newDbUser_, capture$0);
  NSObject_init(self);
}

DINTFindUserInteractor_$Lambda$4 *new_DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(DINTFindUserInteractor *outer$, DDATUserAccount *capture$0) {
  J2OBJC_NEW_IMPL(DINTFindUserInteractor_$Lambda$4, initWithDINTFindUserInteractor_withDDATUserAccount_, outer$, capture$0)
}

DINTFindUserInteractor_$Lambda$4 *create_DINTFindUserInteractor_$Lambda$4_initWithDINTFindUserInteractor_withDDATUserAccount_(DINTFindUserInteractor *outer$, DDATUserAccount *capture$0) {
  J2OBJC_CREATE_IMPL(DINTFindUserInteractor_$Lambda$4, initWithDINTFindUserInteractor_withDDATUserAccount_, outer$, capture$0)
}
