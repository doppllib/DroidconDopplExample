//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DVMEventDetailViewModel")
#ifdef RESTRICT_DVMEventDetailViewModel
#define INCLUDE_ALL_DVMEventDetailViewModel 0
#else
#define INCLUDE_ALL_DVMEventDetailViewModel 1
#endif
#undef RESTRICT_DVMEventDetailViewModel

#if !defined (DVMEventDetailViewModel_) && (INCLUDE_ALL_DVMEventDetailViewModel || defined(INCLUDE_DVMEventDetailViewModel))
#define DVMEventDetailViewModel_

#define RESTRICT_AndroidArchLifecycleViewModel 1
#define INCLUDE_AndroidArchLifecycleViewModel 1
#include "AndroidArchLifecycleViewModel.h"

@class DVMEventDetailViewModel_Factory;
@protocol DVMEventDetailViewModel_Host;

@interface DVMEventDetailViewModel : AndroidArchLifecycleViewModel

#pragma mark Public

+ (DVMEventDetailViewModel_Factory *)factory;

+ (DVMEventDetailViewModel *)forIos;

- (void)setRsvpWithBoolean:(jboolean)shouldRsvp
                  withLong:(jlong)eventId
withDVMEventDetailViewModel_Host:(id<DVMEventDetailViewModel_Host>)host;

- (void)unwire;

- (void)wireWithDVMEventDetailViewModel_Host:(id<DVMEventDetailViewModel_Host>)host
                                    withLong:(jlong)eventId;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMEventDetailViewModel)

FOUNDATION_EXPORT DVMEventDetailViewModel_Factory *DVMEventDetailViewModel_factory();

FOUNDATION_EXPORT DVMEventDetailViewModel *DVMEventDetailViewModel_forIos();

J2OBJC_TYPE_LITERAL_HEADER(DVMEventDetailViewModel)

@compatibility_alias CoTouchlabDroidconandroidSharedViewmodelEventDetailViewModel DVMEventDetailViewModel;

#endif

#if !defined (DVMEventDetailViewModel_Host_) && (INCLUDE_ALL_DVMEventDetailViewModel || defined(INCLUDE_DVMEventDetailViewModel_Host))
#define DVMEventDetailViewModel_Host_

@class DDATEvent;
@class DDATEventInfo;

@protocol DVMEventDetailViewModel_Host < JavaObject >

- (void)dataRefresh:(DDATEventInfo *)eventInfo;

- (void)reportError:(NSString *)error;

- (void)updateRsvp:(DDATEvent *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMEventDetailViewModel_Host)

J2OBJC_TYPE_LITERAL_HEADER(DVMEventDetailViewModel_Host)

#endif

#if !defined (DVMEventDetailViewModel_Factory_) && (INCLUDE_ALL_DVMEventDetailViewModel || defined(INCLUDE_DVMEventDetailViewModel_Factory))
#define DVMEventDetailViewModel_Factory_

#define RESTRICT_AndroidArchLifecycleViewModelProvider 1
#define INCLUDE_AndroidArchLifecycleViewModelProvider_NewInstanceFactory 1
#include "AndroidArchLifecycleViewModelProvider.h"

@class AndroidArchLifecycleViewModel;
@class DINTEventDetailInteractor;
@class DINTRsvpInteractor;
@class IOSClass;

@interface DVMEventDetailViewModel_Factory : AndroidArchLifecycleViewModelProvider_NewInstanceFactory {
 @public
  DINTEventDetailInteractor *detailInteractor_;
  DINTRsvpInteractor *rsvpInteractor_;
}

#pragma mark Public

- (instancetype)initWithDINTEventDetailInteractor:(DINTEventDetailInteractor *)detailInteractor
                           withDINTRsvpInteractor:(DINTRsvpInteractor *)rsvpInteractor;

- (AndroidArchLifecycleViewModel *)createWithIOSClass:(IOSClass *)modelClass;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMEventDetailViewModel_Factory)

J2OBJC_FIELD_SETTER(DVMEventDetailViewModel_Factory, detailInteractor_, DINTEventDetailInteractor *)
J2OBJC_FIELD_SETTER(DVMEventDetailViewModel_Factory, rsvpInteractor_, DINTRsvpInteractor *)

FOUNDATION_EXPORT void DVMEventDetailViewModel_Factory_initWithDINTEventDetailInteractor_withDINTRsvpInteractor_(DVMEventDetailViewModel_Factory *self, DINTEventDetailInteractor *detailInteractor, DINTRsvpInteractor *rsvpInteractor);

FOUNDATION_EXPORT DVMEventDetailViewModel_Factory *new_DVMEventDetailViewModel_Factory_initWithDINTEventDetailInteractor_withDINTRsvpInteractor_(DINTEventDetailInteractor *detailInteractor, DINTRsvpInteractor *rsvpInteractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DVMEventDetailViewModel_Factory *create_DVMEventDetailViewModel_Factory_initWithDINTEventDetailInteractor_withDINTRsvpInteractor_(DINTEventDetailInteractor *detailInteractor, DINTRsvpInteractor *rsvpInteractor);

J2OBJC_TYPE_LITERAL_HEADER(DVMEventDetailViewModel_Factory)

#endif

#pragma pop_macro("INCLUDE_ALL_DVMEventDetailViewModel")
