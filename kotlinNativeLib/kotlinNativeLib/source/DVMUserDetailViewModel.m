//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchLifecycleViewModel.h"
#include "AndroidArchLifecycleViewModelProvider.h"
#include "DDAGAppComponent.h"
#include "DDATUserAccount.h"
#include "DINTFindUserInteractor.h"
#include "DVMAppManager.h"
#include "DVMUserDetailViewModel.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesCompositeDisposable.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFlowableTransformer.h"
#include "IoReactivexFunctionsConsumer.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/inject/Inject.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface DVMUserDetailViewModel () {
 @public
  DINTFindUserInteractor *interactor_;
  IoReactivexDisposablesCompositeDisposable *disposables_;
  id<IoReactivexFlowableTransformer> transformer_;
}

- (instancetype)initWithDINTFindUserInteractor:(DINTFindUserInteractor *)interactor
            withIoReactivexFlowableTransformer:(id<IoReactivexFlowableTransformer>)transformer;

@end

J2OBJC_FIELD_SETTER(DVMUserDetailViewModel, interactor_, DINTFindUserInteractor *)
J2OBJC_FIELD_SETTER(DVMUserDetailViewModel, disposables_, IoReactivexDisposablesCompositeDisposable *)
J2OBJC_FIELD_SETTER(DVMUserDetailViewModel, transformer_, id<IoReactivexFlowableTransformer>)

__attribute__((unused)) static void DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(DVMUserDetailViewModel *self, DINTFindUserInteractor *interactor, id<IoReactivexFlowableTransformer> transformer);

__attribute__((unused)) static DVMUserDetailViewModel *new_DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(DINTFindUserInteractor *interactor, id<IoReactivexFlowableTransformer> transformer) NS_RETURNS_RETAINED;

__attribute__((unused)) static DVMUserDetailViewModel *create_DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(DINTFindUserInteractor *interactor, id<IoReactivexFlowableTransformer> transformer);

@interface DVMUserDetailViewModel_Host : NSObject

@end

__attribute__((unused)) static IOSObjectArray *DVMUserDetailViewModel_Factory__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DVMUserDetailViewModel_Factory__Annotations$1();

@interface DVMUserDetailViewModel_$Lambda$1 : NSObject < IoReactivexFunctionsConsumer > {
 @public
  id<DVMUserDetailViewModel_Host> target$_;
}

- (void)acceptWithId:(DDATUserAccount *)a;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMUserDetailViewModel_$Lambda$1)

__attribute__((unused)) static void DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(DVMUserDetailViewModel_$Lambda$1 *self, id<DVMUserDetailViewModel_Host> outer$);

__attribute__((unused)) static DVMUserDetailViewModel_$Lambda$1 *new_DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static DVMUserDetailViewModel_$Lambda$1 *create_DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> outer$);

@interface DVMUserDetailViewModel_$Lambda$2 : NSObject < IoReactivexFunctionsConsumer > {
 @public
  id<DVMUserDetailViewModel_Host> val$host_;
}

- (void)acceptWithId:(JavaLangThrowable *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMUserDetailViewModel_$Lambda$2)

__attribute__((unused)) static void DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(DVMUserDetailViewModel_$Lambda$2 *self, id<DVMUserDetailViewModel_Host> capture$0);

__attribute__((unused)) static DVMUserDetailViewModel_$Lambda$2 *new_DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DVMUserDetailViewModel_$Lambda$2 *create_DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> capture$0);

@implementation DVMUserDetailViewModel

- (instancetype)initWithDINTFindUserInteractor:(DINTFindUserInteractor *)interactor
            withIoReactivexFlowableTransformer:(id<IoReactivexFlowableTransformer>)transformer {
  DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(self, interactor, transformer);
  return self;
}

- (void)wireWithDVMUserDetailViewModel_Host:(id<DVMUserDetailViewModel_Host>)host
                                   withLong:(jlong)userId {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) addWithIoReactivexDisposablesDisposable:[((IoReactivexFlowable *) nil_chk([((IoReactivexFlowable *) nil_chk([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:userId])) composeWithIoReactivexFlowableTransformer:transformer_])) subscribeWithIoReactivexFunctionsConsumer:create_DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(nil_chk(host)) withIoReactivexFunctionsConsumer:create_DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(host)]];
}

- (void)unwire {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) clear];
}

+ (DVMUserDetailViewModel_Factory *)factory {
  return DVMUserDetailViewModel_factory();
}

+ (DVMUserDetailViewModel *)forIos {
  return DVMUserDetailViewModel_forIos();
}

- (void)dealloc {
  RELEASE_(interactor_);
  RELEASE_(disposables_);
  RELEASE_(transformer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDVMUserDetailViewModel_Factory;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDVMUserDetailViewModel;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDINTFindUserInteractor:withIoReactivexFlowableTransformer:);
  methods[1].selector = @selector(wireWithDVMUserDetailViewModel_Host:withLong:);
  methods[2].selector = @selector(unwire);
  methods[3].selector = @selector(factory);
  methods[4].selector = @selector(forIos);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "interactor_", "LDINTFindUserInteractor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "disposables_", "LIoReactivexDisposablesCompositeDisposable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "transformer_", "LIoReactivexFlowableTransformer;", .constantValue.asLong = 0, 0x2, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LDINTFindUserInteractor;LIoReactivexFlowableTransformer;", "wire", "LDVMUserDetailViewModel_Host;J", "Lio/reactivex/FlowableTransformer<Lco/touchlab/droidconandroid/shared/data/UserAccount;Lco/touchlab/droidconandroid/shared/data/UserAccount;>;", "LDVMUserDetailViewModel_Host;LDVMUserDetailViewModel_Factory;" };
  static const J2ObjcClassInfo _DVMUserDetailViewModel = { "UserDetailViewModel", "co.touchlab.droidconandroid.shared.viewmodel", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, 4, -1, -1, -1 };
  return &_DVMUserDetailViewModel;
}

@end

void DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(DVMUserDetailViewModel *self, DINTFindUserInteractor *interactor, id<IoReactivexFlowableTransformer> transformer) {
  AndroidArchLifecycleViewModel_init(self);
  JreStrongAssignAndConsume(&self->disposables_, new_IoReactivexDisposablesCompositeDisposable_init());
  JreStrongAssign(&self->interactor_, interactor);
  JreStrongAssign(&self->transformer_, transformer);
}

DVMUserDetailViewModel *new_DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(DINTFindUserInteractor *interactor, id<IoReactivexFlowableTransformer> transformer) {
  J2OBJC_NEW_IMPL(DVMUserDetailViewModel, initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_, interactor, transformer)
}

DVMUserDetailViewModel *create_DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(DINTFindUserInteractor *interactor, id<IoReactivexFlowableTransformer> transformer) {
  J2OBJC_CREATE_IMPL(DVMUserDetailViewModel, initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_, interactor, transformer)
}

DVMUserDetailViewModel_Factory *DVMUserDetailViewModel_factory() {
  DVMUserDetailViewModel_initialize();
  DVMUserDetailViewModel_Factory *factory = create_DVMUserDetailViewModel_Factory_init();
  [((id<DDAGAppComponent>) nil_chk([((DVMAppManager *) nil_chk(DVMAppManager_getInstance())) getAppComponent])) injectWithDVMUserDetailViewModel_Factory:factory];
  return factory;
}

DVMUserDetailViewModel *DVMUserDetailViewModel_forIos() {
  DVMUserDetailViewModel_initialize();
  return ((DVMUserDetailViewModel *) [((DVMUserDetailViewModel_Factory *) nil_chk(DVMUserDetailViewModel_factory())) createWithIOSClass:DVMUserDetailViewModel_class_()]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DVMUserDetailViewModel)

@implementation DVMUserDetailViewModel_Host

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(findUserError);
  methods[1].selector = @selector(onUserFoundWithDDATUserAccount:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onUserFound", "LDDATUserAccount;", "LDVMUserDetailViewModel;" };
  static const J2ObjcClassInfo _DVMUserDetailViewModel_Host = { "Host", "co.touchlab.droidconandroid.shared.viewmodel", ptrTable, methods, NULL, 7, 0x609, 2, 0, 2, -1, -1, -1, -1 };
  return &_DVMUserDetailViewModel_Host;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DVMUserDetailViewModel_Host)

@implementation DVMUserDetailViewModel_Factory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DVMUserDetailViewModel_Factory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (AndroidArchLifecycleViewModel *)createWithIOSClass:(IOSClass *)modelClass {
  return create_DVMUserDetailViewModel_initWithDINTFindUserInteractor_withIoReactivexFlowableTransformer_(task_, transformer_);
}

- (void)dealloc {
  RELEASE_(task_);
  RELEASE_(transformer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchLifecycleViewModel;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "task_", "LDINTFindUserInteractor;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
    { "transformer_", "LIoReactivexFlowableTransformer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
  };
  static const void *ptrTable[] = { "create", "LIOSClass;", "<T:Landroid/arch/lifecycle/ViewModel;>(Ljava/lang/Class<TT;>;)TT;", (void *)&DVMUserDetailViewModel_Factory__Annotations$0, (void *)&DVMUserDetailViewModel_Factory__Annotations$1, "LDVMUserDetailViewModel;" };
  static const J2ObjcClassInfo _DVMUserDetailViewModel_Factory = { "Factory", "co.touchlab.droidconandroid.shared.viewmodel", ptrTable, methods, fields, 7, 0x9, 2, 2, 5, -1, -1, -1, -1 };
  return &_DVMUserDetailViewModel_Factory;
}

@end

void DVMUserDetailViewModel_Factory_init(DVMUserDetailViewModel_Factory *self) {
  AndroidArchLifecycleViewModelProvider_NewInstanceFactory_init(self);
}

DVMUserDetailViewModel_Factory *new_DVMUserDetailViewModel_Factory_init() {
  J2OBJC_NEW_IMPL(DVMUserDetailViewModel_Factory, init)
}

DVMUserDetailViewModel_Factory *create_DVMUserDetailViewModel_Factory_init() {
  J2OBJC_CREATE_IMPL(DVMUserDetailViewModel_Factory, init)
}

IOSObjectArray *DVMUserDetailViewModel_Factory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectInject() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DVMUserDetailViewModel_Factory__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectInject() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DVMUserDetailViewModel_Factory)

@implementation DVMUserDetailViewModel_$Lambda$1

- (void)acceptWithId:(DDATUserAccount *)a {
  [target$_ onUserFoundWithDDATUserAccount:a];
}

- (void)dealloc {
  RELEASE_(target$_);
  [super dealloc];
}

@end

void DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(DVMUserDetailViewModel_$Lambda$1 *self, id<DVMUserDetailViewModel_Host> outer$) {
  JreStrongAssign(&self->target$_, outer$);
  NSObject_init(self);
}

DVMUserDetailViewModel_$Lambda$1 *new_DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> outer$) {
  J2OBJC_NEW_IMPL(DVMUserDetailViewModel_$Lambda$1, initWithDVMUserDetailViewModel_Host_, outer$)
}

DVMUserDetailViewModel_$Lambda$1 *create_DVMUserDetailViewModel_$Lambda$1_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> outer$) {
  J2OBJC_CREATE_IMPL(DVMUserDetailViewModel_$Lambda$1, initWithDVMUserDetailViewModel_Host_, outer$)
}

@implementation DVMUserDetailViewModel_$Lambda$2

- (void)acceptWithId:(JavaLangThrowable *)throwable {
  [((id<DVMUserDetailViewModel_Host>) nil_chk(val$host_)) findUserError];
}

- (void)dealloc {
  RELEASE_(val$host_);
  [super dealloc];
}

@end

void DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(DVMUserDetailViewModel_$Lambda$2 *self, id<DVMUserDetailViewModel_Host> capture$0) {
  JreStrongAssign(&self->val$host_, capture$0);
  NSObject_init(self);
}

DVMUserDetailViewModel_$Lambda$2 *new_DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> capture$0) {
  J2OBJC_NEW_IMPL(DVMUserDetailViewModel_$Lambda$2, initWithDVMUserDetailViewModel_Host_, capture$0)
}

DVMUserDetailViewModel_$Lambda$2 *create_DVMUserDetailViewModel_$Lambda$2_initWithDVMUserDetailViewModel_Host_(id<DVMUserDetailViewModel_Host> capture$0) {
  J2OBJC_CREATE_IMPL(DVMUserDetailViewModel_$Lambda$2, initWithDVMUserDetailViewModel_Host_, capture$0)
}
