//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DDATDatabaseHelper")
#ifdef RESTRICT_DDATDatabaseHelper
#define INCLUDE_ALL_DDATDatabaseHelper 0
#else
#define INCLUDE_ALL_DDATDatabaseHelper 1
#endif
#undef RESTRICT_DDATDatabaseHelper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (DDATDatabaseHelper_) && (INCLUDE_ALL_DDATDatabaseHelper || defined(INCLUDE_DDATDatabaseHelper))
#define DDATDatabaseHelper_

@class DDATBlock;
@class DDATDroidconDatabase;
@class DDATEvent;
@class DDATEventSpeaker;
@class DDATUserAccount;
@class DNETDNetworkUserAccount;
@class IoReactivexCompletable;
@class IoReactivexFlowable;
@class IoReactivexObservable;
@class IoReactivexSingle;
@protocol JavaLangRunnable;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface DDATDatabaseHelper : NSObject

#pragma mark Public

- (instancetype)initWithDDATDroidconDatabase:(DDATDroidconDatabase *)droidconDatabase;

- (void)convertAndSaveUserAccountWithDNETDNetworkUserAccount:(DNETDNetworkUserAccount *)ua
                                         withDDATUserAccount:(DDATUserAccount *)userAccount;

- (void)createEventWithDDATEvent:(DDATEvent *)event;

- (IoReactivexCompletable *)deleteBlocksWithJavaUtilList:(id<JavaUtilList>)blocks;

- (void)deleteEventsNotInWithJavaUtilSet:(id<JavaUtilSet>)goodStuff;

- (IoReactivexFlowable *)flowUserAccountWithLong:(jlong)userId;

- (id<JavaUtilList>)getBlocksList;

- (IoReactivexSingle *)getEventForIdWithLong:(jlong)eventId;

- (IoReactivexSingle *)getEvents;

- (id<JavaUtilList>)getEventsList;

- (IoReactivexSingle *)getEventSpeakersWithLong:(jlong)eventId;

- (id<JavaUtilList>)getEventsWithSpeakersList;

- (NSString *)getRsvpUuidForEventWithIdWithLong:(jlong)eventId;

- (DDATEventSpeaker *)getSpeakerForEventWithIdWithLong:(jlong)eventId
                                              withLong:(jlong)userId;

- (DDATUserAccount *)getUserAccountWithLong:(jlong)userId;

- (IoReactivexObservable *)getUserAccountForIdWithLong:(jlong)userId;

- (void)runInTransactionWithJavaLangRunnable:(id<JavaLangRunnable>)r;

- (IoReactivexCompletable *)saveUserAccountWithDDATUserAccount:(DDATUserAccount *)userAccount;

- (void)updateBlockWithDDATBlock:(DDATBlock *)block;

- (IoReactivexCompletable *)updateEventWithDDATEvent:(DDATEvent *)event;

- (void)updateSpeakerWithDDATEventSpeaker:(DDATEventSpeaker *)speaker;

- (DDATUserAccount * __nonnull)userAccountToDbWithDNETDNetworkUserAccount:(DNETDNetworkUserAccount *)ua
                                                      withDDATUserAccount:(DDATUserAccount *)dbUa;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper)

FOUNDATION_EXPORT void DDATDatabaseHelper_initWithDDATDroidconDatabase_(DDATDatabaseHelper *self, DDATDroidconDatabase *droidconDatabase);

FOUNDATION_EXPORT DDATDatabaseHelper *new_DDATDatabaseHelper_initWithDDATDroidconDatabase_(DDATDroidconDatabase *droidconDatabase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DDATDatabaseHelper *create_DDATDatabaseHelper_initWithDDATDroidconDatabase_(DDATDroidconDatabase *droidconDatabase);

J2OBJC_TYPE_LITERAL_HEADER(DDATDatabaseHelper)

@compatibility_alias CoTouchlabDroidconandroidSharedDataDatabaseHelper DDATDatabaseHelper;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_DDATDatabaseHelper")
