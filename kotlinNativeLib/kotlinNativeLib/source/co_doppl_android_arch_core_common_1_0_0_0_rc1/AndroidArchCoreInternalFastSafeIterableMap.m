//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchCoreInternalFastSafeIterableMap.h"
#include "AndroidArchCoreInternalSafeIterableMap.h"
#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface AndroidArchCoreInternalFastSafeIterableMap () {
 @public
  JavaUtilHashMap *mHashMap_;
}

@end

J2OBJC_FIELD_SETTER(AndroidArchCoreInternalFastSafeIterableMap, mHashMap_, JavaUtilHashMap *)

@implementation AndroidArchCoreInternalFastSafeIterableMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidArchCoreInternalFastSafeIterableMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (AndroidArchCoreInternalSafeIterableMap_Entry *)getWithId:(id)k {
  return [((JavaUtilHashMap *) nil_chk(mHashMap_)) getWithId:k];
}

- (id)putIfAbsentWithId:(id __nonnull)key
                 withId:(id __nonnull)v {
  AndroidArchCoreInternalSafeIterableMap_Entry *current = [self getWithId:key];
  if (current != nil) {
    return current->mValue_;
  }
  [((JavaUtilHashMap *) nil_chk(mHashMap_)) putWithId:key withId:[self putWithId:key withId:v]];
  return nil;
}

- (id)removeWithId:(id __nonnull)key {
  id removed = [super removeWithId:key];
  [((JavaUtilHashMap *) nil_chk(mHashMap_)) removeWithId:key];
  return removed;
}

- (jboolean)containsWithId:(id)key {
  return [((JavaUtilHashMap *) nil_chk(mHashMap_)) containsKeyWithId:key];
}

- (id<JavaUtilMap_Entry>)ceilWithId:(id)k {
  if ([self containsWithId:k]) {
    return ((AndroidArchCoreInternalSafeIterableMap_Entry *) nil_chk([((JavaUtilHashMap *) nil_chk(mHashMap_)) getWithId:k]))->mPrevious_;
  }
  return nil;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(mHashMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchCoreInternalSafeIterableMap_Entry;", 0x4, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 1, -1, 7, -1, -1 },
    { NULL, "Z", 0x1, 8, 1, -1, 9, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x1, 10, 1, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getWithId:);
  methods[2].selector = @selector(putIfAbsentWithId:withId:);
  methods[3].selector = @selector(removeWithId:);
  methods[4].selector = @selector(containsWithId:);
  methods[5].selector = @selector(ceilWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mHashMap_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 12, -1 },
  };
  static const void *ptrTable[] = { "get", "LNSObject;", "(TK;)Landroid/arch/core/internal/SafeIterableMap$Entry<TK;TV;>;", "putIfAbsent", "LNSObject;LNSObject;", "(TK;TV;)TV;", "remove", "(TK;)TV;", "contains", "(TK;)Z", "ceil", "(TK;)Ljava/util/Map$Entry<TK;TV;>;", "Ljava/util/HashMap<TK;Landroid/arch/core/internal/SafeIterableMap$Entry<TK;TV;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Landroid/arch/core/internal/SafeIterableMap<TK;TV;>;" };
  static const J2ObjcClassInfo _AndroidArchCoreInternalFastSafeIterableMap = { "FastSafeIterableMap", "android.arch.core.internal", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, 13, -1 };
  return &_AndroidArchCoreInternalFastSafeIterableMap;
}

@end

void AndroidArchCoreInternalFastSafeIterableMap_init(AndroidArchCoreInternalFastSafeIterableMap *self) {
  AndroidArchCoreInternalSafeIterableMap_init(self);
  JreStrongAssignAndConsume(&self->mHashMap_, new_JavaUtilHashMap_init());
}

AndroidArchCoreInternalFastSafeIterableMap *new_AndroidArchCoreInternalFastSafeIterableMap_init() {
  J2OBJC_NEW_IMPL(AndroidArchCoreInternalFastSafeIterableMap, init)
}

AndroidArchCoreInternalFastSafeIterableMap *create_AndroidArchCoreInternalFastSafeIterableMap_init() {
  J2OBJC_CREATE_IMPL(AndroidArchCoreInternalFastSafeIterableMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchCoreInternalFastSafeIterableMap)
