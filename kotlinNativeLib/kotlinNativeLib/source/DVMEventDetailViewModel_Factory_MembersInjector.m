//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DINTEventDetailInteractor.h"
#include "DINTRsvpInteractor.h"
#include "DVMEventDetailViewModel.h"
#include "DVMEventDetailViewModel_Factory_MembersInjector.h"
#include "DaggerMembersInjector.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "javax/inject/Provider.h"

@interface DVMEventDetailViewModel_Factory_MembersInjector () {
 @public
  id<JavaxInjectProvider> detailInteractorProvider_;
  id<JavaxInjectProvider> rsvpInteractorProvider_;
}

@end

J2OBJC_FIELD_SETTER(DVMEventDetailViewModel_Factory_MembersInjector, detailInteractorProvider_, id<JavaxInjectProvider>)
J2OBJC_FIELD_SETTER(DVMEventDetailViewModel_Factory_MembersInjector, rsvpInteractorProvider_, id<JavaxInjectProvider>)

@implementation DVMEventDetailViewModel_Factory_MembersInjector

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)detailInteractorProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)rsvpInteractorProvider {
  DVMEventDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(self, detailInteractorProvider, rsvpInteractorProvider);
  return self;
}

+ (id<DaggerMembersInjector>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)detailInteractorProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)rsvpInteractorProvider {
  return DVMEventDetailViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_withJavaxInjectProvider_(detailInteractorProvider, rsvpInteractorProvider);
}

- (void)injectMembersWithId:(DVMEventDetailViewModel_Factory *)instance {
  if (instance == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Cannot inject members into a null reference");
  }
  JreStrongAssign(&instance->detailInteractor_, [((id<JavaxInjectProvider>) nil_chk(detailInteractorProvider_)) get]);
  JreStrongAssign(&instance->rsvpInteractor_, [((id<JavaxInjectProvider>) nil_chk(rsvpInteractorProvider_)) get]);
}

+ (void)injectDetailInteractorWithDVMEventDetailViewModel_Factory:(DVMEventDetailViewModel_Factory *)instance
                                          withJavaxInjectProvider:(id<JavaxInjectProvider>)detailInteractorProvider {
  DVMEventDetailViewModel_Factory_MembersInjector_injectDetailInteractorWithDVMEventDetailViewModel_Factory_withJavaxInjectProvider_(instance, detailInteractorProvider);
}

+ (void)injectRsvpInteractorWithDVMEventDetailViewModel_Factory:(DVMEventDetailViewModel_Factory *)instance
                                        withJavaxInjectProvider:(id<JavaxInjectProvider>)rsvpInteractorProvider {
  DVMEventDetailViewModel_Factory_MembersInjector_injectRsvpInteractorWithDVMEventDetailViewModel_Factory_withJavaxInjectProvider_(instance, rsvpInteractorProvider);
}

- (void)dealloc {
  RELEASE_(detailInteractorProvider_);
  RELEASE_(rsvpInteractorProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LDaggerMembersInjector;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x9, 9, 7, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaxInjectProvider:withJavaxInjectProvider:);
  methods[1].selector = @selector(createWithJavaxInjectProvider:withJavaxInjectProvider:);
  methods[2].selector = @selector(injectMembersWithId:);
  methods[3].selector = @selector(injectDetailInteractorWithDVMEventDetailViewModel_Factory:withJavaxInjectProvider:);
  methods[4].selector = @selector(injectRsvpInteractorWithDVMEventDetailViewModel_Factory:withJavaxInjectProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "detailInteractorProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "rsvpInteractorProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
  };
  static const void *ptrTable[] = { "LJavaxInjectProvider;LJavaxInjectProvider;", "(Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/EventDetailInteractor;>;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/RsvpInteractor;>;)V", "create", "(Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/EventDetailInteractor;>;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/RsvpInteractor;>;)Ldagger/MembersInjector<Lco/touchlab/droidconandroid/shared/viewmodel/EventDetailViewModel$Factory;>;", "injectMembers", "LDVMEventDetailViewModel_Factory;", "injectDetailInteractor", "LDVMEventDetailViewModel_Factory;LJavaxInjectProvider;", "(Lco/touchlab/droidconandroid/shared/viewmodel/EventDetailViewModel$Factory;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/EventDetailInteractor;>;)V", "injectRsvpInteractor", "(Lco/touchlab/droidconandroid/shared/viewmodel/EventDetailViewModel$Factory;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/RsvpInteractor;>;)V", "Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/EventDetailInteractor;>;", "Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/RsvpInteractor;>;", "Ljava/lang/Object;Ldagger/MembersInjector<Lco/touchlab/droidconandroid/shared/viewmodel/EventDetailViewModel$Factory;>;" };
  static const J2ObjcClassInfo _DVMEventDetailViewModel_Factory_MembersInjector = { "EventDetailViewModel_Factory_MembersInjector", "co.touchlab.droidconandroid.shared.viewmodel", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, -1, -1, 13, -1 };
  return &_DVMEventDetailViewModel_Factory_MembersInjector;
}

@end

void DVMEventDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(DVMEventDetailViewModel_Factory_MembersInjector *self, id<JavaxInjectProvider> detailInteractorProvider, id<JavaxInjectProvider> rsvpInteractorProvider) {
  NSObject_init(self);
  JreAssert(detailInteractorProvider != nil, @"co/touchlab/droidconandroid/shared/viewmodel/EventDetailViewModel_Factory_MembersInjector.java:22 condition failed: assert detailInteractorProvider != null;");
  JreStrongAssign(&self->detailInteractorProvider_, detailInteractorProvider);
  JreAssert(rsvpInteractorProvider != nil, @"co/touchlab/droidconandroid/shared/viewmodel/EventDetailViewModel_Factory_MembersInjector.java:24 condition failed: assert rsvpInteractorProvider != null;");
  JreStrongAssign(&self->rsvpInteractorProvider_, rsvpInteractorProvider);
}

DVMEventDetailViewModel_Factory_MembersInjector *new_DVMEventDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> detailInteractorProvider, id<JavaxInjectProvider> rsvpInteractorProvider) {
  J2OBJC_NEW_IMPL(DVMEventDetailViewModel_Factory_MembersInjector, initWithJavaxInjectProvider_withJavaxInjectProvider_, detailInteractorProvider, rsvpInteractorProvider)
}

DVMEventDetailViewModel_Factory_MembersInjector *create_DVMEventDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> detailInteractorProvider, id<JavaxInjectProvider> rsvpInteractorProvider) {
  J2OBJC_CREATE_IMPL(DVMEventDetailViewModel_Factory_MembersInjector, initWithJavaxInjectProvider_withJavaxInjectProvider_, detailInteractorProvider, rsvpInteractorProvider)
}

id<DaggerMembersInjector> DVMEventDetailViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> detailInteractorProvider, id<JavaxInjectProvider> rsvpInteractorProvider) {
  DVMEventDetailViewModel_Factory_MembersInjector_initialize();
  return create_DVMEventDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(detailInteractorProvider, rsvpInteractorProvider);
}

void DVMEventDetailViewModel_Factory_MembersInjector_injectDetailInteractorWithDVMEventDetailViewModel_Factory_withJavaxInjectProvider_(DVMEventDetailViewModel_Factory *instance, id<JavaxInjectProvider> detailInteractorProvider) {
  DVMEventDetailViewModel_Factory_MembersInjector_initialize();
  JreStrongAssign(&((DVMEventDetailViewModel_Factory *) nil_chk(instance))->detailInteractor_, [((id<JavaxInjectProvider>) nil_chk(detailInteractorProvider)) get]);
}

void DVMEventDetailViewModel_Factory_MembersInjector_injectRsvpInteractorWithDVMEventDetailViewModel_Factory_withJavaxInjectProvider_(DVMEventDetailViewModel_Factory *instance, id<JavaxInjectProvider> rsvpInteractorProvider) {
  DVMEventDetailViewModel_Factory_MembersInjector_initialize();
  JreStrongAssign(&((DVMEventDetailViewModel_Factory *) nil_chk(instance))->rsvpInteractor_, [((id<JavaxInjectProvider>) nil_chk(rsvpInteractorProvider)) get]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DVMEventDetailViewModel_Factory_MembersInjector)
