//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DDATVenue.h"
#include "DNETDNetworkVenue.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation DNETDNetworkVenue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DNETDNetworkVenue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(events_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "events_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/List<Lco/touchlab/droidconandroid/shared/network/dao/NetworkEvent;>;" };
  static const J2ObjcClassInfo _DNETDNetworkVenue = { "NetworkVenue", "co.touchlab.droidconandroid.shared.network.dao", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_DNETDNetworkVenue;
}

@end

void DNETDNetworkVenue_init(DNETDNetworkVenue *self) {
  DDATVenue_init(self);
  JreStrongAssignAndConsume(&self->events_, new_JavaUtilArrayList_init());
}

DNETDNetworkVenue *new_DNETDNetworkVenue_init() {
  J2OBJC_NEW_IMPL(DNETDNetworkVenue, init)
}

DNETDNetworkVenue *create_DNETDNetworkVenue_init() {
  J2OBJC_CREATE_IMPL(DNETDNetworkVenue, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DNETDNetworkVenue)
