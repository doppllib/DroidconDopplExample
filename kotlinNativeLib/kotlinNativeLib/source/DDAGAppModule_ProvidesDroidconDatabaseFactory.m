//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidAppApplication.h"
#include "DDAGAppModule.h"
#include "DDAGAppModule_ProvidesDroidconDatabaseFactory.h"
#include "DDATDroidconDatabase.h"
#include "DaggerInternalFactory.h"
#include "DaggerInternalPreconditions.h"
#include "J2ObjC_source.h"
#include "javax/inject/Provider.h"

@interface DDAGAppModule_ProvidesDroidconDatabaseFactory () {
 @public
  DDAGAppModule *module_;
  id<JavaxInjectProvider> applicationProvider_;
}

@end

J2OBJC_FIELD_SETTER(DDAGAppModule_ProvidesDroidconDatabaseFactory, module_, DDAGAppModule *)
J2OBJC_FIELD_SETTER(DDAGAppModule_ProvidesDroidconDatabaseFactory, applicationProvider_, id<JavaxInjectProvider>)

@implementation DDAGAppModule_ProvidesDroidconDatabaseFactory

- (instancetype)initWithDDAGAppModule:(DDAGAppModule *)module
              withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider {
  DDAGAppModule_ProvidesDroidconDatabaseFactory_initWithDDAGAppModule_withJavaxInjectProvider_(self, module, applicationProvider);
  return self;
}

- (DDATDroidconDatabase *)get {
  return DaggerInternalPreconditions_checkNotNullWithId_withNSString_([((DDAGAppModule *) nil_chk(module_)) providesDroidconDatabaseWithAndroidAppApplication:[((id<JavaxInjectProvider>) nil_chk(applicationProvider_)) get]], @"Cannot return null from a non-@Nullable @Provides method");
}

+ (id<DaggerInternalFactory>)createWithDDAGAppModule:(DDAGAppModule *)module
                             withJavaxInjectProvider:(id<JavaxInjectProvider>)applicationProvider {
  return DDAGAppModule_ProvidesDroidconDatabaseFactory_createWithDDAGAppModule_withJavaxInjectProvider_(module, applicationProvider);
}

- (void)dealloc {
  RELEASE_(module_);
  RELEASE_(applicationProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LDDATDroidconDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDaggerInternalFactory;", 0x9, 2, 0, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDDAGAppModule:withJavaxInjectProvider:);
  methods[1].selector = @selector(get);
  methods[2].selector = @selector(createWithDDAGAppModule:withJavaxInjectProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "module_", "LDDAGAppModule;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "applicationProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LDDAGAppModule;LJavaxInjectProvider;", "(Lco/touchlab/droidconandroid/shared/dagger/AppModule;Ljavax/inject/Provider<Landroid/app/Application;>;)V", "create", "(Lco/touchlab/droidconandroid/shared/dagger/AppModule;Ljavax/inject/Provider<Landroid/app/Application;>;)Ldagger/internal/Factory<Lco/touchlab/droidconandroid/shared/data/DroidconDatabase;>;", "Ljavax/inject/Provider<Landroid/app/Application;>;", "Ljava/lang/Object;Ldagger/internal/Factory<Lco/touchlab/droidconandroid/shared/data/DroidconDatabase;>;" };
  static const J2ObjcClassInfo _DDAGAppModule_ProvidesDroidconDatabaseFactory = { "AppModule_ProvidesDroidconDatabaseFactory", "co.touchlab.droidconandroid.shared.dagger", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, 5, -1 };
  return &_DDAGAppModule_ProvidesDroidconDatabaseFactory;
}

@end

void DDAGAppModule_ProvidesDroidconDatabaseFactory_initWithDDAGAppModule_withJavaxInjectProvider_(DDAGAppModule_ProvidesDroidconDatabaseFactory *self, DDAGAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  NSObject_init(self);
  JreAssert(module != nil, @"co/touchlab/droidconandroid/shared/dagger/AppModule_ProvidesDroidconDatabaseFactory.java:21 condition failed: assert module != null;");
  JreStrongAssign(&self->module_, module);
  JreAssert(applicationProvider != nil, @"co/touchlab/droidconandroid/shared/dagger/AppModule_ProvidesDroidconDatabaseFactory.java:23 condition failed: assert applicationProvider != null;");
  JreStrongAssign(&self->applicationProvider_, applicationProvider);
}

DDAGAppModule_ProvidesDroidconDatabaseFactory *new_DDAGAppModule_ProvidesDroidconDatabaseFactory_initWithDDAGAppModule_withJavaxInjectProvider_(DDAGAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  J2OBJC_NEW_IMPL(DDAGAppModule_ProvidesDroidconDatabaseFactory, initWithDDAGAppModule_withJavaxInjectProvider_, module, applicationProvider)
}

DDAGAppModule_ProvidesDroidconDatabaseFactory *create_DDAGAppModule_ProvidesDroidconDatabaseFactory_initWithDDAGAppModule_withJavaxInjectProvider_(DDAGAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  J2OBJC_CREATE_IMPL(DDAGAppModule_ProvidesDroidconDatabaseFactory, initWithDDAGAppModule_withJavaxInjectProvider_, module, applicationProvider)
}

id<DaggerInternalFactory> DDAGAppModule_ProvidesDroidconDatabaseFactory_createWithDDAGAppModule_withJavaxInjectProvider_(DDAGAppModule *module, id<JavaxInjectProvider> applicationProvider) {
  DDAGAppModule_ProvidesDroidconDatabaseFactory_initialize();
  return create_DDAGAppModule_ProvidesDroidconDatabaseFactory_initWithDDAGAppModule_withJavaxInjectProvider_(module, applicationProvider);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDAGAppModule_ProvidesDroidconDatabaseFactory)
