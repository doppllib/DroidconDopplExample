//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2Retrofit")
#ifdef RESTRICT_Retrofit2Retrofit
#define INCLUDE_ALL_Retrofit2Retrofit 0
#else
#define INCLUDE_ALL_Retrofit2Retrofit 1
#endif
#undef RESTRICT_Retrofit2Retrofit

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (Retrofit2Retrofit_) && (INCLUDE_ALL_Retrofit2Retrofit || defined(INCLUDE_Retrofit2Retrofit))
#define Retrofit2Retrofit_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectMethod;
@class Okhttp3HttpUrl;
@class Retrofit2CallAdapter_Factory;
@class Retrofit2Converter_Factory;
@class Retrofit2Retrofit_Builder;
@class Retrofit2ServiceMethod;
@protocol JavaLangReflectType;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilList;
@protocol Okhttp3Call_Factory;
@protocol Retrofit2CallAdapter;
@protocol Retrofit2Converter;

@interface Retrofit2Retrofit : NSObject {
 @public
  id<Okhttp3Call_Factory> callFactory_;
  Okhttp3HttpUrl *baseUrl_;
  id<JavaUtilList> converterFactories_;
  id<JavaUtilList> adapterFactories_;
  id<JavaUtilConcurrentExecutor> callbackExecutor_;
  jboolean validateEagerly_;
}

#pragma mark Public

- (Okhttp3HttpUrl *)baseUrl;

- (id<Retrofit2CallAdapter>)callAdapterWithJavaLangReflectType:(id<JavaLangReflectType> __nonnull)returnType
                         withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)annotations;

- (id<JavaUtilList>)callAdapterFactories;

- (id<JavaUtilConcurrentExecutor> __nullable)callbackExecutor;

- (id<Okhttp3Call_Factory>)callFactory;

- (id<JavaUtilList>)converterFactories;

- (id)createWithIOSClass:(IOSClass * __nonnull)service;

- (Retrofit2Retrofit_Builder *)newBuilder OBJC_METHOD_FAMILY_NONE;

- (id<Retrofit2CallAdapter>)nextCallAdapterWithRetrofit2CallAdapter_Factory:(Retrofit2CallAdapter_Factory * __nullable)skipPast
                                                    withJavaLangReflectType:(id<JavaLangReflectType> __nonnull)returnType
                                      withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)annotations;

- (id<Retrofit2Converter>)nextRequestBodyConverterWithRetrofit2Converter_Factory:(Retrofit2Converter_Factory * __nullable)skipPast
                                                         withJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)parameterAnnotations
                                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)methodAnnotations;

- (id<Retrofit2Converter>)nextResponseBodyConverterWithRetrofit2Converter_Factory:(Retrofit2Converter_Factory * __nullable)skipPast
                                                          withJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                                            withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)annotations;

- (id<Retrofit2Converter>)requestBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)parameterAnnotations
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)methodAnnotations;

- (id<Retrofit2Converter>)responseBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                                 withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)annotations;

- (id<Retrofit2Converter>)stringConverterWithJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)annotations;

#pragma mark Package-Private

- (instancetype)initWithOkhttp3Call_Factory:(id<Okhttp3Call_Factory> __nonnull)callFactory
                         withOkhttp3HttpUrl:(Okhttp3HttpUrl * __nonnull)baseUrl
                           withJavaUtilList:(id<JavaUtilList> __nonnull)converterFactories
                           withJavaUtilList:(id<JavaUtilList> __nonnull)adapterFactories
             withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor> __nullable)callbackExecutor
                                withBoolean:(jboolean)validateEagerly;

- (Retrofit2ServiceMethod *)loadServiceMethodWithJavaLangReflectMethod:(JavaLangReflectMethod * __nonnull)method;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2Retrofit)

J2OBJC_FIELD_SETTER(Retrofit2Retrofit, callFactory_, id<Okhttp3Call_Factory>)
J2OBJC_FIELD_SETTER(Retrofit2Retrofit, baseUrl_, Okhttp3HttpUrl *)
J2OBJC_FIELD_SETTER(Retrofit2Retrofit, converterFactories_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(Retrofit2Retrofit, adapterFactories_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(Retrofit2Retrofit, callbackExecutor_, id<JavaUtilConcurrentExecutor>)

FOUNDATION_EXPORT void Retrofit2Retrofit_initWithOkhttp3Call_Factory_withOkhttp3HttpUrl_withJavaUtilList_withJavaUtilList_withJavaUtilConcurrentExecutor_withBoolean_(Retrofit2Retrofit *self, id<Okhttp3Call_Factory> callFactory, Okhttp3HttpUrl *baseUrl, id<JavaUtilList> converterFactories, id<JavaUtilList> adapterFactories, id<JavaUtilConcurrentExecutor> callbackExecutor, jboolean validateEagerly);

FOUNDATION_EXPORT Retrofit2Retrofit *new_Retrofit2Retrofit_initWithOkhttp3Call_Factory_withOkhttp3HttpUrl_withJavaUtilList_withJavaUtilList_withJavaUtilConcurrentExecutor_withBoolean_(id<Okhttp3Call_Factory> callFactory, Okhttp3HttpUrl *baseUrl, id<JavaUtilList> converterFactories, id<JavaUtilList> adapterFactories, id<JavaUtilConcurrentExecutor> callbackExecutor, jboolean validateEagerly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Retrofit *create_Retrofit2Retrofit_initWithOkhttp3Call_Factory_withOkhttp3HttpUrl_withJavaUtilList_withJavaUtilList_withJavaUtilConcurrentExecutor_withBoolean_(id<Okhttp3Call_Factory> callFactory, Okhttp3HttpUrl *baseUrl, id<JavaUtilList> converterFactories, id<JavaUtilList> adapterFactories, id<JavaUtilConcurrentExecutor> callbackExecutor, jboolean validateEagerly);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Retrofit)

#endif

#if !defined (Retrofit2Retrofit_Builder_) && (INCLUDE_ALL_Retrofit2Retrofit || defined(INCLUDE_Retrofit2Retrofit_Builder))
#define Retrofit2Retrofit_Builder_

@class Okhttp3HttpUrl;
@class Okhttp3OkHttpClient;
@class Retrofit2CallAdapter_Factory;
@class Retrofit2Converter_Factory;
@class Retrofit2Platform;
@class Retrofit2Retrofit;
@protocol JavaUtilConcurrentExecutor;
@protocol Okhttp3Call_Factory;

@interface Retrofit2Retrofit_Builder : NSObject

#pragma mark Public

- (instancetype)init;

- (Retrofit2Retrofit_Builder *)addCallAdapterFactoryWithRetrofit2CallAdapter_Factory:(Retrofit2CallAdapter_Factory * __nonnull)factory;

- (Retrofit2Retrofit_Builder *)addConverterFactoryWithRetrofit2Converter_Factory:(Retrofit2Converter_Factory * __nonnull)factory;

- (Retrofit2Retrofit_Builder *)baseUrlWithOkhttp3HttpUrl:(Okhttp3HttpUrl * __nonnull)baseUrl;

- (Retrofit2Retrofit_Builder *)baseUrlWithNSString:(NSString * __nonnull)baseUrl;

- (Retrofit2Retrofit *)build;

- (Retrofit2Retrofit_Builder *)callbackExecutorWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor> __nonnull)executor;

- (Retrofit2Retrofit_Builder *)callFactoryWithOkhttp3Call_Factory:(id<Okhttp3Call_Factory> __nonnull)factory;

- (Retrofit2Retrofit_Builder *)clientWithOkhttp3OkHttpClient:(Okhttp3OkHttpClient * __nonnull)client;

- (Retrofit2Retrofit_Builder *)validateEagerlyWithBoolean:(jboolean)validateEagerly;

#pragma mark Package-Private

- (instancetype)initWithRetrofit2Platform:(Retrofit2Platform * __nonnull)platform;

- (instancetype)initWithRetrofit2Retrofit:(Retrofit2Retrofit * __nonnull)retrofit;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2Retrofit_Builder)

FOUNDATION_EXPORT void Retrofit2Retrofit_Builder_initWithRetrofit2Platform_(Retrofit2Retrofit_Builder *self, Retrofit2Platform *platform);

FOUNDATION_EXPORT Retrofit2Retrofit_Builder *new_Retrofit2Retrofit_Builder_initWithRetrofit2Platform_(Retrofit2Platform *platform) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Retrofit_Builder *create_Retrofit2Retrofit_Builder_initWithRetrofit2Platform_(Retrofit2Platform *platform);

FOUNDATION_EXPORT void Retrofit2Retrofit_Builder_init(Retrofit2Retrofit_Builder *self);

FOUNDATION_EXPORT Retrofit2Retrofit_Builder *new_Retrofit2Retrofit_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Retrofit_Builder *create_Retrofit2Retrofit_Builder_init();

FOUNDATION_EXPORT void Retrofit2Retrofit_Builder_initWithRetrofit2Retrofit_(Retrofit2Retrofit_Builder *self, Retrofit2Retrofit *retrofit);

FOUNDATION_EXPORT Retrofit2Retrofit_Builder *new_Retrofit2Retrofit_Builder_initWithRetrofit2Retrofit_(Retrofit2Retrofit *retrofit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Retrofit_Builder *create_Retrofit2Retrofit_Builder_initWithRetrofit2Retrofit_(Retrofit2Retrofit *retrofit);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Retrofit_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Retrofit2Retrofit")
