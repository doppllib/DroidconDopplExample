//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2Platform")
#ifdef RESTRICT_Retrofit2Platform
#define INCLUDE_ALL_Retrofit2Platform 0
#else
#define INCLUDE_ALL_Retrofit2Platform 1
#endif
#undef RESTRICT_Retrofit2Platform
#ifdef INCLUDE_Retrofit2Platform_Android
#define INCLUDE_Retrofit2Platform 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (Retrofit2Platform_) && (INCLUDE_ALL_Retrofit2Platform || defined(INCLUDE_Retrofit2Platform))
#define Retrofit2Platform_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectMethod;
@class Retrofit2CallAdapter_Factory;
@protocol JavaUtilConcurrentExecutor;

@interface Retrofit2Platform : NSObject

#pragma mark Package-Private

- (instancetype)init;

- (Retrofit2CallAdapter_Factory *)defaultCallAdapterFactoryWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor> __nullable)callbackExecutor;

- (id<JavaUtilConcurrentExecutor> __nullable)defaultCallbackExecutor;

+ (Retrofit2Platform *)get;

- (id __nullable)invokeDefaultMethodWithJavaLangReflectMethod:(JavaLangReflectMethod * __nonnull)method
                                                 withIOSClass:(IOSClass * __nonnull)declaringClass
                                                       withId:(id __nonnull)object
                                            withNSObjectArray:(IOSObjectArray * __nullable)args;

- (jboolean)isDefaultMethodWithJavaLangReflectMethod:(JavaLangReflectMethod * __nonnull)method;

@end

J2OBJC_STATIC_INIT(Retrofit2Platform)

FOUNDATION_EXPORT void Retrofit2Platform_init(Retrofit2Platform *self);

FOUNDATION_EXPORT Retrofit2Platform *new_Retrofit2Platform_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Platform *create_Retrofit2Platform_init();

FOUNDATION_EXPORT Retrofit2Platform *Retrofit2Platform_get();

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Platform)

#endif

#if !defined (Retrofit2Platform_Android_) && (INCLUDE_ALL_Retrofit2Platform || defined(INCLUDE_Retrofit2Platform_Android))
#define Retrofit2Platform_Android_

@class Retrofit2CallAdapter_Factory;
@protocol JavaUtilConcurrentExecutor;

@interface Retrofit2Platform_Android : Retrofit2Platform

#pragma mark Public

- (id<JavaUtilConcurrentExecutor>)defaultCallbackExecutor;

#pragma mark Package-Private

- (instancetype)init;

- (Retrofit2CallAdapter_Factory *)defaultCallAdapterFactoryWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor> __nullable)callbackExecutor;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2Platform_Android)

FOUNDATION_EXPORT void Retrofit2Platform_Android_init(Retrofit2Platform_Android *self);

FOUNDATION_EXPORT Retrofit2Platform_Android *new_Retrofit2Platform_Android_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Platform_Android *create_Retrofit2Platform_Android_init();

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Platform_Android)

#endif

#if !defined (Retrofit2Platform_Android_MainThreadExecutor_) && (INCLUDE_ALL_Retrofit2Platform || defined(INCLUDE_Retrofit2Platform_Android_MainThreadExecutor))
#define Retrofit2Platform_Android_MainThreadExecutor_

#define RESTRICT_JavaUtilConcurrentExecutor 1
#define INCLUDE_JavaUtilConcurrentExecutor 1
#include "java/util/concurrent/Executor.h"

@protocol JavaLangRunnable;

@interface Retrofit2Platform_Android_MainThreadExecutor : NSObject < JavaUtilConcurrentExecutor >

#pragma mark Public

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable> __nonnull)r;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2Platform_Android_MainThreadExecutor)

FOUNDATION_EXPORT void Retrofit2Platform_Android_MainThreadExecutor_init(Retrofit2Platform_Android_MainThreadExecutor *self);

FOUNDATION_EXPORT Retrofit2Platform_Android_MainThreadExecutor *new_Retrofit2Platform_Android_MainThreadExecutor_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2Platform_Android_MainThreadExecutor *create_Retrofit2Platform_Android_MainThreadExecutor_init();

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Platform_Android_MainThreadExecutor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Retrofit2Platform")
