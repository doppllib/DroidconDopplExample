//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2IosCacheInterceptor")
#ifdef RESTRICT_Retrofit2IosCacheInterceptor
#define INCLUDE_ALL_Retrofit2IosCacheInterceptor 0
#else
#define INCLUDE_ALL_Retrofit2IosCacheInterceptor 1
#endif
#undef RESTRICT_Retrofit2IosCacheInterceptor

#if !defined (Retrofit2IosCacheInterceptor_) && (INCLUDE_ALL_Retrofit2IosCacheInterceptor || defined(INCLUDE_Retrofit2IosCacheInterceptor))
#define Retrofit2IosCacheInterceptor_

#define RESTRICT_Retrofit2IosInterceptor 1
#define INCLUDE_Retrofit2IosInterceptor 1
#include "Retrofit2IosInterceptor.h"

@class Okhttp3Response;
@protocol Okhttp3InternalCacheInternalCache;
@protocol Retrofit2IosInterceptor_Chain;

@interface Retrofit2IosCacheInterceptor : NSObject < Retrofit2IosInterceptor > {
 @public
  id<Okhttp3InternalCacheInternalCache> cache_;
}

#pragma mark Public

- (instancetype)initWithOkhttp3InternalCacheInternalCache:(id<Okhttp3InternalCacheInternalCache>)cache;

- (Okhttp3Response *)interceptWithRetrofit2IosInterceptor_Chain:(id<Retrofit2IosInterceptor_Chain>)chain;

#pragma mark Package-Private

+ (jboolean)isEndToEndWithNSString:(NSString *)fieldName;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(Retrofit2IosCacheInterceptor)

J2OBJC_FIELD_SETTER(Retrofit2IosCacheInterceptor, cache_, id<Okhttp3InternalCacheInternalCache>)

FOUNDATION_EXPORT void Retrofit2IosCacheInterceptor_initWithOkhttp3InternalCacheInternalCache_(Retrofit2IosCacheInterceptor *self, id<Okhttp3InternalCacheInternalCache> cache);

FOUNDATION_EXPORT Retrofit2IosCacheInterceptor *new_Retrofit2IosCacheInterceptor_initWithOkhttp3InternalCacheInternalCache_(id<Okhttp3InternalCacheInternalCache> cache) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2IosCacheInterceptor *create_Retrofit2IosCacheInterceptor_initWithOkhttp3InternalCacheInternalCache_(id<Okhttp3InternalCacheInternalCache> cache);

FOUNDATION_EXPORT jboolean Retrofit2IosCacheInterceptor_isEndToEndWithNSString_(NSString *fieldName);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2IosCacheInterceptor)

#endif

#pragma pop_macro("INCLUDE_ALL_Retrofit2IosCacheInterceptor")
