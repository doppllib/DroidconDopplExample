//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2IosIosCallFactory")
#ifdef RESTRICT_Retrofit2IosIosCallFactory
#define INCLUDE_ALL_Retrofit2IosIosCallFactory 0
#else
#define INCLUDE_ALL_Retrofit2IosIosCallFactory 1
#endif
#undef RESTRICT_Retrofit2IosIosCallFactory

#if !defined (Retrofit2IosIosCallFactory_) && (INCLUDE_ALL_Retrofit2IosIosCallFactory || defined(INCLUDE_Retrofit2IosIosCallFactory))
#define Retrofit2IosIosCallFactory_

#define RESTRICT_Okhttp3Call 1
#define INCLUDE_Okhttp3Call_Factory 1
#include "Okhttp3Call.h"

@class Okhttp3Cache;
@class Okhttp3Request;
@class Retrofit2IosIosDispatcher;
@protocol JavaUtilList;
@protocol Okhttp3Call;
@protocol Okhttp3CookieJar;
@protocol Okhttp3InternalCacheInternalCache;
@protocol Retrofit2IosInterceptor;

@interface Retrofit2IosIosCallFactory : NSObject < Okhttp3Call_Factory > {
 @public
  Retrofit2IosIosDispatcher *dispatcher_;
  jint connectTimeout_;
  jint readTimeout_;
  id<JavaUtilList> interceptors_;
  id<JavaUtilList> networkInterceptors_;
  id<Okhttp3CookieJar> cookieJar_;
  Okhttp3Cache *cache_;
  id<Okhttp3InternalCacheInternalCache> internalCache_;
  jboolean retryOnConnectionFailure_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)interceptors
                    withJavaUtilList:(id<JavaUtilList>)networkInterceptors;

- (void)addInterceptorWithRetrofit2IosInterceptor:(id<Retrofit2IosInterceptor>)interceptor;

- (void)addNetworkInterceptorWithRetrofit2IosInterceptor:(id<Retrofit2IosInterceptor>)interceptor;

- (Okhttp3Cache *)cashe;

- (id<Okhttp3CookieJar>)cookieJar;

- (Retrofit2IosIosDispatcher *)dispatcher;

- (id<Okhttp3InternalCacheInternalCache>)internalCache;

- (id<Okhttp3Call>)newCallWithOkhttp3Request:(Okhttp3Request *)request OBJC_METHOD_FAMILY_NONE;

- (jboolean)retryOnConnectionFailure;

- (void)setConnectTimeoutWithInt:(jint)connectTimeout;

- (void)setReadTimeoutWithInt:(jint)readTimeout;

- (void)setRetryOnConnectionFailureWithBoolean:(jboolean)retryOnConnectionFailure;

#pragma mark Package-Private

- (id<JavaUtilList>)interceptors;

- (id<JavaUtilList>)networkInterceptors;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2IosIosCallFactory)

J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory, dispatcher_, Retrofit2IosIosDispatcher *)
J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory, interceptors_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory, networkInterceptors_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory, cookieJar_, id<Okhttp3CookieJar>)
J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory, cache_, Okhttp3Cache *)
J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory, internalCache_, id<Okhttp3InternalCacheInternalCache>)

FOUNDATION_EXPORT void Retrofit2IosIosCallFactory_init(Retrofit2IosIosCallFactory *self);

FOUNDATION_EXPORT Retrofit2IosIosCallFactory *new_Retrofit2IosIosCallFactory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2IosIosCallFactory *create_Retrofit2IosIosCallFactory_init();

FOUNDATION_EXPORT void Retrofit2IosIosCallFactory_initWithJavaUtilList_withJavaUtilList_(Retrofit2IosIosCallFactory *self, id<JavaUtilList> interceptors, id<JavaUtilList> networkInterceptors);

FOUNDATION_EXPORT Retrofit2IosIosCallFactory *new_Retrofit2IosIosCallFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> interceptors, id<JavaUtilList> networkInterceptors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2IosIosCallFactory *create_Retrofit2IosIosCallFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> interceptors, id<JavaUtilList> networkInterceptors);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2IosIosCallFactory)

#endif

#if !defined (Retrofit2IosIosCallFactory_Builder_) && (INCLUDE_ALL_Retrofit2IosIosCallFactory || defined(INCLUDE_Retrofit2IosIosCallFactory_Builder))
#define Retrofit2IosIosCallFactory_Builder_

@class Okhttp3Dispatcher;

@interface Retrofit2IosIosCallFactory_Builder : NSObject {
 @public
  Okhttp3Dispatcher *dispatcher_;
}

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2IosIosCallFactory_Builder)

J2OBJC_FIELD_SETTER(Retrofit2IosIosCallFactory_Builder, dispatcher_, Okhttp3Dispatcher *)

FOUNDATION_EXPORT void Retrofit2IosIosCallFactory_Builder_init(Retrofit2IosIosCallFactory_Builder *self);

FOUNDATION_EXPORT Retrofit2IosIosCallFactory_Builder *new_Retrofit2IosIosCallFactory_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2IosIosCallFactory_Builder *create_Retrofit2IosIosCallFactory_Builder_init();

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2IosIosCallFactory_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_Retrofit2IosIosCallFactory")
