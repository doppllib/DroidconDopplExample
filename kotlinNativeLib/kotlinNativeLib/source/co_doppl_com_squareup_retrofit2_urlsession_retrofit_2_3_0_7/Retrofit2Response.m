//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3Headers.h"
#include "Okhttp3Protocol.h"
#include "Okhttp3Request.h"
#include "Okhttp3Response.h"
#include "Okhttp3ResponseBody.h"
#include "Retrofit2Response.h"
#include "Retrofit2Utils.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

@interface Retrofit2Response () {
 @public
  Okhttp3Response *rawResponse_;
  id body_;
  Okhttp3ResponseBody *errorBody_;
}

- (instancetype)initWithOkhttp3Response:(Okhttp3Response * __nonnull)rawResponse
                                 withId:(id __nullable)body
                withOkhttp3ResponseBody:(Okhttp3ResponseBody * __nullable)errorBody;

@end

J2OBJC_FIELD_SETTER(Retrofit2Response, rawResponse_, Okhttp3Response *)
J2OBJC_FIELD_SETTER(Retrofit2Response, body_, id)
J2OBJC_FIELD_SETTER(Retrofit2Response, errorBody_, Okhttp3ResponseBody *)

__attribute__((unused)) static void Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(Retrofit2Response *self, Okhttp3Response *rawResponse, id body, Okhttp3ResponseBody *errorBody);

__attribute__((unused)) static Retrofit2Response *new_Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(Okhttp3Response *rawResponse, id body, Okhttp3ResponseBody *errorBody) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2Response *create_Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(Okhttp3Response *rawResponse, id body, Okhttp3ResponseBody *errorBody);

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$0();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$1();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$2();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$3();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$4();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$5();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$6();

__attribute__((unused)) static IOSObjectArray *Retrofit2Response__Annotations$7();

@implementation Retrofit2Response

+ (Retrofit2Response *)successWithId:(id __nullable)body {
  return Retrofit2Response_successWithId_(body);
}

+ (Retrofit2Response *)successWithId:(id __nullable)body
                  withOkhttp3Headers:(Okhttp3Headers * __nonnull)headers {
  return Retrofit2Response_successWithId_withOkhttp3Headers_(body, headers);
}

+ (Retrofit2Response *)successWithId:(id __nullable)body
                 withOkhttp3Response:(Okhttp3Response * __nonnull)rawResponse {
  return Retrofit2Response_successWithId_withOkhttp3Response_(body, rawResponse);
}

+ (Retrofit2Response *)errorWithInt:(jint)code
            withOkhttp3ResponseBody:(Okhttp3ResponseBody * __nonnull)body {
  return Retrofit2Response_errorWithInt_withOkhttp3ResponseBody_(code, body);
}

+ (Retrofit2Response *)errorWithOkhttp3ResponseBody:(Okhttp3ResponseBody * __nonnull)body
                                withOkhttp3Response:(Okhttp3Response * __nonnull)rawResponse {
  return Retrofit2Response_errorWithOkhttp3ResponseBody_withOkhttp3Response_(body, rawResponse);
}

- (instancetype)initWithOkhttp3Response:(Okhttp3Response * __nonnull)rawResponse
                                 withId:(id __nullable)body
                withOkhttp3ResponseBody:(Okhttp3ResponseBody * __nullable)errorBody {
  Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(self, rawResponse, body, errorBody);
  return self;
}

- (Okhttp3Response *)raw {
  return rawResponse_;
}

- (jint)code {
  return [((Okhttp3Response *) nil_chk(rawResponse_)) code];
}

- (NSString *)message {
  return [((Okhttp3Response *) nil_chk(rawResponse_)) message];
}

- (Okhttp3Headers *)headers {
  return [((Okhttp3Response *) nil_chk(rawResponse_)) headers];
}

- (jboolean)isSuccessful {
  return [((Okhttp3Response *) nil_chk(rawResponse_)) isSuccessful];
}

- (id __nullable)body {
  return body_;
}

- (Okhttp3ResponseBody * __nullable)errorBody {
  return errorBody_;
}

- (NSString *)description {
  return [((Okhttp3Response *) nil_chk(rawResponse_)) description];
}

- (void)dealloc {
  RELEASE_(rawResponse_);
  RELEASE_(body_);
  RELEASE_(errorBody_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRetrofit2Response;", 0x9, 0, 1, -1, 2, -1, 3 },
    { NULL, "LRetrofit2Response;", 0x9, 0, 4, -1, 5, -1, 6 },
    { NULL, "LRetrofit2Response;", 0x9, 0, 7, -1, 8, -1, 9 },
    { NULL, "LRetrofit2Response;", 0x9, 10, 11, -1, 12, -1, -1 },
    { NULL, "LRetrofit2Response;", 0x9, 10, 13, -1, 14, -1, -1 },
    { NULL, NULL, 0x2, -1, 15, -1, 16, -1, 17 },
    { NULL, "LOkhttp3Response;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3Headers;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 18, 19, -1 },
    { NULL, "LOkhttp3ResponseBody;", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "LNSString;", 0x1, 21, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(successWithId:);
  methods[1].selector = @selector(successWithId:withOkhttp3Headers:);
  methods[2].selector = @selector(successWithId:withOkhttp3Response:);
  methods[3].selector = @selector(errorWithInt:withOkhttp3ResponseBody:);
  methods[4].selector = @selector(errorWithOkhttp3ResponseBody:withOkhttp3Response:);
  methods[5].selector = @selector(initWithOkhttp3Response:withId:withOkhttp3ResponseBody:);
  methods[6].selector = @selector(raw);
  methods[7].selector = @selector(code);
  methods[8].selector = @selector(message);
  methods[9].selector = @selector(headers);
  methods[10].selector = @selector(isSuccessful);
  methods[11].selector = @selector(body);
  methods[12].selector = @selector(errorBody);
  methods[13].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "rawResponse_", "LOkhttp3Response;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "body_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 22, 23 },
    { "errorBody_", "LOkhttp3ResponseBody;", .constantValue.asLong = 0, 0x12, -1, -1, -1, 24 },
  };
  static const void *ptrTable[] = { "success", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Lretrofit2/Response<TT;>;", (void *)&Retrofit2Response__Annotations$0, "LNSObject;LOkhttp3Headers;", "<T:Ljava/lang/Object;>(TT;Lokhttp3/Headers;)Lretrofit2/Response<TT;>;", (void *)&Retrofit2Response__Annotations$1, "LNSObject;LOkhttp3Response;", "<T:Ljava/lang/Object;>(TT;Lokhttp3/Response;)Lretrofit2/Response<TT;>;", (void *)&Retrofit2Response__Annotations$2, "error", "ILOkhttp3ResponseBody;", "<T:Ljava/lang/Object;>(ILokhttp3/ResponseBody;)Lretrofit2/Response<TT;>;", "LOkhttp3ResponseBody;LOkhttp3Response;", "<T:Ljava/lang/Object;>(Lokhttp3/ResponseBody;Lokhttp3/Response;)Lretrofit2/Response<TT;>;", "LOkhttp3Response;LNSObject;LOkhttp3ResponseBody;", "(Lokhttp3/Response;TT;Lokhttp3/ResponseBody;)V", (void *)&Retrofit2Response__Annotations$3, "()TT;", (void *)&Retrofit2Response__Annotations$4, (void *)&Retrofit2Response__Annotations$5, "toString", "TT;", (void *)&Retrofit2Response__Annotations$6, (void *)&Retrofit2Response__Annotations$7, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _Retrofit2Response = { "Response", "retrofit2", ptrTable, methods, fields, 7, 0x11, 14, 3, -1, -1, -1, 25, -1 };
  return &_Retrofit2Response;
}

@end

Retrofit2Response *Retrofit2Response_successWithId_(id body) {
  Retrofit2Response_initialize();
  return Retrofit2Response_successWithId_withOkhttp3Response_(body, [((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([create_Okhttp3Response_Builder_init() codeWithInt:200])) messageWithNSString:@"OK"])) protocolWithOkhttp3Protocol:JreLoadEnum(Okhttp3Protocol, HTTP_1_1)])) requestWithOkhttp3Request:[((Okhttp3Request_Builder *) nil_chk([create_Okhttp3Request_Builder_init() urlWithNSString:@"http://localhost/"])) build]])) build]);
}

Retrofit2Response *Retrofit2Response_successWithId_withOkhttp3Headers_(id body, Okhttp3Headers *headers) {
  Retrofit2Response_initialize();
  Retrofit2Utils_checkNotNullWithId_withNSString_(headers, @"headers == null");
  return Retrofit2Response_successWithId_withOkhttp3Response_(body, [((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([create_Okhttp3Response_Builder_init() codeWithInt:200])) messageWithNSString:@"OK"])) protocolWithOkhttp3Protocol:JreLoadEnum(Okhttp3Protocol, HTTP_1_1)])) headersWithOkhttp3Headers:headers])) requestWithOkhttp3Request:[((Okhttp3Request_Builder *) nil_chk([create_Okhttp3Request_Builder_init() urlWithNSString:@"http://localhost/"])) build]])) build]);
}

Retrofit2Response *Retrofit2Response_successWithId_withOkhttp3Response_(id body, Okhttp3Response *rawResponse) {
  Retrofit2Response_initialize();
  Retrofit2Utils_checkNotNullWithId_withNSString_(rawResponse, @"rawResponse == null");
  if (![((Okhttp3Response *) nil_chk(rawResponse)) isSuccessful]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"rawResponse must be successful response");
  }
  return create_Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(rawResponse, body, nil);
}

Retrofit2Response *Retrofit2Response_errorWithInt_withOkhttp3ResponseBody_(jint code, Okhttp3ResponseBody *body) {
  Retrofit2Response_initialize();
  if (code < 400) @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"code < 400: ", code));
  return Retrofit2Response_errorWithOkhttp3ResponseBody_withOkhttp3Response_(body, [((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([((Okhttp3Response_Builder *) nil_chk([create_Okhttp3Response_Builder_init() codeWithInt:code])) messageWithNSString:@"Response.error()"])) protocolWithOkhttp3Protocol:JreLoadEnum(Okhttp3Protocol, HTTP_1_1)])) requestWithOkhttp3Request:[((Okhttp3Request_Builder *) nil_chk([create_Okhttp3Request_Builder_init() urlWithNSString:@"http://localhost/"])) build]])) build]);
}

Retrofit2Response *Retrofit2Response_errorWithOkhttp3ResponseBody_withOkhttp3Response_(Okhttp3ResponseBody *body, Okhttp3Response *rawResponse) {
  Retrofit2Response_initialize();
  Retrofit2Utils_checkNotNullWithId_withNSString_(body, @"body == null");
  Retrofit2Utils_checkNotNullWithId_withNSString_(rawResponse, @"rawResponse == null");
  if ([((Okhttp3Response *) nil_chk(rawResponse)) isSuccessful]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"rawResponse should not be successful response");
  }
  return create_Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(rawResponse, nil, body);
}

void Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(Retrofit2Response *self, Okhttp3Response *rawResponse, id body, Okhttp3ResponseBody *errorBody) {
  NSObject_init(self);
  JreStrongAssign(&self->rawResponse_, rawResponse);
  JreStrongAssign(&self->body_, body);
  JreStrongAssign(&self->errorBody_, errorBody);
}

Retrofit2Response *new_Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(Okhttp3Response *rawResponse, id body, Okhttp3ResponseBody *errorBody) {
  J2OBJC_NEW_IMPL(Retrofit2Response, initWithOkhttp3Response_withId_withOkhttp3ResponseBody_, rawResponse, body, errorBody)
}

Retrofit2Response *create_Retrofit2Response_initWithOkhttp3Response_withId_withOkhttp3ResponseBody_(Okhttp3Response *rawResponse, id body, Okhttp3ResponseBody *errorBody) {
  J2OBJC_CREATE_IMPL(Retrofit2Response, initWithOkhttp3Response_withId_withOkhttp3ResponseBody_, rawResponse, body, errorBody)
}

IOSObjectArray *Retrofit2Response__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *Retrofit2Response__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *Retrofit2Response__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *Retrofit2Response__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *Retrofit2Response__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *Retrofit2Response__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *Retrofit2Response__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *Retrofit2Response__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2Response)
