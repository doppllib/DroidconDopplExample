//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "Okhttp3Call.h"
#include "Okhttp3Request.h"
#include "Retrofit2UrlsessionDefaultUrlSessionConfigurationProvider.h"
#include "Retrofit2UrlsessionUrlSessionCall.h"
#include "Retrofit2UrlsessionUrlSessionCallFactory.h"
#include "Retrofit2UrlsessionUrlSessionConfigurationProvider.h"

@interface Retrofit2UrlsessionUrlSessionCallFactory () {
 @public
  id urlSessionReference_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2UrlsessionUrlSessionCallFactory, urlSessionReference_, id)

@implementation Retrofit2UrlsessionUrlSessionCallFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2UrlsessionUrlSessionCallFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithRetrofit2UrlsessionUrlSessionConfigurationProvider:(id<Retrofit2UrlsessionUrlSessionConfigurationProvider>)urlSessionProvider {
  Retrofit2UrlsessionUrlSessionCallFactory_initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_(self, urlSessionProvider);
  return self;
}

- (id<Okhttp3Call>)newCallWithOkhttp3Request:(Okhttp3Request *)request {
  return create_Retrofit2UrlsessionUrlSessionCall_initWithId_withOkhttp3Request_(urlSessionReference_, request);
}

- (void)dealloc {
  RELEASE_(urlSessionReference_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOkhttp3Call;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithRetrofit2UrlsessionUrlSessionConfigurationProvider:);
  methods[2].selector = @selector(newCallWithOkhttp3Request:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "urlSessionReference_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2UrlsessionUrlSessionConfigurationProvider;", "newCall", "LOkhttp3Request;" };
  static const J2ObjcClassInfo _Retrofit2UrlsessionUrlSessionCallFactory = { "UrlSessionCallFactory", "retrofit2.urlsession", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_Retrofit2UrlsessionUrlSessionCallFactory;
}

@end

void Retrofit2UrlsessionUrlSessionCallFactory_init(Retrofit2UrlsessionUrlSessionCallFactory *self) {
  Retrofit2UrlsessionUrlSessionCallFactory_initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_(self, create_Retrofit2UrlsessionDefaultUrlSessionConfigurationProvider_init());
}

Retrofit2UrlsessionUrlSessionCallFactory *new_Retrofit2UrlsessionUrlSessionCallFactory_init() {
  J2OBJC_NEW_IMPL(Retrofit2UrlsessionUrlSessionCallFactory, init)
}

Retrofit2UrlsessionUrlSessionCallFactory *create_Retrofit2UrlsessionUrlSessionCallFactory_init() {
  J2OBJC_CREATE_IMPL(Retrofit2UrlsessionUrlSessionCallFactory, init)
}

void Retrofit2UrlsessionUrlSessionCallFactory_initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_(Retrofit2UrlsessionUrlSessionCallFactory *self, id<Retrofit2UrlsessionUrlSessionConfigurationProvider> urlSessionProvider) {
  NSObject_init(self);
  JreStrongAssign(&self->urlSessionReference_, [((id<Retrofit2UrlsessionUrlSessionConfigurationProvider>) nil_chk(urlSessionProvider)) createUrlSession]);
}

Retrofit2UrlsessionUrlSessionCallFactory *new_Retrofit2UrlsessionUrlSessionCallFactory_initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_(id<Retrofit2UrlsessionUrlSessionConfigurationProvider> urlSessionProvider) {
  J2OBJC_NEW_IMPL(Retrofit2UrlsessionUrlSessionCallFactory, initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_, urlSessionProvider)
}

Retrofit2UrlsessionUrlSessionCallFactory *create_Retrofit2UrlsessionUrlSessionCallFactory_initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_(id<Retrofit2UrlsessionUrlSessionConfigurationProvider> urlSessionProvider) {
  J2OBJC_CREATE_IMPL(Retrofit2UrlsessionUrlSessionCallFactory, initWithRetrofit2UrlsessionUrlSessionConfigurationProvider_, urlSessionProvider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2UrlsessionUrlSessionCallFactory)
