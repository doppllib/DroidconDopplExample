//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3RequestBody.h"
#include "Okhttp3ResponseBody.h"
#include "Retrofit2BuiltInConverters.h"
#include "Retrofit2Converter.h"
#include "Retrofit2HttpStreaming.h"
#include "Retrofit2Retrofit.h"
#include "Retrofit2Utils.h"
#include "java/lang/Void.h"
#include "java/lang/reflect/Type.h"

@implementation Retrofit2BuiltInConverters

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2BuiltInConverters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<Retrofit2Converter>)responseBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                                 withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)annotations
                                                 withRetrofit2Retrofit:(Retrofit2Retrofit * __nonnull)retrofit {
  if (type == (id) Okhttp3ResponseBody_class_()) {
    return Retrofit2Utils_isAnnotationPresentWithJavaLangAnnotationAnnotationArray_withIOSClass_(annotations, Retrofit2HttpStreaming_class_()) ? JreLoadStatic(Retrofit2BuiltInConverters_StreamingResponseBodyConverter, INSTANCE) : (id) JreLoadStatic(Retrofit2BuiltInConverters_BufferingResponseBodyConverter, INSTANCE);
  }
  if (type == (id) JavaLangVoid_class_()) {
    return JreLoadStatic(Retrofit2BuiltInConverters_VoidResponseBodyConverter, INSTANCE);
  }
  return nil;
}

- (id<Retrofit2Converter>)requestBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType> __nonnull)type
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)parameterAnnotations
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray * __nonnull)methodAnnotations
                                                withRetrofit2Retrofit:(Retrofit2Retrofit * __nonnull)retrofit {
  if ([Okhttp3RequestBody_class_() isAssignableFrom:Retrofit2Utils_getRawTypeWithJavaLangReflectType_(type)]) {
    return JreLoadStatic(Retrofit2BuiltInConverters_RequestBodyConverter, INSTANCE);
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofit2Converter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRetrofit2Converter;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(responseBodyConverterWithJavaLangReflectType:withJavaLangAnnotationAnnotationArray:withRetrofit2Retrofit:);
  methods[2].selector = @selector(requestBodyConverterWithJavaLangReflectType:withJavaLangAnnotationAnnotationArray:withJavaLangAnnotationAnnotationArray:withRetrofit2Retrofit:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "responseBodyConverter", "LJavaLangReflectType;[LJavaLangAnnotationAnnotation;LRetrofit2Retrofit;", "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter<Lokhttp3/ResponseBody;*>;", "requestBodyConverter", "LJavaLangReflectType;[LJavaLangAnnotationAnnotation;[LJavaLangAnnotationAnnotation;LRetrofit2Retrofit;", "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter<*Lokhttp3/RequestBody;>;", "LRetrofit2BuiltInConverters_VoidResponseBodyConverter;LRetrofit2BuiltInConverters_RequestBodyConverter;LRetrofit2BuiltInConverters_StreamingResponseBodyConverter;LRetrofit2BuiltInConverters_BufferingResponseBodyConverter;LRetrofit2BuiltInConverters_ToStringConverter;" };
  static const J2ObjcClassInfo _Retrofit2BuiltInConverters = { "BuiltInConverters", "retrofit2", ptrTable, methods, NULL, 7, 0x10, 3, 0, -1, 6, -1, -1, -1 };
  return &_Retrofit2BuiltInConverters;
}

@end

void Retrofit2BuiltInConverters_init(Retrofit2BuiltInConverters *self) {
  Retrofit2Converter_Factory_init(self);
}

Retrofit2BuiltInConverters *new_Retrofit2BuiltInConverters_init() {
  J2OBJC_NEW_IMPL(Retrofit2BuiltInConverters, init)
}

Retrofit2BuiltInConverters *create_Retrofit2BuiltInConverters_init() {
  J2OBJC_CREATE_IMPL(Retrofit2BuiltInConverters, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2BuiltInConverters)

J2OBJC_INITIALIZED_DEFN(Retrofit2BuiltInConverters_VoidResponseBodyConverter)

Retrofit2BuiltInConverters_VoidResponseBodyConverter *Retrofit2BuiltInConverters_VoidResponseBodyConverter_INSTANCE;

@implementation Retrofit2BuiltInConverters_VoidResponseBodyConverter

+ (Retrofit2BuiltInConverters_VoidResponseBodyConverter *)INSTANCE {
  return Retrofit2BuiltInConverters_VoidResponseBodyConverter_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2BuiltInConverters_VoidResponseBodyConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangVoid *)convertWithId:(Okhttp3ResponseBody * __nonnull)value {
  [((Okhttp3ResponseBody *) nil_chk(value)) close];
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangVoid;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRetrofit2BuiltInConverters_VoidResponseBodyConverter;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "convert", "LOkhttp3ResponseBody;", "LJavaIoIOException;", &Retrofit2BuiltInConverters_VoidResponseBodyConverter_INSTANCE, "LRetrofit2BuiltInConverters;", "Ljava/lang/Object;Lretrofit2/Converter<Lokhttp3/ResponseBody;Ljava/lang/Void;>;" };
  static const J2ObjcClassInfo _Retrofit2BuiltInConverters_VoidResponseBodyConverter = { "VoidResponseBodyConverter", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_Retrofit2BuiltInConverters_VoidResponseBodyConverter;
}

+ (void)initialize {
  if (self == [Retrofit2BuiltInConverters_VoidResponseBodyConverter class]) {
    JreStrongAssignAndConsume(&Retrofit2BuiltInConverters_VoidResponseBodyConverter_INSTANCE, new_Retrofit2BuiltInConverters_VoidResponseBodyConverter_init());
    J2OBJC_SET_INITIALIZED(Retrofit2BuiltInConverters_VoidResponseBodyConverter)
  }
}

@end

void Retrofit2BuiltInConverters_VoidResponseBodyConverter_init(Retrofit2BuiltInConverters_VoidResponseBodyConverter *self) {
  NSObject_init(self);
}

Retrofit2BuiltInConverters_VoidResponseBodyConverter *new_Retrofit2BuiltInConverters_VoidResponseBodyConverter_init() {
  J2OBJC_NEW_IMPL(Retrofit2BuiltInConverters_VoidResponseBodyConverter, init)
}

Retrofit2BuiltInConverters_VoidResponseBodyConverter *create_Retrofit2BuiltInConverters_VoidResponseBodyConverter_init() {
  J2OBJC_CREATE_IMPL(Retrofit2BuiltInConverters_VoidResponseBodyConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2BuiltInConverters_VoidResponseBodyConverter)

J2OBJC_INITIALIZED_DEFN(Retrofit2BuiltInConverters_RequestBodyConverter)

Retrofit2BuiltInConverters_RequestBodyConverter *Retrofit2BuiltInConverters_RequestBodyConverter_INSTANCE;

@implementation Retrofit2BuiltInConverters_RequestBodyConverter

+ (Retrofit2BuiltInConverters_RequestBodyConverter *)INSTANCE {
  return Retrofit2BuiltInConverters_RequestBodyConverter_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2BuiltInConverters_RequestBodyConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (Okhttp3RequestBody *)convertWithId:(Okhttp3RequestBody * __nonnull)value {
  return value;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3RequestBody;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRetrofit2BuiltInConverters_RequestBodyConverter;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "convert", "LOkhttp3RequestBody;", "LJavaIoIOException;", &Retrofit2BuiltInConverters_RequestBodyConverter_INSTANCE, "LRetrofit2BuiltInConverters;", "Ljava/lang/Object;Lretrofit2/Converter<Lokhttp3/RequestBody;Lokhttp3/RequestBody;>;" };
  static const J2ObjcClassInfo _Retrofit2BuiltInConverters_RequestBodyConverter = { "RequestBodyConverter", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_Retrofit2BuiltInConverters_RequestBodyConverter;
}

+ (void)initialize {
  if (self == [Retrofit2BuiltInConverters_RequestBodyConverter class]) {
    JreStrongAssignAndConsume(&Retrofit2BuiltInConverters_RequestBodyConverter_INSTANCE, new_Retrofit2BuiltInConverters_RequestBodyConverter_init());
    J2OBJC_SET_INITIALIZED(Retrofit2BuiltInConverters_RequestBodyConverter)
  }
}

@end

void Retrofit2BuiltInConverters_RequestBodyConverter_init(Retrofit2BuiltInConverters_RequestBodyConverter *self) {
  NSObject_init(self);
}

Retrofit2BuiltInConverters_RequestBodyConverter *new_Retrofit2BuiltInConverters_RequestBodyConverter_init() {
  J2OBJC_NEW_IMPL(Retrofit2BuiltInConverters_RequestBodyConverter, init)
}

Retrofit2BuiltInConverters_RequestBodyConverter *create_Retrofit2BuiltInConverters_RequestBodyConverter_init() {
  J2OBJC_CREATE_IMPL(Retrofit2BuiltInConverters_RequestBodyConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2BuiltInConverters_RequestBodyConverter)

J2OBJC_INITIALIZED_DEFN(Retrofit2BuiltInConverters_StreamingResponseBodyConverter)

Retrofit2BuiltInConverters_StreamingResponseBodyConverter *Retrofit2BuiltInConverters_StreamingResponseBodyConverter_INSTANCE;

@implementation Retrofit2BuiltInConverters_StreamingResponseBodyConverter

+ (Retrofit2BuiltInConverters_StreamingResponseBodyConverter *)INSTANCE {
  return Retrofit2BuiltInConverters_StreamingResponseBodyConverter_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2BuiltInConverters_StreamingResponseBodyConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (Okhttp3ResponseBody *)convertWithId:(Okhttp3ResponseBody * __nonnull)value {
  return value;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3ResponseBody;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRetrofit2BuiltInConverters_StreamingResponseBodyConverter;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "convert", "LOkhttp3ResponseBody;", "LJavaIoIOException;", &Retrofit2BuiltInConverters_StreamingResponseBodyConverter_INSTANCE, "LRetrofit2BuiltInConverters;", "Ljava/lang/Object;Lretrofit2/Converter<Lokhttp3/ResponseBody;Lokhttp3/ResponseBody;>;" };
  static const J2ObjcClassInfo _Retrofit2BuiltInConverters_StreamingResponseBodyConverter = { "StreamingResponseBodyConverter", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_Retrofit2BuiltInConverters_StreamingResponseBodyConverter;
}

+ (void)initialize {
  if (self == [Retrofit2BuiltInConverters_StreamingResponseBodyConverter class]) {
    JreStrongAssignAndConsume(&Retrofit2BuiltInConverters_StreamingResponseBodyConverter_INSTANCE, new_Retrofit2BuiltInConverters_StreamingResponseBodyConverter_init());
    J2OBJC_SET_INITIALIZED(Retrofit2BuiltInConverters_StreamingResponseBodyConverter)
  }
}

@end

void Retrofit2BuiltInConverters_StreamingResponseBodyConverter_init(Retrofit2BuiltInConverters_StreamingResponseBodyConverter *self) {
  NSObject_init(self);
}

Retrofit2BuiltInConverters_StreamingResponseBodyConverter *new_Retrofit2BuiltInConverters_StreamingResponseBodyConverter_init() {
  J2OBJC_NEW_IMPL(Retrofit2BuiltInConverters_StreamingResponseBodyConverter, init)
}

Retrofit2BuiltInConverters_StreamingResponseBodyConverter *create_Retrofit2BuiltInConverters_StreamingResponseBodyConverter_init() {
  J2OBJC_CREATE_IMPL(Retrofit2BuiltInConverters_StreamingResponseBodyConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2BuiltInConverters_StreamingResponseBodyConverter)

J2OBJC_INITIALIZED_DEFN(Retrofit2BuiltInConverters_BufferingResponseBodyConverter)

Retrofit2BuiltInConverters_BufferingResponseBodyConverter *Retrofit2BuiltInConverters_BufferingResponseBodyConverter_INSTANCE;

@implementation Retrofit2BuiltInConverters_BufferingResponseBodyConverter

+ (Retrofit2BuiltInConverters_BufferingResponseBodyConverter *)INSTANCE {
  return Retrofit2BuiltInConverters_BufferingResponseBodyConverter_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2BuiltInConverters_BufferingResponseBodyConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (Okhttp3ResponseBody *)convertWithId:(Okhttp3ResponseBody * __nonnull)value {
  @try {
    return Retrofit2Utils_bufferWithOkhttp3ResponseBody_(value);
  }
  @finally {
    [((Okhttp3ResponseBody *) nil_chk(value)) close];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3ResponseBody;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRetrofit2BuiltInConverters_BufferingResponseBodyConverter;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "convert", "LOkhttp3ResponseBody;", "LJavaIoIOException;", &Retrofit2BuiltInConverters_BufferingResponseBodyConverter_INSTANCE, "LRetrofit2BuiltInConverters;", "Ljava/lang/Object;Lretrofit2/Converter<Lokhttp3/ResponseBody;Lokhttp3/ResponseBody;>;" };
  static const J2ObjcClassInfo _Retrofit2BuiltInConverters_BufferingResponseBodyConverter = { "BufferingResponseBodyConverter", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_Retrofit2BuiltInConverters_BufferingResponseBodyConverter;
}

+ (void)initialize {
  if (self == [Retrofit2BuiltInConverters_BufferingResponseBodyConverter class]) {
    JreStrongAssignAndConsume(&Retrofit2BuiltInConverters_BufferingResponseBodyConverter_INSTANCE, new_Retrofit2BuiltInConverters_BufferingResponseBodyConverter_init());
    J2OBJC_SET_INITIALIZED(Retrofit2BuiltInConverters_BufferingResponseBodyConverter)
  }
}

@end

void Retrofit2BuiltInConverters_BufferingResponseBodyConverter_init(Retrofit2BuiltInConverters_BufferingResponseBodyConverter *self) {
  NSObject_init(self);
}

Retrofit2BuiltInConverters_BufferingResponseBodyConverter *new_Retrofit2BuiltInConverters_BufferingResponseBodyConverter_init() {
  J2OBJC_NEW_IMPL(Retrofit2BuiltInConverters_BufferingResponseBodyConverter, init)
}

Retrofit2BuiltInConverters_BufferingResponseBodyConverter *create_Retrofit2BuiltInConverters_BufferingResponseBodyConverter_init() {
  J2OBJC_CREATE_IMPL(Retrofit2BuiltInConverters_BufferingResponseBodyConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2BuiltInConverters_BufferingResponseBodyConverter)

J2OBJC_INITIALIZED_DEFN(Retrofit2BuiltInConverters_ToStringConverter)

Retrofit2BuiltInConverters_ToStringConverter *Retrofit2BuiltInConverters_ToStringConverter_INSTANCE;

@implementation Retrofit2BuiltInConverters_ToStringConverter

+ (Retrofit2BuiltInConverters_ToStringConverter *)INSTANCE {
  return Retrofit2BuiltInConverters_ToStringConverter_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2BuiltInConverters_ToStringConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)convertWithId:(id __nonnull)value {
  return [nil_chk(value) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRetrofit2BuiltInConverters_ToStringConverter;", .constantValue.asLong = 0, 0x18, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "convert", "LNSObject;", &Retrofit2BuiltInConverters_ToStringConverter_INSTANCE, "LRetrofit2BuiltInConverters;", "Ljava/lang/Object;Lretrofit2/Converter<Ljava/lang/Object;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _Retrofit2BuiltInConverters_ToStringConverter = { "ToStringConverter", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 3, -1, -1, 4, -1 };
  return &_Retrofit2BuiltInConverters_ToStringConverter;
}

+ (void)initialize {
  if (self == [Retrofit2BuiltInConverters_ToStringConverter class]) {
    JreStrongAssignAndConsume(&Retrofit2BuiltInConverters_ToStringConverter_INSTANCE, new_Retrofit2BuiltInConverters_ToStringConverter_init());
    J2OBJC_SET_INITIALIZED(Retrofit2BuiltInConverters_ToStringConverter)
  }
}

@end

void Retrofit2BuiltInConverters_ToStringConverter_init(Retrofit2BuiltInConverters_ToStringConverter *self) {
  NSObject_init(self);
}

Retrofit2BuiltInConverters_ToStringConverter *new_Retrofit2BuiltInConverters_ToStringConverter_init() {
  J2OBJC_NEW_IMPL(Retrofit2BuiltInConverters_ToStringConverter, init)
}

Retrofit2BuiltInConverters_ToStringConverter *create_Retrofit2BuiltInConverters_ToStringConverter_init() {
  J2OBJC_CREATE_IMPL(Retrofit2BuiltInConverters_ToStringConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2BuiltInConverters_ToStringConverter)
