//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3Headers.h"
#include "Okhttp3MultipartBody.h"
#include "Okhttp3RequestBody.h"
#include "Retrofit2Converter.h"
#include "Retrofit2ParameterHandler.h"
#include "Retrofit2RequestBuilder.h"
#include "Retrofit2Utils.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Iterable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Array.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "javax/annotation/Nullable.h"

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler__Annotations$0();

@interface Retrofit2ParameterHandler_1 : Retrofit2ParameterHandler {
 @public
  Retrofit2ParameterHandler *this$0_;
}

- (instancetype)initWithRetrofit2ParameterHandler:(Retrofit2ParameterHandler * __nonnull)outer$;

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id<JavaLangIterable> __nullable)values;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2ParameterHandler_1)

__attribute__((unused)) static void Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler_1 *self, Retrofit2ParameterHandler *outer$);

__attribute__((unused)) static Retrofit2ParameterHandler_1 *new_Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2ParameterHandler_1 *create_Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$);

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_1__Annotations$0();

@interface Retrofit2ParameterHandler_2 : Retrofit2ParameterHandler {
 @public
  Retrofit2ParameterHandler *this$0_;
}

- (instancetype)initWithRetrofit2ParameterHandler:(Retrofit2ParameterHandler * __nonnull)outer$;

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)values;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2ParameterHandler_2)

__attribute__((unused)) static void Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler_2 *self, Retrofit2ParameterHandler *outer$);

__attribute__((unused)) static Retrofit2ParameterHandler_2 *new_Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2ParameterHandler_2 *create_Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$);

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_2__Annotations$0();

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_RelativeUrl__Annotations$0();

@interface Retrofit2ParameterHandler_Header () {
 @public
  NSString *name_;
  id<Retrofit2Converter> valueConverter_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Header, name_, NSString *)
J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Header, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_Header__Annotations$0();

@interface Retrofit2ParameterHandler_Path () {
 @public
  NSString *name_;
  id<Retrofit2Converter> valueConverter_;
  jboolean encoded_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Path, name_, NSString *)
J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Path, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_Path__Annotations$0();

@interface Retrofit2ParameterHandler_Query () {
 @public
  NSString *name_;
  id<Retrofit2Converter> valueConverter_;
  jboolean encoded_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Query, name_, NSString *)
J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Query, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_Query__Annotations$0();

@interface Retrofit2ParameterHandler_QueryName () {
 @public
  id<Retrofit2Converter> nameConverter_;
  jboolean encoded_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_QueryName, nameConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_QueryName__Annotations$0();

@interface Retrofit2ParameterHandler_QueryMap () {
 @public
  id<Retrofit2Converter> valueConverter_;
  jboolean encoded_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_QueryMap, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_QueryMap__Annotations$0();

@interface Retrofit2ParameterHandler_HeaderMap () {
 @public
  id<Retrofit2Converter> valueConverter_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_HeaderMap, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_HeaderMap__Annotations$0();

@interface Retrofit2ParameterHandler_Field () {
 @public
  NSString *name_;
  id<Retrofit2Converter> valueConverter_;
  jboolean encoded_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Field, name_, NSString *)
J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Field, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_Field__Annotations$0();

@interface Retrofit2ParameterHandler_FieldMap () {
 @public
  id<Retrofit2Converter> valueConverter_;
  jboolean encoded_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_FieldMap, valueConverter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_FieldMap__Annotations$0();

@interface Retrofit2ParameterHandler_Part () {
 @public
  Okhttp3Headers *headers_;
  id<Retrofit2Converter> converter_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Part, headers_, Okhttp3Headers *)
J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Part, converter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_Part__Annotations$0();

@interface Retrofit2ParameterHandler_RawPart ()

- (instancetype)init;

@end

__attribute__((unused)) static void Retrofit2ParameterHandler_RawPart_init(Retrofit2ParameterHandler_RawPart *self);

__attribute__((unused)) static Retrofit2ParameterHandler_RawPart *new_Retrofit2ParameterHandler_RawPart_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2ParameterHandler_RawPart *create_Retrofit2ParameterHandler_RawPart_init();

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_RawPart__Annotations$0();

@interface Retrofit2ParameterHandler_PartMap () {
 @public
  id<Retrofit2Converter> valueConverter_;
  NSString *transferEncoding_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_PartMap, valueConverter_, id<Retrofit2Converter>)
J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_PartMap, transferEncoding_, NSString *)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_PartMap__Annotations$0();

@interface Retrofit2ParameterHandler_Body () {
 @public
  id<Retrofit2Converter> converter_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2ParameterHandler_Body, converter_, id<Retrofit2Converter>)

__attribute__((unused)) static IOSObjectArray *Retrofit2ParameterHandler_Body__Annotations$0();

@implementation Retrofit2ParameterHandler

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2ParameterHandler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (Retrofit2ParameterHandler *)iterable {
  return create_Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(self);
}

- (Retrofit2ParameterHandler *)array {
  return create_Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x400, 0, 1, 2, 3, -1, 4 },
    { NULL, "LRetrofit2ParameterHandler;", 0x10, -1, -1, -1, 5, -1, -1 },
    { NULL, "LRetrofit2ParameterHandler;", 0x10, -1, -1, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  methods[2].selector = @selector(iterable);
  methods[3].selector = @selector(array);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler__Annotations$0, "()Lretrofit2/ParameterHandler<Ljava/lang/Iterable<TT;>;>;", "()Lretrofit2/ParameterHandler<Ljava/lang/Object;>;", "LRetrofit2ParameterHandler_RelativeUrl;LRetrofit2ParameterHandler_Header;LRetrofit2ParameterHandler_Path;LRetrofit2ParameterHandler_Query;LRetrofit2ParameterHandler_QueryName;LRetrofit2ParameterHandler_QueryMap;LRetrofit2ParameterHandler_HeaderMap;LRetrofit2ParameterHandler_Field;LRetrofit2ParameterHandler_FieldMap;LRetrofit2ParameterHandler_Part;LRetrofit2ParameterHandler_RawPart;LRetrofit2ParameterHandler_PartMap;LRetrofit2ParameterHandler_Body;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler = { "ParameterHandler", "retrofit2", ptrTable, methods, NULL, 7, 0x400, 4, 0, -1, 7, -1, 8, -1 };
  return &_Retrofit2ParameterHandler;
}

@end

void Retrofit2ParameterHandler_init(Retrofit2ParameterHandler *self) {
  NSObject_init(self);
}

IOSObjectArray *Retrofit2ParameterHandler__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler)

@implementation Retrofit2ParameterHandler_1

- (instancetype)initWithRetrofit2ParameterHandler:(Retrofit2ParameterHandler * __nonnull)outer$ {
  Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(self, outer$);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id<JavaLangIterable> __nullable)values {
  if (values == nil) return;
  for (id __strong value in values) {
    [this$0_ applyWithRetrofit2RequestBuilder:builder withId:value];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, 2, 3, -1, 4 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2ParameterHandler:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRetrofit2ParameterHandler;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "apply", "LRetrofit2RequestBuilder;LJavaLangIterable;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;Ljava/lang/Iterable<TT;>;)V", (void *)&Retrofit2ParameterHandler_1__Annotations$0, "Lretrofit2/ParameterHandler<TT;>;", "LRetrofit2ParameterHandler;", "iterable", "Lretrofit2/ParameterHandler<Ljava/lang/Iterable<TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_1 = { "", "retrofit2", ptrTable, methods, fields, 7, 0x8018, 2, 1, 6, -1, 7, 8, -1 };
  return &_Retrofit2ParameterHandler_1;
}

@end

void Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler_1 *self, Retrofit2ParameterHandler *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  Retrofit2ParameterHandler_init(self);
}

Retrofit2ParameterHandler_1 *new_Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_1, initWithRetrofit2ParameterHandler_, outer$)
}

Retrofit2ParameterHandler_1 *create_Retrofit2ParameterHandler_1_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_1, initWithRetrofit2ParameterHandler_, outer$)
}

IOSObjectArray *Retrofit2ParameterHandler_1__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

@implementation Retrofit2ParameterHandler_2

- (instancetype)initWithRetrofit2ParameterHandler:(Retrofit2ParameterHandler * __nonnull)outer$ {
  Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(self, outer$);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)values {
  if (values == nil) return;
  for (jint i = 0, size = JavaLangReflectArray_getLengthWithId_(values); i < size; i++) {
    [this$0_ applyWithRetrofit2RequestBuilder:builder withId:JavaLangReflectArray_getWithId_withInt_(values, i)];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, 2, -1, -1, 3 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2ParameterHandler:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRetrofit2ParameterHandler;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", (void *)&Retrofit2ParameterHandler_2__Annotations$0, "Lretrofit2/ParameterHandler<TT;>;", "LRetrofit2ParameterHandler;", "array", "Lretrofit2/ParameterHandler<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_2 = { "", "retrofit2", ptrTable, methods, fields, 7, 0x8018, 2, 1, 5, -1, 6, 7, -1 };
  return &_Retrofit2ParameterHandler_2;
}

@end

void Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler_2 *self, Retrofit2ParameterHandler *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  Retrofit2ParameterHandler_init(self);
}

Retrofit2ParameterHandler_2 *new_Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_2, initWithRetrofit2ParameterHandler_, outer$)
}

Retrofit2ParameterHandler_2 *create_Retrofit2ParameterHandler_2_initWithRetrofit2ParameterHandler_(Retrofit2ParameterHandler *outer$) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_2, initWithRetrofit2ParameterHandler_, outer$)
}

IOSObjectArray *Retrofit2ParameterHandler_2__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

@implementation Retrofit2ParameterHandler_RelativeUrl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2ParameterHandler_RelativeUrl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  Retrofit2Utils_checkNotNullWithId_withNSString_(value, @"@Url parameter is null.");
  [((Retrofit2RequestBuilder *) nil_chk(builder)) setRelativeUrlWithId:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, 2 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LRetrofit2RequestBuilder;LNSObject;", (void *)&Retrofit2ParameterHandler_RelativeUrl__Annotations$0, "LRetrofit2ParameterHandler;", "Lretrofit2/ParameterHandler<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_RelativeUrl = { "RelativeUrl", "retrofit2", ptrTable, methods, NULL, 7, 0x18, 2, 0, 3, -1, -1, 4, -1 };
  return &_Retrofit2ParameterHandler_RelativeUrl;
}

@end

void Retrofit2ParameterHandler_RelativeUrl_init(Retrofit2ParameterHandler_RelativeUrl *self) {
  Retrofit2ParameterHandler_init(self);
}

Retrofit2ParameterHandler_RelativeUrl *new_Retrofit2ParameterHandler_RelativeUrl_init() {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_RelativeUrl, init)
}

Retrofit2ParameterHandler_RelativeUrl *create_Retrofit2ParameterHandler_RelativeUrl_init() {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_RelativeUrl, init)
}

IOSObjectArray *Retrofit2ParameterHandler_RelativeUrl__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_RelativeUrl)

@implementation Retrofit2ParameterHandler_Header

- (instancetype)initWithNSString:(NSString * __nonnull)name
          withRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter {
  Retrofit2ParameterHandler_Header_initWithNSString_withRetrofit2Converter_(self, name, valueConverter);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) return;
  NSString *headerValue = [((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:value];
  if (headerValue == nil) return;
  [((Retrofit2RequestBuilder *) nil_chk(builder)) addHeaderWithNSString:name_ withNSString:headerValue];
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withRetrofit2Converter:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LRetrofit2Converter;", "(Ljava/lang/String;Lretrofit2/Converter<TT;Ljava/lang/String;>;)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_Header__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_Header = { "Header", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_Header;
}

@end

void Retrofit2ParameterHandler_Header_initWithNSString_withRetrofit2Converter_(Retrofit2ParameterHandler_Header *self, NSString *name, id<Retrofit2Converter> valueConverter) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->name_, Retrofit2Utils_checkNotNullWithId_withNSString_(name, @"name == null"));
  JreStrongAssign(&self->valueConverter_, valueConverter);
}

Retrofit2ParameterHandler_Header *new_Retrofit2ParameterHandler_Header_initWithNSString_withRetrofit2Converter_(NSString *name, id<Retrofit2Converter> valueConverter) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_Header, initWithNSString_withRetrofit2Converter_, name, valueConverter)
}

Retrofit2ParameterHandler_Header *create_Retrofit2ParameterHandler_Header_initWithNSString_withRetrofit2Converter_(NSString *name, id<Retrofit2Converter> valueConverter) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_Header, initWithNSString_withRetrofit2Converter_, name, valueConverter)
}

IOSObjectArray *Retrofit2ParameterHandler_Header__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_Header)

@implementation Retrofit2ParameterHandler_Path

- (instancetype)initWithNSString:(NSString * __nonnull)name
          withRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter
                     withBoolean:(jboolean)encoded {
  Retrofit2ParameterHandler_Path_initWithNSString_withRetrofit2Converter_withBoolean_(self, name, valueConverter, encoded);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Path parameter \"", name_, @"\" value must not be null."));
  }
  [((Retrofit2RequestBuilder *) nil_chk(builder)) addPathParamWithNSString:name_ withNSString:[((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:value] withBoolean:encoded_];
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withRetrofit2Converter:withBoolean:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "encoded_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LRetrofit2Converter;Z", "(Ljava/lang/String;Lretrofit2/Converter<TT;Ljava/lang/String;>;Z)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_Path__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_Path = { "Path", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 3, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_Path;
}

@end

void Retrofit2ParameterHandler_Path_initWithNSString_withRetrofit2Converter_withBoolean_(Retrofit2ParameterHandler_Path *self, NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->name_, Retrofit2Utils_checkNotNullWithId_withNSString_(name, @"name == null"));
  JreStrongAssign(&self->valueConverter_, valueConverter);
  self->encoded_ = encoded;
}

Retrofit2ParameterHandler_Path *new_Retrofit2ParameterHandler_Path_initWithNSString_withRetrofit2Converter_withBoolean_(NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_Path, initWithNSString_withRetrofit2Converter_withBoolean_, name, valueConverter, encoded)
}

Retrofit2ParameterHandler_Path *create_Retrofit2ParameterHandler_Path_initWithNSString_withRetrofit2Converter_withBoolean_(NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_Path, initWithNSString_withRetrofit2Converter_withBoolean_, name, valueConverter, encoded)
}

IOSObjectArray *Retrofit2ParameterHandler_Path__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_Path)

@implementation Retrofit2ParameterHandler_Query

- (instancetype)initWithNSString:(NSString * __nonnull)name
          withRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter
                     withBoolean:(jboolean)encoded {
  Retrofit2ParameterHandler_Query_initWithNSString_withRetrofit2Converter_withBoolean_(self, name, valueConverter, encoded);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) return;
  NSString *queryValue = [((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:value];
  if (queryValue == nil) return;
  [((Retrofit2RequestBuilder *) nil_chk(builder)) addQueryParamWithNSString:name_ withNSString:queryValue withBoolean:encoded_];
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withRetrofit2Converter:withBoolean:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "encoded_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LRetrofit2Converter;Z", "(Ljava/lang/String;Lretrofit2/Converter<TT;Ljava/lang/String;>;Z)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_Query__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_Query = { "Query", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 3, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_Query;
}

@end

void Retrofit2ParameterHandler_Query_initWithNSString_withRetrofit2Converter_withBoolean_(Retrofit2ParameterHandler_Query *self, NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->name_, Retrofit2Utils_checkNotNullWithId_withNSString_(name, @"name == null"));
  JreStrongAssign(&self->valueConverter_, valueConverter);
  self->encoded_ = encoded;
}

Retrofit2ParameterHandler_Query *new_Retrofit2ParameterHandler_Query_initWithNSString_withRetrofit2Converter_withBoolean_(NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_Query, initWithNSString_withRetrofit2Converter_withBoolean_, name, valueConverter, encoded)
}

Retrofit2ParameterHandler_Query *create_Retrofit2ParameterHandler_Query_initWithNSString_withRetrofit2Converter_withBoolean_(NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_Query, initWithNSString_withRetrofit2Converter_withBoolean_, name, valueConverter, encoded)
}

IOSObjectArray *Retrofit2ParameterHandler_Query__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_Query)

@implementation Retrofit2ParameterHandler_QueryName

- (instancetype)initWithRetrofit2Converter:(id<Retrofit2Converter> __nonnull)nameConverter
                               withBoolean:(jboolean)encoded {
  Retrofit2ParameterHandler_QueryName_initWithRetrofit2Converter_withBoolean_(self, nameConverter, encoded);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) return;
  [((Retrofit2RequestBuilder *) nil_chk(builder)) addQueryParamWithNSString:[((id<Retrofit2Converter>) nil_chk(nameConverter_)) convertWithId:value] withNSString:nil withBoolean:encoded_];
}

- (void)dealloc {
  RELEASE_(nameConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Converter:withBoolean:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nameConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "encoded_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Converter;Z", "(Lretrofit2/Converter<TT;Ljava/lang/String;>;Z)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_QueryName__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_QueryName = { "QueryName", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_QueryName;
}

@end

void Retrofit2ParameterHandler_QueryName_initWithRetrofit2Converter_withBoolean_(Retrofit2ParameterHandler_QueryName *self, id<Retrofit2Converter> nameConverter, jboolean encoded) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->nameConverter_, nameConverter);
  self->encoded_ = encoded;
}

Retrofit2ParameterHandler_QueryName *new_Retrofit2ParameterHandler_QueryName_initWithRetrofit2Converter_withBoolean_(id<Retrofit2Converter> nameConverter, jboolean encoded) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_QueryName, initWithRetrofit2Converter_withBoolean_, nameConverter, encoded)
}

Retrofit2ParameterHandler_QueryName *create_Retrofit2ParameterHandler_QueryName_initWithRetrofit2Converter_withBoolean_(id<Retrofit2Converter> nameConverter, jboolean encoded) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_QueryName, initWithRetrofit2Converter_withBoolean_, nameConverter, encoded)
}

IOSObjectArray *Retrofit2ParameterHandler_QueryName__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_QueryName)

@implementation Retrofit2ParameterHandler_QueryMap

- (instancetype)initWithRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter
                               withBoolean:(jboolean)encoded {
  Retrofit2ParameterHandler_QueryMap_initWithRetrofit2Converter_withBoolean_(self, valueConverter, encoded);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id<JavaUtilMap> __nullable)value {
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Query map was null.");
  }
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([value entrySet])) {
    NSString *entryKey = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (entryKey == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Query map contained null key.");
    }
    id entryValue = [entry_ getValue];
    if (entryValue == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Query map contained null value for key '", entryKey, @"'."));
    }
    NSString *convertedEntryValue = [((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:entryValue];
    if (convertedEntryValue == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$$$$$", @"Query map value '", entryValue, @"' converted to null by ", [[valueConverter_ java_getClass] getName], @" for key '", entryKey, @"'."));
    }
    [((Retrofit2RequestBuilder *) nil_chk(builder)) addQueryParamWithNSString:entryKey withNSString:convertedEntryValue withBoolean:encoded_];
  }
}

- (void)dealloc {
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Converter:withBoolean:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "encoded_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Converter;Z", "(Lretrofit2/Converter<TT;Ljava/lang/String;>;Z)V", "apply", "LRetrofit2RequestBuilder;LJavaUtilMap;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;Ljava/util/Map<Ljava/lang/String;TT;>;)V", (void *)&Retrofit2ParameterHandler_QueryMap__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<Ljava/util/Map<Ljava/lang/String;TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_QueryMap = { "QueryMap", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_QueryMap;
}

@end

void Retrofit2ParameterHandler_QueryMap_initWithRetrofit2Converter_withBoolean_(Retrofit2ParameterHandler_QueryMap *self, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->valueConverter_, valueConverter);
  self->encoded_ = encoded;
}

Retrofit2ParameterHandler_QueryMap *new_Retrofit2ParameterHandler_QueryMap_initWithRetrofit2Converter_withBoolean_(id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_QueryMap, initWithRetrofit2Converter_withBoolean_, valueConverter, encoded)
}

Retrofit2ParameterHandler_QueryMap *create_Retrofit2ParameterHandler_QueryMap_initWithRetrofit2Converter_withBoolean_(id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_QueryMap, initWithRetrofit2Converter_withBoolean_, valueConverter, encoded)
}

IOSObjectArray *Retrofit2ParameterHandler_QueryMap__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_QueryMap)

@implementation Retrofit2ParameterHandler_HeaderMap

- (instancetype)initWithRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter {
  Retrofit2ParameterHandler_HeaderMap_initWithRetrofit2Converter_(self, valueConverter);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id<JavaUtilMap> __nullable)value {
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Header map was null.");
  }
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([value entrySet])) {
    NSString *headerName = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (headerName == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Header map contained null key.");
    }
    id headerValue = [entry_ getValue];
    if (headerValue == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Header map contained null value for key '", headerName, @"'."));
    }
    [((Retrofit2RequestBuilder *) nil_chk(builder)) addHeaderWithNSString:headerName withNSString:[((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:headerValue]];
  }
}

- (void)dealloc {
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Converter:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Converter;", "(Lretrofit2/Converter<TT;Ljava/lang/String;>;)V", "apply", "LRetrofit2RequestBuilder;LJavaUtilMap;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;Ljava/util/Map<Ljava/lang/String;TT;>;)V", (void *)&Retrofit2ParameterHandler_HeaderMap__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<Ljava/util/Map<Ljava/lang/String;TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_HeaderMap = { "HeaderMap", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_HeaderMap;
}

@end

void Retrofit2ParameterHandler_HeaderMap_initWithRetrofit2Converter_(Retrofit2ParameterHandler_HeaderMap *self, id<Retrofit2Converter> valueConverter) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->valueConverter_, valueConverter);
}

Retrofit2ParameterHandler_HeaderMap *new_Retrofit2ParameterHandler_HeaderMap_initWithRetrofit2Converter_(id<Retrofit2Converter> valueConverter) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_HeaderMap, initWithRetrofit2Converter_, valueConverter)
}

Retrofit2ParameterHandler_HeaderMap *create_Retrofit2ParameterHandler_HeaderMap_initWithRetrofit2Converter_(id<Retrofit2Converter> valueConverter) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_HeaderMap, initWithRetrofit2Converter_, valueConverter)
}

IOSObjectArray *Retrofit2ParameterHandler_HeaderMap__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_HeaderMap)

@implementation Retrofit2ParameterHandler_Field

- (instancetype)initWithNSString:(NSString * __nonnull)name
          withRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter
                     withBoolean:(jboolean)encoded {
  Retrofit2ParameterHandler_Field_initWithNSString_withRetrofit2Converter_withBoolean_(self, name, valueConverter, encoded);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) return;
  NSString *fieldValue = [((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:value];
  if (fieldValue == nil) return;
  [((Retrofit2RequestBuilder *) nil_chk(builder)) addFormFieldWithNSString:name_ withNSString:fieldValue withBoolean:encoded_];
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withRetrofit2Converter:withBoolean:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "encoded_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LRetrofit2Converter;Z", "(Ljava/lang/String;Lretrofit2/Converter<TT;Ljava/lang/String;>;Z)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_Field__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_Field = { "Field", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 3, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_Field;
}

@end

void Retrofit2ParameterHandler_Field_initWithNSString_withRetrofit2Converter_withBoolean_(Retrofit2ParameterHandler_Field *self, NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->name_, Retrofit2Utils_checkNotNullWithId_withNSString_(name, @"name == null"));
  JreStrongAssign(&self->valueConverter_, valueConverter);
  self->encoded_ = encoded;
}

Retrofit2ParameterHandler_Field *new_Retrofit2ParameterHandler_Field_initWithNSString_withRetrofit2Converter_withBoolean_(NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_Field, initWithNSString_withRetrofit2Converter_withBoolean_, name, valueConverter, encoded)
}

Retrofit2ParameterHandler_Field *create_Retrofit2ParameterHandler_Field_initWithNSString_withRetrofit2Converter_withBoolean_(NSString *name, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_Field, initWithNSString_withRetrofit2Converter_withBoolean_, name, valueConverter, encoded)
}

IOSObjectArray *Retrofit2ParameterHandler_Field__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_Field)

@implementation Retrofit2ParameterHandler_FieldMap

- (instancetype)initWithRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter
                               withBoolean:(jboolean)encoded {
  Retrofit2ParameterHandler_FieldMap_initWithRetrofit2Converter_withBoolean_(self, valueConverter, encoded);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id<JavaUtilMap> __nullable)value {
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Field map was null.");
  }
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([value entrySet])) {
    NSString *entryKey = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (entryKey == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Field map contained null key.");
    }
    id entryValue = [entry_ getValue];
    if (entryValue == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Field map contained null value for key '", entryKey, @"'."));
    }
    NSString *fieldEntry = [((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:entryValue];
    if (fieldEntry == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$$$$$", @"Field map value '", entryValue, @"' converted to null by ", [[valueConverter_ java_getClass] getName], @" for key '", entryKey, @"'."));
    }
    [((Retrofit2RequestBuilder *) nil_chk(builder)) addFormFieldWithNSString:entryKey withNSString:fieldEntry withBoolean:encoded_];
  }
}

- (void)dealloc {
  RELEASE_(valueConverter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Converter:withBoolean:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "encoded_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Converter;Z", "(Lretrofit2/Converter<TT;Ljava/lang/String;>;Z)V", "apply", "LRetrofit2RequestBuilder;LJavaUtilMap;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;Ljava/util/Map<Ljava/lang/String;TT;>;)V", (void *)&Retrofit2ParameterHandler_FieldMap__Annotations$0, "Lretrofit2/Converter<TT;Ljava/lang/String;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<Ljava/util/Map<Ljava/lang/String;TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_FieldMap = { "FieldMap", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_FieldMap;
}

@end

void Retrofit2ParameterHandler_FieldMap_initWithRetrofit2Converter_withBoolean_(Retrofit2ParameterHandler_FieldMap *self, id<Retrofit2Converter> valueConverter, jboolean encoded) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->valueConverter_, valueConverter);
  self->encoded_ = encoded;
}

Retrofit2ParameterHandler_FieldMap *new_Retrofit2ParameterHandler_FieldMap_initWithRetrofit2Converter_withBoolean_(id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_FieldMap, initWithRetrofit2Converter_withBoolean_, valueConverter, encoded)
}

Retrofit2ParameterHandler_FieldMap *create_Retrofit2ParameterHandler_FieldMap_initWithRetrofit2Converter_withBoolean_(id<Retrofit2Converter> valueConverter, jboolean encoded) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_FieldMap, initWithRetrofit2Converter_withBoolean_, valueConverter, encoded)
}

IOSObjectArray *Retrofit2ParameterHandler_FieldMap__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_FieldMap)

@implementation Retrofit2ParameterHandler_Part

- (instancetype)initWithOkhttp3Headers:(Okhttp3Headers * __nonnull)headers
                withRetrofit2Converter:(id<Retrofit2Converter> __nonnull)converter {
  Retrofit2ParameterHandler_Part_initWithOkhttp3Headers_withRetrofit2Converter_(self, headers, converter);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) return;
  Okhttp3RequestBody *body;
  @try {
    body = [((id<Retrofit2Converter>) nil_chk(converter_)) convertWithId:value];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@$", @"Unable to convert ", value, @" to RequestBody"), e);
  }
  [((Retrofit2RequestBuilder *) nil_chk(builder)) addPartWithOkhttp3Headers:headers_ withOkhttp3RequestBody:body];
}

- (void)dealloc {
  RELEASE_(headers_);
  RELEASE_(converter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, 4, -1, 5 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3Headers:withRetrofit2Converter:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "headers_", "LOkhttp3Headers;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "converter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOkhttp3Headers;LRetrofit2Converter;", "(Lokhttp3/Headers;Lretrofit2/Converter<TT;Lokhttp3/RequestBody;>;)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_Part__Annotations$0, "Lretrofit2/Converter<TT;Lokhttp3/RequestBody;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_Part = { "Part", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 2, 7, -1, -1, 8, -1 };
  return &_Retrofit2ParameterHandler_Part;
}

@end

void Retrofit2ParameterHandler_Part_initWithOkhttp3Headers_withRetrofit2Converter_(Retrofit2ParameterHandler_Part *self, Okhttp3Headers *headers, id<Retrofit2Converter> converter) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->headers_, headers);
  JreStrongAssign(&self->converter_, converter);
}

Retrofit2ParameterHandler_Part *new_Retrofit2ParameterHandler_Part_initWithOkhttp3Headers_withRetrofit2Converter_(Okhttp3Headers *headers, id<Retrofit2Converter> converter) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_Part, initWithOkhttp3Headers_withRetrofit2Converter_, headers, converter)
}

Retrofit2ParameterHandler_Part *create_Retrofit2ParameterHandler_Part_initWithOkhttp3Headers_withRetrofit2Converter_(Okhttp3Headers *headers, id<Retrofit2Converter> converter) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_Part, initWithOkhttp3Headers_withRetrofit2Converter_, headers, converter)
}

IOSObjectArray *Retrofit2ParameterHandler_Part__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_Part)

J2OBJC_INITIALIZED_DEFN(Retrofit2ParameterHandler_RawPart)

Retrofit2ParameterHandler_RawPart *Retrofit2ParameterHandler_RawPart_INSTANCE;

@implementation Retrofit2ParameterHandler_RawPart

+ (Retrofit2ParameterHandler_RawPart *)INSTANCE {
  return Retrofit2ParameterHandler_RawPart_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2ParameterHandler_RawPart_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(Okhttp3MultipartBody_Part * __nullable)value {
  if (value != nil) {
    [((Retrofit2RequestBuilder *) nil_chk(builder)) addPartWithOkhttp3MultipartBody_Part:value];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, 2, -1, -1, 3 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRetrofit2ParameterHandler_RawPart;", .constantValue.asLong = 0, 0x18, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LRetrofit2RequestBuilder;LOkhttp3MultipartBody_Part;", "LJavaIoIOException;", (void *)&Retrofit2ParameterHandler_RawPart__Annotations$0, &Retrofit2ParameterHandler_RawPart_INSTANCE, "LRetrofit2ParameterHandler;", "Lretrofit2/ParameterHandler<Lokhttp3/MultipartBody$Part;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_RawPart = { "RawPart", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 5, -1, -1, 6, -1 };
  return &_Retrofit2ParameterHandler_RawPart;
}

+ (void)initialize {
  if (self == [Retrofit2ParameterHandler_RawPart class]) {
    JreStrongAssignAndConsume(&Retrofit2ParameterHandler_RawPart_INSTANCE, new_Retrofit2ParameterHandler_RawPart_init());
    J2OBJC_SET_INITIALIZED(Retrofit2ParameterHandler_RawPart)
  }
}

@end

void Retrofit2ParameterHandler_RawPart_init(Retrofit2ParameterHandler_RawPart *self) {
  Retrofit2ParameterHandler_init(self);
}

Retrofit2ParameterHandler_RawPart *new_Retrofit2ParameterHandler_RawPart_init() {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_RawPart, init)
}

Retrofit2ParameterHandler_RawPart *create_Retrofit2ParameterHandler_RawPart_init() {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_RawPart, init)
}

IOSObjectArray *Retrofit2ParameterHandler_RawPart__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_RawPart)

@implementation Retrofit2ParameterHandler_PartMap

- (instancetype)initWithRetrofit2Converter:(id<Retrofit2Converter> __nonnull)valueConverter
                              withNSString:(NSString * __nonnull)transferEncoding {
  Retrofit2ParameterHandler_PartMap_initWithRetrofit2Converter_withNSString_(self, valueConverter, transferEncoding);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id<JavaUtilMap> __nullable)value {
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Part map was null.");
  }
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([value entrySet])) {
    NSString *entryKey = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (entryKey == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Part map contained null key.");
    }
    id entryValue = [entry_ getValue];
    if (entryValue == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Part map contained null value for key '", entryKey, @"'."));
    }
    Okhttp3Headers *headers = Okhttp3Headers_ofWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"Content-Disposition", JreStrcat("$$C", @"form-data; name=\"", entryKey, '"'), @"Content-Transfer-Encoding", transferEncoding_ } count:4 type:NSString_class_()]);
    [((Retrofit2RequestBuilder *) nil_chk(builder)) addPartWithOkhttp3Headers:headers withOkhttp3RequestBody:[((id<Retrofit2Converter>) nil_chk(valueConverter_)) convertWithId:entryValue]];
  }
}

- (void)dealloc {
  RELEASE_(valueConverter_);
  RELEASE_(transferEncoding_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, 5, -1, 6 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Converter:withNSString:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valueConverter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "transferEncoding_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Converter;LNSString;", "(Lretrofit2/Converter<TT;Lokhttp3/RequestBody;>;Ljava/lang/String;)V", "apply", "LRetrofit2RequestBuilder;LJavaUtilMap;", "LJavaIoIOException;", "(Lretrofit2/RequestBuilder;Ljava/util/Map<Ljava/lang/String;TT;>;)V", (void *)&Retrofit2ParameterHandler_PartMap__Annotations$0, "Lretrofit2/Converter<TT;Lokhttp3/RequestBody;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<Ljava/util/Map<Ljava/lang/String;TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_PartMap = { "PartMap", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_Retrofit2ParameterHandler_PartMap;
}

@end

void Retrofit2ParameterHandler_PartMap_initWithRetrofit2Converter_withNSString_(Retrofit2ParameterHandler_PartMap *self, id<Retrofit2Converter> valueConverter, NSString *transferEncoding) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->valueConverter_, valueConverter);
  JreStrongAssign(&self->transferEncoding_, transferEncoding);
}

Retrofit2ParameterHandler_PartMap *new_Retrofit2ParameterHandler_PartMap_initWithRetrofit2Converter_withNSString_(id<Retrofit2Converter> valueConverter, NSString *transferEncoding) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_PartMap, initWithRetrofit2Converter_withNSString_, valueConverter, transferEncoding)
}

Retrofit2ParameterHandler_PartMap *create_Retrofit2ParameterHandler_PartMap_initWithRetrofit2Converter_withNSString_(id<Retrofit2Converter> valueConverter, NSString *transferEncoding) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_PartMap, initWithRetrofit2Converter_withNSString_, valueConverter, transferEncoding)
}

IOSObjectArray *Retrofit2ParameterHandler_PartMap__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_PartMap)

@implementation Retrofit2ParameterHandler_Body

- (instancetype)initWithRetrofit2Converter:(id<Retrofit2Converter> __nonnull)converter {
  Retrofit2ParameterHandler_Body_initWithRetrofit2Converter_(self, converter);
  return self;
}

- (void)applyWithRetrofit2RequestBuilder:(Retrofit2RequestBuilder * __nonnull)builder
                                  withId:(id __nullable)value {
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Body parameter value must not be null.");
  }
  Okhttp3RequestBody *body;
  @try {
    body = [((id<Retrofit2Converter>) nil_chk(converter_)) convertWithId:value];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@$", @"Unable to convert ", value, @" to RequestBody"), e);
  }
  [((Retrofit2RequestBuilder *) nil_chk(builder)) setBodyWithOkhttp3RequestBody:body];
}

- (void)dealloc {
  RELEASE_(converter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, 4, -1, 5 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Converter:);
  methods[1].selector = @selector(applyWithRetrofit2RequestBuilder:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "converter_", "LRetrofit2Converter;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Converter;", "(Lretrofit2/Converter<TT;Lokhttp3/RequestBody;>;)V", "apply", "LRetrofit2RequestBuilder;LNSObject;", "(Lretrofit2/RequestBuilder;TT;)V", (void *)&Retrofit2ParameterHandler_Body__Annotations$0, "Lretrofit2/Converter<TT;Lokhttp3/RequestBody;>;", "LRetrofit2ParameterHandler;", "<T:Ljava/lang/Object;>Lretrofit2/ParameterHandler<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2ParameterHandler_Body = { "Body", "retrofit2", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_Retrofit2ParameterHandler_Body;
}

@end

void Retrofit2ParameterHandler_Body_initWithRetrofit2Converter_(Retrofit2ParameterHandler_Body *self, id<Retrofit2Converter> converter) {
  Retrofit2ParameterHandler_init(self);
  JreStrongAssign(&self->converter_, converter);
}

Retrofit2ParameterHandler_Body *new_Retrofit2ParameterHandler_Body_initWithRetrofit2Converter_(id<Retrofit2Converter> converter) {
  J2OBJC_NEW_IMPL(Retrofit2ParameterHandler_Body, initWithRetrofit2Converter_, converter)
}

Retrofit2ParameterHandler_Body *create_Retrofit2ParameterHandler_Body_initWithRetrofit2Converter_(id<Retrofit2Converter> converter) {
  J2OBJC_CREATE_IMPL(Retrofit2ParameterHandler_Body, initWithRetrofit2Converter_, converter)
}

IOSObjectArray *Retrofit2ParameterHandler_Body__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2ParameterHandler_Body)
