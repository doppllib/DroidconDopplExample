//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DNETDSponsorsResult.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"

@implementation DNETDSponsorsResult

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DNETDSponsorsResult_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(sponsors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "totalSpanCount_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "sponsors_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/List<Lco/touchlab/droidconandroid/shared/network/dao/SponsorsResult$Sponsor;>;", "LDNETDSponsorsResult_Sponsor;" };
  static const J2ObjcClassInfo _DNETDSponsorsResult = { "SponsorsResult", "co.touchlab.droidconandroid.shared.network.dao", ptrTable, methods, fields, 7, 0x1, 1, 2, -1, 1, -1, -1, -1 };
  return &_DNETDSponsorsResult;
}

@end

void DNETDSponsorsResult_init(DNETDSponsorsResult *self) {
  NSObject_init(self);
}

DNETDSponsorsResult *new_DNETDSponsorsResult_init() {
  J2OBJC_NEW_IMPL(DNETDSponsorsResult, init)
}

DNETDSponsorsResult *create_DNETDSponsorsResult_init() {
  J2OBJC_CREATE_IMPL(DNETDSponsorsResult, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DNETDSponsorsResult)

@implementation DNETDSponsorsResult_Sponsor

- (instancetype)initWithDNETDSponsorsResult:(DNETDSponsorsResult *)outer$
                                    withInt:(jint)spanCount
                               withNSString:(NSString *)sponsorName
                               withNSString:(NSString *)sponsorImage
                               withNSString:(NSString *)sponsorLink {
  DNETDSponsorsResult_Sponsor_initWithDNETDSponsorsResult_withInt_withNSString_withNSString_withNSString_(self, outer$, spanCount, sponsorName, sponsorImage, sponsorLink);
  return self;
}

- (jint)getSpanCount {
  return spanCount_;
}

- (NSString *)getSponsorName {
  return sponsorName_;
}

- (NSString *)getSponsorImage {
  return sponsorImage_;
}

- (NSString *)getSponsorLink {
  return sponsorLink_;
}

- (void)dealloc {
  RELEASE_(sponsorName_);
  RELEASE_(sponsorImage_);
  RELEASE_(sponsorLink_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDNETDSponsorsResult:withInt:withNSString:withNSString:withNSString:);
  methods[1].selector = @selector(getSpanCount);
  methods[2].selector = @selector(getSponsorName);
  methods[3].selector = @selector(getSponsorImage);
  methods[4].selector = @selector(getSponsorLink);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "spanCount_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "sponsorName_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "sponsorImage_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "sponsorLink_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILNSString;LNSString;LNSString;", "LDNETDSponsorsResult;" };
  static const J2ObjcClassInfo _DNETDSponsorsResult_Sponsor = { "Sponsor", "co.touchlab.droidconandroid.shared.network.dao", ptrTable, methods, fields, 7, 0x1, 5, 4, 1, -1, -1, -1, -1 };
  return &_DNETDSponsorsResult_Sponsor;
}

@end

void DNETDSponsorsResult_Sponsor_initWithDNETDSponsorsResult_withInt_withNSString_withNSString_withNSString_(DNETDSponsorsResult_Sponsor *self, DNETDSponsorsResult *outer$, jint spanCount, NSString *sponsorName, NSString *sponsorImage, NSString *sponsorLink) {
  NSObject_init(self);
  self->spanCount_ = spanCount;
  JreStrongAssign(&self->sponsorName_, sponsorName);
  JreStrongAssign(&self->sponsorImage_, sponsorImage);
  JreStrongAssign(&self->sponsorLink_, sponsorLink);
}

DNETDSponsorsResult_Sponsor *new_DNETDSponsorsResult_Sponsor_initWithDNETDSponsorsResult_withInt_withNSString_withNSString_withNSString_(DNETDSponsorsResult *outer$, jint spanCount, NSString *sponsorName, NSString *sponsorImage, NSString *sponsorLink) {
  J2OBJC_NEW_IMPL(DNETDSponsorsResult_Sponsor, initWithDNETDSponsorsResult_withInt_withNSString_withNSString_withNSString_, outer$, spanCount, sponsorName, sponsorImage, sponsorLink)
}

DNETDSponsorsResult_Sponsor *create_DNETDSponsorsResult_Sponsor_initWithDNETDSponsorsResult_withInt_withNSString_withNSString_withNSString_(DNETDSponsorsResult *outer$, jint spanCount, NSString *sponsorName, NSString *sponsorImage, NSString *sponsorLink) {
  J2OBJC_CREATE_IMPL(DNETDSponsorsResult_Sponsor, initWithDNETDSponsorsResult_withInt_withNSString_withNSString_withNSString_, outer$, spanCount, sponsorName, sponsorImage, sponsorLink)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DNETDSponsorsResult_Sponsor)
