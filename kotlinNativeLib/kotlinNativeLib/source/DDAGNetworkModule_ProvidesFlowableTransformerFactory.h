//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DDAGNetworkModule_ProvidesFlowableTransformerFactory")
#ifdef RESTRICT_DDAGNetworkModule_ProvidesFlowableTransformerFactory
#define INCLUDE_ALL_DDAGNetworkModule_ProvidesFlowableTransformerFactory 0
#else
#define INCLUDE_ALL_DDAGNetworkModule_ProvidesFlowableTransformerFactory 1
#endif
#undef RESTRICT_DDAGNetworkModule_ProvidesFlowableTransformerFactory

#if !defined (DDAGNetworkModule_ProvidesFlowableTransformerFactory_) && (INCLUDE_ALL_DDAGNetworkModule_ProvidesFlowableTransformerFactory || defined(INCLUDE_DDAGNetworkModule_ProvidesFlowableTransformerFactory))
#define DDAGNetworkModule_ProvidesFlowableTransformerFactory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DDAGNetworkModule;
@protocol IoReactivexFlowableTransformer;

@interface DDAGNetworkModule_ProvidesFlowableTransformerFactory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithDDAGNetworkModule:(DDAGNetworkModule *)module;

+ (id<DaggerInternalFactory>)createWithDDAGNetworkModule:(DDAGNetworkModule *)module;

- (id<IoReactivexFlowableTransformer>)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAGNetworkModule_ProvidesFlowableTransformerFactory)

FOUNDATION_EXPORT void DDAGNetworkModule_ProvidesFlowableTransformerFactory_initWithDDAGNetworkModule_(DDAGNetworkModule_ProvidesFlowableTransformerFactory *self, DDAGNetworkModule *module);

FOUNDATION_EXPORT DDAGNetworkModule_ProvidesFlowableTransformerFactory *new_DDAGNetworkModule_ProvidesFlowableTransformerFactory_initWithDDAGNetworkModule_(DDAGNetworkModule *module) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DDAGNetworkModule_ProvidesFlowableTransformerFactory *create_DDAGNetworkModule_ProvidesFlowableTransformerFactory_initWithDDAGNetworkModule_(DDAGNetworkModule *module);

FOUNDATION_EXPORT id<DaggerInternalFactory> DDAGNetworkModule_ProvidesFlowableTransformerFactory_createWithDDAGNetworkModule_(DDAGNetworkModule *module);

J2OBJC_TYPE_LITERAL_HEADER(DDAGNetworkModule_ProvidesFlowableTransformerFactory)

@compatibility_alias CoTouchlabDroidconandroidSharedDaggerNetworkModule_ProvidesFlowableTransformerFactory DDAGNetworkModule_ProvidesFlowableTransformerFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_DDAGNetworkModule_ProvidesFlowableTransformerFactory")
