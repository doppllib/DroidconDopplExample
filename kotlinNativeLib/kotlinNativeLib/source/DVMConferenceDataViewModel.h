//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DVMConferenceDataViewModel")
#ifdef RESTRICT_DVMConferenceDataViewModel
#define INCLUDE_ALL_DVMConferenceDataViewModel 0
#else
#define INCLUDE_ALL_DVMConferenceDataViewModel 1
#endif
#undef RESTRICT_DVMConferenceDataViewModel

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (DVMConferenceDataViewModel_) && (INCLUDE_ALL_DVMConferenceDataViewModel || defined(INCLUDE_DVMConferenceDataViewModel))
#define DVMConferenceDataViewModel_

#define RESTRICT_AndroidArchLifecycleViewModel 1
#define INCLUDE_AndroidArchLifecycleViewModel 1
#include "AndroidArchLifecycleViewModel.h"

@class DVMConferenceDataViewModel_AppScreens;
@class DVMConferenceDataViewModel_Factory;
@protocol DVMConferenceDataViewModel_Host;

@interface DVMConferenceDataViewModel : AndroidArchLifecycleViewModel

+ (jlong)DAY_IN_MILLIS;

#pragma mark Public

+ (DVMConferenceDataViewModel_Factory *)factoryWithBoolean:(jboolean)allEvents;

+ (DVMConferenceDataViewModel * __nonnull)forIosWithBoolean:(jboolean)allEvents;

- (DVMConferenceDataViewModel_AppScreens * __nonnull)goToScreen;

- (void)unwire;

- (void)wireWithDVMConferenceDataViewModel_Host:(id<DVMConferenceDataViewModel_Host>)host;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMConferenceDataViewModel)

inline jlong DVMConferenceDataViewModel_get_DAY_IN_MILLIS();
#define DVMConferenceDataViewModel_DAY_IN_MILLIS 86400000LL
J2OBJC_STATIC_FIELD_CONSTANT(DVMConferenceDataViewModel, DAY_IN_MILLIS, jlong)

FOUNDATION_EXPORT DVMConferenceDataViewModel_Factory *DVMConferenceDataViewModel_factoryWithBoolean_(jboolean allEvents);

FOUNDATION_EXPORT DVMConferenceDataViewModel *DVMConferenceDataViewModel_forIosWithBoolean_(jboolean allEvents);

J2OBJC_TYPE_LITERAL_HEADER(DVMConferenceDataViewModel)

@compatibility_alias CoTouchlabDroidconandroidSharedViewmodelConferenceDataViewModel DVMConferenceDataViewModel;

#endif

#if !defined (DVMConferenceDataViewModel_Host_) && (INCLUDE_ALL_DVMConferenceDataViewModel || defined(INCLUDE_DVMConferenceDataViewModel_Host))
#define DVMConferenceDataViewModel_Host_

@protocol JavaUtilList;

@protocol DVMConferenceDataViewModel_Host < JavaObject >

- (void)updateConferenceDatesWithJavaUtilList:(id<JavaUtilList>)dates;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMConferenceDataViewModel_Host)

J2OBJC_TYPE_LITERAL_HEADER(DVMConferenceDataViewModel_Host)

#endif

#if !defined (DVMConferenceDataViewModel_Factory_) && (INCLUDE_ALL_DVMConferenceDataViewModel || defined(INCLUDE_DVMConferenceDataViewModel_Factory))
#define DVMConferenceDataViewModel_Factory_

#define RESTRICT_AndroidArchLifecycleViewModelProvider 1
#define INCLUDE_AndroidArchLifecycleViewModelProvider_NewInstanceFactory 1
#include "AndroidArchLifecycleViewModelProvider.h"

@class AndroidArchLifecycleViewModel;
@class DDATAppPrefs;
@class IOSClass;

@interface DVMConferenceDataViewModel_Factory : AndroidArchLifecycleViewModelProvider_NewInstanceFactory {
 @public
  DDATAppPrefs *appPrefs_;
}

#pragma mark Public

- (AndroidArchLifecycleViewModel *)createWithIOSClass:(IOSClass *)modelClass;

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)allEvents;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMConferenceDataViewModel_Factory)

J2OBJC_FIELD_SETTER(DVMConferenceDataViewModel_Factory, appPrefs_, DDATAppPrefs *)

FOUNDATION_EXPORT void DVMConferenceDataViewModel_Factory_initWithBoolean_(DVMConferenceDataViewModel_Factory *self, jboolean allEvents);

FOUNDATION_EXPORT DVMConferenceDataViewModel_Factory *new_DVMConferenceDataViewModel_Factory_initWithBoolean_(jboolean allEvents) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DVMConferenceDataViewModel_Factory *create_DVMConferenceDataViewModel_Factory_initWithBoolean_(jboolean allEvents);

J2OBJC_TYPE_LITERAL_HEADER(DVMConferenceDataViewModel_Factory)

#endif

#if !defined (DVMConferenceDataViewModel_AppScreens_) && (INCLUDE_ALL_DVMConferenceDataViewModel || defined(INCLUDE_DVMConferenceDataViewModel_AppScreens))
#define DVMConferenceDataViewModel_AppScreens_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, DVMConferenceDataViewModel_AppScreens_Enum) {
  DVMConferenceDataViewModel_AppScreens_Enum_Welcome = 0,
  DVMConferenceDataViewModel_AppScreens_Enum_Schedule = 1,
};

@interface DVMConferenceDataViewModel_AppScreens : JavaLangEnum

+ (DVMConferenceDataViewModel_AppScreens * __nonnull)Welcome;

+ (DVMConferenceDataViewModel_AppScreens * __nonnull)Schedule;

#pragma mark Public

+ (DVMConferenceDataViewModel_AppScreens *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (DVMConferenceDataViewModel_AppScreens_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(DVMConferenceDataViewModel_AppScreens)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT DVMConferenceDataViewModel_AppScreens *DVMConferenceDataViewModel_AppScreens_values_[];

inline DVMConferenceDataViewModel_AppScreens *DVMConferenceDataViewModel_AppScreens_get_Welcome();
J2OBJC_ENUM_CONSTANT(DVMConferenceDataViewModel_AppScreens, Welcome)

inline DVMConferenceDataViewModel_AppScreens *DVMConferenceDataViewModel_AppScreens_get_Schedule();
J2OBJC_ENUM_CONSTANT(DVMConferenceDataViewModel_AppScreens, Schedule)

FOUNDATION_EXPORT IOSObjectArray *DVMConferenceDataViewModel_AppScreens_values();

FOUNDATION_EXPORT DVMConferenceDataViewModel_AppScreens *DVMConferenceDataViewModel_AppScreens_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT DVMConferenceDataViewModel_AppScreens *DVMConferenceDataViewModel_AppScreens_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(DVMConferenceDataViewModel_AppScreens)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_DVMConferenceDataViewModel")
