//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchCoreExecutorTaskExecutor.h"
#include "J2ObjC_source.h"
#include "java/lang/Runnable.h"

@implementation AndroidArchCoreExecutorTaskExecutor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidArchCoreExecutorTaskExecutor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)executeOnDiskIOWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)postToMainThreadWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)executeOnMainThreadWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  if ([self isMainThread]) {
    [((id<JavaLangRunnable>) nil_chk(runnable)) run];
  }
  else {
    [self postToMainThreadWithJavaLangRunnable:runnable];
  }
}

- (jboolean)isMainThread {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(executeOnDiskIOWithJavaLangRunnable:);
  methods[2].selector = @selector(postToMainThreadWithJavaLangRunnable:);
  methods[3].selector = @selector(executeOnMainThreadWithJavaLangRunnable:);
  methods[4].selector = @selector(isMainThread);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "executeOnDiskIO", "LJavaLangRunnable;", "postToMainThread", "executeOnMainThread" };
  static const J2ObjcClassInfo _AndroidArchCoreExecutorTaskExecutor = { "TaskExecutor", "android.arch.core.executor", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, -1, -1 };
  return &_AndroidArchCoreExecutorTaskExecutor;
}

@end

void AndroidArchCoreExecutorTaskExecutor_init(AndroidArchCoreExecutorTaskExecutor *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchCoreExecutorTaskExecutor)
