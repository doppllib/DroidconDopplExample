//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidArchCoreExecutorArchTaskExecutor")
#ifdef RESTRICT_AndroidArchCoreExecutorArchTaskExecutor
#define INCLUDE_ALL_AndroidArchCoreExecutorArchTaskExecutor 0
#else
#define INCLUDE_ALL_AndroidArchCoreExecutorArchTaskExecutor 1
#endif
#undef RESTRICT_AndroidArchCoreExecutorArchTaskExecutor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidArchCoreExecutorArchTaskExecutor_) && (INCLUDE_ALL_AndroidArchCoreExecutorArchTaskExecutor || defined(INCLUDE_AndroidArchCoreExecutorArchTaskExecutor))
#define AndroidArchCoreExecutorArchTaskExecutor_

#define RESTRICT_AndroidArchCoreExecutorTaskExecutor 1
#define INCLUDE_AndroidArchCoreExecutorTaskExecutor 1
#include "AndroidArchCoreExecutorTaskExecutor.h"

@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutor;

@interface AndroidArchCoreExecutorArchTaskExecutor : AndroidArchCoreExecutorTaskExecutor

#pragma mark Public

- (void)executeOnDiskIOWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

+ (AndroidArchCoreExecutorArchTaskExecutor *)getInstance;

+ (id<JavaUtilConcurrentExecutor> __nonnull)getIOThreadExecutor;

+ (id<JavaUtilConcurrentExecutor> __nonnull)getMainThreadExecutor;

- (jboolean)isMainThread;

- (void)postToMainThreadWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

- (void)setDelegateWithAndroidArchCoreExecutorTaskExecutor:(AndroidArchCoreExecutorTaskExecutor * __nullable)taskExecutor;

@end

J2OBJC_STATIC_INIT(AndroidArchCoreExecutorArchTaskExecutor)

FOUNDATION_EXPORT AndroidArchCoreExecutorArchTaskExecutor *AndroidArchCoreExecutorArchTaskExecutor_getInstance();

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutor> AndroidArchCoreExecutorArchTaskExecutor_getMainThreadExecutor();

FOUNDATION_EXPORT id<JavaUtilConcurrentExecutor> AndroidArchCoreExecutorArchTaskExecutor_getIOThreadExecutor();

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchCoreExecutorArchTaskExecutor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidArchCoreExecutorArchTaskExecutor")
