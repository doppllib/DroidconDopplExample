//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DUTStringUtils.h"
#include "J2ObjC_source.h"

@implementation DUTStringUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DUTStringUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)trimToEmptyWithNSString:(NSString *)s {
  return DUTStringUtils_trimToEmptyWithNSString_(s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(trimToEmptyWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "trimToEmpty", "LNSString;" };
  static const J2ObjcClassInfo _DUTStringUtils = { "StringUtils", "co.touchlab.droidconandroid.shared.utils", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_DUTStringUtils;
}

@end

void DUTStringUtils_init(DUTStringUtils *self) {
  NSObject_init(self);
}

DUTStringUtils *new_DUTStringUtils_init() {
  J2OBJC_NEW_IMPL(DUTStringUtils, init)
}

DUTStringUtils *create_DUTStringUtils_init() {
  J2OBJC_CREATE_IMPL(DUTStringUtils, init)
}

NSString *DUTStringUtils_trimToEmptyWithNSString_(NSString *s) {
  DUTStringUtils_initialize();
  if (s == nil) return @"";
  else return [s java_trim];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DUTStringUtils)
