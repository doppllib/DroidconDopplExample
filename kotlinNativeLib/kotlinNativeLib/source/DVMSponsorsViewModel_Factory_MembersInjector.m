//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DINTSponsorsInteractor.h"
#include "DVMSponsorsViewModel.h"
#include "DVMSponsorsViewModel_Factory_MembersInjector.h"
#include "DaggerMembersInjector.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "javax/inject/Provider.h"

@interface DVMSponsorsViewModel_Factory_MembersInjector () {
 @public
  id<JavaxInjectProvider> taskProvider_;
}

@end

J2OBJC_FIELD_SETTER(DVMSponsorsViewModel_Factory_MembersInjector, taskProvider_, id<JavaxInjectProvider>)

@implementation DVMSponsorsViewModel_Factory_MembersInjector

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider {
  DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(self, taskProvider);
  return self;
}

+ (id<DaggerMembersInjector>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider {
  return DVMSponsorsViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_(taskProvider);
}

- (void)injectMembersWithId:(DVMSponsorsViewModel_Factory *)instance {
  if (instance == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Cannot inject members into a null reference");
  }
  JreStrongAssign(&instance->task_, [((id<JavaxInjectProvider>) nil_chk(taskProvider_)) get]);
}

+ (void)injectTaskWithDVMSponsorsViewModel_Factory:(DVMSponsorsViewModel_Factory *)instance
                           withJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider {
  DVMSponsorsViewModel_Factory_MembersInjector_injectTaskWithDVMSponsorsViewModel_Factory_withJavaxInjectProvider_(instance, taskProvider);
}

- (void)dealloc {
  RELEASE_(taskProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LDaggerMembersInjector;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaxInjectProvider:);
  methods[1].selector = @selector(createWithJavaxInjectProvider:);
  methods[2].selector = @selector(injectMembersWithId:);
  methods[3].selector = @selector(injectTaskWithDVMSponsorsViewModel_Factory:withJavaxInjectProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "taskProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LJavaxInjectProvider;", "(Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/SponsorsInteractor;>;)V", "create", "(Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/SponsorsInteractor;>;)Ldagger/MembersInjector<Lco/touchlab/droidconandroid/shared/viewmodel/SponsorsViewModel$Factory;>;", "injectMembers", "LDVMSponsorsViewModel_Factory;", "injectTask", "LDVMSponsorsViewModel_Factory;LJavaxInjectProvider;", "(Lco/touchlab/droidconandroid/shared/viewmodel/SponsorsViewModel$Factory;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/SponsorsInteractor;>;)V", "Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/interactors/SponsorsInteractor;>;", "Ljava/lang/Object;Ldagger/MembersInjector<Lco/touchlab/droidconandroid/shared/viewmodel/SponsorsViewModel$Factory;>;" };
  static const J2ObjcClassInfo _DVMSponsorsViewModel_Factory_MembersInjector = { "SponsorsViewModel_Factory_MembersInjector", "co.touchlab.droidconandroid.shared.viewmodel", ptrTable, methods, fields, 7, 0x11, 4, 1, -1, -1, -1, 10, -1 };
  return &_DVMSponsorsViewModel_Factory_MembersInjector;
}

@end

void DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(DVMSponsorsViewModel_Factory_MembersInjector *self, id<JavaxInjectProvider> taskProvider) {
  NSObject_init(self);
  JreAssert(taskProvider != nil, @"co/touchlab/droidconandroid/shared/viewmodel/SponsorsViewModel_Factory_MembersInjector.java:17 condition failed: assert taskProvider != null;");
  JreStrongAssign(&self->taskProvider_, taskProvider);
}

DVMSponsorsViewModel_Factory_MembersInjector *new_DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider) {
  J2OBJC_NEW_IMPL(DVMSponsorsViewModel_Factory_MembersInjector, initWithJavaxInjectProvider_, taskProvider)
}

DVMSponsorsViewModel_Factory_MembersInjector *create_DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider) {
  J2OBJC_CREATE_IMPL(DVMSponsorsViewModel_Factory_MembersInjector, initWithJavaxInjectProvider_, taskProvider)
}

id<DaggerMembersInjector> DVMSponsorsViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider) {
  DVMSponsorsViewModel_Factory_MembersInjector_initialize();
  return create_DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(taskProvider);
}

void DVMSponsorsViewModel_Factory_MembersInjector_injectTaskWithDVMSponsorsViewModel_Factory_withJavaxInjectProvider_(DVMSponsorsViewModel_Factory *instance, id<JavaxInjectProvider> taskProvider) {
  DVMSponsorsViewModel_Factory_MembersInjector_initialize();
  JreStrongAssign(&((DVMSponsorsViewModel_Factory *) nil_chk(instance))->task_, [((id<JavaxInjectProvider>) nil_chk(taskProvider)) get]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DVMSponsorsViewModel_Factory_MembersInjector)
