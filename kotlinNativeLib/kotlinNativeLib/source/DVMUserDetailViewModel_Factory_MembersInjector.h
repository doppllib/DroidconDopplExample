//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DVMUserDetailViewModel_Factory_MembersInjector")
#ifdef RESTRICT_DVMUserDetailViewModel_Factory_MembersInjector
#define INCLUDE_ALL_DVMUserDetailViewModel_Factory_MembersInjector 0
#else
#define INCLUDE_ALL_DVMUserDetailViewModel_Factory_MembersInjector 1
#endif
#undef RESTRICT_DVMUserDetailViewModel_Factory_MembersInjector

#if !defined (DVMUserDetailViewModel_Factory_MembersInjector_) && (INCLUDE_ALL_DVMUserDetailViewModel_Factory_MembersInjector || defined(INCLUDE_DVMUserDetailViewModel_Factory_MembersInjector))
#define DVMUserDetailViewModel_Factory_MembersInjector_

#define RESTRICT_DaggerMembersInjector 1
#define INCLUDE_DaggerMembersInjector 1
#include "DaggerMembersInjector.h"

@class DVMUserDetailViewModel_Factory;
@protocol JavaxInjectProvider;

@interface DVMUserDetailViewModel_Factory_MembersInjector : NSObject < DaggerMembersInjector >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)transformerProvider;

+ (id<DaggerMembersInjector>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)transformerProvider;

- (void)injectMembersWithId:(DVMUserDetailViewModel_Factory *)instance;

+ (void)injectTaskWithDVMUserDetailViewModel_Factory:(DVMUserDetailViewModel_Factory *)instance
                             withJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider;

+ (void)injectTransformerWithDVMUserDetailViewModel_Factory:(DVMUserDetailViewModel_Factory *)instance
                                    withJavaxInjectProvider:(id<JavaxInjectProvider>)transformerProvider;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMUserDetailViewModel_Factory_MembersInjector)

FOUNDATION_EXPORT void DVMUserDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(DVMUserDetailViewModel_Factory_MembersInjector *self, id<JavaxInjectProvider> taskProvider, id<JavaxInjectProvider> transformerProvider);

FOUNDATION_EXPORT DVMUserDetailViewModel_Factory_MembersInjector *new_DVMUserDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider, id<JavaxInjectProvider> transformerProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DVMUserDetailViewModel_Factory_MembersInjector *create_DVMUserDetailViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider, id<JavaxInjectProvider> transformerProvider);

FOUNDATION_EXPORT id<DaggerMembersInjector> DVMUserDetailViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider, id<JavaxInjectProvider> transformerProvider);

FOUNDATION_EXPORT void DVMUserDetailViewModel_Factory_MembersInjector_injectTaskWithDVMUserDetailViewModel_Factory_withJavaxInjectProvider_(DVMUserDetailViewModel_Factory *instance, id<JavaxInjectProvider> taskProvider);

FOUNDATION_EXPORT void DVMUserDetailViewModel_Factory_MembersInjector_injectTransformerWithDVMUserDetailViewModel_Factory_withJavaxInjectProvider_(DVMUserDetailViewModel_Factory *instance, id<JavaxInjectProvider> transformerProvider);

J2OBJC_TYPE_LITERAL_HEADER(DVMUserDetailViewModel_Factory_MembersInjector)

@compatibility_alias CoTouchlabDroidconandroidSharedViewmodelUserDetailViewModel_Factory_MembersInjector DVMUserDetailViewModel_Factory_MembersInjector;

#endif

#pragma pop_macro("INCLUDE_ALL_DVMUserDetailViewModel_Factory_MembersInjector")
