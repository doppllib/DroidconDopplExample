//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchLifecycleClassesInfoCache.h"
#include "AndroidArchLifecycleLifecycle.h"
#include "AndroidArchLifecycleLifecycleOwner.h"
#include "AndroidArchLifecycleReflectiveGenericLifecycleObserver.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"

@interface AndroidArchLifecycleReflectiveGenericLifecycleObserver () {
 @public
  id mWrapped_;
  AndroidArchLifecycleClassesInfoCache_CallbackInfo *mInfo_;
}

@end

J2OBJC_FIELD_SETTER(AndroidArchLifecycleReflectiveGenericLifecycleObserver, mWrapped_, id)
J2OBJC_FIELD_SETTER(AndroidArchLifecycleReflectiveGenericLifecycleObserver, mInfo_, AndroidArchLifecycleClassesInfoCache_CallbackInfo *)

@implementation AndroidArchLifecycleReflectiveGenericLifecycleObserver

- (instancetype)initWithId:(id)wrapped {
  AndroidArchLifecycleReflectiveGenericLifecycleObserver_initWithId_(self, wrapped);
  return self;
}

- (void)onStateChangedWithAndroidArchLifecycleLifecycleOwner:(id<AndroidArchLifecycleLifecycleOwner>)source
                     withAndroidArchLifecycleLifecycle_Event:(AndroidArchLifecycleLifecycle_Event *)event {
  [((AndroidArchLifecycleClassesInfoCache_CallbackInfo *) nil_chk(mInfo_)) invokeCallbacksWithAndroidArchLifecycleLifecycleOwner:source withAndroidArchLifecycleLifecycle_Event:event withId:mWrapped_];
}

- (void)dealloc {
  RELEASE_(mWrapped_);
  RELEASE_(mInfo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(onStateChangedWithAndroidArchLifecycleLifecycleOwner:withAndroidArchLifecycleLifecycle_Event:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mWrapped_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mInfo_", "LAndroidArchLifecycleClassesInfoCache_CallbackInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "onStateChanged", "LAndroidArchLifecycleLifecycleOwner;LAndroidArchLifecycleLifecycle_Event;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleReflectiveGenericLifecycleObserver = { "ReflectiveGenericLifecycleObserver", "android.arch.lifecycle", ptrTable, methods, fields, 7, 0x0, 2, 2, -1, -1, -1, -1, -1 };
  return &_AndroidArchLifecycleReflectiveGenericLifecycleObserver;
}

@end

void AndroidArchLifecycleReflectiveGenericLifecycleObserver_initWithId_(AndroidArchLifecycleReflectiveGenericLifecycleObserver *self, id wrapped) {
  NSObject_init(self);
  JreStrongAssign(&self->mWrapped_, wrapped);
  JreStrongAssign(&self->mInfo_, [((AndroidArchLifecycleClassesInfoCache *) nil_chk(JreLoadStatic(AndroidArchLifecycleClassesInfoCache, sInstance))) getInfoWithIOSClass:[nil_chk(self->mWrapped_) java_getClass]]);
}

AndroidArchLifecycleReflectiveGenericLifecycleObserver *new_AndroidArchLifecycleReflectiveGenericLifecycleObserver_initWithId_(id wrapped) {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleReflectiveGenericLifecycleObserver, initWithId_, wrapped)
}

AndroidArchLifecycleReflectiveGenericLifecycleObserver *create_AndroidArchLifecycleReflectiveGenericLifecycleObserver_initWithId_(id wrapped) {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleReflectiveGenericLifecycleObserver, initWithId_, wrapped)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchLifecycleReflectiveGenericLifecycleObserver)
