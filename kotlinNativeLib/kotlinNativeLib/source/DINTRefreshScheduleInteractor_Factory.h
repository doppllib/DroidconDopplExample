//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DINTRefreshScheduleInteractor_Factory")
#ifdef RESTRICT_DINTRefreshScheduleInteractor_Factory
#define INCLUDE_ALL_DINTRefreshScheduleInteractor_Factory 0
#else
#define INCLUDE_ALL_DINTRefreshScheduleInteractor_Factory 1
#endif
#undef RESTRICT_DINTRefreshScheduleInteractor_Factory

#if !defined (DINTRefreshScheduleInteractor_Factory_) && (INCLUDE_ALL_DINTRefreshScheduleInteractor_Factory || defined(INCLUDE_DINTRefreshScheduleInteractor_Factory))
#define DINTRefreshScheduleInteractor_Factory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DINTRefreshScheduleInteractor;
@protocol JavaxInjectProvider;

@interface DINTRefreshScheduleInteractor_Factory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)conferenceDataHelperProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)droidconDatabaseProvider;

+ (id<DaggerInternalFactory>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)conferenceDataHelperProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)droidconDatabaseProvider;

- (DINTRefreshScheduleInteractor *)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DINTRefreshScheduleInteractor_Factory)

FOUNDATION_EXPORT void DINTRefreshScheduleInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(DINTRefreshScheduleInteractor_Factory *self, id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> droidconDatabaseProvider);

FOUNDATION_EXPORT DINTRefreshScheduleInteractor_Factory *new_DINTRefreshScheduleInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> droidconDatabaseProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DINTRefreshScheduleInteractor_Factory *create_DINTRefreshScheduleInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> droidconDatabaseProvider);

FOUNDATION_EXPORT id<DaggerInternalFactory> DINTRefreshScheduleInteractor_Factory_createWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> droidconDatabaseProvider);

J2OBJC_TYPE_LITERAL_HEADER(DINTRefreshScheduleInteractor_Factory)

@compatibility_alias CoTouchlabDroidconandroidSharedInteractorsRefreshScheduleInteractor_Factory DINTRefreshScheduleInteractor_Factory;

#endif

#pragma pop_macro("INCLUDE_ALL_DINTRefreshScheduleInteractor_Factory")
