//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DDATAppPrefs.h"
#include "DDATDatabaseHelper.h"
#include "DINTRsvpInteractor.h"
#include "DINTRsvpInteractor_Factory.h"
#include "DNETRsvpRequest.h"
#include "DaggerInternalFactory.h"
#include "J2ObjC_source.h"
#include "javax/inject/Provider.h"

@interface DINTRsvpInteractor_Factory () {
 @public
  id<JavaxInjectProvider> helperProvider_;
  id<JavaxInjectProvider> requestProvider_;
  id<JavaxInjectProvider> appPrefsProvider_;
}

@end

J2OBJC_FIELD_SETTER(DINTRsvpInteractor_Factory, helperProvider_, id<JavaxInjectProvider>)
J2OBJC_FIELD_SETTER(DINTRsvpInteractor_Factory, requestProvider_, id<JavaxInjectProvider>)
J2OBJC_FIELD_SETTER(DINTRsvpInteractor_Factory, appPrefsProvider_, id<JavaxInjectProvider>)

@implementation DINTRsvpInteractor_Factory

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)helperProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider {
  DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(self, helperProvider, requestProvider, appPrefsProvider);
  return self;
}

- (DINTRsvpInteractor *)get {
  return create_DINTRsvpInteractor_initWithDDATDatabaseHelper_withDNETRsvpRequest_withDDATAppPrefs_([((id<JavaxInjectProvider>) nil_chk(helperProvider_)) get], [((id<JavaxInjectProvider>) nil_chk(requestProvider_)) get], [((id<JavaxInjectProvider>) nil_chk(appPrefsProvider_)) get]);
}

+ (id<DaggerInternalFactory>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)helperProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider {
  return DINTRsvpInteractor_Factory_createWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(helperProvider, requestProvider, appPrefsProvider);
}

- (void)dealloc {
  RELEASE_(helperProvider_);
  RELEASE_(requestProvider_);
  RELEASE_(appPrefsProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LDINTRsvpInteractor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDaggerInternalFactory;", 0x9, 2, 0, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaxInjectProvider:withJavaxInjectProvider:withJavaxInjectProvider:);
  methods[1].selector = @selector(get);
  methods[2].selector = @selector(createWithJavaxInjectProvider:withJavaxInjectProvider:withJavaxInjectProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helperProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "requestProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "appPrefsProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LJavaxInjectProvider;LJavaxInjectProvider;LJavaxInjectProvider;", "(Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/data/DatabaseHelper;>;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/network/RsvpRequest;>;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/data/AppPrefs;>;)V", "create", "(Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/data/DatabaseHelper;>;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/network/RsvpRequest;>;Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/data/AppPrefs;>;)Ldagger/internal/Factory<Lco/touchlab/droidconandroid/shared/interactors/RsvpInteractor;>;", "Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/data/DatabaseHelper;>;", "Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/network/RsvpRequest;>;", "Ljavax/inject/Provider<Lco/touchlab/droidconandroid/shared/data/AppPrefs;>;", "Ljava/lang/Object;Ldagger/internal/Factory<Lco/touchlab/droidconandroid/shared/interactors/RsvpInteractor;>;" };
  static const J2ObjcClassInfo _DINTRsvpInteractor_Factory = { "RsvpInteractor_Factory", "co.touchlab.droidconandroid.shared.interactors", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, -1, -1, 7, -1 };
  return &_DINTRsvpInteractor_Factory;
}

@end

void DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(DINTRsvpInteractor_Factory *self, id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider) {
  NSObject_init(self);
  JreAssert(helperProvider != nil, @"co/touchlab/droidconandroid/shared/interactors/RsvpInteractor_Factory.java:25 condition failed: assert helperProvider != null;");
  JreStrongAssign(&self->helperProvider_, helperProvider);
  JreAssert(requestProvider != nil, @"co/touchlab/droidconandroid/shared/interactors/RsvpInteractor_Factory.java:27 condition failed: assert requestProvider != null;");
  JreStrongAssign(&self->requestProvider_, requestProvider);
  JreAssert(appPrefsProvider != nil, @"co/touchlab/droidconandroid/shared/interactors/RsvpInteractor_Factory.java:29 condition failed: assert appPrefsProvider != null;");
  JreStrongAssign(&self->appPrefsProvider_, appPrefsProvider);
}

DINTRsvpInteractor_Factory *new_DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider) {
  J2OBJC_NEW_IMPL(DINTRsvpInteractor_Factory, initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_, helperProvider, requestProvider, appPrefsProvider)
}

DINTRsvpInteractor_Factory *create_DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider) {
  J2OBJC_CREATE_IMPL(DINTRsvpInteractor_Factory, initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_, helperProvider, requestProvider, appPrefsProvider)
}

id<DaggerInternalFactory> DINTRsvpInteractor_Factory_createWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider) {
  DINTRsvpInteractor_Factory_initialize();
  return create_DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(helperProvider, requestProvider, appPrefsProvider);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DINTRsvpInteractor_Factory)
