//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchPersistenceRoomRoomMasterTable.h"
#include "J2ObjC_source.h"

inline NSString *AndroidArchPersistenceRoomRoomMasterTable_get_COLUMN_ID();
static NSString *AndroidArchPersistenceRoomRoomMasterTable_COLUMN_ID = @"id";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidArchPersistenceRoomRoomMasterTable, COLUMN_ID, NSString *)

inline NSString *AndroidArchPersistenceRoomRoomMasterTable_get_COLUMN_IDENTITY_HASH();
static NSString *AndroidArchPersistenceRoomRoomMasterTable_COLUMN_IDENTITY_HASH = @"identity_hash";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidArchPersistenceRoomRoomMasterTable, COLUMN_IDENTITY_HASH, NSString *)

NSString *AndroidArchPersistenceRoomRoomMasterTable_TABLE_NAME = @"room_master_table";
NSString *AndroidArchPersistenceRoomRoomMasterTable_NAME = @"room_master_table";
NSString *AndroidArchPersistenceRoomRoomMasterTable_DEFAULT_ID = @"42";
NSString *AndroidArchPersistenceRoomRoomMasterTable_CREATE_QUERY = @"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)";
NSString *AndroidArchPersistenceRoomRoomMasterTable_READ_QUERY = @"SELECT identity_hash FROM room_master_table WHERE id = 42 LIMIT 1";

@implementation AndroidArchPersistenceRoomRoomMasterTable

+ (NSString *)TABLE_NAME {
  return AndroidArchPersistenceRoomRoomMasterTable_TABLE_NAME;
}

+ (NSString *)NAME {
  return AndroidArchPersistenceRoomRoomMasterTable_NAME;
}

+ (NSString *)DEFAULT_ID {
  return AndroidArchPersistenceRoomRoomMasterTable_DEFAULT_ID;
}

+ (NSString *)CREATE_QUERY {
  return AndroidArchPersistenceRoomRoomMasterTable_CREATE_QUERY;
}

+ (NSString *)READ_QUERY {
  return AndroidArchPersistenceRoomRoomMasterTable_READ_QUERY;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidArchPersistenceRoomRoomMasterTable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)createInsertQueryWithNSString:(NSString *)hash_ {
  return AndroidArchPersistenceRoomRoomMasterTable_createInsertQueryWithNSString_(hash_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createInsertQueryWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TABLE_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "COLUMN_ID", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "COLUMN_IDENTITY_HASH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "DEFAULT_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "CREATE_QUERY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "READ_QUERY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "createInsertQuery", "LNSString;", &AndroidArchPersistenceRoomRoomMasterTable_TABLE_NAME, &AndroidArchPersistenceRoomRoomMasterTable_NAME, &AndroidArchPersistenceRoomRoomMasterTable_COLUMN_ID, &AndroidArchPersistenceRoomRoomMasterTable_COLUMN_IDENTITY_HASH, &AndroidArchPersistenceRoomRoomMasterTable_DEFAULT_ID, &AndroidArchPersistenceRoomRoomMasterTable_CREATE_QUERY, &AndroidArchPersistenceRoomRoomMasterTable_READ_QUERY };
  static const J2ObjcClassInfo _AndroidArchPersistenceRoomRoomMasterTable = { "RoomMasterTable", "android.arch.persistence.room", ptrTable, methods, fields, 7, 0x1, 2, 7, -1, -1, -1, -1, -1 };
  return &_AndroidArchPersistenceRoomRoomMasterTable;
}

@end

void AndroidArchPersistenceRoomRoomMasterTable_init(AndroidArchPersistenceRoomRoomMasterTable *self) {
  NSObject_init(self);
}

AndroidArchPersistenceRoomRoomMasterTable *new_AndroidArchPersistenceRoomRoomMasterTable_init() {
  J2OBJC_NEW_IMPL(AndroidArchPersistenceRoomRoomMasterTable, init)
}

AndroidArchPersistenceRoomRoomMasterTable *create_AndroidArchPersistenceRoomRoomMasterTable_init() {
  J2OBJC_CREATE_IMPL(AndroidArchPersistenceRoomRoomMasterTable, init)
}

NSString *AndroidArchPersistenceRoomRoomMasterTable_createInsertQueryWithNSString_(NSString *hash_) {
  AndroidArchPersistenceRoomRoomMasterTable_initialize();
  return JreStrcat("$$$$C$$$$$$", @"INSERT OR REPLACE INTO ", AndroidArchPersistenceRoomRoomMasterTable_TABLE_NAME, @" (", AndroidArchPersistenceRoomRoomMasterTable_COLUMN_ID, ',', AndroidArchPersistenceRoomRoomMasterTable_COLUMN_IDENTITY_HASH, @") VALUES(", AndroidArchPersistenceRoomRoomMasterTable_DEFAULT_ID, @", \"", hash_, @"\")");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchPersistenceRoomRoomMasterTable)
