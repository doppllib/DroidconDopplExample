//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DVMConferenceDataViewModel_Factory_MembersInjector")
#ifdef RESTRICT_DVMConferenceDataViewModel_Factory_MembersInjector
#define INCLUDE_ALL_DVMConferenceDataViewModel_Factory_MembersInjector 0
#else
#define INCLUDE_ALL_DVMConferenceDataViewModel_Factory_MembersInjector 1
#endif
#undef RESTRICT_DVMConferenceDataViewModel_Factory_MembersInjector

#if !defined (DVMConferenceDataViewModel_Factory_MembersInjector_) && (INCLUDE_ALL_DVMConferenceDataViewModel_Factory_MembersInjector || defined(INCLUDE_DVMConferenceDataViewModel_Factory_MembersInjector))
#define DVMConferenceDataViewModel_Factory_MembersInjector_

#define RESTRICT_DaggerMembersInjector 1
#define INCLUDE_DaggerMembersInjector 1
#include "DaggerMembersInjector.h"

@class DVMConferenceDataViewModel_Factory;
@protocol JavaxInjectProvider;

@interface DVMConferenceDataViewModel_Factory_MembersInjector : NSObject < DaggerMembersInjector >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

+ (id<DaggerMembersInjector>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

+ (void)injectAppPrefsWithDVMConferenceDataViewModel_Factory:(DVMConferenceDataViewModel_Factory *)instance
                                     withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

- (void)injectMembersWithId:(DVMConferenceDataViewModel_Factory *)instance;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMConferenceDataViewModel_Factory_MembersInjector)

FOUNDATION_EXPORT void DVMConferenceDataViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(DVMConferenceDataViewModel_Factory_MembersInjector *self, id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT DVMConferenceDataViewModel_Factory_MembersInjector *new_DVMConferenceDataViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(id<JavaxInjectProvider> appPrefsProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DVMConferenceDataViewModel_Factory_MembersInjector *create_DVMConferenceDataViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT id<DaggerMembersInjector> DVMConferenceDataViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_(id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT void DVMConferenceDataViewModel_Factory_MembersInjector_injectAppPrefsWithDVMConferenceDataViewModel_Factory_withJavaxInjectProvider_(DVMConferenceDataViewModel_Factory *instance, id<JavaxInjectProvider> appPrefsProvider);

J2OBJC_TYPE_LITERAL_HEADER(DVMConferenceDataViewModel_Factory_MembersInjector)

@compatibility_alias CoTouchlabDroidconandroidSharedViewmodelConferenceDataViewModel_Factory_MembersInjector DVMConferenceDataViewModel_Factory_MembersInjector;

#endif

#pragma pop_macro("INCLUDE_ALL_DVMConferenceDataViewModel_Factory_MembersInjector")
