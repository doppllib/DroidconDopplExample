//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchPersistenceDbSupportSQLiteStatement.h"
#include "AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter.h"
#include "AndroidArchPersistenceRoomEntityInsertionAdapter.h"
#include "AndroidArchPersistenceRoomRoomDatabase.h"
#include "AndroidArchPersistenceRoomRoomSQLiteQuery.h"
#include "AndroidDatabaseCursor.h"
#include "DDAOEventDao_Impl.h"
#include "DDATEvent.h"
#include "DDATVenue.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface DDAOEventDao_Impl () {
 @public
  AndroidArchPersistenceRoomRoomDatabase *__db_;
  AndroidArchPersistenceRoomEntityInsertionAdapter *__insertionAdapterOfEvent_;
  AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *__deletionAdapterOfEvent_;
  AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *__updateAdapterOfEvent_;
}

@end

J2OBJC_FIELD_SETTER(DDAOEventDao_Impl, __db_, AndroidArchPersistenceRoomRoomDatabase *)
J2OBJC_FIELD_SETTER(DDAOEventDao_Impl, __insertionAdapterOfEvent_, AndroidArchPersistenceRoomEntityInsertionAdapter *)
J2OBJC_FIELD_SETTER(DDAOEventDao_Impl, __deletionAdapterOfEvent_, AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *)
J2OBJC_FIELD_SETTER(DDAOEventDao_Impl, __updateAdapterOfEvent_, AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *)

@interface DDAOEventDao_Impl_1 : AndroidArchPersistenceRoomEntityInsertionAdapter

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0;

- (NSString *)createQuery;

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEvent *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAOEventDao_Impl_1)

__attribute__((unused)) static void DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl_1 *self, AndroidArchPersistenceRoomRoomDatabase *x0);

__attribute__((unused)) static DDAOEventDao_Impl_1 *new_DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDAOEventDao_Impl_1 *create_DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0);

@interface DDAOEventDao_Impl_2 : AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0;

- (NSString *)createQuery;

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEvent *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAOEventDao_Impl_2)

__attribute__((unused)) static void DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl_2 *self, AndroidArchPersistenceRoomRoomDatabase *x0);

__attribute__((unused)) static DDAOEventDao_Impl_2 *new_DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDAOEventDao_Impl_2 *create_DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0);

@interface DDAOEventDao_Impl_3 : AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0;

- (NSString *)createQuery;

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEvent *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAOEventDao_Impl_3)

__attribute__((unused)) static void DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl_3 *self, AndroidArchPersistenceRoomRoomDatabase *x0);

__attribute__((unused)) static DDAOEventDao_Impl_3 *new_DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDAOEventDao_Impl_3 *create_DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0);

@implementation DDAOEventDao_Impl

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)__db {
  DDAOEventDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(self, __db);
  return self;
}

- (void)createOrUpdateWithDDATEvent:(DDATEvent *)event {
  [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) beginTransaction];
  @try {
    [((AndroidArchPersistenceRoomEntityInsertionAdapter *) nil_chk(__insertionAdapterOfEvent_)) insertWithId:event];
    [__db_ setTransactionSuccessful];
  }
  @finally {
    [__db_ endTransaction];
  }
}

- (void)deleteAllWithJavaUtilList:(id<JavaUtilList>)events {
  [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) beginTransaction];
  @try {
    [((AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *) nil_chk(__deletionAdapterOfEvent_)) handleMultipleWithJavaLangIterable:events];
    [__db_ setTransactionSuccessful];
  }
  @finally {
    [__db_ endTransaction];
  }
}

- (void)updateEventWithDDATEvent:(DDATEvent *)event {
  [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) beginTransaction];
  @try {
    [((AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *) nil_chk(__updateAdapterOfEvent_)) handleWithId:event];
    [__db_ setTransactionSuccessful];
  }
  @finally {
    [__db_ endTransaction];
  }
}

- (DDATEvent *)getEventForIdWithLong:(jlong)eventId {
  NSString *_sql = @"SELECT * FROM Event WHERE id = ?";
  AndroidArchPersistenceRoomRoomSQLiteQuery *_statement = AndroidArchPersistenceRoomRoomSQLiteQuery_acquireWithNSString_withInt_(_sql, 1);
  jint _argIndex = 1;
  [((AndroidArchPersistenceRoomRoomSQLiteQuery *) nil_chk(_statement)) bindLongWithInt:_argIndex withLong:eventId];
  id<AndroidDatabaseCursor> _cursor = [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) queryWithAndroidArchPersistenceDbSupportSQLiteQuery:_statement];
  @try {
    jint _cursorIndexOfId = [((id<AndroidDatabaseCursor>) nil_chk(_cursor)) getColumnIndexOrThrowWithNSString:@"id"];
    jint _cursorIndexOfName = [_cursor getColumnIndexOrThrowWithNSString:@"name"];
    jint _cursorIndexOfDescription = [_cursor getColumnIndexOrThrowWithNSString:@"description"];
    jint _cursorIndexOfCategory = [_cursor getColumnIndexOrThrowWithNSString:@"category"];
    jint _cursorIndexOfStartDateLong = [_cursor getColumnIndexOrThrowWithNSString:@"startDateLong"];
    jint _cursorIndexOfEndDateLong = [_cursor getColumnIndexOrThrowWithNSString:@"endDateLong"];
    jint _cursorIndexOfPublicEvent = [_cursor getColumnIndexOrThrowWithNSString:@"publicEvent"];
    jint _cursorIndexOfRsvpLimit = [_cursor getColumnIndexOrThrowWithNSString:@"rsvpLimit"];
    jint _cursorIndexOfRsvpCount = [_cursor getColumnIndexOrThrowWithNSString:@"rsvpCount"];
    jint _cursorIndexOfRsvpUuid = [_cursor getColumnIndexOrThrowWithNSString:@"rsvpUuid"];
    jint _cursorIndexOfVote = [_cursor getColumnIndexOrThrowWithNSString:@"vote"];
    jint _cursorIndexOfStartDate = [_cursor getColumnIndexOrThrowWithNSString:@"startDate"];
    jint _cursorIndexOfEndDate = [_cursor getColumnIndexOrThrowWithNSString:@"endDate"];
    jint _cursorIndexOfName_1 = [_cursor getColumnIndexOrThrowWithNSString:@"venue_name"];
    jint _cursorIndexOfDescription_1 = [_cursor getColumnIndexOrThrowWithNSString:@"venue_description"];
    DDATEvent *_result;
    if ([_cursor moveToFirst]) {
      DDATVenue *_tmpVenue;
      if (!([_cursor isNullWithInt:_cursorIndexOfName_1] && [_cursor isNullWithInt:_cursorIndexOfDescription_1])) {
        _tmpVenue = create_DDATVenue_init();
        JreStrongAssign(&_tmpVenue->name_, [_cursor getStringWithInt:_cursorIndexOfName_1]);
        JreStrongAssign(&_tmpVenue->description__, [_cursor getStringWithInt:_cursorIndexOfDescription_1]);
      }
      else {
        _tmpVenue = nil;
      }
      _result = create_DDATEvent_init();
      _result->id__ = [_cursor getLongWithInt:_cursorIndexOfId];
      JreStrongAssign(&_result->name_, [_cursor getStringWithInt:_cursorIndexOfName]);
      JreStrongAssign(&_result->description__, [_cursor getStringWithInt:_cursorIndexOfDescription]);
      JreStrongAssign(&_result->category_, [_cursor getStringWithInt:_cursorIndexOfCategory]);
      if ([_cursor isNullWithInt:_cursorIndexOfStartDateLong]) {
        JreStrongAssign(&_result->startDateLong_, nil);
      }
      else {
        JreStrongAssign(&_result->startDateLong_, JavaLangLong_valueOfWithLong_([_cursor getLongWithInt:_cursorIndexOfStartDateLong]));
      }
      if ([_cursor isNullWithInt:_cursorIndexOfEndDateLong]) {
        JreStrongAssign(&_result->endDateLong_, nil);
      }
      else {
        JreStrongAssign(&_result->endDateLong_, JavaLangLong_valueOfWithLong_([_cursor getLongWithInt:_cursorIndexOfEndDateLong]));
      }
      jint _tmp;
      _tmp = [_cursor getIntWithInt:_cursorIndexOfPublicEvent];
      _result->publicEvent_ = (_tmp != 0);
      if ([_cursor isNullWithInt:_cursorIndexOfRsvpLimit]) {
        JreStrongAssign(&_result->rsvpLimit_, nil);
      }
      else {
        JreStrongAssign(&_result->rsvpLimit_, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfRsvpLimit]));
      }
      if ([_cursor isNullWithInt:_cursorIndexOfRsvpCount]) {
        JreStrongAssign(&_result->rsvpCount_, nil);
      }
      else {
        JreStrongAssign(&_result->rsvpCount_, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfRsvpCount]));
      }
      JreStrongAssign(&_result->rsvpUuid_, [_cursor getStringWithInt:_cursorIndexOfRsvpUuid]);
      if ([_cursor isNullWithInt:_cursorIndexOfVote]) {
        JreStrongAssign(&_result->vote_, nil);
      }
      else {
        JreStrongAssign(&_result->vote_, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfVote]));
      }
      JreStrongAssign(&_result->startDate_, [_cursor getStringWithInt:_cursorIndexOfStartDate]);
      JreStrongAssign(&_result->endDate_, [_cursor getStringWithInt:_cursorIndexOfEndDate]);
      JreStrongAssign(&_result->venue_, _tmpVenue);
    }
    else {
      _result = nil;
    }
    return _result;
  }
  @finally {
    [_cursor close];
    [_statement release__];
  }
}

- (NSString *)getRsvpUuidForEventWithIdWithLong:(jlong)eventId {
  NSString *_sql = @"SELECT rsvpUuid FROM Event WHERE id = ?";
  AndroidArchPersistenceRoomRoomSQLiteQuery *_statement = AndroidArchPersistenceRoomRoomSQLiteQuery_acquireWithNSString_withInt_(_sql, 1);
  jint _argIndex = 1;
  [((AndroidArchPersistenceRoomRoomSQLiteQuery *) nil_chk(_statement)) bindLongWithInt:_argIndex withLong:eventId];
  id<AndroidDatabaseCursor> _cursor = [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) queryWithAndroidArchPersistenceDbSupportSQLiteQuery:_statement];
  @try {
    NSString *_result;
    if ([((id<AndroidDatabaseCursor>) nil_chk(_cursor)) moveToFirst]) {
      _result = [_cursor getStringWithInt:0];
    }
    else {
      _result = nil;
    }
    return _result;
  }
  @finally {
    [_cursor close];
    [_statement release__];
  }
}

- (id<JavaUtilList>)getEvents {
  NSString *_sql = @"SELECT * FROM Event";
  AndroidArchPersistenceRoomRoomSQLiteQuery *_statement = AndroidArchPersistenceRoomRoomSQLiteQuery_acquireWithNSString_withInt_(_sql, 0);
  id<AndroidDatabaseCursor> _cursor = [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) queryWithAndroidArchPersistenceDbSupportSQLiteQuery:_statement];
  @try {
    jint _cursorIndexOfId = [((id<AndroidDatabaseCursor>) nil_chk(_cursor)) getColumnIndexOrThrowWithNSString:@"id"];
    jint _cursorIndexOfName = [_cursor getColumnIndexOrThrowWithNSString:@"name"];
    jint _cursorIndexOfDescription = [_cursor getColumnIndexOrThrowWithNSString:@"description"];
    jint _cursorIndexOfCategory = [_cursor getColumnIndexOrThrowWithNSString:@"category"];
    jint _cursorIndexOfStartDateLong = [_cursor getColumnIndexOrThrowWithNSString:@"startDateLong"];
    jint _cursorIndexOfEndDateLong = [_cursor getColumnIndexOrThrowWithNSString:@"endDateLong"];
    jint _cursorIndexOfPublicEvent = [_cursor getColumnIndexOrThrowWithNSString:@"publicEvent"];
    jint _cursorIndexOfRsvpLimit = [_cursor getColumnIndexOrThrowWithNSString:@"rsvpLimit"];
    jint _cursorIndexOfRsvpCount = [_cursor getColumnIndexOrThrowWithNSString:@"rsvpCount"];
    jint _cursorIndexOfRsvpUuid = [_cursor getColumnIndexOrThrowWithNSString:@"rsvpUuid"];
    jint _cursorIndexOfVote = [_cursor getColumnIndexOrThrowWithNSString:@"vote"];
    jint _cursorIndexOfStartDate = [_cursor getColumnIndexOrThrowWithNSString:@"startDate"];
    jint _cursorIndexOfEndDate = [_cursor getColumnIndexOrThrowWithNSString:@"endDate"];
    jint _cursorIndexOfName_1 = [_cursor getColumnIndexOrThrowWithNSString:@"venue_name"];
    jint _cursorIndexOfDescription_1 = [_cursor getColumnIndexOrThrowWithNSString:@"venue_description"];
    id<JavaUtilList> _result = create_JavaUtilArrayList_initWithInt_([_cursor getCount]);
    while ([_cursor moveToNext]) {
      DDATEvent *_item;
      DDATVenue *_tmpVenue;
      if (!([_cursor isNullWithInt:_cursorIndexOfName_1] && [_cursor isNullWithInt:_cursorIndexOfDescription_1])) {
        _tmpVenue = create_DDATVenue_init();
        JreStrongAssign(&_tmpVenue->name_, [_cursor getStringWithInt:_cursorIndexOfName_1]);
        JreStrongAssign(&_tmpVenue->description__, [_cursor getStringWithInt:_cursorIndexOfDescription_1]);
      }
      else {
        _tmpVenue = nil;
      }
      _item = create_DDATEvent_init();
      _item->id__ = [_cursor getLongWithInt:_cursorIndexOfId];
      JreStrongAssign(&_item->name_, [_cursor getStringWithInt:_cursorIndexOfName]);
      JreStrongAssign(&_item->description__, [_cursor getStringWithInt:_cursorIndexOfDescription]);
      JreStrongAssign(&_item->category_, [_cursor getStringWithInt:_cursorIndexOfCategory]);
      if ([_cursor isNullWithInt:_cursorIndexOfStartDateLong]) {
        JreStrongAssign(&_item->startDateLong_, nil);
      }
      else {
        JreStrongAssign(&_item->startDateLong_, JavaLangLong_valueOfWithLong_([_cursor getLongWithInt:_cursorIndexOfStartDateLong]));
      }
      if ([_cursor isNullWithInt:_cursorIndexOfEndDateLong]) {
        JreStrongAssign(&_item->endDateLong_, nil);
      }
      else {
        JreStrongAssign(&_item->endDateLong_, JavaLangLong_valueOfWithLong_([_cursor getLongWithInt:_cursorIndexOfEndDateLong]));
      }
      jint _tmp;
      _tmp = [_cursor getIntWithInt:_cursorIndexOfPublicEvent];
      _item->publicEvent_ = (_tmp != 0);
      if ([_cursor isNullWithInt:_cursorIndexOfRsvpLimit]) {
        JreStrongAssign(&_item->rsvpLimit_, nil);
      }
      else {
        JreStrongAssign(&_item->rsvpLimit_, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfRsvpLimit]));
      }
      if ([_cursor isNullWithInt:_cursorIndexOfRsvpCount]) {
        JreStrongAssign(&_item->rsvpCount_, nil);
      }
      else {
        JreStrongAssign(&_item->rsvpCount_, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfRsvpCount]));
      }
      JreStrongAssign(&_item->rsvpUuid_, [_cursor getStringWithInt:_cursorIndexOfRsvpUuid]);
      if ([_cursor isNullWithInt:_cursorIndexOfVote]) {
        JreStrongAssign(&_item->vote_, nil);
      }
      else {
        JreStrongAssign(&_item->vote_, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfVote]));
      }
      JreStrongAssign(&_item->startDate_, [_cursor getStringWithInt:_cursorIndexOfStartDate]);
      JreStrongAssign(&_item->endDate_, [_cursor getStringWithInt:_cursorIndexOfEndDate]);
      JreStrongAssign(&_item->venue_, _tmpVenue);
      [_result addWithId:_item];
    }
    return _result;
  }
  @finally {
    [_cursor close];
    [((AndroidArchPersistenceRoomRoomSQLiteQuery *) nil_chk(_statement)) release__];
  }
}

- (void)dealloc {
  RELEASE_(__db_);
  RELEASE_(__insertionAdapterOfEvent_);
  RELEASE_(__deletionAdapterOfEvent_);
  RELEASE_(__updateAdapterOfEvent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LDDATEvent;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createOrUpdateWithDDATEvent:);
  methods[2].selector = @selector(deleteAllWithJavaUtilList:);
  methods[3].selector = @selector(updateEventWithDDATEvent:);
  methods[4].selector = @selector(getEventForIdWithLong:);
  methods[5].selector = @selector(getRsvpUuidForEventWithIdWithLong:);
  methods[6].selector = @selector(getEvents);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "__db_", "LAndroidArchPersistenceRoomRoomDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "__insertionAdapterOfEvent_", "LAndroidArchPersistenceRoomEntityInsertionAdapter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "__deletionAdapterOfEvent_", "LAndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "__updateAdapterOfEvent_", "LAndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "createOrUpdate", "LDDATEvent;", "deleteAll", "LJavaUtilList;", "(Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Event;>;)V", "updateEvent", "getEventForId", "J", "getRsvpUuidForEventWithId", "()Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Event;>;" };
  static const J2ObjcClassInfo _DDAOEventDao_Impl = { "EventDao_Impl", "co.touchlab.droidconandroid.shared.data.dao", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_DDAOEventDao_Impl;
}

@end

void DDAOEventDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl *self, AndroidArchPersistenceRoomRoomDatabase *__db) {
  NSObject_init(self);
  JreStrongAssign(&self->__db_, __db);
  JreStrongAssignAndConsume(&self->__insertionAdapterOfEvent_, new_DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(__db));
  JreStrongAssignAndConsume(&self->__deletionAdapterOfEvent_, new_DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(__db));
  JreStrongAssignAndConsume(&self->__updateAdapterOfEvent_, new_DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(__db));
}

DDAOEventDao_Impl *new_DDAOEventDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *__db) {
  J2OBJC_NEW_IMPL(DDAOEventDao_Impl, initWithAndroidArchPersistenceRoomRoomDatabase_, __db)
}

DDAOEventDao_Impl *create_DDAOEventDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *__db) {
  J2OBJC_CREATE_IMPL(DDAOEventDao_Impl, initWithAndroidArchPersistenceRoomRoomDatabase_, __db)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDAOEventDao_Impl)

@implementation DDAOEventDao_Impl_1

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0 {
  DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
  return self;
}

- (NSString *)createQuery {
  return @"INSERT OR REPLACE INTO `Event`(`id`,`name`,`description`,`category`,`startDateLong`,`endDateLong`,`publicEvent`,`rsvpLimit`,`rsvpCount`,`rsvpUuid`,`vote`,`startDate`,`endDate`,`venue_name`,`venue_description`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
}

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEvent *)value {
  [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) bindLongWithInt:1 withLong:((DDATEvent *) nil_chk(value))->id__];
  if (value->name_ == nil) {
    [stmt bindNullWithInt:2];
  }
  else {
    [stmt bindStringWithInt:2 withNSString:value->name_];
  }
  if (value->description__ == nil) {
    [stmt bindNullWithInt:3];
  }
  else {
    [stmt bindStringWithInt:3 withNSString:value->description__];
  }
  if (value->category_ == nil) {
    [stmt bindNullWithInt:4];
  }
  else {
    [stmt bindStringWithInt:4 withNSString:value->category_];
  }
  if (value->startDateLong_ == nil) {
    [stmt bindNullWithInt:5];
  }
  else {
    [stmt bindLongWithInt:5 withLong:[value->startDateLong_ longLongValue]];
  }
  if (value->endDateLong_ == nil) {
    [stmt bindNullWithInt:6];
  }
  else {
    [stmt bindLongWithInt:6 withLong:[value->endDateLong_ longLongValue]];
  }
  jint _tmp;
  _tmp = value->publicEvent_ ? 1 : 0;
  [stmt bindLongWithInt:7 withLong:_tmp];
  if (value->rsvpLimit_ == nil) {
    [stmt bindNullWithInt:8];
  }
  else {
    [stmt bindLongWithInt:8 withLong:[value->rsvpLimit_ intValue]];
  }
  if (value->rsvpCount_ == nil) {
    [stmt bindNullWithInt:9];
  }
  else {
    [stmt bindLongWithInt:9 withLong:[value->rsvpCount_ intValue]];
  }
  if (value->rsvpUuid_ == nil) {
    [stmt bindNullWithInt:10];
  }
  else {
    [stmt bindStringWithInt:10 withNSString:value->rsvpUuid_];
  }
  if (value->vote_ == nil) {
    [stmt bindNullWithInt:11];
  }
  else {
    [stmt bindLongWithInt:11 withLong:[value->vote_ intValue]];
  }
  if (value->startDate_ == nil) {
    [stmt bindNullWithInt:12];
  }
  else {
    [stmt bindStringWithInt:12 withNSString:value->startDate_];
  }
  if (value->endDate_ == nil) {
    [stmt bindNullWithInt:13];
  }
  else {
    [stmt bindStringWithInt:13 withNSString:value->endDate_];
  }
  DDATVenue *_tmpVenue = value->venue_;
  if (_tmpVenue != nil) {
    if (_tmpVenue->name_ == nil) {
      [stmt bindNullWithInt:14];
    }
    else {
      [stmt bindStringWithInt:14 withNSString:_tmpVenue->name_];
    }
    if (_tmpVenue->description__ == nil) {
      [stmt bindNullWithInt:15];
    }
    else {
      [stmt bindStringWithInt:15 withNSString:_tmpVenue->description__];
    }
  }
  else {
    [stmt bindNullWithInt:14];
    [stmt bindNullWithInt:15];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createQuery);
  methods[2].selector = @selector(bindWithAndroidArchPersistenceDbSupportSQLiteStatement:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "bind", "LAndroidArchPersistenceDbSupportSQLiteStatement;LDDATEvent;", "LDDAOEventDao_Impl;", "initWithAndroidArchPersistenceRoomRoomDatabase:", "Landroid/arch/persistence/room/EntityInsertionAdapter<Lco/touchlab/droidconandroid/shared/data/Event;>;" };
  static const J2ObjcClassInfo _DDAOEventDao_Impl_1 = { "", "co.touchlab.droidconandroid.shared.data.dao", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, 5, -1 };
  return &_DDAOEventDao_Impl_1;
}

@end

void DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl_1 *self, AndroidArchPersistenceRoomRoomDatabase *x0) {
  AndroidArchPersistenceRoomEntityInsertionAdapter_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
}

DDAOEventDao_Impl_1 *new_DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_NEW_IMPL(DDAOEventDao_Impl_1, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}

DDAOEventDao_Impl_1 *create_DDAOEventDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_CREATE_IMPL(DDAOEventDao_Impl_1, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}

@implementation DDAOEventDao_Impl_2

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0 {
  DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
  return self;
}

- (NSString *)createQuery {
  return @"DELETE FROM `Event` WHERE `id` = ?";
}

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEvent *)value {
  [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) bindLongWithInt:1 withLong:((DDATEvent *) nil_chk(value))->id__];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createQuery);
  methods[2].selector = @selector(bindWithAndroidArchPersistenceDbSupportSQLiteStatement:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "bind", "LAndroidArchPersistenceDbSupportSQLiteStatement;LDDATEvent;", "LDDAOEventDao_Impl;", "initWithAndroidArchPersistenceRoomRoomDatabase:", "Landroid/arch/persistence/room/EntityDeletionOrUpdateAdapter<Lco/touchlab/droidconandroid/shared/data/Event;>;" };
  static const J2ObjcClassInfo _DDAOEventDao_Impl_2 = { "", "co.touchlab.droidconandroid.shared.data.dao", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, 5, -1 };
  return &_DDAOEventDao_Impl_2;
}

@end

void DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl_2 *self, AndroidArchPersistenceRoomRoomDatabase *x0) {
  AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
}

DDAOEventDao_Impl_2 *new_DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_NEW_IMPL(DDAOEventDao_Impl_2, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}

DDAOEventDao_Impl_2 *create_DDAOEventDao_Impl_2_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_CREATE_IMPL(DDAOEventDao_Impl_2, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}

@implementation DDAOEventDao_Impl_3

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0 {
  DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
  return self;
}

- (NSString *)createQuery {
  return @"UPDATE OR ABORT `Event` SET `id` = ?,`name` = ?,`description` = ?,`category` = ?,`startDateLong` = ?,`endDateLong` = ?,`publicEvent` = ?,`rsvpLimit` = ?,`rsvpCount` = ?,`rsvpUuid` = ?,`vote` = ?,`startDate` = ?,`endDate` = ?,`venue_name` = ?,`venue_description` = ? WHERE `id` = ?";
}

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEvent *)value {
  [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) bindLongWithInt:1 withLong:((DDATEvent *) nil_chk(value))->id__];
  if (value->name_ == nil) {
    [stmt bindNullWithInt:2];
  }
  else {
    [stmt bindStringWithInt:2 withNSString:value->name_];
  }
  if (value->description__ == nil) {
    [stmt bindNullWithInt:3];
  }
  else {
    [stmt bindStringWithInt:3 withNSString:value->description__];
  }
  if (value->category_ == nil) {
    [stmt bindNullWithInt:4];
  }
  else {
    [stmt bindStringWithInt:4 withNSString:value->category_];
  }
  if (value->startDateLong_ == nil) {
    [stmt bindNullWithInt:5];
  }
  else {
    [stmt bindLongWithInt:5 withLong:[value->startDateLong_ longLongValue]];
  }
  if (value->endDateLong_ == nil) {
    [stmt bindNullWithInt:6];
  }
  else {
    [stmt bindLongWithInt:6 withLong:[value->endDateLong_ longLongValue]];
  }
  jint _tmp;
  _tmp = value->publicEvent_ ? 1 : 0;
  [stmt bindLongWithInt:7 withLong:_tmp];
  if (value->rsvpLimit_ == nil) {
    [stmt bindNullWithInt:8];
  }
  else {
    [stmt bindLongWithInt:8 withLong:[value->rsvpLimit_ intValue]];
  }
  if (value->rsvpCount_ == nil) {
    [stmt bindNullWithInt:9];
  }
  else {
    [stmt bindLongWithInt:9 withLong:[value->rsvpCount_ intValue]];
  }
  if (value->rsvpUuid_ == nil) {
    [stmt bindNullWithInt:10];
  }
  else {
    [stmt bindStringWithInt:10 withNSString:value->rsvpUuid_];
  }
  if (value->vote_ == nil) {
    [stmt bindNullWithInt:11];
  }
  else {
    [stmt bindLongWithInt:11 withLong:[value->vote_ intValue]];
  }
  if (value->startDate_ == nil) {
    [stmt bindNullWithInt:12];
  }
  else {
    [stmt bindStringWithInt:12 withNSString:value->startDate_];
  }
  if (value->endDate_ == nil) {
    [stmt bindNullWithInt:13];
  }
  else {
    [stmt bindStringWithInt:13 withNSString:value->endDate_];
  }
  DDATVenue *_tmpVenue = value->venue_;
  if (_tmpVenue != nil) {
    if (_tmpVenue->name_ == nil) {
      [stmt bindNullWithInt:14];
    }
    else {
      [stmt bindStringWithInt:14 withNSString:_tmpVenue->name_];
    }
    if (_tmpVenue->description__ == nil) {
      [stmt bindNullWithInt:15];
    }
    else {
      [stmt bindStringWithInt:15 withNSString:_tmpVenue->description__];
    }
  }
  else {
    [stmt bindNullWithInt:14];
    [stmt bindNullWithInt:15];
  }
  [stmt bindLongWithInt:16 withLong:value->id__];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createQuery);
  methods[2].selector = @selector(bindWithAndroidArchPersistenceDbSupportSQLiteStatement:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "bind", "LAndroidArchPersistenceDbSupportSQLiteStatement;LDDATEvent;", "LDDAOEventDao_Impl;", "initWithAndroidArchPersistenceRoomRoomDatabase:", "Landroid/arch/persistence/room/EntityDeletionOrUpdateAdapter<Lco/touchlab/droidconandroid/shared/data/Event;>;" };
  static const J2ObjcClassInfo _DDAOEventDao_Impl_3 = { "", "co.touchlab.droidconandroid.shared.data.dao", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, 5, -1 };
  return &_DDAOEventDao_Impl_3;
}

@end

void DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventDao_Impl_3 *self, AndroidArchPersistenceRoomRoomDatabase *x0) {
  AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
}

DDAOEventDao_Impl_3 *new_DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_NEW_IMPL(DDAOEventDao_Impl_3, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}

DDAOEventDao_Impl_3 *create_DDAOEventDao_Impl_3_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_CREATE_IMPL(DDAOEventDao_Impl_3, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}
