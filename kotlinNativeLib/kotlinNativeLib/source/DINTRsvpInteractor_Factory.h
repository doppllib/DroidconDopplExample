//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DINTRsvpInteractor_Factory")
#ifdef RESTRICT_DINTRsvpInteractor_Factory
#define INCLUDE_ALL_DINTRsvpInteractor_Factory 0
#else
#define INCLUDE_ALL_DINTRsvpInteractor_Factory 1
#endif
#undef RESTRICT_DINTRsvpInteractor_Factory

#if !defined (DINTRsvpInteractor_Factory_) && (INCLUDE_ALL_DINTRsvpInteractor_Factory || defined(INCLUDE_DINTRsvpInteractor_Factory))
#define DINTRsvpInteractor_Factory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DINTRsvpInteractor;
@protocol JavaxInjectProvider;

@interface DINTRsvpInteractor_Factory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)helperProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

+ (id<DaggerInternalFactory>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)helperProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

- (DINTRsvpInteractor *)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DINTRsvpInteractor_Factory)

FOUNDATION_EXPORT void DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(DINTRsvpInteractor_Factory *self, id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT DINTRsvpInteractor_Factory *new_DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DINTRsvpInteractor_Factory *create_DINTRsvpInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT id<DaggerInternalFactory> DINTRsvpInteractor_Factory_createWithJavaxInjectProvider_withJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider, id<JavaxInjectProvider> appPrefsProvider);

J2OBJC_TYPE_LITERAL_HEADER(DINTRsvpInteractor_Factory)

@compatibility_alias CoTouchlabDroidconandroidSharedInteractorsRsvpInteractor_Factory DINTRsvpInteractor_Factory;

#endif

#pragma pop_macro("INCLUDE_ALL_DINTRsvpInteractor_Factory")
