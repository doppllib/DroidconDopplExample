//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DDAGNetworkModule_ProvidesDroidconRetrofitFactory")
#ifdef RESTRICT_DDAGNetworkModule_ProvidesDroidconRetrofitFactory
#define INCLUDE_ALL_DDAGNetworkModule_ProvidesDroidconRetrofitFactory 0
#else
#define INCLUDE_ALL_DDAGNetworkModule_ProvidesDroidconRetrofitFactory 1
#endif
#undef RESTRICT_DDAGNetworkModule_ProvidesDroidconRetrofitFactory

#if !defined (DDAGNetworkModule_ProvidesDroidconRetrofitFactory_) && (INCLUDE_ALL_DDAGNetworkModule_ProvidesDroidconRetrofitFactory || defined(INCLUDE_DDAGNetworkModule_ProvidesDroidconRetrofitFactory))
#define DDAGNetworkModule_ProvidesDroidconRetrofitFactory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DDAGNetworkModule;
@class Retrofit2Retrofit;
@protocol JavaxInjectProvider;

@interface DDAGNetworkModule_ProvidesDroidconRetrofitFactory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithDDAGNetworkModule:(DDAGNetworkModule *)module
                  withJavaxInjectProvider:(id<JavaxInjectProvider>)factoryProvider
                  withJavaxInjectProvider:(id<JavaxInjectProvider>)baseUrlProvider;

+ (id<DaggerInternalFactory>)createWithDDAGNetworkModule:(DDAGNetworkModule *)module
                                 withJavaxInjectProvider:(id<JavaxInjectProvider>)factoryProvider
                                 withJavaxInjectProvider:(id<JavaxInjectProvider>)baseUrlProvider;

- (Retrofit2Retrofit *)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAGNetworkModule_ProvidesDroidconRetrofitFactory)

FOUNDATION_EXPORT void DDAGNetworkModule_ProvidesDroidconRetrofitFactory_initWithDDAGNetworkModule_withJavaxInjectProvider_withJavaxInjectProvider_(DDAGNetworkModule_ProvidesDroidconRetrofitFactory *self, DDAGNetworkModule *module, id<JavaxInjectProvider> factoryProvider, id<JavaxInjectProvider> baseUrlProvider);

FOUNDATION_EXPORT DDAGNetworkModule_ProvidesDroidconRetrofitFactory *new_DDAGNetworkModule_ProvidesDroidconRetrofitFactory_initWithDDAGNetworkModule_withJavaxInjectProvider_withJavaxInjectProvider_(DDAGNetworkModule *module, id<JavaxInjectProvider> factoryProvider, id<JavaxInjectProvider> baseUrlProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DDAGNetworkModule_ProvidesDroidconRetrofitFactory *create_DDAGNetworkModule_ProvidesDroidconRetrofitFactory_initWithDDAGNetworkModule_withJavaxInjectProvider_withJavaxInjectProvider_(DDAGNetworkModule *module, id<JavaxInjectProvider> factoryProvider, id<JavaxInjectProvider> baseUrlProvider);

FOUNDATION_EXPORT id<DaggerInternalFactory> DDAGNetworkModule_ProvidesDroidconRetrofitFactory_createWithDDAGNetworkModule_withJavaxInjectProvider_withJavaxInjectProvider_(DDAGNetworkModule *module, id<JavaxInjectProvider> factoryProvider, id<JavaxInjectProvider> baseUrlProvider);

J2OBJC_TYPE_LITERAL_HEADER(DDAGNetworkModule_ProvidesDroidconRetrofitFactory)

@compatibility_alias CoTouchlabDroidconandroidSharedDaggerNetworkModule_ProvidesDroidconRetrofitFactory DDAGNetworkModule_ProvidesDroidconRetrofitFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_DDAGNetworkModule_ProvidesDroidconRetrofitFactory")
