//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DDATEventInfo")
#ifdef RESTRICT_DDATEventInfo
#define INCLUDE_ALL_DDATEventInfo 0
#else
#define INCLUDE_ALL_DDATEventInfo 1
#endif
#undef RESTRICT_DDATEventInfo

#if !defined (DDATEventInfo_) && (INCLUDE_ALL_DDATEventInfo || defined(INCLUDE_DDATEventInfo))
#define DDATEventInfo_

@class DDATEvent;
@class DDATUserAccount;
@protocol JavaUtilList;

@interface DDATEventInfo : NSObject

#pragma mark Public

- (instancetype)initWithDDATEvent:(DDATEvent *)event
                 withJavaUtilList:(id<JavaUtilList>)speakers
                      withBoolean:(jboolean)conflict;

- (jboolean)getConflict;

- (DDATEvent *)getEvent;

- (DDATUserAccount *)getSpeakerWithInt:(jint)speaker;

- (jint)getSpeakerCount;

- (id<JavaUtilList>)getSpeakers;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATEventInfo)

FOUNDATION_EXPORT void DDATEventInfo_initWithDDATEvent_withJavaUtilList_withBoolean_(DDATEventInfo *self, DDATEvent *event, id<JavaUtilList> speakers, jboolean conflict);

FOUNDATION_EXPORT DDATEventInfo *new_DDATEventInfo_initWithDDATEvent_withJavaUtilList_withBoolean_(DDATEvent *event, id<JavaUtilList> speakers, jboolean conflict) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DDATEventInfo *create_DDATEventInfo_initWithDDATEvent_withJavaUtilList_withBoolean_(DDATEvent *event, id<JavaUtilList> speakers, jboolean conflict);

J2OBJC_TYPE_LITERAL_HEADER(DDATEventInfo)

@compatibility_alias CoTouchlabDroidconandroidSharedDataEventInfo DDATEventInfo;

#endif

#pragma pop_macro("INCLUDE_ALL_DDATEventInfo")
