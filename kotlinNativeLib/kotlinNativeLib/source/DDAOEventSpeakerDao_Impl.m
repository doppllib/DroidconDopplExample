//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchPersistenceDbSupportSQLiteStatement.h"
#include "AndroidArchPersistenceRoomEntityInsertionAdapter.h"
#include "AndroidArchPersistenceRoomRoomDatabase.h"
#include "AndroidArchPersistenceRoomRoomSQLiteQuery.h"
#include "AndroidDatabaseCursor.h"
#include "DDAOEventSpeakerDao_Impl.h"
#include "DDATEventSpeaker.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface DDAOEventSpeakerDao_Impl () {
 @public
  AndroidArchPersistenceRoomRoomDatabase *__db_;
  AndroidArchPersistenceRoomEntityInsertionAdapter *__insertionAdapterOfEventSpeaker_;
}

@end

J2OBJC_FIELD_SETTER(DDAOEventSpeakerDao_Impl, __db_, AndroidArchPersistenceRoomRoomDatabase *)
J2OBJC_FIELD_SETTER(DDAOEventSpeakerDao_Impl, __insertionAdapterOfEventSpeaker_, AndroidArchPersistenceRoomEntityInsertionAdapter *)

@interface DDAOEventSpeakerDao_Impl_1 : AndroidArchPersistenceRoomEntityInsertionAdapter

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0;

- (NSString *)createQuery;

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEventSpeaker *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAOEventSpeakerDao_Impl_1)

__attribute__((unused)) static void DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventSpeakerDao_Impl_1 *self, AndroidArchPersistenceRoomRoomDatabase *x0);

__attribute__((unused)) static DDAOEventSpeakerDao_Impl_1 *new_DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDAOEventSpeakerDao_Impl_1 *create_DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0);

@implementation DDAOEventSpeakerDao_Impl

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)__db {
  DDAOEventSpeakerDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(self, __db);
  return self;
}

- (void)createOrUpdateWithDDATEventSpeaker:(DDATEventSpeaker *)eventSpeaker {
  [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) beginTransaction];
  @try {
    [((AndroidArchPersistenceRoomEntityInsertionAdapter *) nil_chk(__insertionAdapterOfEventSpeaker_)) insertWithId:eventSpeaker];
    [__db_ setTransactionSuccessful];
  }
  @finally {
    [__db_ endTransaction];
  }
}

- (id<JavaUtilList>)getEventSpeakersWithLong:(jlong)eventId {
  NSString *_sql = @"SELECT * FROM EventSpeaker WHERE event_id = ?";
  AndroidArchPersistenceRoomRoomSQLiteQuery *_statement = AndroidArchPersistenceRoomRoomSQLiteQuery_acquireWithNSString_withInt_(_sql, 1);
  jint _argIndex = 1;
  [((AndroidArchPersistenceRoomRoomSQLiteQuery *) nil_chk(_statement)) bindLongWithInt:_argIndex withLong:eventId];
  id<AndroidDatabaseCursor> _cursor = [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) queryWithAndroidArchPersistenceDbSupportSQLiteQuery:_statement];
  @try {
    jint _cursorIndexOfId = [((id<AndroidDatabaseCursor>) nil_chk(_cursor)) getColumnIndexOrThrowWithNSString:@"id"];
    jint _cursorIndexOfEventId = [_cursor getColumnIndexOrThrowWithNSString:@"event_id"];
    jint _cursorIndexOfUserAccountId = [_cursor getColumnIndexOrThrowWithNSString:@"user_id"];
    jint _cursorIndexOfName = [_cursor getColumnIndexOrThrowWithNSString:@"name"];
    jint _cursorIndexOfDisplayOrder = [_cursor getColumnIndexOrThrowWithNSString:@"displayOrder"];
    id<JavaUtilList> _result = create_JavaUtilArrayList_initWithInt_([_cursor getCount]);
    while ([_cursor moveToNext]) {
      DDATEventSpeaker *_item;
      _item = create_DDATEventSpeaker_init();
      if ([_cursor isNullWithInt:_cursorIndexOfId]) {
        JreStrongAssign(&_item->id__, nil);
      }
      else {
        JreStrongAssign(&_item->id__, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfId]));
      }
      _item->eventId_ = [_cursor getLongWithInt:_cursorIndexOfEventId];
      _item->userAccountId_ = [_cursor getLongWithInt:_cursorIndexOfUserAccountId];
      JreStrongAssign(&_item->name_, [_cursor getStringWithInt:_cursorIndexOfName]);
      _item->displayOrder_ = [_cursor getIntWithInt:_cursorIndexOfDisplayOrder];
      [_result addWithId:_item];
    }
    return _result;
  }
  @finally {
    [_cursor close];
    [_statement release__];
  }
}

- (DDATEventSpeaker *)getSpeakerForEventWithIdWithLong:(jlong)eventId
                                              withLong:(jlong)userId {
  NSString *_sql = @"SELECT * FROM EventSpeaker WHERE event_id = ? AND user_id = ?";
  AndroidArchPersistenceRoomRoomSQLiteQuery *_statement = AndroidArchPersistenceRoomRoomSQLiteQuery_acquireWithNSString_withInt_(_sql, 2);
  jint _argIndex = 1;
  [((AndroidArchPersistenceRoomRoomSQLiteQuery *) nil_chk(_statement)) bindLongWithInt:_argIndex withLong:eventId];
  _argIndex = 2;
  [_statement bindLongWithInt:_argIndex withLong:userId];
  id<AndroidDatabaseCursor> _cursor = [((AndroidArchPersistenceRoomRoomDatabase *) nil_chk(__db_)) queryWithAndroidArchPersistenceDbSupportSQLiteQuery:_statement];
  @try {
    jint _cursorIndexOfId = [((id<AndroidDatabaseCursor>) nil_chk(_cursor)) getColumnIndexOrThrowWithNSString:@"id"];
    jint _cursorIndexOfEventId = [_cursor getColumnIndexOrThrowWithNSString:@"event_id"];
    jint _cursorIndexOfUserAccountId = [_cursor getColumnIndexOrThrowWithNSString:@"user_id"];
    jint _cursorIndexOfName = [_cursor getColumnIndexOrThrowWithNSString:@"name"];
    jint _cursorIndexOfDisplayOrder = [_cursor getColumnIndexOrThrowWithNSString:@"displayOrder"];
    DDATEventSpeaker *_result;
    if ([_cursor moveToFirst]) {
      _result = create_DDATEventSpeaker_init();
      if ([_cursor isNullWithInt:_cursorIndexOfId]) {
        JreStrongAssign(&_result->id__, nil);
      }
      else {
        JreStrongAssign(&_result->id__, JavaLangInteger_valueOfWithInt_([_cursor getIntWithInt:_cursorIndexOfId]));
      }
      _result->eventId_ = [_cursor getLongWithInt:_cursorIndexOfEventId];
      _result->userAccountId_ = [_cursor getLongWithInt:_cursorIndexOfUserAccountId];
      JreStrongAssign(&_result->name_, [_cursor getStringWithInt:_cursorIndexOfName]);
      _result->displayOrder_ = [_cursor getIntWithInt:_cursorIndexOfDisplayOrder];
    }
    else {
      _result = nil;
    }
    return _result;
  }
  @finally {
    [_cursor close];
    [_statement release__];
  }
}

- (void)dealloc {
  RELEASE_(__db_);
  RELEASE_(__insertionAdapterOfEventSpeaker_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LDDATEventSpeaker;", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createOrUpdateWithDDATEventSpeaker:);
  methods[2].selector = @selector(getEventSpeakersWithLong:);
  methods[3].selector = @selector(getSpeakerForEventWithIdWithLong:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "__db_", "LAndroidArchPersistenceRoomRoomDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "__insertionAdapterOfEventSpeaker_", "LAndroidArchPersistenceRoomEntityInsertionAdapter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "createOrUpdate", "LDDATEventSpeaker;", "getEventSpeakers", "J", "(J)Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/EventSpeaker;>;", "getSpeakerForEventWithId", "JJ" };
  static const J2ObjcClassInfo _DDAOEventSpeakerDao_Impl = { "EventSpeakerDao_Impl", "co.touchlab.droidconandroid.shared.data.dao", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_DDAOEventSpeakerDao_Impl;
}

@end

void DDAOEventSpeakerDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventSpeakerDao_Impl *self, AndroidArchPersistenceRoomRoomDatabase *__db) {
  NSObject_init(self);
  JreStrongAssign(&self->__db_, __db);
  JreStrongAssignAndConsume(&self->__insertionAdapterOfEventSpeaker_, new_DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(__db));
}

DDAOEventSpeakerDao_Impl *new_DDAOEventSpeakerDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *__db) {
  J2OBJC_NEW_IMPL(DDAOEventSpeakerDao_Impl, initWithAndroidArchPersistenceRoomRoomDatabase_, __db)
}

DDAOEventSpeakerDao_Impl *create_DDAOEventSpeakerDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *__db) {
  J2OBJC_CREATE_IMPL(DDAOEventSpeakerDao_Impl, initWithAndroidArchPersistenceRoomRoomDatabase_, __db)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDAOEventSpeakerDao_Impl)

@implementation DDAOEventSpeakerDao_Impl_1

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)x0 {
  DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
  return self;
}

- (NSString *)createQuery {
  return @"INSERT OR REPLACE INTO `EventSpeaker`(`id`,`event_id`,`user_id`,`name`,`displayOrder`) VALUES (?,?,?,?,?)";
}

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)stmt
                                                        withId:(DDATEventSpeaker *)value {
  if (((DDATEventSpeaker *) nil_chk(value))->id__ == nil) {
    [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) bindNullWithInt:1];
  }
  else {
    [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) bindLongWithInt:1 withLong:[value->id__ intValue]];
  }
  [stmt bindLongWithInt:2 withLong:value->eventId_];
  [stmt bindLongWithInt:3 withLong:value->userAccountId_];
  if (value->name_ == nil) {
    [stmt bindNullWithInt:4];
  }
  else {
    [stmt bindStringWithInt:4 withNSString:value->name_];
  }
  [stmt bindLongWithInt:5 withLong:value->displayOrder_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createQuery);
  methods[2].selector = @selector(bindWithAndroidArchPersistenceDbSupportSQLiteStatement:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "bind", "LAndroidArchPersistenceDbSupportSQLiteStatement;LDDATEventSpeaker;", "LDDAOEventSpeakerDao_Impl;", "initWithAndroidArchPersistenceRoomRoomDatabase:", "Landroid/arch/persistence/room/EntityInsertionAdapter<Lco/touchlab/droidconandroid/shared/data/EventSpeaker;>;" };
  static const J2ObjcClassInfo _DDAOEventSpeakerDao_Impl_1 = { "", "co.touchlab.droidconandroid.shared.data.dao", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, 5, -1 };
  return &_DDAOEventSpeakerDao_Impl_1;
}

@end

void DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(DDAOEventSpeakerDao_Impl_1 *self, AndroidArchPersistenceRoomRoomDatabase *x0) {
  AndroidArchPersistenceRoomEntityInsertionAdapter_initWithAndroidArchPersistenceRoomRoomDatabase_(self, x0);
}

DDAOEventSpeakerDao_Impl_1 *new_DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_NEW_IMPL(DDAOEventSpeakerDao_Impl_1, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}

DDAOEventSpeakerDao_Impl_1 *create_DDAOEventSpeakerDao_Impl_1_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomRoomDatabase *x0) {
  J2OBJC_CREATE_IMPL(DDAOEventSpeakerDao_Impl_1, initWithAndroidArchPersistenceRoomRoomDatabase_, x0)
}
