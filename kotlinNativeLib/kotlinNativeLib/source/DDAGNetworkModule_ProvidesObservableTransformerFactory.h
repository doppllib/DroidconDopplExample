//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DDAGNetworkModule_ProvidesObservableTransformerFactory")
#ifdef RESTRICT_DDAGNetworkModule_ProvidesObservableTransformerFactory
#define INCLUDE_ALL_DDAGNetworkModule_ProvidesObservableTransformerFactory 0
#else
#define INCLUDE_ALL_DDAGNetworkModule_ProvidesObservableTransformerFactory 1
#endif
#undef RESTRICT_DDAGNetworkModule_ProvidesObservableTransformerFactory

#if !defined (DDAGNetworkModule_ProvidesObservableTransformerFactory_) && (INCLUDE_ALL_DDAGNetworkModule_ProvidesObservableTransformerFactory || defined(INCLUDE_DDAGNetworkModule_ProvidesObservableTransformerFactory))
#define DDAGNetworkModule_ProvidesObservableTransformerFactory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DDAGNetworkModule;
@protocol IoReactivexObservableTransformer;

@interface DDAGNetworkModule_ProvidesObservableTransformerFactory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithDDAGNetworkModule:(DDAGNetworkModule *)module;

+ (id<DaggerInternalFactory>)createWithDDAGNetworkModule:(DDAGNetworkModule *)module;

- (id<IoReactivexObservableTransformer>)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DDAGNetworkModule_ProvidesObservableTransformerFactory)

FOUNDATION_EXPORT void DDAGNetworkModule_ProvidesObservableTransformerFactory_initWithDDAGNetworkModule_(DDAGNetworkModule_ProvidesObservableTransformerFactory *self, DDAGNetworkModule *module);

FOUNDATION_EXPORT DDAGNetworkModule_ProvidesObservableTransformerFactory *new_DDAGNetworkModule_ProvidesObservableTransformerFactory_initWithDDAGNetworkModule_(DDAGNetworkModule *module) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DDAGNetworkModule_ProvidesObservableTransformerFactory *create_DDAGNetworkModule_ProvidesObservableTransformerFactory_initWithDDAGNetworkModule_(DDAGNetworkModule *module);

FOUNDATION_EXPORT id<DaggerInternalFactory> DDAGNetworkModule_ProvidesObservableTransformerFactory_createWithDDAGNetworkModule_(DDAGNetworkModule *module);

J2OBJC_TYPE_LITERAL_HEADER(DDAGNetworkModule_ProvidesObservableTransformerFactory)

@compatibility_alias CoTouchlabDroidconandroidSharedDaggerNetworkModule_ProvidesObservableTransformerFactory DDAGNetworkModule_ProvidesObservableTransformerFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_DDAGNetworkModule_ProvidesObservableTransformerFactory")
