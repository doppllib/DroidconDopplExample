//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchPersistenceDbSupportSQLiteStatement.h"
#include "AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter.h"
#include "AndroidArchPersistenceRoomRoomDatabase.h"
#include "AndroidArchPersistenceRoomSharedSQLiteStatement.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"

@implementation AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter

- (instancetype)initWithAndroidArchPersistenceRoomRoomDatabase:(AndroidArchPersistenceRoomRoomDatabase *)database {
  AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter_initWithAndroidArchPersistenceRoomRoomDatabase_(self, database);
  return self;
}

- (NSString *)createQuery {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)bindWithAndroidArchPersistenceDbSupportSQLiteStatement:(id<AndroidArchPersistenceDbSupportSQLiteStatement>)statement
                                                        withId:(id)entity {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)handleWithId:(id)entity {
  __unused id<AndroidArchPersistenceDbSupportSQLiteStatement> stmt = [self acquire];
  @try {
    [self bindWithAndroidArchPersistenceDbSupportSQLiteStatement:stmt withId:entity];
    return [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) executeUpdateDelete];
  }
  @finally {
    [self release__WithAndroidArchPersistenceDbSupportSQLiteStatement:stmt];
  }
}

- (jint)handleMultipleWithJavaLangIterable:(id<JavaLangIterable>)entities {
  __unused id<AndroidArchPersistenceDbSupportSQLiteStatement> stmt = [self acquire];
  @try {
    __unused jint total = 0;
    for (id __strong entity in nil_chk(entities)) {
      [self bindWithAndroidArchPersistenceDbSupportSQLiteStatement:stmt withId:entity];
      total += [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) executeUpdateDelete];
    }
    return total;
  }
  @finally {
    [self release__WithAndroidArchPersistenceDbSupportSQLiteStatement:stmt];
  }
}

- (jint)handleMultipleWithNSObjectArray:(IOSObjectArray *)entities {
  __unused id<AndroidArchPersistenceDbSupportSQLiteStatement> stmt = [self acquire];
  @try {
    __unused jint total = 0;
    {
      IOSObjectArray *a__ = entities;
      id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        __unused id entity = *b__++;
        [self bindWithAndroidArchPersistenceDbSupportSQLiteStatement:stmt withId:entity];
        total += [((id<AndroidArchPersistenceDbSupportSQLiteStatement>) nil_chk(stmt)) executeUpdateDelete];
      }
    }
    return total;
  }
  @finally {
    [self release__WithAndroidArchPersistenceDbSupportSQLiteStatement:stmt];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 1, 2, -1, 3, -1, -1 },
    { NULL, "I", 0x11, 4, 5, -1, 6, -1, -1 },
    { NULL, "I", 0x11, 7, 8, -1, 9, -1, -1 },
    { NULL, "I", 0x11, 7, 10, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchPersistenceRoomRoomDatabase:);
  methods[1].selector = @selector(createQuery);
  methods[2].selector = @selector(bindWithAndroidArchPersistenceDbSupportSQLiteStatement:withId:);
  methods[3].selector = @selector(handleWithId:);
  methods[4].selector = @selector(handleMultipleWithJavaLangIterable:);
  methods[5].selector = @selector(handleMultipleWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidArchPersistenceRoomRoomDatabase;", "bind", "LAndroidArchPersistenceDbSupportSQLiteStatement;LNSObject;", "(Landroid/arch/persistence/db/SupportSQLiteStatement;TT;)V", "handle", "LNSObject;", "(TT;)I", "handleMultiple", "LJavaLangIterable;", "(Ljava/lang/Iterable<TT;>;)I", "[LNSObject;", "([TT;)I", "<T:Ljava/lang/Object;>Landroid/arch/persistence/room/SharedSQLiteStatement;" };
  static const J2ObjcClassInfo _AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter = { "EntityDeletionOrUpdateAdapter", "android.arch.persistence.room", ptrTable, methods, NULL, 7, 0x401, 6, 0, -1, -1, -1, 12, -1 };
  return &_AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter;
}

@end

void AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter_initWithAndroidArchPersistenceRoomRoomDatabase_(AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter *self, AndroidArchPersistenceRoomRoomDatabase *database) {
  AndroidArchPersistenceRoomSharedSQLiteStatement_initWithAndroidArchPersistenceRoomRoomDatabase_(self, database);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchPersistenceRoomEntityDeletionOrUpdateAdapter)
