//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo")
#ifdef RESTRICT_AndroidArchPersistenceRoomUtilTableInfo
#define INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo 0
#else
#define INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo 1
#endif
#undef RESTRICT_AndroidArchPersistenceRoomUtilTableInfo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidArchPersistenceRoomUtilTableInfo_) && (INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo || defined(INCLUDE_AndroidArchPersistenceRoomUtilTableInfo))
#define AndroidArchPersistenceRoomUtilTableInfo_

@protocol AndroidArchPersistenceDbSupportSQLiteDatabase;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface AndroidArchPersistenceRoomUtilTableInfo : NSObject {
 @public
  NSString *name_;
  id<JavaUtilMap> columns_;
  id<JavaUtilSet> foreignKeys_;
  id<JavaUtilSet> indices_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                 withJavaUtilMap:(id<JavaUtilMap>)columns
                 withJavaUtilSet:(id<JavaUtilSet>)foreignKeys;

- (instancetype)initWithNSString:(NSString *)name
                 withJavaUtilMap:(id<JavaUtilMap>)columns
                 withJavaUtilSet:(id<JavaUtilSet>)foreignKeys
                 withJavaUtilSet:(id<JavaUtilSet>)indices;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

+ (AndroidArchPersistenceRoomUtilTableInfo *)readWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)database
                                                                                      withNSString:(NSString *)tableName;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceRoomUtilTableInfo)

J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo, name_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo, columns_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo, foreignKeys_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo, indices_, id<JavaUtilSet>)

FOUNDATION_EXPORT void AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(AndroidArchPersistenceRoomUtilTableInfo *self, NSString *name, id<JavaUtilMap> columns, id<JavaUtilSet> foreignKeys, id<JavaUtilSet> indices);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo *new_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(NSString *name, id<JavaUtilMap> columns, id<JavaUtilSet> foreignKeys, id<JavaUtilSet> indices) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo *create_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(NSString *name, id<JavaUtilMap> columns, id<JavaUtilSet> foreignKeys, id<JavaUtilSet> indices);

FOUNDATION_EXPORT void AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_(AndroidArchPersistenceRoomUtilTableInfo *self, NSString *name, id<JavaUtilMap> columns, id<JavaUtilSet> foreignKeys);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo *new_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_(NSString *name, id<JavaUtilMap> columns, id<JavaUtilSet> foreignKeys) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo *create_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_(NSString *name, id<JavaUtilMap> columns, id<JavaUtilSet> foreignKeys);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo *AndroidArchPersistenceRoomUtilTableInfo_readWithAndroidArchPersistenceDbSupportSQLiteDatabase_withNSString_(id<AndroidArchPersistenceDbSupportSQLiteDatabase> database, NSString *tableName);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceRoomUtilTableInfo)

#endif

#if !defined (AndroidArchPersistenceRoomUtilTableInfo_Column_) && (INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo || defined(INCLUDE_AndroidArchPersistenceRoomUtilTableInfo_Column))
#define AndroidArchPersistenceRoomUtilTableInfo_Column_

@interface AndroidArchPersistenceRoomUtilTableInfo_Column : NSObject {
 @public
  NSString *name_;
  NSString *type_;
  jboolean notNull_;
  jint primaryKeyPosition_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)type
                     withBoolean:(jboolean)notNull
                         withInt:(jint)primaryKeyPosition;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jboolean)isPrimaryKey;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceRoomUtilTableInfo_Column)

J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_Column, name_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_Column, type_, NSString *)

FOUNDATION_EXPORT void AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(AndroidArchPersistenceRoomUtilTableInfo_Column *self, NSString *name, NSString *type, jboolean notNull, jint primaryKeyPosition);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_Column *new_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(NSString *name, NSString *type, jboolean notNull, jint primaryKeyPosition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_Column *create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(NSString *name, NSString *type, jboolean notNull, jint primaryKeyPosition);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceRoomUtilTableInfo_Column)

#endif

#if !defined (AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_) && (INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo || defined(INCLUDE_AndroidArchPersistenceRoomUtilTableInfo_ForeignKey))
#define AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_

@protocol JavaUtilList;

@interface AndroidArchPersistenceRoomUtilTableInfo_ForeignKey : NSObject {
 @public
  NSString *referenceTable_;
  NSString *onDelete_;
  NSString *onUpdate_;
  id<JavaUtilList> columnNames_;
  id<JavaUtilList> referenceColumnNames_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString * __nonnull)referenceTable
                    withNSString:(NSString * __nonnull)onDelete
                    withNSString:(NSString * __nonnull)onUpdate
                withJavaUtilList:(id<JavaUtilList> __nonnull)columnNames
                withJavaUtilList:(id<JavaUtilList> __nonnull)referenceColumnNames;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey)

J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey, referenceTable_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey, onDelete_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey, onUpdate_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey, columnNames_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey, referenceColumnNames_, id<JavaUtilList>)

FOUNDATION_EXPORT void AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_initWithNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey *self, NSString *referenceTable, NSString *onDelete, NSString *onUpdate, id<JavaUtilList> columnNames, id<JavaUtilList> referenceColumnNames);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_ForeignKey *new_AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_initWithNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(NSString *referenceTable, NSString *onDelete, NSString *onUpdate, id<JavaUtilList> columnNames, id<JavaUtilList> referenceColumnNames) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_ForeignKey *create_AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_initWithNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(NSString *referenceTable, NSString *onDelete, NSString *onUpdate, id<JavaUtilList> columnNames, id<JavaUtilList> referenceColumnNames);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKey)

#endif

#if !defined (AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence_) && (INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo || defined(INCLUDE_AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence))
#define AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@interface AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence : NSObject < JavaLangComparable > {
 @public
  jint mId_;
  jint mSequence_;
  NSString *mFrom_;
  NSString *mTo_;
}

#pragma mark Public

- (jint)compareToWithId:(AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence *)o;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)id_
                    withInt:(jint)sequence
               withNSString:(NSString *)from
               withNSString:(NSString *)to;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence)

J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence, mFrom_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence, mTo_, NSString *)

FOUNDATION_EXPORT void AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence_initWithInt_withInt_withNSString_withNSString_(AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence *self, jint id_, jint sequence, NSString *from, NSString *to);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence *new_AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence_initWithInt_withInt_withNSString_withNSString_(jint id_, jint sequence, NSString *from, NSString *to) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence *create_AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence_initWithInt_withInt_withNSString_withNSString_(jint id_, jint sequence, NSString *from, NSString *to);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceRoomUtilTableInfo_ForeignKeyWithSequence)

#endif

#if !defined (AndroidArchPersistenceRoomUtilTableInfo_Index_) && (INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo || defined(INCLUDE_AndroidArchPersistenceRoomUtilTableInfo_Index))
#define AndroidArchPersistenceRoomUtilTableInfo_Index_

@protocol JavaUtilList;

@interface AndroidArchPersistenceRoomUtilTableInfo_Index : NSObject {
 @public
  NSString *name_;
  jboolean unique_;
  id<JavaUtilList> columns_;
}

+ (NSString *)DEFAULT_PREFIX;

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)unique
                withJavaUtilList:(id<JavaUtilList>)columns;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceRoomUtilTableInfo_Index)

J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_Index, name_, NSString *)
J2OBJC_FIELD_SETTER(AndroidArchPersistenceRoomUtilTableInfo_Index, columns_, id<JavaUtilList>)

inline NSString *AndroidArchPersistenceRoomUtilTableInfo_Index_get_DEFAULT_PREFIX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AndroidArchPersistenceRoomUtilTableInfo_Index_DEFAULT_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidArchPersistenceRoomUtilTableInfo_Index, DEFAULT_PREFIX, NSString *)

FOUNDATION_EXPORT void AndroidArchPersistenceRoomUtilTableInfo_Index_initWithNSString_withBoolean_withJavaUtilList_(AndroidArchPersistenceRoomUtilTableInfo_Index *self, NSString *name, jboolean unique, id<JavaUtilList> columns);

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_Index *new_AndroidArchPersistenceRoomUtilTableInfo_Index_initWithNSString_withBoolean_withJavaUtilList_(NSString *name, jboolean unique, id<JavaUtilList> columns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceRoomUtilTableInfo_Index *create_AndroidArchPersistenceRoomUtilTableInfo_Index_initWithNSString_withBoolean_withJavaUtilList_(NSString *name, jboolean unique, id<JavaUtilList> columns);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceRoomUtilTableInfo_Index)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidArchPersistenceRoomUtilTableInfo")
