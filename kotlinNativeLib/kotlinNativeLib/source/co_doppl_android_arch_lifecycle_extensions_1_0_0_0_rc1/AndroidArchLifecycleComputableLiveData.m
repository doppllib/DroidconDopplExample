//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchCoreExecutorArchTaskExecutor.h"
#include "AndroidArchLifecycleComputableLiveData.h"
#include "AndroidArchLifecycleLiveData.h"
#include "J2ObjC_source.h"
#include "java/lang/Runnable.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"

@interface AndroidArchLifecycleComputableLiveData () {
 @public
  AndroidArchLifecycleLiveData *mLiveData_;
  JavaUtilConcurrentAtomicAtomicBoolean *mInvalid_;
  JavaUtilConcurrentAtomicAtomicBoolean *mComputing_;
}

@end

J2OBJC_FIELD_SETTER(AndroidArchLifecycleComputableLiveData, mLiveData_, AndroidArchLifecycleLiveData *)
J2OBJC_FIELD_SETTER(AndroidArchLifecycleComputableLiveData, mInvalid_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(AndroidArchLifecycleComputableLiveData, mComputing_, JavaUtilConcurrentAtomicAtomicBoolean *)

@interface AndroidArchLifecycleComputableLiveData_1 : AndroidArchLifecycleLiveData {
 @public
  AndroidArchLifecycleComputableLiveData *this$0_;
}

- (instancetype)initWithAndroidArchLifecycleComputableLiveData:(AndroidArchLifecycleComputableLiveData *)outer$;

- (void)onActive;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchLifecycleComputableLiveData_1)

__attribute__((unused)) static void AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData_1 *self, AndroidArchLifecycleComputableLiveData *outer$);

__attribute__((unused)) static AndroidArchLifecycleComputableLiveData_1 *new_AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidArchLifecycleComputableLiveData_1 *create_AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$);

@interface AndroidArchLifecycleComputableLiveData_2 : NSObject < JavaLangRunnable > {
 @public
  AndroidArchLifecycleComputableLiveData *this$0_;
}

- (instancetype)initWithAndroidArchLifecycleComputableLiveData:(AndroidArchLifecycleComputableLiveData *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchLifecycleComputableLiveData_2)

__attribute__((unused)) static void AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData_2 *self, AndroidArchLifecycleComputableLiveData *outer$);

__attribute__((unused)) static AndroidArchLifecycleComputableLiveData_2 *new_AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidArchLifecycleComputableLiveData_2 *create_AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$);

@interface AndroidArchLifecycleComputableLiveData_3 : NSObject < JavaLangRunnable > {
 @public
  AndroidArchLifecycleComputableLiveData *this$0_;
}

- (instancetype)initWithAndroidArchLifecycleComputableLiveData:(AndroidArchLifecycleComputableLiveData *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchLifecycleComputableLiveData_3)

__attribute__((unused)) static void AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData_3 *self, AndroidArchLifecycleComputableLiveData *outer$);

__attribute__((unused)) static AndroidArchLifecycleComputableLiveData_3 *new_AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidArchLifecycleComputableLiveData_3 *create_AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$);

@implementation AndroidArchLifecycleComputableLiveData

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidArchLifecycleComputableLiveData_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (AndroidArchLifecycleLiveData * __nonnull)getLiveData {
  return mLiveData_;
}

- (void)invalidate {
  [((AndroidArchCoreExecutorArchTaskExecutor *) nil_chk(AndroidArchCoreExecutorArchTaskExecutor_getInstance())) executeOnMainThreadWithJavaLangRunnable:mInvalidationRunnable_];
}

- (id)compute {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(mLiveData_);
  RELEASE_(mInvalid_);
  RELEASE_(mComputing_);
  RELEASE_(mRefreshRunnable_);
  RELEASE_(mInvalidationRunnable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchLifecycleLiveData;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x404, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getLiveData);
  methods[2].selector = @selector(invalidate);
  methods[3].selector = @selector(compute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mLiveData_", "LAndroidArchLifecycleLiveData;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
    { "mInvalid_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mComputing_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRefreshRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "mInvalidationRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Landroid/arch/lifecycle/LiveData<TT;>;", "()TT;", "Landroid/arch/lifecycle/LiveData<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleComputableLiveData = { "ComputableLiveData", "android.arch.lifecycle", ptrTable, methods, fields, 7, 0x401, 4, 5, -1, -1, -1, 3, -1 };
  return &_AndroidArchLifecycleComputableLiveData;
}

@end

void AndroidArchLifecycleComputableLiveData_init(AndroidArchLifecycleComputableLiveData *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mInvalid_, new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(true));
  JreStrongAssignAndConsume(&self->mComputing_, new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false));
  JreStrongAssignAndConsume(&self->mRefreshRunnable_, new_AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(self));
  JreStrongAssignAndConsume(&self->mInvalidationRunnable_, new_AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(self));
  JreStrongAssignAndConsume(&self->mLiveData_, new_AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(self));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchLifecycleComputableLiveData)

@implementation AndroidArchLifecycleComputableLiveData_1

- (instancetype)initWithAndroidArchLifecycleComputableLiveData:(AndroidArchLifecycleComputableLiveData *)outer$ {
  AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(self, outer$);
  return self;
}

- (void)onActive {
  [((AndroidArchCoreExecutorArchTaskExecutor *) nil_chk(AndroidArchCoreExecutorArchTaskExecutor_getInstance())) executeOnDiskIOWithJavaLangRunnable:this$0_->mRefreshRunnable_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchLifecycleComputableLiveData:);
  methods[1].selector = @selector(onActive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidArchLifecycleComputableLiveData;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Landroid/arch/lifecycle/ComputableLiveData<TT;>;", "LAndroidArchLifecycleComputableLiveData;", "init", "Landroid/arch/lifecycle/LiveData<TT;>;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleComputableLiveData_1 = { "", "android.arch.lifecycle", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
  return &_AndroidArchLifecycleComputableLiveData_1;
}

@end

void AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData_1 *self, AndroidArchLifecycleComputableLiveData *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  AndroidArchLifecycleLiveData_init(self);
}

AndroidArchLifecycleComputableLiveData_1 *new_AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleComputableLiveData_1, initWithAndroidArchLifecycleComputableLiveData_, outer$)
}

AndroidArchLifecycleComputableLiveData_1 *create_AndroidArchLifecycleComputableLiveData_1_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleComputableLiveData_1, initWithAndroidArchLifecycleComputableLiveData_, outer$)
}

@implementation AndroidArchLifecycleComputableLiveData_2

- (instancetype)initWithAndroidArchLifecycleComputableLiveData:(AndroidArchLifecycleComputableLiveData *)outer$ {
  AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(self, outer$);
  return self;
}

- (void)run {
  jboolean computed;
  do {
    computed = false;
    if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->mComputing_)) compareAndSetWithBoolean:false withBoolean:true]) {
      @try {
        id value = nil;
        while ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->mInvalid_)) compareAndSetWithBoolean:true withBoolean:false]) {
          computed = true;
          value = [this$0_ compute];
        }
        if (computed) {
          [((AndroidArchLifecycleLiveData *) nil_chk(this$0_->mLiveData_)) postValueWithId:value];
        }
      }
      @finally {
        [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->mComputing_)) setWithBoolean:false];
      }
    }
  }
  while (computed && [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->mInvalid_)) get]);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchLifecycleComputableLiveData:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidArchLifecycleComputableLiveData;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Landroid/arch/lifecycle/ComputableLiveData<TT;>;", "LAndroidArchLifecycleComputableLiveData;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleComputableLiveData_2 = { "", "android.arch.lifecycle", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, -1, -1, -1 };
  return &_AndroidArchLifecycleComputableLiveData_2;
}

@end

void AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData_2 *self, AndroidArchLifecycleComputableLiveData *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

AndroidArchLifecycleComputableLiveData_2 *new_AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleComputableLiveData_2, initWithAndroidArchLifecycleComputableLiveData_, outer$)
}

AndroidArchLifecycleComputableLiveData_2 *create_AndroidArchLifecycleComputableLiveData_2_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleComputableLiveData_2, initWithAndroidArchLifecycleComputableLiveData_, outer$)
}

@implementation AndroidArchLifecycleComputableLiveData_3

- (instancetype)initWithAndroidArchLifecycleComputableLiveData:(AndroidArchLifecycleComputableLiveData *)outer$ {
  AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(self, outer$);
  return self;
}

- (void)run {
  jboolean isActive = [((AndroidArchLifecycleLiveData *) nil_chk(this$0_->mLiveData_)) hasActiveObservers];
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->mInvalid_)) compareAndSetWithBoolean:false withBoolean:true]) {
    if (isActive) {
      [((AndroidArchCoreExecutorArchTaskExecutor *) nil_chk(AndroidArchCoreExecutorArchTaskExecutor_getInstance())) executeOnDiskIOWithJavaLangRunnable:this$0_->mRefreshRunnable_];
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchLifecycleComputableLiveData:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidArchLifecycleComputableLiveData;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Landroid/arch/lifecycle/ComputableLiveData<TT;>;", "LAndroidArchLifecycleComputableLiveData;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleComputableLiveData_3 = { "", "android.arch.lifecycle", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, -1, -1, -1 };
  return &_AndroidArchLifecycleComputableLiveData_3;
}

@end

void AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData_3 *self, AndroidArchLifecycleComputableLiveData *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

AndroidArchLifecycleComputableLiveData_3 *new_AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleComputableLiveData_3, initWithAndroidArchLifecycleComputableLiveData_, outer$)
}

AndroidArchLifecycleComputableLiveData_3 *create_AndroidArchLifecycleComputableLiveData_3_initWithAndroidArchLifecycleComputableLiveData_(AndroidArchLifecycleComputableLiveData *outer$) {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleComputableLiveData_3, initWithAndroidArchLifecycleComputableLiveData_, outer$)
}
