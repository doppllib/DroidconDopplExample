//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchLifecycleViewModel.h"
#include "AndroidArchLifecycleViewModelProvider.h"
#include "AndroidArchLifecycleViewModelStore.h"
#include "AndroidArchLifecycleViewModelStoreOwner.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/RuntimeException.h"

@interface AndroidArchLifecycleViewModelProvider () {
 @public
  id<AndroidArchLifecycleViewModelProvider_Factory> mFactory_;
  AndroidArchLifecycleViewModelStore *mViewModelStore_;
}

@end

J2OBJC_FIELD_SETTER(AndroidArchLifecycleViewModelProvider, mFactory_, id<AndroidArchLifecycleViewModelProvider_Factory>)
J2OBJC_FIELD_SETTER(AndroidArchLifecycleViewModelProvider, mViewModelStore_, AndroidArchLifecycleViewModelStore *)

inline NSString *AndroidArchLifecycleViewModelProvider_get_DEFAULT_KEY();
static NSString *AndroidArchLifecycleViewModelProvider_DEFAULT_KEY = @"android.arch.lifecycle.ViewModelProvider.DefaultKey";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidArchLifecycleViewModelProvider, DEFAULT_KEY, NSString *)

@interface AndroidArchLifecycleViewModelProvider_Factory : NSObject

@end

@implementation AndroidArchLifecycleViewModelProvider

- (instancetype)initWithAndroidArchLifecycleViewModelStoreOwner:(id<AndroidArchLifecycleViewModelStoreOwner> __nonnull)owner
              withAndroidArchLifecycleViewModelProvider_Factory:(id<AndroidArchLifecycleViewModelProvider_Factory> __nonnull)factory {
  AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStoreOwner_withAndroidArchLifecycleViewModelProvider_Factory_(self, owner, factory);
  return self;
}

- (instancetype)initWithAndroidArchLifecycleViewModelStore:(AndroidArchLifecycleViewModelStore * __nonnull)store
         withAndroidArchLifecycleViewModelProvider_Factory:(id<AndroidArchLifecycleViewModelProvider_Factory> __nonnull)factory {
  AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_(self, store, factory);
  return self;
}

- (AndroidArchLifecycleViewModel * __nonnull)getWithIOSClass:(IOSClass * __nonnull)modelClass {
  NSString *canonicalName = [((IOSClass *) nil_chk(modelClass)) getCanonicalName];
  if (canonicalName == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Local and anonymous classes can not be ViewModels");
  }
  return [self getWithNSString:JreStrcat("$C$", AndroidArchLifecycleViewModelProvider_DEFAULT_KEY, ':', canonicalName) withIOSClass:modelClass];
}

- (AndroidArchLifecycleViewModel * __nonnull)getWithNSString:(NSString * __nonnull)key
                                                withIOSClass:(IOSClass * __nonnull)modelClass {
  AndroidArchLifecycleViewModel *viewModel = [((AndroidArchLifecycleViewModelStore *) nil_chk(mViewModelStore_)) getWithNSString:key];
  if ([((IOSClass *) nil_chk(modelClass)) isInstance:viewModel]) {
    return viewModel;
  }
  else {
    if (viewModel != nil) {
    }
  }
  viewModel = [((id<AndroidArchLifecycleViewModelProvider_Factory>) nil_chk(mFactory_)) createWithIOSClass:modelClass];
  [mViewModelStore_ putWithNSString:key withAndroidArchLifecycleViewModel:viewModel];
  return viewModel;
}

- (void)dealloc {
  RELEASE_(mFactory_);
  RELEASE_(mViewModelStore_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchLifecycleViewModel;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LAndroidArchLifecycleViewModel;", 0x1, 2, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidArchLifecycleViewModelStoreOwner:withAndroidArchLifecycleViewModelProvider_Factory:);
  methods[1].selector = @selector(initWithAndroidArchLifecycleViewModelStore:withAndroidArchLifecycleViewModelProvider_Factory:);
  methods[2].selector = @selector(getWithIOSClass:);
  methods[3].selector = @selector(getWithNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_KEY", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "mFactory_", "LAndroidArchLifecycleViewModelProvider_Factory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mViewModelStore_", "LAndroidArchLifecycleViewModelStore;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidArchLifecycleViewModelStoreOwner;LAndroidArchLifecycleViewModelProvider_Factory;", "LAndroidArchLifecycleViewModelStore;LAndroidArchLifecycleViewModelProvider_Factory;", "get", "LIOSClass;", "<T:Landroid/arch/lifecycle/ViewModel;>(Ljava/lang/Class<TT;>;)TT;", "LNSString;LIOSClass;", "<T:Landroid/arch/lifecycle/ViewModel;>(Ljava/lang/String;Ljava/lang/Class<TT;>;)TT;", &AndroidArchLifecycleViewModelProvider_DEFAULT_KEY, "LAndroidArchLifecycleViewModelProvider_Factory;LAndroidArchLifecycleViewModelProvider_NewInstanceFactory;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleViewModelProvider = { "ViewModelProvider", "android.arch.lifecycle", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, 8, -1, -1, -1 };
  return &_AndroidArchLifecycleViewModelProvider;
}

@end

void AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStoreOwner_withAndroidArchLifecycleViewModelProvider_Factory_(AndroidArchLifecycleViewModelProvider *self, id<AndroidArchLifecycleViewModelStoreOwner> owner, id<AndroidArchLifecycleViewModelProvider_Factory> factory) {
  AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_(self, [((id<AndroidArchLifecycleViewModelStoreOwner>) nil_chk(owner)) getViewModelStore], factory);
}

AndroidArchLifecycleViewModelProvider *new_AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStoreOwner_withAndroidArchLifecycleViewModelProvider_Factory_(id<AndroidArchLifecycleViewModelStoreOwner> owner, id<AndroidArchLifecycleViewModelProvider_Factory> factory) {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleViewModelProvider, initWithAndroidArchLifecycleViewModelStoreOwner_withAndroidArchLifecycleViewModelProvider_Factory_, owner, factory)
}

AndroidArchLifecycleViewModelProvider *create_AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStoreOwner_withAndroidArchLifecycleViewModelProvider_Factory_(id<AndroidArchLifecycleViewModelStoreOwner> owner, id<AndroidArchLifecycleViewModelProvider_Factory> factory) {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleViewModelProvider, initWithAndroidArchLifecycleViewModelStoreOwner_withAndroidArchLifecycleViewModelProvider_Factory_, owner, factory)
}

void AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_(AndroidArchLifecycleViewModelProvider *self, AndroidArchLifecycleViewModelStore *store, id<AndroidArchLifecycleViewModelProvider_Factory> factory) {
  NSObject_init(self);
  JreStrongAssign(&self->mFactory_, factory);
  JreStrongAssign(&self->mViewModelStore_, store);
}

AndroidArchLifecycleViewModelProvider *new_AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_(AndroidArchLifecycleViewModelStore *store, id<AndroidArchLifecycleViewModelProvider_Factory> factory) {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleViewModelProvider, initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_, store, factory)
}

AndroidArchLifecycleViewModelProvider *create_AndroidArchLifecycleViewModelProvider_initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_(AndroidArchLifecycleViewModelStore *store, id<AndroidArchLifecycleViewModelProvider_Factory> factory) {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleViewModelProvider, initWithAndroidArchLifecycleViewModelStore_withAndroidArchLifecycleViewModelProvider_Factory_, store, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchLifecycleViewModelProvider)

@implementation AndroidArchLifecycleViewModelProvider_Factory

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidArchLifecycleViewModel;", 0x401, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LIOSClass;", "<T:Landroid/arch/lifecycle/ViewModel;>(Ljava/lang/Class<TT;>;)TT;", "LAndroidArchLifecycleViewModelProvider;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleViewModelProvider_Factory = { "Factory", "android.arch.lifecycle", ptrTable, methods, NULL, 7, 0x609, 1, 0, 3, -1, -1, -1, -1 };
  return &_AndroidArchLifecycleViewModelProvider_Factory;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidArchLifecycleViewModelProvider_Factory)

@implementation AndroidArchLifecycleViewModelProvider_NewInstanceFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidArchLifecycleViewModelProvider_NewInstanceFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (AndroidArchLifecycleViewModel * __nonnull)createWithIOSClass:(IOSClass * __nonnull)modelClass {
  @try {
    return [((IOSClass *) nil_chk(modelClass)) newInstance];
  }
  @catch (JavaLangInstantiationException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Cannot create an instance of ", modelClass), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Cannot create an instance of ", modelClass), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchLifecycleViewModel;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LIOSClass;", "<T:Landroid/arch/lifecycle/ViewModel;>(Ljava/lang/Class<TT;>;)TT;", "LAndroidArchLifecycleViewModelProvider;" };
  static const J2ObjcClassInfo _AndroidArchLifecycleViewModelProvider_NewInstanceFactory = { "NewInstanceFactory", "android.arch.lifecycle", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_AndroidArchLifecycleViewModelProvider_NewInstanceFactory;
}

@end

void AndroidArchLifecycleViewModelProvider_NewInstanceFactory_init(AndroidArchLifecycleViewModelProvider_NewInstanceFactory *self) {
  NSObject_init(self);
}

AndroidArchLifecycleViewModelProvider_NewInstanceFactory *new_AndroidArchLifecycleViewModelProvider_NewInstanceFactory_init() {
  J2OBJC_NEW_IMPL(AndroidArchLifecycleViewModelProvider_NewInstanceFactory, init)
}

AndroidArchLifecycleViewModelProvider_NewInstanceFactory *create_AndroidArchLifecycleViewModelProvider_NewInstanceFactory_init() {
  J2OBJC_CREATE_IMPL(AndroidArchLifecycleViewModelProvider_NewInstanceFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidArchLifecycleViewModelProvider_NewInstanceFactory)
