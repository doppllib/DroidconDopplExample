//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidArchLifecycleLiveData")
#ifdef RESTRICT_AndroidArchLifecycleLiveData
#define INCLUDE_ALL_AndroidArchLifecycleLiveData 0
#else
#define INCLUDE_ALL_AndroidArchLifecycleLiveData 1
#endif
#undef RESTRICT_AndroidArchLifecycleLiveData

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidArchLifecycleLiveData_) && (INCLUDE_ALL_AndroidArchLifecycleLiveData || defined(INCLUDE_AndroidArchLifecycleLiveData))
#define AndroidArchLifecycleLiveData_

@class AndroidArchLifecycleLifecycle_State;
@protocol AndroidArchLifecycleLifecycleOwner;
@protocol AndroidArchLifecycleObserver;

@interface AndroidArchLifecycleLiveData : NSObject

+ (jint)START_VERSION;

#pragma mark Public

- (instancetype)init;

- (id __nullable)getValue;

- (jboolean)hasActiveObservers;

- (jboolean)hasObservers;

- (void)observeWithAndroidArchLifecycleLifecycleOwner:(id<AndroidArchLifecycleLifecycleOwner> __nonnull)owner
                     withAndroidArchLifecycleObserver:(id<AndroidArchLifecycleObserver> __nonnull)observer;

- (void)observeForeverWithAndroidArchLifecycleObserver:(id<AndroidArchLifecycleObserver> __nonnull)observer;

- (void)removeObserverWithAndroidArchLifecycleObserver:(id<AndroidArchLifecycleObserver> __nonnull)observer;

- (void)removeObserversWithAndroidArchLifecycleLifecycleOwner:(id<AndroidArchLifecycleLifecycleOwner> __nonnull)owner;

#pragma mark Protected

- (void)onActive;

- (void)onInactive;

- (void)postValueWithId:(id)value;

- (void)setValueWithId:(id)value;

#pragma mark Package-Private

- (jint)getVersion;

+ (jboolean)isActiveStateWithAndroidArchLifecycleLifecycle_State:(AndroidArchLifecycleLifecycle_State *)state;

@end

J2OBJC_STATIC_INIT(AndroidArchLifecycleLiveData)

inline jint AndroidArchLifecycleLiveData_get_START_VERSION();
#define AndroidArchLifecycleLiveData_START_VERSION -1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidArchLifecycleLiveData, START_VERSION, jint)

FOUNDATION_EXPORT void AndroidArchLifecycleLiveData_init(AndroidArchLifecycleLiveData *self);

FOUNDATION_EXPORT jboolean AndroidArchLifecycleLiveData_isActiveStateWithAndroidArchLifecycleLifecycle_State_(AndroidArchLifecycleLifecycle_State *state);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchLifecycleLiveData)

#endif

#if !defined (AndroidArchLifecycleLiveData_LifecycleBoundObserver_) && (INCLUDE_ALL_AndroidArchLifecycleLiveData || defined(INCLUDE_AndroidArchLifecycleLiveData_LifecycleBoundObserver))
#define AndroidArchLifecycleLiveData_LifecycleBoundObserver_

#define RESTRICT_AndroidArchLifecycleGenericLifecycleObserver 1
#define INCLUDE_AndroidArchLifecycleGenericLifecycleObserver 1
#include "AndroidArchLifecycleGenericLifecycleObserver.h"

@class AndroidArchLifecycleLifecycle_Event;
@class AndroidArchLifecycleLiveData;
@protocol AndroidArchLifecycleLifecycleOwner;
@protocol AndroidArchLifecycleObserver;

@interface AndroidArchLifecycleLiveData_LifecycleBoundObserver : NSObject < AndroidArchLifecycleGenericLifecycleObserver > {
 @public
  id<AndroidArchLifecycleLifecycleOwner> owner_;
  id<AndroidArchLifecycleObserver> observer_;
  jboolean active_;
  jint lastVersion_;
}

#pragma mark Public

- (void)onStateChangedWithAndroidArchLifecycleLifecycleOwner:(id<AndroidArchLifecycleLifecycleOwner>)source
                     withAndroidArchLifecycleLifecycle_Event:(AndroidArchLifecycleLifecycle_Event *)event;

#pragma mark Package-Private

- (instancetype)initWithAndroidArchLifecycleLiveData:(AndroidArchLifecycleLiveData *)outer$
              withAndroidArchLifecycleLifecycleOwner:(id<AndroidArchLifecycleLifecycleOwner>)owner
                    withAndroidArchLifecycleObserver:(id<AndroidArchLifecycleObserver>)observer;

- (void)activeStateChangedWithBoolean:(jboolean)newActive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchLifecycleLiveData_LifecycleBoundObserver)

J2OBJC_FIELD_SETTER(AndroidArchLifecycleLiveData_LifecycleBoundObserver, owner_, id<AndroidArchLifecycleLifecycleOwner>)
J2OBJC_FIELD_SETTER(AndroidArchLifecycleLiveData_LifecycleBoundObserver, observer_, id<AndroidArchLifecycleObserver>)

FOUNDATION_EXPORT void AndroidArchLifecycleLiveData_LifecycleBoundObserver_initWithAndroidArchLifecycleLiveData_withAndroidArchLifecycleLifecycleOwner_withAndroidArchLifecycleObserver_(AndroidArchLifecycleLiveData_LifecycleBoundObserver *self, AndroidArchLifecycleLiveData *outer$, id<AndroidArchLifecycleLifecycleOwner> owner, id<AndroidArchLifecycleObserver> observer);

FOUNDATION_EXPORT AndroidArchLifecycleLiveData_LifecycleBoundObserver *new_AndroidArchLifecycleLiveData_LifecycleBoundObserver_initWithAndroidArchLifecycleLiveData_withAndroidArchLifecycleLifecycleOwner_withAndroidArchLifecycleObserver_(AndroidArchLifecycleLiveData *outer$, id<AndroidArchLifecycleLifecycleOwner> owner, id<AndroidArchLifecycleObserver> observer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchLifecycleLiveData_LifecycleBoundObserver *create_AndroidArchLifecycleLiveData_LifecycleBoundObserver_initWithAndroidArchLifecycleLiveData_withAndroidArchLifecycleLifecycleOwner_withAndroidArchLifecycleObserver_(AndroidArchLifecycleLiveData *outer$, id<AndroidArchLifecycleLifecycleOwner> owner, id<AndroidArchLifecycleObserver> observer);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchLifecycleLiveData_LifecycleBoundObserver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidArchLifecycleLiveData")
