//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DDATEventSpeaker.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"

@implementation DDATEventSpeaker

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DDATEventSpeaker_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jlong)getEventId {
  return eventId_;
}

- (jlong)getUserAccountId {
  return userAccountId_;
}

- (jint)getDisplayOrder {
  return displayOrder_;
}

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getEventId);
  methods[2].selector = @selector(getUserAccountId);
  methods[3].selector = @selector(getDisplayOrder);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LJavaLangInteger;", .constantValue.asLong = 0, 0x1, 0, -1, -1, -1 },
    { "eventId_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "userAccountId_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "displayOrder_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "id" };
  static const J2ObjcClassInfo _DDATEventSpeaker = { "EventSpeaker", "co.touchlab.droidconandroid.shared.data", ptrTable, methods, fields, 7, 0x1, 4, 5, -1, -1, -1, -1, -1 };
  return &_DDATEventSpeaker;
}

@end

void DDATEventSpeaker_init(DDATEventSpeaker *self) {
  NSObject_init(self);
}

DDATEventSpeaker *new_DDATEventSpeaker_init() {
  J2OBJC_NEW_IMPL(DDATEventSpeaker, init)
}

DDATEventSpeaker *create_DDATEventSpeaker_init() {
  J2OBJC_CREATE_IMPL(DDATEventSpeaker, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDATEventSpeaker)
