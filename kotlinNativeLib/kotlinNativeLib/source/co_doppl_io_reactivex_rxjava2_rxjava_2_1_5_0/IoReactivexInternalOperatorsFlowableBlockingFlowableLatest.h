//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest

#if !defined (IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest || defined(INCLUDE_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest))
#define IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsFlowableBlockingFlowableLatest : NSObject < JavaLangIterable > {
 @public
  id<OrgReactivestreamsPublisher> source_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source;

- (id<JavaUtilIterator>)iterator;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest, source_, id<OrgReactivestreamsPublisher>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_initWithOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest *self, id<OrgReactivestreamsPublisher> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableBlockingFlowableLatest *new_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableBlockingFlowableLatest *create_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest || defined(INCLUDE_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator))
#define IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator_

#define RESTRICT_IoReactivexSubscribersDisposableSubscriber 1
#define INCLUDE_IoReactivexSubscribersDisposableSubscriber 1
#include "IoReactivexSubscribersDisposableSubscriber.h"

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class IoReactivexNotification;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentSemaphore;
@protocol JavaUtilFunctionConsumer;

@interface IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator : IoReactivexSubscribersDisposableSubscriber < JavaUtilIterator > {
 @public
  JavaUtilConcurrentSemaphore *notify_;
  JavaUtilConcurrentAtomicAtomicReference *value_;
  IoReactivexNotification *iteratorNotification_;
}

#pragma mark Public

- (jboolean)hasNext;

- (id)next;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(IoReactivexNotification *)args;

- (void)remove;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator, notify_, JavaUtilConcurrentSemaphore *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator, value_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator, iteratorNotification_, IoReactivexNotification *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator_init(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator *self);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator *new_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator *create_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableBlockingFlowableLatest_LatestSubscriberIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableBlockingFlowableLatest")
