//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexDisposablesDisposables.h"
#include "IoReactivexInternalOperatorsMaybeMaybeJust.h"
#include "IoReactivexMaybe.h"
#include "IoReactivexMaybeObserver.h"
#include "J2ObjC_source.h"

@implementation IoReactivexInternalOperatorsMaybeMaybeJust

- (instancetype)initWithId:(id)value {
  IoReactivexInternalOperatorsMaybeMaybeJust_initWithId_(self, value);
  return self;
}

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer {
  [((id<IoReactivexMaybeObserver>) nil_chk(observer)) onSubscribeWithIoReactivexDisposablesDisposable:IoReactivexDisposablesDisposables_disposed()];
  [observer onSuccessWithId:value_];
}

- (id)call {
  return value_;
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexMaybeObserver:);
  methods[2].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "subscribeActual", "LIoReactivexMaybeObserver;", "(Lio/reactivex/MaybeObserver<-TT;>;)V", "()TT;", "TT;", "<T:Ljava/lang/Object;>Lio/reactivex/Maybe<TT;>;Lio/reactivex/internal/fuseable/ScalarCallable<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybeJust = { "MaybeJust", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybeJust;
}

@end

void IoReactivexInternalOperatorsMaybeMaybeJust_initWithId_(IoReactivexInternalOperatorsMaybeMaybeJust *self, id value) {
  IoReactivexMaybe_init(self);
  JreStrongAssign(&self->value_, value);
}

IoReactivexInternalOperatorsMaybeMaybeJust *new_IoReactivexInternalOperatorsMaybeMaybeJust_initWithId_(id value) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybeJust, initWithId_, value)
}

IoReactivexInternalOperatorsMaybeMaybeJust *create_IoReactivexInternalOperatorsMaybeMaybeJust_initWithId_(id value) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybeJust, initWithId_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybeJust)
