//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexExceptionsUndeliverableException")
#ifdef RESTRICT_IoReactivexExceptionsUndeliverableException
#define INCLUDE_ALL_IoReactivexExceptionsUndeliverableException 0
#else
#define INCLUDE_ALL_IoReactivexExceptionsUndeliverableException 1
#endif
#undef RESTRICT_IoReactivexExceptionsUndeliverableException

#if !defined (IoReactivexExceptionsUndeliverableException_) && (INCLUDE_ALL_IoReactivexExceptionsUndeliverableException || defined(INCLUDE_IoReactivexExceptionsUndeliverableException))
#define IoReactivexExceptionsUndeliverableException_

#define RESTRICT_JavaLangIllegalStateException 1
#define INCLUDE_JavaLangIllegalStateException 1
#include "java/lang/IllegalStateException.h"

@class JavaLangThrowable;

@interface IoReactivexExceptionsUndeliverableException : JavaLangIllegalStateException

#pragma mark Public

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexExceptionsUndeliverableException)

FOUNDATION_EXPORT void IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(IoReactivexExceptionsUndeliverableException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT IoReactivexExceptionsUndeliverableException *new_IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexExceptionsUndeliverableException *create_IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexExceptionsUndeliverableException)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexExceptionsUndeliverableException")
