//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableAmb
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableAmb

#if !defined (IoReactivexInternalOperatorsObservableObservableAmb_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableAmb))
#define IoReactivexInternalOperatorsObservableObservableAmb_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class IOSObjectArray;
@protocol IoReactivexObserver;
@protocol JavaLangIterable;

@interface IoReactivexInternalOperatorsObservableObservableAmb : IoReactivexObservable {
 @public
  IOSObjectArray *sources_;
  id<JavaLangIterable> sourcesIterable_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSourceArray:(IOSObjectArray *)sources
                                    withJavaLangIterable:(id<JavaLangIterable>)sourcesIterable;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableAmb)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb, sources_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb, sourcesIterable_, id<JavaLangIterable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableAmb_initWithIoReactivexObservableSourceArray_withJavaLangIterable_(IoReactivexInternalOperatorsObservableObservableAmb *self, IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAmb *new_IoReactivexInternalOperatorsObservableObservableAmb_initWithIoReactivexObservableSourceArray_withJavaLangIterable_(IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAmb *create_IoReactivexInternalOperatorsObservableObservableAmb_initWithIoReactivexObservableSourceArray_withJavaLangIterable_(IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableAmb)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator))
#define IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IOSObjectArray;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator : NSObject < IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  IOSObjectArray *observers_;
  JavaUtilConcurrentAtomicAtomicInteger *winner_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)subscribeWithIoReactivexObservableSourceArray:(IOSObjectArray *)sources;

- (jboolean)winWithInt:(jint)index;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                    withInt:(jint)count;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator, observers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator, winner_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_initWithIoReactivexObserver_withInt_(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *self, id<IoReactivexObserver> actual, jint count);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *new_IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_initWithIoReactivexObserver_withInt_(id<IoReactivexObserver> actual, jint count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *create_IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_initWithIoReactivexObserver_withInt_(id<IoReactivexObserver> actual, jint count);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver))
#define IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

@class IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexObserver > {
 @public
  IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *parent_;
  jint index_;
  id<IoReactivexObserver> actual_;
  jboolean won_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator:(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *)parent
                                                                                   withInt:(jint)index
                                                                   withIoReactivexObserver:(id<IoReactivexObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver, parent_, IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver, actual_, id<IoReactivexObserver>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_withInt_withIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver *self, IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *parent, jint index, id<IoReactivexObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver *new_IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_withInt_withIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *parent, jint index, id<IoReactivexObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver *create_IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator_withInt_withIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableAmb_AmbCoordinator *parent, jint index, id<IoReactivexObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableAmb_AmbInnerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAmb")
