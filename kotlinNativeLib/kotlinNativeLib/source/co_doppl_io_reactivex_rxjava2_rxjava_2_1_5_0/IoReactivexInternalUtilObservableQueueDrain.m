//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalUtilObservableQueueDrain.h"
#include "J2ObjC_source.h"

@interface IoReactivexInternalUtilObservableQueueDrain : NSObject

@end

@implementation IoReactivexInternalUtilObservableQueueDrain

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(cancelled);
  methods[1].selector = @selector(done);
  methods[2].selector = @selector(error);
  methods[3].selector = @selector(enter);
  methods[4].selector = @selector(leaveWithInt:);
  methods[5].selector = @selector(acceptWithIoReactivexObserver:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "leave", "I", "accept", "LIoReactivexObserver;LNSObject;", "(Lio/reactivex/Observer<-TU;>;TT;)V", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _IoReactivexInternalUtilObservableQueueDrain = { "ObservableQueueDrain", "io.reactivex.internal.util", ptrTable, methods, NULL, 7, 0x609, 6, 0, -1, -1, -1, 5, -1 };
  return &_IoReactivexInternalUtilObservableQueueDrain;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoReactivexInternalUtilObservableQueueDrain)
