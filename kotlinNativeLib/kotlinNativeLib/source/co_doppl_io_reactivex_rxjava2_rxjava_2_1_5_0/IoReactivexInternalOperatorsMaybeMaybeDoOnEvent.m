//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsBiConsumer.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"
#include "IoReactivexInternalOperatorsMaybeMaybeDoOnEvent.h"
#include "IoReactivexMaybeObserver.h"
#include "IoReactivexMaybeSource.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@implementation IoReactivexInternalOperatorsMaybeMaybeDoOnEvent

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
            withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)onEvent {
  IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(self, source, onEvent);
  return self;
}

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer {
  [((id<IoReactivexMaybeSource>) nil_chk(source_)) subscribeWithIoReactivexMaybeObserver:create_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(observer, onEvent_)];
}

- (void)dealloc {
  RELEASE_(onEvent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeSource:withIoReactivexFunctionsBiConsumer:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexMaybeObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "onEvent_", "LIoReactivexFunctionsBiConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeSource;LIoReactivexFunctionsBiConsumer;", "(Lio/reactivex/MaybeSource<TT;>;Lio/reactivex/functions/BiConsumer<-TT;-Ljava/lang/Throwable;>;)V", "subscribeActual", "LIoReactivexMaybeObserver;", "(Lio/reactivex/MaybeObserver<-TT;>;)V", "Lio/reactivex/functions/BiConsumer<-TT;-Ljava/lang/Throwable;>;", "LIoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybeDoOnEvent = { "MaybeDoOnEvent", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent;
}

@end

void IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) {
  IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream_initWithIoReactivexMaybeSource_(self, source);
  JreStrongAssign(&self->onEvent_, onEvent);
}

IoReactivexInternalOperatorsMaybeMaybeDoOnEvent *new_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent, initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_, source, onEvent)
}

IoReactivexInternalOperatorsMaybeMaybeDoOnEvent *create_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent, initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_, source, onEvent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent)

@implementation IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
              withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)onEvent {
  IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(self, actual, onEvent);
  return self;
}

- (void)dispose {
  [((id<IoReactivexDisposablesDisposable>) nil_chk(d_)) dispose];
  JreStrongAssign(&d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
}

- (jboolean)isDisposed {
  return [((id<IoReactivexDisposablesDisposable>) nil_chk(d_)) isDisposed];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->d_, d)) {
    JreStrongAssign(&self->d_, d);
    [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  }
}

- (void)onSuccessWithId:(id)value {
  JreStrongAssign(&d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  @try {
    [((id<IoReactivexFunctionsBiConsumer>) nil_chk(onEvent_)) acceptWithId:value withId:nil];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:ex];
    return;
  }
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSuccessWithId:value];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  JreStrongAssign(&d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  @try {
    [((id<IoReactivexFunctionsBiConsumer>) nil_chk(onEvent_)) acceptWithId:nil withId:e];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    e = create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:JavaLangThrowable_class_()]);
  }
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
}

- (void)onComplete {
  JreStrongAssign(&d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  @try {
    [((id<IoReactivexFunctionsBiConsumer>) nil_chk(onEvent_)) acceptWithId:nil withId:nil];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:ex];
    return;
  }
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onComplete];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(onEvent_);
  RELEASE_(d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeObserver:withIoReactivexFunctionsBiConsumer:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[4].selector = @selector(onSuccessWithId:);
  methods[5].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[6].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexMaybeObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "onEvent_", "LIoReactivexFunctionsBiConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "d_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeObserver;LIoReactivexFunctionsBiConsumer;", "(Lio/reactivex/MaybeObserver<-TT;>;Lio/reactivex/functions/BiConsumer<-TT;-Ljava/lang/Throwable;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/MaybeObserver<-TT;>;", "Lio/reactivex/functions/BiConsumer<-TT;-Ljava/lang/Throwable;>;", "LIoReactivexInternalOperatorsMaybeMaybeDoOnEvent;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/MaybeObserver<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver = { "DoOnEventMaybeObserver", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x18, 7, 3, 11, -1, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver;
}

@end

void IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiConsumer> onEvent) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->onEvent_, onEvent);
}

IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiConsumer> onEvent) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver, initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_, actual, onEvent)
}

IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiConsumer> onEvent) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver, initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_, actual, onEvent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver)
