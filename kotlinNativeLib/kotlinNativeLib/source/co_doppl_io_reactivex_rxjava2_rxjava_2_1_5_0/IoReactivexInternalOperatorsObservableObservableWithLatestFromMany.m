//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"
#include "IoReactivexInternalOperatorsObservableObservableMap.h"
#include "IoReactivexInternalOperatorsObservableObservableWithLatestFromMany.h"
#include "IoReactivexInternalUtilAtomicThrowable.h"
#include "IoReactivexInternalUtilHalfSerializer.h"
#include "IoReactivexObservableSource.h"
#include "IoReactivexObserver.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "java/util/concurrent/atomic/AtomicReferenceArray.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_get_serialVersionUID();
#define IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_serialVersionUID 1577321883966341961LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver, serialVersionUID, jlong)

inline jlong IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_get_serialVersionUID();
#define IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_serialVersionUID 3256684027868224024LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver, serialVersionUID, jlong)

@interface IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc () {
 @public
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *this$0_;
}

@end

@implementation IoReactivexInternalOperatorsObservableObservableWithLatestFromMany

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource> __nonnull)source
               withIoReactivexObservableSourceArray:(IOSObjectArray * __nonnull)otherArray
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)combiner {
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withIoReactivexObservableSourceArray_withIoReactivexFunctionsFunction_(self, source, otherArray, combiner);
  return self;
}

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource> __nonnull)source
                               withJavaLangIterable:(id<JavaLangIterable> __nonnull)otherIterable
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)combiner {
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withJavaLangIterable_withIoReactivexFunctionsFunction_(self, source, otherIterable, combiner);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s {
  IOSObjectArray *others = otherArray_;
  jint n = 0;
  if (others == nil) {
    others = [IOSObjectArray arrayWithLength:8 type:IoReactivexObservableSource_class_()];
    @try {
      for (id<IoReactivexObservableSource> __strong p in nil_chk(otherIterable_)) {
        if (n == others->size_) {
          others = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(others, n + (JreRShift32(n, 1)));
        }
        IOSObjectArray_Set(nil_chk(others), n++, p);
      }
    }
    @catch (JavaLangThrowable *ex) {
      IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
      IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexObserver_(ex, s);
      return;
    }
  }
  else {
    n = others->size_;
  }
  if (n == 0) {
    [create_IoReactivexInternalOperatorsObservableObservableMap_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_(source_, create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_(self)) subscribeActualWithIoReactivexObserver:s];
    return;
  }
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *parent = create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(s, combiner_, n);
  [((id<IoReactivexObserver>) nil_chk(s)) onSubscribeWithIoReactivexDisposablesDisposable:parent];
  [parent subscribeWithIoReactivexObservableSourceArray:others withInt:n];
  [((id<IoReactivexObservableSource>) nil_chk(source_)) subscribeWithIoReactivexObserver:parent];
}

- (void)dealloc {
  RELEASE_(otherArray_);
  RELEASE_(otherIterable_);
  RELEASE_(combiner_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSource:withIoReactivexObservableSourceArray:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(initWithIoReactivexObservableSource:withJavaLangIterable:withIoReactivexFunctionsFunction:);
  methods[2].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "otherArray_", "[LIoReactivexObservableSource;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "otherIterable_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "combiner_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservableSource;[LIoReactivexObservableSource;LIoReactivexFunctionsFunction;", "(Lio/reactivex/ObservableSource<TT;>;[Lio/reactivex/ObservableSource<*>;Lio/reactivex/functions/Function<-[Ljava/lang/Object;TR;>;)V", "LIoReactivexObservableSource;LJavaLangIterable;LIoReactivexFunctionsFunction;", "(Lio/reactivex/ObservableSource<TT;>;Ljava/lang/Iterable<+Lio/reactivex/ObservableSource<*>;>;Lio/reactivex/functions/Function<-[Ljava/lang/Object;TR;>;)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TR;>;)V", "[Lio/reactivex/ObservableSource<*>;", "Ljava/lang/Iterable<+Lio/reactivex/ObservableSource<*>;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;TR;>;", "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver;LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver;LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream<TT;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableWithLatestFromMany = { "ObservableWithLatestFromMany", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, 10, -1, 11, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany;
}

@end

void IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withIoReactivexObservableSourceArray_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *self, id<IoReactivexObservableSource> source, IOSObjectArray *otherArray, id<IoReactivexFunctionsFunction> combiner) {
  IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream_initWithIoReactivexObservableSource_(self, source);
  JreStrongAssign(&self->otherArray_, otherArray);
  JreStrongAssign(&self->otherIterable_, nil);
  JreStrongAssign(&self->combiner_, combiner);
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *new_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withIoReactivexObservableSourceArray_withIoReactivexFunctionsFunction_(id<IoReactivexObservableSource> source, IOSObjectArray *otherArray, id<IoReactivexFunctionsFunction> combiner) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany, initWithIoReactivexObservableSource_withIoReactivexObservableSourceArray_withIoReactivexFunctionsFunction_, source, otherArray, combiner)
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withIoReactivexObservableSourceArray_withIoReactivexFunctionsFunction_(id<IoReactivexObservableSource> source, IOSObjectArray *otherArray, id<IoReactivexFunctionsFunction> combiner) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany, initWithIoReactivexObservableSource_withIoReactivexObservableSourceArray_withIoReactivexFunctionsFunction_, source, otherArray, combiner)
}

void IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withJavaLangIterable_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *self, id<IoReactivexObservableSource> source, id<JavaLangIterable> otherIterable, id<IoReactivexFunctionsFunction> combiner) {
  IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream_initWithIoReactivexObservableSource_(self, source);
  JreStrongAssign(&self->otherArray_, nil);
  JreStrongAssign(&self->otherIterable_, otherIterable);
  JreStrongAssign(&self->combiner_, combiner);
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *new_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withJavaLangIterable_withIoReactivexFunctionsFunction_(id<IoReactivexObservableSource> source, id<JavaLangIterable> otherIterable, id<IoReactivexFunctionsFunction> combiner) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany, initWithIoReactivexObservableSource_withJavaLangIterable_withIoReactivexFunctionsFunction_, source, otherIterable, combiner)
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_initWithIoReactivexObservableSource_withJavaLangIterable_withIoReactivexFunctionsFunction_(id<IoReactivexObservableSource> source, id<JavaLangIterable> otherIterable, id<IoReactivexFunctionsFunction> combiner) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany, initWithIoReactivexObservableSource_withJavaLangIterable_withIoReactivexFunctionsFunction_, source, otherIterable, combiner)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany)

@implementation IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)combiner
                                    withInt:(jint)n {
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(self, actual, combiner, n);
  return self;
}

- (void)subscribeWithIoReactivexObservableSourceArray:(IOSObjectArray *)others
                                              withInt:(jint)n {
  IOSObjectArray *observers = self->observers_;
  JavaUtilConcurrentAtomicAtomicReference *s = self->d_;
  for (jint i = 0; i < n; i++) {
    if (IoReactivexInternalDisposablesDisposableHelper_isDisposedWithIoReactivexDisposablesDisposable_([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(s)) get]) || JreLoadVolatileBoolean(&done_)) {
      return;
    }
    [((id<IoReactivexObservableSource>) nil_chk(IOSObjectArray_Get(nil_chk(others), i))) subscribeWithIoReactivexObserver:IOSObjectArray_Get(nil_chk(observers), i)];
  }
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  IoReactivexInternalDisposablesDisposableHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexDisposablesDisposable_(self->d_, d);
}

- (void)onNextWithId:(id)t {
  if (JreLoadVolatileBoolean(&done_)) {
    return;
  }
  JavaUtilConcurrentAtomicAtomicReferenceArray *ara = values_;
  jint n = [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(ara)) length];
  IOSObjectArray *objects = [IOSObjectArray arrayWithLength:n + 1 type:NSObject_class_()];
  IOSObjectArray_Set(objects, 0, t);
  for (jint i = 0; i < n; i++) {
    id o = [ara getWithInt:i];
    if (o == nil) {
      return;
    }
    IOSObjectArray_Set(objects, i + 1, o);
  }
  id v;
  @try {
    v = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(combiner_)) applyWithId:objects], @"combiner returned a null value");
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [self dispose];
    [self onErrorWithJavaLangThrowable:ex];
    return;
  }
  IoReactivexInternalUtilHalfSerializer_onNextWithIoReactivexObserver_withId_withJavaUtilConcurrentAtomicAtomicInteger_withIoReactivexInternalUtilAtomicThrowable_(actual_, v, self, error_);
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  if (JreLoadVolatileBoolean(&done_)) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    return;
  }
  JreAssignVolatileBoolean(&done_, true);
  [self cancelAllButWithInt:-1];
  IoReactivexInternalUtilHalfSerializer_onErrorWithIoReactivexObserver_withJavaLangThrowable_withJavaUtilConcurrentAtomicAtomicInteger_withIoReactivexInternalUtilAtomicThrowable_(actual_, t, self, error_);
}

- (void)onComplete {
  if (!JreLoadVolatileBoolean(&done_)) {
    JreAssignVolatileBoolean(&done_, true);
    [self cancelAllButWithInt:-1];
    IoReactivexInternalUtilHalfSerializer_onCompleteWithIoReactivexObserver_withJavaUtilConcurrentAtomicAtomicInteger_withIoReactivexInternalUtilAtomicThrowable_(actual_, self, error_);
  }
}

- (jboolean)isDisposed {
  return IoReactivexInternalDisposablesDisposableHelper_isDisposedWithIoReactivexDisposablesDisposable_([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(d_)) get]);
}

- (void)dispose {
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(d_);
  {
    IOSObjectArray *a__ = observers_;
    IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver *s = *b__++;
      [((IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver *) nil_chk(s)) dispose];
    }
  }
}

- (void)innerNextWithInt:(jint)index
                  withId:(id)o {
  [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(values_)) setWithInt:index withId:o];
}

- (void)innerErrorWithInt:(jint)index
    withJavaLangThrowable:(JavaLangThrowable *)t {
  JreAssignVolatileBoolean(&done_, true);
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(d_);
  [self cancelAllButWithInt:index];
  IoReactivexInternalUtilHalfSerializer_onErrorWithIoReactivexObserver_withJavaLangThrowable_withJavaUtilConcurrentAtomicAtomicInteger_withIoReactivexInternalUtilAtomicThrowable_(actual_, t, self, error_);
}

- (void)innerCompleteWithInt:(jint)index
                 withBoolean:(jboolean)nonEmpty {
  if (!nonEmpty) {
    JreAssignVolatileBoolean(&done_, true);
    [self cancelAllButWithInt:index];
    IoReactivexInternalUtilHalfSerializer_onCompleteWithIoReactivexObserver_withJavaUtilConcurrentAtomicAtomicInteger_withIoReactivexInternalUtilAtomicThrowable_(actual_, self, error_);
  }
}

- (void)cancelAllButWithInt:(jint)index {
  IOSObjectArray *observers = self->observers_;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(observers))->size_; i++) {
    if (i != index) {
      [((IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver *) nil_chk(IOSObjectArray_Get(observers, i))) dispose];
    }
  }
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(combiner_);
  RELEASE_(observers_);
  RELEASE_(values_);
  RELEASE_(d_);
  RELEASE_(error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:withIoReactivexFunctionsFunction:withInt:);
  methods[1].selector = @selector(subscribeWithIoReactivexObservableSourceArray:withInt:);
  methods[2].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[5].selector = @selector(onComplete);
  methods[6].selector = @selector(isDisposed);
  methods[7].selector = @selector(dispose);
  methods[8].selector = @selector(innerNextWithInt:withId:);
  methods[9].selector = @selector(innerErrorWithInt:withJavaLangThrowable:);
  methods[10].selector = @selector(innerCompleteWithInt:withBoolean:);
  methods[11].selector = @selector(cancelAllButWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 20, -1 },
    { "combiner_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 21, -1 },
    { "observers_", "[LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "values_", "LJavaUtilConcurrentAtomicAtomicReferenceArray;", .constantValue.asLong = 0, 0x10, -1, -1, 22, -1 },
    { "d_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 23, -1 },
    { "error_", "LIoReactivexInternalUtilAtomicThrowable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;LIoReactivexFunctionsFunction;I", "(Lio/reactivex/Observer<-TR;>;Lio/reactivex/functions/Function<-[Ljava/lang/Object;TR;>;I)V", "subscribe", "[LIoReactivexObservableSource;I", "([Lio/reactivex/ObservableSource<*>;I)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "innerNext", "ILNSObject;", "innerError", "ILJavaLangThrowable;", "innerComplete", "IZ", "cancelAllBut", "I", "Lio/reactivex/Observer<-TR;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;TR;>;", "Ljava/util/concurrent/atomic/AtomicReferenceArray<Ljava/lang/Object;>;", "Ljava/util/concurrent/atomic/AtomicReference<Lio/reactivex/disposables/Disposable;>;", "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/Observer<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver = { "WithLatestFromObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 12, 8, 24, -1, -1, 25, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> combiner, jint n) {
  JavaUtilConcurrentAtomicAtomicInteger_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->combiner_, combiner);
  IOSObjectArray *s = [IOSObjectArray arrayWithLength:n type:IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_class_()];
  for (jint i = 0; i < n; i++) {
    IOSObjectArray_SetAndConsume(s, i, new_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_(self, i));
  }
  JreStrongAssign(&self->observers_, s);
  JreStrongAssignAndConsume(&self->values_, new_JavaUtilConcurrentAtomicAtomicReferenceArray_initWithInt_(n));
  JreStrongAssignAndConsume(&self->d_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssignAndConsume(&self->error_, new_IoReactivexInternalUtilAtomicThrowable_init());
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *new_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> combiner, jint n) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_, actual, combiner, n)
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> combiner, jint n) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_, actual, combiner, n)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver)

@implementation IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver:(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *)parent
                                                                                                          withInt:(jint)index {
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_(self, parent, index);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  IoReactivexInternalDisposablesDisposableHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexDisposablesDisposable_(self, d);
}

- (void)onNextWithId:(id)t {
  if (!hasValue_) {
    hasValue_ = true;
  }
  [((IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *) nil_chk(parent_)) innerNextWithInt:index_ withId:t];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  [((IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *) nil_chk(parent_)) innerErrorWithInt:index_ withJavaLangThrowable:t];
}

- (void)onComplete {
  [((IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *) nil_chk(parent_)) innerCompleteWithInt:index_ withBoolean:hasValue_];
}

- (void)dispose {
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(self);
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver:withInt:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  methods[5].selector = @selector(dispose);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "parent_", "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "hasValue_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver;I", "(Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver<**>;I)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver<**>;", "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany;", "Ljava/util/concurrent/atomic/AtomicReference<Lio/reactivex/disposables/Disposable;>;Lio/reactivex/Observer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver = { "WithLatestInnerObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 6, 4, 9, -1, -1, 10, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver *self, IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *parent, jint index) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->index_ = index;
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver *new_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *parent, jint index) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver, initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_, parent, index)
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver *create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver *parent, jint index) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver, initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestFromObserver_withInt_, parent, index)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_WithLatestInnerObserver)

@implementation IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany:(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *)outer$ {
  IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_(self, outer$);
  return self;
}

- (id)applyWithId:(id)t {
  return IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(this$0_->combiner_)) applyWithId:[IOSObjectArray arrayWithObjects:(id[]){ t } count:1 type:NSObject_class_()]], @"The combiner returned a null value");
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "apply", "LNSObject;", "LJavaLangException;", "(TT;)TR;", "Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany<TT;TR;>;", "LIoReactivexInternalOperatorsObservableObservableWithLatestFromMany;", "Ljava/lang/Object;Lio/reactivex/functions/Function<TT;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc = { "SingletonArrayFunc", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x10, 2, 1, 5, -1, -1, 6, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc;
}

@end

void IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc *self, IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc *new_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc, initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_, outer$)
}

IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc *create_IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc, initWithIoReactivexInternalOperatorsObservableObservableWithLatestFromMany_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableWithLatestFromMany_SingletonArrayFunc)
