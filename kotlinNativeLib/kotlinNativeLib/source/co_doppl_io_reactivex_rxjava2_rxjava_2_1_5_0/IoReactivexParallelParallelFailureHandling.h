//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexParallelParallelFailureHandling")
#ifdef RESTRICT_IoReactivexParallelParallelFailureHandling
#define INCLUDE_ALL_IoReactivexParallelParallelFailureHandling 0
#else
#define INCLUDE_ALL_IoReactivexParallelParallelFailureHandling 1
#endif
#undef RESTRICT_IoReactivexParallelParallelFailureHandling

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexParallelParallelFailureHandling_) && (INCLUDE_ALL_IoReactivexParallelParallelFailureHandling || defined(INCLUDE_IoReactivexParallelParallelFailureHandling))
#define IoReactivexParallelParallelFailureHandling_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_IoReactivexFunctionsBiFunction 1
#define INCLUDE_IoReactivexFunctionsBiFunction 1
#include "IoReactivexFunctionsBiFunction.h"

@class IOSObjectArray;
@class JavaLangLong;
@class JavaLangThrowable;

typedef NS_ENUM(NSUInteger, IoReactivexParallelParallelFailureHandling_Enum) {
  IoReactivexParallelParallelFailureHandling_Enum_STOP = 0,
  IoReactivexParallelParallelFailureHandling_Enum_ERROR = 1,
  IoReactivexParallelParallelFailureHandling_Enum_SKIP = 2,
  IoReactivexParallelParallelFailureHandling_Enum_RETRY = 3,
};

@interface IoReactivexParallelParallelFailureHandling : JavaLangEnum < IoReactivexFunctionsBiFunction >

+ (IoReactivexParallelParallelFailureHandling * __nonnull)STOP;

+ (IoReactivexParallelParallelFailureHandling * __nonnull)ERROR;

+ (IoReactivexParallelParallelFailureHandling * __nonnull)SKIP;

+ (IoReactivexParallelParallelFailureHandling * __nonnull)RETRY;

#pragma mark Public

- (IoReactivexParallelParallelFailureHandling *)applyWithId:(JavaLangLong *)t1
                                                     withId:(JavaLangThrowable *)t2;

+ (IoReactivexParallelParallelFailureHandling *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (IoReactivexParallelParallelFailureHandling_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(IoReactivexParallelParallelFailureHandling)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_values_[];

inline IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_get_STOP();
J2OBJC_ENUM_CONSTANT(IoReactivexParallelParallelFailureHandling, STOP)

inline IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_get_ERROR();
J2OBJC_ENUM_CONSTANT(IoReactivexParallelParallelFailureHandling, ERROR)

inline IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_get_SKIP();
J2OBJC_ENUM_CONSTANT(IoReactivexParallelParallelFailureHandling, SKIP)

inline IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_get_RETRY();
J2OBJC_ENUM_CONSTANT(IoReactivexParallelParallelFailureHandling, RETRY)

FOUNDATION_EXPORT IOSObjectArray *IoReactivexParallelParallelFailureHandling_values();

FOUNDATION_EXPORT IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT IoReactivexParallelParallelFailureHandling *IoReactivexParallelParallelFailureHandling_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexParallelParallelFailureHandling)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexParallelParallelFailureHandling")
