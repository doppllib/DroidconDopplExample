//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromFuture")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromFuture
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromFuture 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromFuture 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromFuture

#if !defined (IoReactivexInternalOperatorsObservableObservableFromFuture_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromFuture || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromFuture))
#define IoReactivexInternalOperatorsObservableObservableFromFuture_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexObserver;
@protocol JavaUtilConcurrentFuture;

@interface IoReactivexInternalOperatorsObservableObservableFromFuture : IoReactivexObservable {
 @public
  id<JavaUtilConcurrentFuture> future_;
  jlong timeout_;
  JavaUtilConcurrentTimeUnit *unit_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                        withLong:(jlong)timeout
                  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromFuture)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromFuture, future_, id<JavaUtilConcurrentFuture>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromFuture, unit_, JavaUtilConcurrentTimeUnit *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(IoReactivexInternalOperatorsObservableObservableFromFuture *self, id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromFuture *new_IoReactivexInternalOperatorsObservableObservableFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromFuture *create_IoReactivexInternalOperatorsObservableObservableFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromFuture)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromFuture")
