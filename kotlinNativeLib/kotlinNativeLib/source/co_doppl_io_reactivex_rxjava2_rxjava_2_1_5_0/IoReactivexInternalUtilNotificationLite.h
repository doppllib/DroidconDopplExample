//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilNotificationLite")
#ifdef RESTRICT_IoReactivexInternalUtilNotificationLite
#define INCLUDE_ALL_IoReactivexInternalUtilNotificationLite 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilNotificationLite 1
#endif
#undef RESTRICT_IoReactivexInternalUtilNotificationLite

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalUtilNotificationLite_) && (INCLUDE_ALL_IoReactivexInternalUtilNotificationLite || defined(INCLUDE_IoReactivexInternalUtilNotificationLite))
#define IoReactivexInternalUtilNotificationLite_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol IoReactivexObserver;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

typedef NS_ENUM(NSUInteger, IoReactivexInternalUtilNotificationLite_Enum) {
  IoReactivexInternalUtilNotificationLite_Enum_COMPLETE = 0,
};

@interface IoReactivexInternalUtilNotificationLite : JavaLangEnum

+ (IoReactivexInternalUtilNotificationLite * __nonnull)COMPLETE;

#pragma mark Public

+ (jboolean)acceptWithId:(id)o
 withIoReactivexObserver:(id<IoReactivexObserver>)s;

+ (jboolean)acceptWithId:(id)o
withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

+ (jboolean)acceptFullWithId:(id)o
     withIoReactivexObserver:(id<IoReactivexObserver>)s;

+ (jboolean)acceptFullWithId:(id)o
withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

+ (id)complete;

+ (id)disposableWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

+ (id)errorWithJavaLangThrowable:(JavaLangThrowable *)e;

+ (id<IoReactivexDisposablesDisposable>)getDisposableWithId:(id)o;

+ (JavaLangThrowable *)getErrorWithId:(id)o;

+ (id<OrgReactivestreamsSubscription>)getSubscriptionWithId:(id)o;

+ (id)getValueWithId:(id)o;

+ (jboolean)isCompleteWithId:(id)o;

+ (jboolean)isDisposableWithId:(id)o;

+ (jboolean)isErrorWithId:(id)o;

+ (jboolean)isSubscriptionWithId:(id)o;

+ (id)nextWithId:(id)value;

+ (id)subscriptionWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (NSString *)description;

+ (IoReactivexInternalUtilNotificationLite *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (IoReactivexInternalUtilNotificationLite_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalUtilNotificationLite)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite *IoReactivexInternalUtilNotificationLite_values_[];

inline IoReactivexInternalUtilNotificationLite *IoReactivexInternalUtilNotificationLite_get_COMPLETE();
J2OBJC_ENUM_CONSTANT(IoReactivexInternalUtilNotificationLite, COMPLETE)

FOUNDATION_EXPORT id IoReactivexInternalUtilNotificationLite_nextWithId_(id value);

FOUNDATION_EXPORT id IoReactivexInternalUtilNotificationLite_complete();

FOUNDATION_EXPORT id IoReactivexInternalUtilNotificationLite_errorWithJavaLangThrowable_(JavaLangThrowable *e);

FOUNDATION_EXPORT id IoReactivexInternalUtilNotificationLite_subscriptionWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT id IoReactivexInternalUtilNotificationLite_disposableWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> d);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_isCompleteWithId_(id o);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_isErrorWithId_(id o);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_isSubscriptionWithId_(id o);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_isDisposableWithId_(id o);

FOUNDATION_EXPORT id IoReactivexInternalUtilNotificationLite_getValueWithId_(id o);

FOUNDATION_EXPORT JavaLangThrowable *IoReactivexInternalUtilNotificationLite_getErrorWithId_(id o);

FOUNDATION_EXPORT id<OrgReactivestreamsSubscription> IoReactivexInternalUtilNotificationLite_getSubscriptionWithId_(id o);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexInternalUtilNotificationLite_getDisposableWithId_(id o);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_acceptWithId_withOrgReactivestreamsSubscriber_(id o, id<OrgReactivestreamsSubscriber> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_acceptWithId_withIoReactivexObserver_(id o, id<IoReactivexObserver> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_acceptFullWithId_withOrgReactivestreamsSubscriber_(id o, id<OrgReactivestreamsSubscriber> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilNotificationLite_acceptFullWithId_withIoReactivexObserver_(id o, id<IoReactivexObserver> s);

FOUNDATION_EXPORT IOSObjectArray *IoReactivexInternalUtilNotificationLite_values();

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite *IoReactivexInternalUtilNotificationLite_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite *IoReactivexInternalUtilNotificationLite_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilNotificationLite)

#endif

#if !defined (IoReactivexInternalUtilNotificationLite_ErrorNotification_) && (INCLUDE_ALL_IoReactivexInternalUtilNotificationLite || defined(INCLUDE_IoReactivexInternalUtilNotificationLite_ErrorNotification))
#define IoReactivexInternalUtilNotificationLite_ErrorNotification_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaLangThrowable;

@interface IoReactivexInternalUtilNotificationLite_ErrorNotification : NSObject < JavaIoSerializable > {
 @public
  JavaLangThrowable *e_;
}

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)e;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilNotificationLite_ErrorNotification)

J2OBJC_FIELD_SETTER(IoReactivexInternalUtilNotificationLite_ErrorNotification, e_, JavaLangThrowable *)

FOUNDATION_EXPORT void IoReactivexInternalUtilNotificationLite_ErrorNotification_initWithJavaLangThrowable_(IoReactivexInternalUtilNotificationLite_ErrorNotification *self, JavaLangThrowable *e);

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite_ErrorNotification *new_IoReactivexInternalUtilNotificationLite_ErrorNotification_initWithJavaLangThrowable_(JavaLangThrowable *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite_ErrorNotification *create_IoReactivexInternalUtilNotificationLite_ErrorNotification_initWithJavaLangThrowable_(JavaLangThrowable *e);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilNotificationLite_ErrorNotification)

#endif

#if !defined (IoReactivexInternalUtilNotificationLite_SubscriptionNotification_) && (INCLUDE_ALL_IoReactivexInternalUtilNotificationLite || defined(INCLUDE_IoReactivexInternalUtilNotificationLite_SubscriptionNotification))
#define IoReactivexInternalUtilNotificationLite_SubscriptionNotification_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalUtilNotificationLite_SubscriptionNotification : NSObject < JavaIoSerializable > {
 @public
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilNotificationLite_SubscriptionNotification)

J2OBJC_FIELD_SETTER(IoReactivexInternalUtilNotificationLite_SubscriptionNotification, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalUtilNotificationLite_SubscriptionNotification_initWithOrgReactivestreamsSubscription_(IoReactivexInternalUtilNotificationLite_SubscriptionNotification *self, id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite_SubscriptionNotification *new_IoReactivexInternalUtilNotificationLite_SubscriptionNotification_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite_SubscriptionNotification *create_IoReactivexInternalUtilNotificationLite_SubscriptionNotification_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> s);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilNotificationLite_SubscriptionNotification)

#endif

#if !defined (IoReactivexInternalUtilNotificationLite_DisposableNotification_) && (INCLUDE_ALL_IoReactivexInternalUtilNotificationLite || defined(INCLUDE_IoReactivexInternalUtilNotificationLite_DisposableNotification))
#define IoReactivexInternalUtilNotificationLite_DisposableNotification_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalUtilNotificationLite_DisposableNotification : NSObject < JavaIoSerializable > {
 @public
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilNotificationLite_DisposableNotification)

J2OBJC_FIELD_SETTER(IoReactivexInternalUtilNotificationLite_DisposableNotification, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalUtilNotificationLite_DisposableNotification_initWithIoReactivexDisposablesDisposable_(IoReactivexInternalUtilNotificationLite_DisposableNotification *self, id<IoReactivexDisposablesDisposable> d);

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite_DisposableNotification *new_IoReactivexInternalUtilNotificationLite_DisposableNotification_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalUtilNotificationLite_DisposableNotification *create_IoReactivexInternalUtilNotificationLite_DisposableNotification_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> d);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilNotificationLite_DisposableNotification)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilNotificationLite")
