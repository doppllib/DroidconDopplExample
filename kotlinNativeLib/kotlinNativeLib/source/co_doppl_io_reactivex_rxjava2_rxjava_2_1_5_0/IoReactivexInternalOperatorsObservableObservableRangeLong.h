//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableRangeLong")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableRangeLong
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableRangeLong 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableRangeLong 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableRangeLong

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableRangeLong_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableRangeLong || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableRangeLong))
#define IoReactivexInternalOperatorsObservableObservableRangeLong_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class JavaLangLong;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableRangeLong : IoReactivexObservable

#pragma mark Public

- (instancetype)initWithLong:(jlong)start
                    withLong:(jlong)count;

- (JavaLangLong *)blockingFirst;

- (JavaLangLong *)blockingFirstWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingLast;

- (JavaLangLong *)blockingLastWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingSingle;

- (JavaLangLong *)blockingSingleWithId:(JavaLangLong *)arg0;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)o;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableRangeLong)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableRangeLong_initWithLong_withLong_(IoReactivexInternalOperatorsObservableObservableRangeLong *self, jlong start, jlong count);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableRangeLong *new_IoReactivexInternalOperatorsObservableObservableRangeLong_initWithLong_withLong_(jlong start, jlong count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableRangeLong *create_IoReactivexInternalOperatorsObservableObservableRangeLong_initWithLong_withLong_(jlong start, jlong count);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableRangeLong)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableRangeLong || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable))
#define IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable_

#define RESTRICT_IoReactivexInternalObserversBasicIntQueueDisposable 1
#define INCLUDE_IoReactivexInternalObserversBasicIntQueueDisposable 1
#include "IoReactivexInternalObserversBasicIntQueueDisposable.h"

@class JavaLangLong;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable : IoReactivexInternalObserversBasicIntQueueDisposable {
 @public
  id<IoReactivexObserver> actual_;
  jlong end_;
  jlong index_;
  jboolean fused_;
}

#pragma mark Public

- (void)clear;

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEmpty;

- (jboolean)isEqual:(id)obj;

- (JavaLangLong * __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                   withLong:(jlong)start
                                   withLong:(jlong)end;

- (void)run;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable, actual_, id<IoReactivexObserver>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable_initWithIoReactivexObserver_withLong_withLong_(IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable *self, id<IoReactivexObserver> actual, jlong start, jlong end);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable *new_IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable_initWithIoReactivexObserver_withLong_withLong_(id<IoReactivexObserver> actual, jlong start, jlong end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable *create_IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable_initWithIoReactivexObserver_withLong_withLong_(id<IoReactivexObserver> actual, jlong start, jlong end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableRangeLong_RangeDisposable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableRangeLong")
