//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversSubscriberCompletableObserver")
#ifdef RESTRICT_IoReactivexInternalObserversSubscriberCompletableObserver
#define INCLUDE_ALL_IoReactivexInternalObserversSubscriberCompletableObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversSubscriberCompletableObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversSubscriberCompletableObserver

#if !defined (IoReactivexInternalObserversSubscriberCompletableObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversSubscriberCompletableObserver || defined(INCLUDE_IoReactivexInternalObserversSubscriberCompletableObserver))
#define IoReactivexInternalObserversSubscriberCompletableObserver_

#define RESTRICT_IoReactivexCompletableObserver 1
#define INCLUDE_IoReactivexCompletableObserver 1
#include "IoReactivexCompletableObserver.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalObserversSubscriberCompletableObserver : NSObject < IoReactivexCompletableObserver, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> subscriber_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)observer;

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)requestWithLong:(jlong)n;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversSubscriberCompletableObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalObserversSubscriberCompletableObserver, subscriber_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversSubscriberCompletableObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalObserversSubscriberCompletableObserver_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalObserversSubscriberCompletableObserver *self, id<OrgReactivestreamsSubscriber> observer);

FOUNDATION_EXPORT IoReactivexInternalObserversSubscriberCompletableObserver *new_IoReactivexInternalObserversSubscriberCompletableObserver_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> observer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversSubscriberCompletableObserver *create_IoReactivexInternalObserversSubscriberCompletableObserver_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> observer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversSubscriberCompletableObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversSubscriberCompletableObserver")
