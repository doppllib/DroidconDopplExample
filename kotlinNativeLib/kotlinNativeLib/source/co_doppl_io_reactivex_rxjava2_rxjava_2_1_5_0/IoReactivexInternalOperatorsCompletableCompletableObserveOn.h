//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableObserveOn")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableObserveOn
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableObserveOn 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableObserveOn 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableObserveOn

#if !defined (IoReactivexInternalOperatorsCompletableCompletableObserveOn_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableObserveOn || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableObserveOn))
#define IoReactivexInternalOperatorsCompletableCompletableObserveOn_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

@class IoReactivexScheduler;
@protocol IoReactivexCompletableObserver;
@protocol IoReactivexCompletableSource;

@interface IoReactivexInternalOperatorsCompletableCompletableObserveOn : IoReactivexCompletable {
 @public
  id<IoReactivexCompletableSource> source_;
  IoReactivexScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexCompletableSource:(id<IoReactivexCompletableSource>)source
                            withIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableObserveOn)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableObserveOn, source_, id<IoReactivexCompletableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableObserveOn, scheduler_, IoReactivexScheduler *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableObserveOn_initWithIoReactivexCompletableSource_withIoReactivexScheduler_(IoReactivexInternalOperatorsCompletableCompletableObserveOn *self, id<IoReactivexCompletableSource> source, IoReactivexScheduler *scheduler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableObserveOn *new_IoReactivexInternalOperatorsCompletableCompletableObserveOn_initWithIoReactivexCompletableSource_withIoReactivexScheduler_(id<IoReactivexCompletableSource> source, IoReactivexScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableObserveOn *create_IoReactivexInternalOperatorsCompletableCompletableObserveOn_initWithIoReactivexCompletableSource_withIoReactivexScheduler_(id<IoReactivexCompletableSource> source, IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableObserveOn)

#endif

#if !defined (IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableObserveOn || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver))
#define IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexCompletableObserver 1
#define INCLUDE_IoReactivexCompletableObserver 1
#include "IoReactivexCompletableObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexScheduler;
@class JavaLangThrowable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexCompletableObserver, IoReactivexDisposablesDisposable, JavaLangRunnable > {
 @public
  id<IoReactivexCompletableObserver> actual_;
  IoReactivexScheduler *scheduler_;
  JavaLangThrowable *error_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)run;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)actual
                              withIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver, actual_, id<IoReactivexCompletableObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver, scheduler_, IoReactivexScheduler *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver, error_, JavaLangThrowable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver_initWithIoReactivexCompletableObserver_withIoReactivexScheduler_(IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver *self, id<IoReactivexCompletableObserver> actual, IoReactivexScheduler *scheduler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver *new_IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver_initWithIoReactivexCompletableObserver_withIoReactivexScheduler_(id<IoReactivexCompletableObserver> actual, IoReactivexScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver *create_IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver_initWithIoReactivexCompletableObserver_withIoReactivexScheduler_(id<IoReactivexCompletableObserver> actual, IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableObserveOn_ObserveOnCompletableObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableObserveOn")
