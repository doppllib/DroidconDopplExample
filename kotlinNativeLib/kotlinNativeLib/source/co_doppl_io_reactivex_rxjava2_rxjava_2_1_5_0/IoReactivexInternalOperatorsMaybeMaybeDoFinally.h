//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoFinally")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeDoFinally
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoFinally 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoFinally 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeDoFinally

#if !defined (IoReactivexInternalOperatorsMaybeMaybeDoFinally_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoFinally || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeDoFinally))
#define IoReactivexInternalOperatorsMaybeMaybeDoFinally_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeDoFinally : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsAction> onFinally_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onFinally;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeDoFinally)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoFinally, onFinally_, id<IoReactivexFunctionsAction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeDoFinally_initWithIoReactivexMaybeSource_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsMaybeMaybeDoFinally *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsAction> onFinally);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoFinally *new_IoReactivexInternalOperatorsMaybeMaybeDoFinally_initWithIoReactivexMaybeSource_withIoReactivexFunctionsAction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsAction> onFinally) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoFinally *create_IoReactivexInternalOperatorsMaybeMaybeDoFinally_initWithIoReactivexMaybeSource_withIoReactivexFunctionsAction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsAction> onFinally);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeDoFinally)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoFinally || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver))
#define IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsAction;

@interface IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsAction> onFinally_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                  withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onFinally;

- (void)runFinally;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver, onFinally_, id<IoReactivexFunctionsAction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsAction> onFinally);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver *new_IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsAction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsAction> onFinally) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver *create_IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsAction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsAction> onFinally);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeDoFinally_DoFinallyObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoFinally")
