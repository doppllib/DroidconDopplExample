//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexDisposablesSubscriptionDisposable")
#ifdef RESTRICT_IoReactivexDisposablesSubscriptionDisposable
#define INCLUDE_ALL_IoReactivexDisposablesSubscriptionDisposable 0
#else
#define INCLUDE_ALL_IoReactivexDisposablesSubscriptionDisposable 1
#endif
#undef RESTRICT_IoReactivexDisposablesSubscriptionDisposable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexDisposablesSubscriptionDisposable_) && (INCLUDE_ALL_IoReactivexDisposablesSubscriptionDisposable || defined(INCLUDE_IoReactivexDisposablesSubscriptionDisposable))
#define IoReactivexDisposablesSubscriptionDisposable_

#define RESTRICT_IoReactivexDisposablesReferenceDisposable 1
#define INCLUDE_IoReactivexDisposablesReferenceDisposable 1
#include "IoReactivexDisposablesReferenceDisposable.h"

@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexDisposablesSubscriptionDisposable : IoReactivexDisposablesReferenceDisposable

#pragma mark Public

- (id<OrgReactivestreamsSubscription>)accumulateAndGetWithId:(id<OrgReactivestreamsSubscription>)arg0
                          withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<OrgReactivestreamsSubscription>)get;

- (id<OrgReactivestreamsSubscription>)getAndAccumulateWithId:(id<OrgReactivestreamsSubscription>)arg0
                          withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<OrgReactivestreamsSubscription>)getAndSetWithId:(id<OrgReactivestreamsSubscription>)arg0;

- (id<OrgReactivestreamsSubscription>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (id<OrgReactivestreamsSubscription>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Protected

- (void)onDisposedWithId:(id<OrgReactivestreamsSubscription> __nonnull)value;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)value;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexDisposablesSubscriptionDisposable)

FOUNDATION_EXPORT void IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(IoReactivexDisposablesSubscriptionDisposable *self, id<OrgReactivestreamsSubscription> value);

FOUNDATION_EXPORT IoReactivexDisposablesSubscriptionDisposable *new_IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexDisposablesSubscriptionDisposable *create_IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexDisposablesSubscriptionDisposable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexDisposablesSubscriptionDisposable")
