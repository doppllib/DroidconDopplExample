//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "IoReactivexBackpressureStrategy.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void IoReactivexBackpressureStrategy_initWithNSString_withInt_(IoReactivexBackpressureStrategy *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(IoReactivexBackpressureStrategy)

IoReactivexBackpressureStrategy *IoReactivexBackpressureStrategy_values_[5];

@implementation IoReactivexBackpressureStrategy

+ (IoReactivexBackpressureStrategy *)MISSING {
  return JreEnum(IoReactivexBackpressureStrategy, MISSING);
}

+ (IoReactivexBackpressureStrategy *)ERROR {
  return JreEnum(IoReactivexBackpressureStrategy, ERROR);
}

+ (IoReactivexBackpressureStrategy *)BUFFER {
  return JreEnum(IoReactivexBackpressureStrategy, BUFFER);
}

+ (IoReactivexBackpressureStrategy *)DROP {
  return JreEnum(IoReactivexBackpressureStrategy, DROP);
}

+ (IoReactivexBackpressureStrategy *)LATEST {
  return JreEnum(IoReactivexBackpressureStrategy, LATEST);
}

+ (IOSObjectArray *)values {
  return IoReactivexBackpressureStrategy_values();
}

+ (IoReactivexBackpressureStrategy *)valueOfWithNSString:(NSString *)name {
  return IoReactivexBackpressureStrategy_valueOfWithNSString_(name);
}

- (IoReactivexBackpressureStrategy_Enum)toNSEnum {
  return (IoReactivexBackpressureStrategy_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIoReactivexBackpressureStrategy;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexBackpressureStrategy;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MISSING", "LIoReactivexBackpressureStrategy;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "ERROR", "LIoReactivexBackpressureStrategy;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BUFFER", "LIoReactivexBackpressureStrategy;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "DROP", "LIoReactivexBackpressureStrategy;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "LATEST", "LIoReactivexBackpressureStrategy;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(IoReactivexBackpressureStrategy, MISSING), &JreEnum(IoReactivexBackpressureStrategy, ERROR), &JreEnum(IoReactivexBackpressureStrategy, BUFFER), &JreEnum(IoReactivexBackpressureStrategy, DROP), &JreEnum(IoReactivexBackpressureStrategy, LATEST), "Ljava/lang/Enum<Lio/reactivex/BackpressureStrategy;>;" };
  static const J2ObjcClassInfo _IoReactivexBackpressureStrategy = { "BackpressureStrategy", "io.reactivex", ptrTable, methods, fields, 7, 0x4011, 2, 5, -1, -1, -1, 7, -1 };
  return &_IoReactivexBackpressureStrategy;
}

+ (void)initialize {
  if (self == [IoReactivexBackpressureStrategy class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 5; i++) {
      (IoReactivexBackpressureStrategy_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      IoReactivexBackpressureStrategy_initWithNSString_withInt_(e, JreEnumConstantName(IoReactivexBackpressureStrategy_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(IoReactivexBackpressureStrategy)
  }
}

@end

void IoReactivexBackpressureStrategy_initWithNSString_withInt_(IoReactivexBackpressureStrategy *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *IoReactivexBackpressureStrategy_values() {
  IoReactivexBackpressureStrategy_initialize();
  return [IOSObjectArray arrayWithObjects:IoReactivexBackpressureStrategy_values_ count:5 type:IoReactivexBackpressureStrategy_class_()];
}

IoReactivexBackpressureStrategy *IoReactivexBackpressureStrategy_valueOfWithNSString_(NSString *name) {
  IoReactivexBackpressureStrategy_initialize();
  for (int i = 0; i < 5; i++) {
    IoReactivexBackpressureStrategy *e = IoReactivexBackpressureStrategy_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoReactivexBackpressureStrategy *IoReactivexBackpressureStrategy_fromOrdinal(NSUInteger ordinal) {
  IoReactivexBackpressureStrategy_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return IoReactivexBackpressureStrategy_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexBackpressureStrategy)
