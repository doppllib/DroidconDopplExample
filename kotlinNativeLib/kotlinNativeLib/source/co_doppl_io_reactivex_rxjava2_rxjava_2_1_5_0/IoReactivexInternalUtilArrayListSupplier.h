//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilArrayListSupplier")
#ifdef RESTRICT_IoReactivexInternalUtilArrayListSupplier
#define INCLUDE_ALL_IoReactivexInternalUtilArrayListSupplier 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilArrayListSupplier 1
#endif
#undef RESTRICT_IoReactivexInternalUtilArrayListSupplier

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalUtilArrayListSupplier_) && (INCLUDE_ALL_IoReactivexInternalUtilArrayListSupplier || defined(INCLUDE_IoReactivexInternalUtilArrayListSupplier))
#define IoReactivexInternalUtilArrayListSupplier_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_JavaUtilConcurrentCallable 1
#define INCLUDE_JavaUtilConcurrentCallable 1
#include "java/util/concurrent/Callable.h"

#define RESTRICT_IoReactivexFunctionsFunction 1
#define INCLUDE_IoReactivexFunctionsFunction 1
#include "IoReactivexFunctionsFunction.h"

@class IOSObjectArray;
@protocol JavaUtilList;

typedef NS_ENUM(NSUInteger, IoReactivexInternalUtilArrayListSupplier_Enum) {
  IoReactivexInternalUtilArrayListSupplier_Enum_INSTANCE = 0,
};

@interface IoReactivexInternalUtilArrayListSupplier : JavaLangEnum < JavaUtilConcurrentCallable, IoReactivexFunctionsFunction >

+ (IoReactivexInternalUtilArrayListSupplier * __nonnull)INSTANCE;

#pragma mark Public

- (id<JavaUtilList>)applyWithId:(id)o;

+ (id<JavaUtilConcurrentCallable>)asCallable;

+ (id<IoReactivexFunctionsFunction>)asFunction;

- (id<JavaUtilList>)call;

+ (IoReactivexInternalUtilArrayListSupplier *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (IoReactivexInternalUtilArrayListSupplier_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalUtilArrayListSupplier)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT IoReactivexInternalUtilArrayListSupplier *IoReactivexInternalUtilArrayListSupplier_values_[];

inline IoReactivexInternalUtilArrayListSupplier *IoReactivexInternalUtilArrayListSupplier_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(IoReactivexInternalUtilArrayListSupplier, INSTANCE)

FOUNDATION_EXPORT id<JavaUtilConcurrentCallable> IoReactivexInternalUtilArrayListSupplier_asCallable();

FOUNDATION_EXPORT id<IoReactivexFunctionsFunction> IoReactivexInternalUtilArrayListSupplier_asFunction();

FOUNDATION_EXPORT IOSObjectArray *IoReactivexInternalUtilArrayListSupplier_values();

FOUNDATION_EXPORT IoReactivexInternalUtilArrayListSupplier *IoReactivexInternalUtilArrayListSupplier_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT IoReactivexInternalUtilArrayListSupplier *IoReactivexInternalUtilArrayListSupplier_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilArrayListSupplier)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilArrayListSupplier")
