//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalObserversInnerQueuedObserverSupport.h"
#include "J2ObjC_source.h"

@interface IoReactivexInternalObserversInnerQueuedObserverSupport : NSObject

@end

@implementation IoReactivexInternalObserversInnerQueuedObserverSupport

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x401, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(innerNextWithIoReactivexInternalObserversInnerQueuedObserver:withId:);
  methods[1].selector = @selector(innerErrorWithIoReactivexInternalObserversInnerQueuedObserver:withJavaLangThrowable:);
  methods[2].selector = @selector(innerCompleteWithIoReactivexInternalObserversInnerQueuedObserver:);
  methods[3].selector = @selector(drain);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "innerNext", "LIoReactivexInternalObserversInnerQueuedObserver;LNSObject;", "(Lio/reactivex/internal/observers/InnerQueuedObserver<TT;>;TT;)V", "innerError", "LIoReactivexInternalObserversInnerQueuedObserver;LJavaLangThrowable;", "(Lio/reactivex/internal/observers/InnerQueuedObserver<TT;>;Ljava/lang/Throwable;)V", "innerComplete", "LIoReactivexInternalObserversInnerQueuedObserver;", "(Lio/reactivex/internal/observers/InnerQueuedObserver<TT;>;)V", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _IoReactivexInternalObserversInnerQueuedObserverSupport = { "InnerQueuedObserverSupport", "io.reactivex.internal.observers", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, 9, -1 };
  return &_IoReactivexInternalObserversInnerQueuedObserverSupport;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoReactivexInternalObserversInnerQueuedObserverSupport)
