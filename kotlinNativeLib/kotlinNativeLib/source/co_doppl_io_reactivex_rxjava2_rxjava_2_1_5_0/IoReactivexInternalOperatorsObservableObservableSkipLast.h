//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipLast")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableSkipLast
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipLast 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipLast 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableSkipLast

#if !defined (IoReactivexInternalOperatorsObservableObservableSkipLast_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipLast || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSkipLast))
#define IoReactivexInternalOperatorsObservableObservableSkipLast_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableSkipLast : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  jint skip_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                            withInt:(jint)skip;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSkipLast)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSkipLast_initWithIoReactivexObservableSource_withInt_(IoReactivexInternalOperatorsObservableObservableSkipLast *self, id<IoReactivexObservableSource> source, jint skip);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipLast *new_IoReactivexInternalOperatorsObservableObservableSkipLast_initWithIoReactivexObservableSource_withInt_(id<IoReactivexObservableSource> source, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipLast *create_IoReactivexInternalOperatorsObservableObservableSkipLast_initWithIoReactivexObservableSource_withInt_(id<IoReactivexObservableSource> source, jint skip);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSkipLast)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipLast || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver))
#define IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver_

#define RESTRICT_JavaUtilArrayDeque 1
#define INCLUDE_JavaUtilArrayDeque 1
#include "java/util/ArrayDeque.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver : JavaUtilArrayDeque < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  jint skip_;
  id<IoReactivexDisposablesDisposable> s_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                    withInt:(jint)skip;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver_initWithIoReactivexObserver_withInt_(IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver *self, id<IoReactivexObserver> actual, jint skip);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver *new_IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver_initWithIoReactivexObserver_withInt_(id<IoReactivexObserver> actual, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver *create_IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver_initWithIoReactivexObserver_withInt_(id<IoReactivexObserver> actual, jint skip);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSkipLast_SkipLastObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipLast")
