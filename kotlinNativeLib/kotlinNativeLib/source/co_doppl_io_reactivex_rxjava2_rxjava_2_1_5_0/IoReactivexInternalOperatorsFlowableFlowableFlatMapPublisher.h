//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher))
#define IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher : IoReactivexFlowable {
 @public
  id<OrgReactivestreamsPublisher> source_;
  id<IoReactivexFunctionsFunction> mapper_;
  jboolean delayErrors_;
  jint maxConcurrency_;
  jint bufferSize_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                        withBoolean:(jboolean)delayErrors
                                            withInt:(jint)maxConcurrency
                                            withInt:(jint)bufferSize;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher, source_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher, mapper_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher *self, id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jboolean delayErrors, jint maxConcurrency, jint bufferSize);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher *new_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jboolean delayErrors, jint maxConcurrency, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher *create_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jboolean delayErrors, jint maxConcurrency, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFlatMapPublisher")
