//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableReduceMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableReduceMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableReduceMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableReduceMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableReduceMaybe

#if !defined (IoReactivexInternalOperatorsObservableObservableReduceMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableReduceMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableReduceMaybe))
#define IoReactivexInternalOperatorsObservableObservableReduceMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexObservableSource;

@interface IoReactivexInternalOperatorsObservableObservableReduceMaybe : IoReactivexMaybe {
 @public
  id<IoReactivexObservableSource> source_;
  id<IoReactivexFunctionsBiFunction> reducer_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                 withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)reducer;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableReduceMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableReduceMaybe, source_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableReduceMaybe, reducer_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableReduceMaybe_initWithIoReactivexObservableSource_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableReduceMaybe *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsBiFunction> reducer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableReduceMaybe *new_IoReactivexInternalOperatorsObservableObservableReduceMaybe_initWithIoReactivexObservableSource_withIoReactivexFunctionsBiFunction_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsBiFunction> reducer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableReduceMaybe *create_IoReactivexInternalOperatorsObservableObservableReduceMaybe_initWithIoReactivexObservableSource_withIoReactivexFunctionsBiFunction_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsBiFunction> reducer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableReduceMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableReduceMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver))
#define IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsBiFunction> reducer_;
  jboolean done_;
  id value_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer
              withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)reducer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver, reducer_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver, value_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver *self, id<IoReactivexMaybeObserver> observer, id<IoReactivexFunctionsBiFunction> reducer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver *new_IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> observer, id<IoReactivexFunctionsBiFunction> reducer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver *create_IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> observer, id<IoReactivexFunctionsBiFunction> reducer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableReduceMaybe_ReduceObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableReduceMaybe")
