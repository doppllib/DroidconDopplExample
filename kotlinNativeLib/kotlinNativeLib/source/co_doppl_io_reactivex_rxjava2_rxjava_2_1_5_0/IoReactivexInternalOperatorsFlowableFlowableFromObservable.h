//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromObservable")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFromObservable
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromObservable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromObservable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFromObservable

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFromObservable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromObservable || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFromObservable))
#define IoReactivexInternalOperatorsFlowableFlowableFromObservable_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class IoReactivexObservable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFromObservable : IoReactivexFlowable

#pragma mark Public

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)upstream;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFromObservable)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFromObservable_initWithIoReactivexObservable_(IoReactivexInternalOperatorsFlowableFlowableFromObservable *self, IoReactivexObservable *upstream);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromObservable *new_IoReactivexInternalOperatorsFlowableFlowableFromObservable_initWithIoReactivexObservable_(IoReactivexObservable *upstream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromObservable *create_IoReactivexInternalOperatorsFlowableFlowableFromObservable_initWithIoReactivexObservable_(IoReactivexObservable *upstream);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFromObservable)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromObservable || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver))
#define IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver : NSObject < IoReactivexObserver, OrgReactivestreamsSubscription >

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver *self, id<OrgReactivestreamsSubscriber> s);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver *new_IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver *create_IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> s);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFromObservable_SubscriberObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromObservable")
