//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableConcatMap
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableConcatMap

#if !defined (IoReactivexInternalOperatorsObservableObservableConcatMap_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableConcatMap))
#define IoReactivexInternalOperatorsObservableObservableConcatMap_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@class IoReactivexInternalUtilErrorMode;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableConcatMap : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
  jint bufferSize_;
  IoReactivexInternalUtilErrorMode *delayErrors_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                            withInt:(jint)bufferSize
               withIoReactivexInternalUtilErrorMode:(IoReactivexInternalUtilErrorMode *)delayErrors;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableConcatMap)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap, delayErrors_, IoReactivexInternalUtilErrorMode *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableConcatMap_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(IoReactivexInternalOperatorsObservableObservableConcatMap *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> mapper, jint bufferSize, IoReactivexInternalUtilErrorMode *delayErrors);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap *new_IoReactivexInternalOperatorsObservableObservableConcatMap_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> mapper, jint bufferSize, IoReactivexInternalUtilErrorMode *delayErrors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap *create_IoReactivexInternalOperatorsObservableObservableConcatMap_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> mapper, jint bufferSize, IoReactivexInternalUtilErrorMode *delayErrors);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableConcatMap)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver))
#define IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalDisposablesSequentialDisposable;
@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexInternalFuseableSimpleQueue;

@interface IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  IoReactivexInternalDisposablesSequentialDisposable *sa_;
  id<IoReactivexFunctionsFunction> mapper_;
  id<IoReactivexObserver> inner_;
  jint bufferSize_;
  id<IoReactivexInternalFuseableSimpleQueue> queue_;
  id<IoReactivexDisposablesDisposable> s_;
  volatile_jboolean active_;
  volatile_jboolean disposed_;
  volatile_jboolean done_;
  jint fusionMode_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                    withInt:(jint)bufferSize;

- (void)drain;

- (void)innerComplete;

- (void)innerSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver, sa_, IoReactivexInternalDisposablesSequentialDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver, inner_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver, queue_, id<IoReactivexInternalFuseableSimpleQueue>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jint bufferSize);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *new_IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *create_IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver))
#define IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

@class IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver : NSObject < IoReactivexObserver > {
 @public
  id<IoReactivexObserver> actual_;
  IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *parent_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
withIoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver:(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver, parent_, IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver_initWithIoReactivexObserver_withIoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver *self, id<IoReactivexObserver> actual, IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver *new_IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver_initWithIoReactivexObserver_withIoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_(id<IoReactivexObserver> actual, IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver *create_IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver_initWithIoReactivexObserver_withIoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_(id<IoReactivexObserver> actual, IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableConcatMap_SourceObserver_InnerObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver))
#define IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalDisposablesSequentialDisposable;
@class IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver;
@class IoReactivexInternalUtilAtomicThrowable;
@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexInternalFuseableSimpleQueue;

@interface IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexFunctionsFunction> mapper_;
  jint bufferSize_;
  IoReactivexInternalUtilAtomicThrowable *error_;
  IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver *observer_;
  IoReactivexInternalDisposablesSequentialDisposable *arbiter_;
  jboolean tillTheEnd_;
  id<IoReactivexInternalFuseableSimpleQueue> queue_;
  id<IoReactivexDisposablesDisposable> d_;
  volatile_jboolean active_;
  volatile_jboolean done_;
  volatile_jboolean cancelled_;
  jint sourceMode_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                    withInt:(jint)bufferSize
                                withBoolean:(jboolean)tillTheEnd;

- (void)drain;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, error_, IoReactivexInternalUtilAtomicThrowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, observer_, IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, arbiter_, IoReactivexInternalDisposablesSequentialDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, queue_, id<IoReactivexInternalFuseableSimpleQueue>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jint bufferSize, jboolean tillTheEnd);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *new_IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jint bufferSize, jboolean tillTheEnd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *create_IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jint bufferSize, jboolean tillTheEnd);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver))
#define IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

@class IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver : NSObject < IoReactivexObserver > {
 @public
  id<IoReactivexObserver> actual_;
  IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *parent_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
withIoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver:(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver, parent_, IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver_initWithIoReactivexObserver_withIoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver *self, id<IoReactivexObserver> actual, IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver *new_IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver_initWithIoReactivexObserver_withIoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_(id<IoReactivexObserver> actual, IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver *create_IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver_initWithIoReactivexObserver_withIoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_(id<IoReactivexObserver> actual, IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableConcatMap_ConcatMapDelayErrorObserver_DelayErrorInnerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableConcatMap")
