//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne))
#define IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableTakeLastOne : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_initWithIoReactivexFlowable_(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne *self, IoReactivexFlowable *source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTakeLastOne *new_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_initWithIoReactivexFlowable_(IoReactivexFlowable *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTakeLastOne *create_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_initWithIoReactivexFlowable_(IoReactivexFlowable *source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber_

#define RESTRICT_IoReactivexInternalSubscriptionsDeferredScalarSubscription 1
#define INCLUDE_IoReactivexInternalSubscriptionsDeferredScalarSubscription 1
#include "IoReactivexInternalSubscriptionsDeferredScalarSubscription.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

@class JavaLangThrowable;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber : IoReactivexInternalSubscriptionsDeferredScalarSubscription < IoReactivexFlowableSubscriber > {
 @public
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (void)cancel;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTakeLastOne_TakeLastOneSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTakeLastOne")
