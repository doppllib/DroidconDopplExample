//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableSampleWithObservable
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableSampleWithObservable
#ifdef INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast
#define INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver 1
#endif
#ifdef INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast
#define INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver 1
#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSampleWithObservable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable))
#define IoReactivexInternalOperatorsObservableObservableSampleWithObservable_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableSampleWithObservable : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexObservableSource> other_;
  jboolean emitLast_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other
                                        withBoolean:(jboolean)emitLast;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSampleWithObservable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable, other_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSampleWithObservable_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withBoolean_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable *self, id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other, jboolean emitLast);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable *new_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withBoolean_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other, jboolean emitLast) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable *create_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withBoolean_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other, jboolean emitLast);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver))
#define IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexObservableSource;

@interface IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexObservableSource> sampler_;
  JavaUtilConcurrentAtomicAtomicReference *other_;
  id<IoReactivexDisposablesDisposable> s_;
}

#pragma mark Public

- (void)complete;

- (void)dispose;

- (void)errorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
            withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other;

- (void)completeMain;

- (void)completeOther;

- (void)emit;

- (void)run;

- (jboolean)setOtherWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)o;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver, sampler_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver, other_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver_initWithIoReactivexObserver_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *self, id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver))
#define IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

@class IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver : NSObject < IoReactivexObserver > {
 @public
  IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *parent_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver:(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver, parent_, IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver_initWithIoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver *self, IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver *new_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver_initWithIoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver *create_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver_initWithIoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SamplerObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast))
#define IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast_

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast : IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
            withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other;

- (void)completeMain;

- (void)completeOther;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast_initWithIoReactivexObserver_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast *self, id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast *new_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast_initWithIoReactivexObserver_withIoReactivexObservableSource_(id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast *create_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast_initWithIoReactivexObserver_withIoReactivexObservableSource_(id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainNoLast)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast))
#define IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast_

@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast : IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainObserver {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *wip_;
  volatile_jboolean done_;
}

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
            withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other;

- (void)completeMain;

- (void)completeOther;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast, wip_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast_initWithIoReactivexObserver_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast *self, id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast *new_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast_initWithIoReactivexObserver_withIoReactivexObservableSource_(id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast *create_IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast_initWithIoReactivexObserver_withIoReactivexObservableSource_(id<IoReactivexObserver> actual, id<IoReactivexObservableSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSampleWithObservable_SampleMainEmitLast)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSampleWithObservable")
