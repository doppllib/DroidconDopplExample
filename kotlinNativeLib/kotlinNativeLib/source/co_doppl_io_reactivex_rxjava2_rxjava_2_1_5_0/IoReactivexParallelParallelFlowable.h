//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexParallelParallelFlowable")
#ifdef RESTRICT_IoReactivexParallelParallelFlowable
#define INCLUDE_ALL_IoReactivexParallelParallelFlowable 0
#else
#define INCLUDE_ALL_IoReactivexParallelParallelFlowable 1
#endif
#undef RESTRICT_IoReactivexParallelParallelFlowable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexParallelParallelFlowable_) && (INCLUDE_ALL_IoReactivexParallelParallelFlowable || defined(INCLUDE_IoReactivexParallelParallelFlowable))
#define IoReactivexParallelParallelFlowable_

@class IOSObjectArray;
@class IoReactivexFlowable;
@class IoReactivexParallelParallelFailureHandling;
@class IoReactivexScheduler;
@protocol IoReactivexFunctionsAction;
@protocol IoReactivexFunctionsBiConsumer;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexFunctionsLongConsumer;
@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexParallelParallelTransformer;
@protocol JavaUtilComparator;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexParallelParallelFlowable : NSObject

#pragma mark Public

- (instancetype)init;

- (IoReactivexParallelParallelFlowable * __nonnull)collectWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable> __nonnull)collectionSupplier
                                                      withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer> __nonnull)collector;

- (IoReactivexParallelParallelFlowable * __nonnull)composeWithIoReactivexParallelParallelTransformer:(id<IoReactivexParallelParallelTransformer> __nonnull)composer;

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper;

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                                     withInt:(jint)prefetch;

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapDelayErrorWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                                           withBoolean:(jboolean)tillTheEnd;

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapDelayErrorWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                                               withInt:(jint)prefetch
                                                                                           withBoolean:(jboolean)tillTheEnd;

- (IoReactivexParallelParallelFlowable * __nonnull)doAfterNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onAfterNext;

- (IoReactivexParallelParallelFlowable * __nonnull)doAfterTerminatedWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)onAfterTerminate;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnCancelWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)onCancel;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnCompleteWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)onComplete;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnErrorWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onError;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onNext;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onNext
                                                         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)errorHandler;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onNext
                                             withIoReactivexParallelParallelFailureHandling:(IoReactivexParallelParallelFailureHandling * __nonnull)errorHandler;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnRequestWithIoReactivexFunctionsLongConsumer:(id<IoReactivexFunctionsLongConsumer> __nonnull)onRequest;

- (IoReactivexParallelParallelFlowable * __nonnull)doOnSubscribeWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onSubscribe;

- (IoReactivexParallelParallelFlowable *)filterWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate> __nonnull)predicate;

- (IoReactivexParallelParallelFlowable *)filterWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate> __nonnull)predicate
                                              withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)errorHandler;

- (IoReactivexParallelParallelFlowable *)filterWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate> __nonnull)predicate
                                  withIoReactivexParallelParallelFailureHandling:(IoReactivexParallelParallelFailureHandling * __nonnull)errorHandler;

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper;

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                               withBoolean:(jboolean)delayError;

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                               withBoolean:(jboolean)delayError
                                                                                   withInt:(jint)maxConcurrency;

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                               withBoolean:(jboolean)delayError
                                                                                   withInt:(jint)maxConcurrency
                                                                                   withInt:(jint)prefetch;

+ (IoReactivexParallelParallelFlowable *)fromWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher> __nonnull)source;

+ (IoReactivexParallelParallelFlowable *)fromWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher> __nonnull)source
                                                                     withInt:(jint)parallelism;

+ (IoReactivexParallelParallelFlowable * __nonnull)fromWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher> __nonnull)source
                                                                               withInt:(jint)parallelism
                                                                               withInt:(jint)prefetch;

+ (IoReactivexParallelParallelFlowable * __nonnull)fromArrayWithOrgReactivestreamsPublisherArray:(IOSObjectArray * __nonnull)publishers;

- (IoReactivexParallelParallelFlowable * __nonnull)mapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper;

- (IoReactivexParallelParallelFlowable * __nonnull)mapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                    withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)errorHandler;

- (IoReactivexParallelParallelFlowable * __nonnull)mapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                        withIoReactivexParallelParallelFailureHandling:(IoReactivexParallelParallelFailureHandling * __nonnull)errorHandler;

- (jint)parallelism;

- (IoReactivexFlowable * __nonnull)reduceWithIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)reducer;

- (IoReactivexParallelParallelFlowable * __nonnull)reduceWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable> __nonnull)initialSupplier
                                                     withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)reducer;

- (IoReactivexParallelParallelFlowable * __nonnull)runOnWithIoReactivexScheduler:(IoReactivexScheduler * __nonnull)scheduler;

- (IoReactivexParallelParallelFlowable * __nonnull)runOnWithIoReactivexScheduler:(IoReactivexScheduler * __nonnull)scheduler
                                                                         withInt:(jint)prefetch;

- (IoReactivexFlowable *)sequential;

- (IoReactivexFlowable * __nonnull)sequentialWithInt:(jint)prefetch;

- (IoReactivexFlowable * __nonnull)sequentialDelayError;

- (IoReactivexFlowable * __nonnull)sequentialDelayErrorWithInt:(jint)prefetch;

- (IoReactivexFlowable * __nonnull)sortedWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator;

- (IoReactivexFlowable * __nonnull)sortedWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator
                                                        withInt:(jint)capacityHint;

- (void)subscribeWithOrgReactivestreamsSubscriberArray:(IOSObjectArray * __nonnull)subscribers;

- (id __nonnull)toWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)converter;

- (IoReactivexFlowable * __nonnull)toSortedListWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator;

- (IoReactivexFlowable * __nonnull)toSortedListWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator
                                                              withInt:(jint)capacityHint;

#pragma mark Protected

- (jboolean)validateWithOrgReactivestreamsSubscriberArray:(IOSObjectArray * __nonnull)subscribers;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexParallelParallelFlowable)

FOUNDATION_EXPORT void IoReactivexParallelParallelFlowable_init(IoReactivexParallelParallelFlowable *self);

FOUNDATION_EXPORT IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source);

FOUNDATION_EXPORT IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_(id<OrgReactivestreamsPublisher> source, jint parallelism);

FOUNDATION_EXPORT IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_withInt_(id<OrgReactivestreamsPublisher> source, jint parallelism, jint prefetch);

FOUNDATION_EXPORT IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromArrayWithOrgReactivestreamsPublisherArray_(IOSObjectArray *publishers);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexParallelParallelFlowable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexParallelParallelFlowable")
