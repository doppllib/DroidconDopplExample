//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe))
#define IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe_

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexFunctionsConsumer;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe : NSObject

#pragma mark Public

+ (void)subscribeWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)o;

+ (void)subscribeWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)o
                withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onNext
                withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError
                  withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete;

+ (void)subscribeWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)o
                withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe_subscribeWithOrgReactivestreamsPublisher_withOrgReactivestreamsSubscriber_(id<OrgReactivestreamsPublisher> o, id<OrgReactivestreamsSubscriber> subscriber);

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe_subscribeWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> o);

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe_subscribeWithOrgReactivestreamsPublisher_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(id<OrgReactivestreamsPublisher> o, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBlockingSubscribe")
