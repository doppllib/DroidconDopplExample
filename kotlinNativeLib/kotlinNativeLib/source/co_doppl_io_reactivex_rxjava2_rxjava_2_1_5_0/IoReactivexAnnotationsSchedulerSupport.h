//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexAnnotationsSchedulerSupport")
#ifdef RESTRICT_IoReactivexAnnotationsSchedulerSupport
#define INCLUDE_ALL_IoReactivexAnnotationsSchedulerSupport 0
#else
#define INCLUDE_ALL_IoReactivexAnnotationsSchedulerSupport 1
#endif
#undef RESTRICT_IoReactivexAnnotationsSchedulerSupport

#if !defined (IoReactivexAnnotationsSchedulerSupport_) && (INCLUDE_ALL_IoReactivexAnnotationsSchedulerSupport || defined(INCLUDE_IoReactivexAnnotationsSchedulerSupport))
#define IoReactivexAnnotationsSchedulerSupport_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

@protocol IoReactivexAnnotationsSchedulerSupport < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;

@end

@interface IoReactivexAnnotationsSchedulerSupport : NSObject < IoReactivexAnnotationsSchedulerSupport > {
 @public
  NSString *value_;
}

+ (NSString *)NONE;

+ (NSString *)CUSTOM;

+ (NSString *)COMPUTATION;

+ (NSString *)IO;

+ (NSString *)NEW_THREAD;

+ (NSString *)TRAMPOLINE;

+ (NSString *)SINGLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexAnnotationsSchedulerSupport)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_NONE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_NONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, NONE, NSString *)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_CUSTOM();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_CUSTOM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, CUSTOM, NSString *)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_COMPUTATION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_COMPUTATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, COMPUTATION, NSString *)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_IO();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_IO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, IO, NSString *)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_NEW_THREAD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_NEW_THREAD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, NEW_THREAD, NSString *)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_TRAMPOLINE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_TRAMPOLINE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, TRAMPOLINE, NSString *)

inline NSString *IoReactivexAnnotationsSchedulerSupport_get_SINGLE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *IoReactivexAnnotationsSchedulerSupport_SINGLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexAnnotationsSchedulerSupport, SINGLE, NSString *)

FOUNDATION_EXPORT id<IoReactivexAnnotationsSchedulerSupport> create_IoReactivexAnnotationsSchedulerSupport(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexAnnotationsSchedulerSupport)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexAnnotationsSchedulerSupport")
