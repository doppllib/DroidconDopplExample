//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAt")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableElementAt
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAt 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAt 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableElementAt

#if !defined (IoReactivexInternalOperatorsObservableObservableElementAt_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAt || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableElementAt))
#define IoReactivexInternalOperatorsObservableObservableElementAt_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableElementAt : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  jlong index_;
  id defaultValue_;
  jboolean errorOnFewer_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                           withLong:(jlong)index
                                             withId:(id)defaultValue
                                        withBoolean:(jboolean)errorOnFewer;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableElementAt)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAt, defaultValue_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableElementAt_initWithIoReactivexObservableSource_withLong_withId_withBoolean_(IoReactivexInternalOperatorsObservableObservableElementAt *self, id<IoReactivexObservableSource> source, jlong index, id defaultValue, jboolean errorOnFewer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAt *new_IoReactivexInternalOperatorsObservableObservableElementAt_initWithIoReactivexObservableSource_withLong_withId_withBoolean_(id<IoReactivexObservableSource> source, jlong index, id defaultValue, jboolean errorOnFewer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAt *create_IoReactivexInternalOperatorsObservableObservableElementAt_initWithIoReactivexObservableSource_withLong_withId_withBoolean_(id<IoReactivexObservableSource> source, jlong index, id defaultValue, jboolean errorOnFewer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableElementAt)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAt || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver))
#define IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  jlong index_;
  id defaultValue_;
  jboolean errorOnFewer_;
  id<IoReactivexDisposablesDisposable> s_;
  jlong count_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                   withLong:(jlong)index
                                     withId:(id)defaultValue
                                withBoolean:(jboolean)errorOnFewer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver, defaultValue_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver_initWithIoReactivexObserver_withLong_withId_withBoolean_(IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver *self, id<IoReactivexObserver> actual, jlong index, id defaultValue, jboolean errorOnFewer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver *new_IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver_initWithIoReactivexObserver_withLong_withId_withBoolean_(id<IoReactivexObserver> actual, jlong index, id defaultValue, jboolean errorOnFewer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver *create_IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver_initWithIoReactivexObserver_withLong_withId_withBoolean_(id<IoReactivexObserver> actual, jlong index, id defaultValue, jboolean errorOnFewer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableElementAt_ElementAtObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAt")
