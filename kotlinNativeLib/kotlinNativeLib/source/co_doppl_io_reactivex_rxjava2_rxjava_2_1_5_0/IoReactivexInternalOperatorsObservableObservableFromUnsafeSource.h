//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource

#if !defined (IoReactivexInternalOperatorsObservableObservableFromUnsafeSource_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource))
#define IoReactivexInternalOperatorsObservableObservableFromUnsafeSource_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFromUnsafeSource : IoReactivexObservable {
 @public
  id<IoReactivexObservableSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromUnsafeSource)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromUnsafeSource, source_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromUnsafeSource_initWithIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableFromUnsafeSource *self, id<IoReactivexObservableSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromUnsafeSource *new_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromUnsafeSource *create_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromUnsafeSource)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromUnsafeSource")
