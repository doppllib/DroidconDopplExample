//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableDefer")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableDefer
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableDefer 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableDefer 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableDefer

#if !defined (IoReactivexInternalOperatorsCompletableCompletableDefer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableDefer || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableDefer))
#define IoReactivexInternalOperatorsCompletableCompletableDefer_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

@protocol IoReactivexCompletableObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsCompletableCompletableDefer : IoReactivexCompletable {
 @public
  id<JavaUtilConcurrentCallable> completableSupplier_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)completableSupplier;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableDefer)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableDefer, completableSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableDefer_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsCompletableCompletableDefer *self, id<JavaUtilConcurrentCallable> completableSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableDefer *new_IoReactivexInternalOperatorsCompletableCompletableDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> completableSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableDefer *create_IoReactivexInternalOperatorsCompletableCompletableDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> completableSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableDefer)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableDefer")
