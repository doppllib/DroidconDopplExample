//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDistinct")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDistinct
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDistinct 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDistinct 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDistinct

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDistinct_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDistinct || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDistinct))
#define IoReactivexInternalOperatorsFlowableFlowableDistinct_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsFunction;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDistinct : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> keySelector_;
  id<JavaUtilConcurrentCallable> collectionSupplier_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)keySelector
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)collectionSupplier;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDistinct)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDistinct, keySelector_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDistinct, collectionSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDistinct_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsFlowableFlowableDistinct *self, IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilConcurrentCallable> collectionSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDistinct *new_IoReactivexInternalOperatorsFlowableFlowableDistinct_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilConcurrentCallable> collectionSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDistinct *create_IoReactivexInternalOperatorsFlowableFlowableDistinct_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilConcurrentCallable> collectionSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDistinct)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDistinct || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersBasicFuseableSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersBasicFuseableSubscriber 1
#include "IoReactivexInternalSubscribersBasicFuseableSubscriber.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol JavaUtilCollection;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber : IoReactivexInternalSubscribersBasicFuseableSubscriber {
 @public
  id<JavaUtilCollection> collection_;
  id<IoReactivexFunctionsFunction> keySelector_;
}

#pragma mark Public

- (void)clear;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)keySelector
                              withJavaUtilCollection:(id<JavaUtilCollection>)collection;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber, collection_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber, keySelector_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withJavaUtilCollection_(IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withJavaUtilCollection_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilCollection> collection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withJavaUtilCollection_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilCollection> collection);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDistinct_DistinctSubscriber)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDistinct")
