//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableBlockingObservableNext
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableBlockingObservableNext

#if !defined (IoReactivexInternalOperatorsObservableBlockingObservableNext_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext || defined(INCLUDE_IoReactivexInternalOperatorsObservableBlockingObservableNext))
#define IoReactivexInternalOperatorsObservableBlockingObservableNext_

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@protocol IoReactivexObservableSource;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

@interface IoReactivexInternalOperatorsObservableBlockingObservableNext : NSObject < JavaLangIterable > {
 @public
  id<IoReactivexObservableSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source;

- (id<JavaUtilIterator>)iterator;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableBlockingObservableNext)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableBlockingObservableNext, source_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableBlockingObservableNext_initWithIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableBlockingObservableNext *self, id<IoReactivexObservableSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableBlockingObservableNext *new_IoReactivexInternalOperatorsObservableBlockingObservableNext_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableBlockingObservableNext *create_IoReactivexInternalOperatorsObservableBlockingObservableNext_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableBlockingObservableNext)

#endif

#if !defined (IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext || defined(INCLUDE_IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator))
#define IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver;
@protocol IoReactivexObservableSource;
@protocol JavaUtilFunctionConsumer;

@interface IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator : NSObject < JavaUtilIterator >

#pragma mark Public

- (jboolean)hasNext;

- (id)next;

- (void)remove;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)items
withIoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver:(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator_initWithIoReactivexObservableSource_withIoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator *self, id<IoReactivexObservableSource> items, IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *observer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator *new_IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator_initWithIoReactivexObservableSource_withIoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_(id<IoReactivexObservableSource> items, IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *observer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator *create_IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator_initWithIoReactivexObservableSource_withIoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_(id<IoReactivexObservableSource> items, IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *observer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextIterator)

#endif

#if !defined (IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext || defined(INCLUDE_IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver))
#define IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_

#define RESTRICT_IoReactivexObserversDisposableObserver 1
#define INCLUDE_IoReactivexObserversDisposableObserver 1
#include "IoReactivexObserversDisposableObserver.h"

@class IoReactivexNotification;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicInteger;

@interface IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver : IoReactivexObserversDisposableObserver {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *waiting_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(IoReactivexNotification *)args;

- (IoReactivexNotification *)takeNext;

#pragma mark Package-Private

- (instancetype)init;

- (void)setWaiting;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver, waiting_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_init(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *self);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *new_IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver *create_IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableBlockingObservableNext_NextObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableBlockingObservableNext")
