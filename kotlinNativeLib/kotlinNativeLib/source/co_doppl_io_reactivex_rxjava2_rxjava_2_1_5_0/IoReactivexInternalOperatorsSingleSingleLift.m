//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsSingleSingleLift.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "IoReactivexSingleOperator.h"
#include "IoReactivexSingleSource.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@implementation IoReactivexInternalOperatorsSingleSingleLift

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
                  withIoReactivexSingleOperator:(id<IoReactivexSingleOperator>)onLift {
  IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(self, source, onLift);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  id<IoReactivexSingleObserver> sr;
  @try {
    sr = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexSingleOperator>) nil_chk(onLift_)) applyWithIoReactivexSingleObserver:s], @"The onLift returned a null SingleObserver");
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexSingleObserver_(ex, s);
    return;
  }
  [((id<IoReactivexSingleSource>) nil_chk(source_)) subscribeWithIoReactivexSingleObserver:sr];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(onLift_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleSource:withIoReactivexSingleOperator:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexSingleSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "onLift_", "LIoReactivexSingleOperator;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleSource;LIoReactivexSingleOperator;", "(Lio/reactivex/SingleSource<TT;>;Lio/reactivex/SingleOperator<+TR;-TT;>;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TR;>;)V", "Lio/reactivex/SingleSource<TT;>;", "Lio/reactivex/SingleOperator<+TR;-TT;>;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/Single<TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleLift = { "SingleLift", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleLift;
}

@end

void IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(IoReactivexInternalOperatorsSingleSingleLift *self, id<IoReactivexSingleSource> source, id<IoReactivexSingleOperator> onLift) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->onLift_, onLift);
}

IoReactivexInternalOperatorsSingleSingleLift *new_IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(id<IoReactivexSingleSource> source, id<IoReactivexSingleOperator> onLift) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleLift, initWithIoReactivexSingleSource_withIoReactivexSingleOperator_, source, onLift)
}

IoReactivexInternalOperatorsSingleSingleLift *create_IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(id<IoReactivexSingleSource> source, id<IoReactivexSingleOperator> onLift) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleLift, initWithIoReactivexSingleSource_withIoReactivexSingleOperator_, source, onLift)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleLift)
