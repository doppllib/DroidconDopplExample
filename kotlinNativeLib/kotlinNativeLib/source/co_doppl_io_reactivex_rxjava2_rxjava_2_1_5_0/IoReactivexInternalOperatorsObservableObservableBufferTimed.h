//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableBufferTimed
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableBufferTimed

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferTimed_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferTimed))
#define IoReactivexInternalOperatorsObservableObservableBufferTimed_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@class IoReactivexScheduler;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableBufferTimed : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  jlong timespan_;
  jlong timeskip_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jint maxSize_;
  jboolean restartTimerOnMaxSize_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                           withLong:(jlong)timespan
                                           withLong:(jlong)timeskip
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                           withIoReactivexScheduler:(IoReactivexScheduler *)scheduler
                     withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                            withInt:(jint)maxSize
                                        withBoolean:(jboolean)restartTimerOnMaxSize;

- (id<JavaUtilCollection>)blockingFirst;

- (id<JavaUtilCollection>)blockingFirstWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingLast;

- (id<JavaUtilCollection>)blockingLastWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingSingle;

- (id<JavaUtilCollection>)blockingSingleWithId:(id<JavaUtilCollection>)arg0;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferTimed)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed, scheduler_, IoReactivexScheduler *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed, bufferSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferTimed_initWithIoReactivexObservableSource_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withJavaUtilConcurrentCallable_withInt_withBoolean_(IoReactivexInternalOperatorsObservableObservableBufferTimed *self, id<IoReactivexObservableSource> source, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, id<JavaUtilConcurrentCallable> bufferSupplier, jint maxSize, jboolean restartTimerOnMaxSize);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed *new_IoReactivexInternalOperatorsObservableObservableBufferTimed_initWithIoReactivexObservableSource_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withJavaUtilConcurrentCallable_withInt_withBoolean_(id<IoReactivexObservableSource> source, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, id<JavaUtilConcurrentCallable> bufferSupplier, jint maxSize, jboolean restartTimerOnMaxSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed *create_IoReactivexInternalOperatorsObservableObservableBufferTimed_initWithIoReactivexObservableSource_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withJavaUtilConcurrentCallable_withInt_withBoolean_(id<IoReactivexObservableSource> source, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, id<JavaUtilConcurrentCallable> bufferSupplier, jint maxSize, jboolean restartTimerOnMaxSize);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferTimed)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver_

#define RESTRICT_IoReactivexInternalObserversQueueDrainObserver 1
#define INCLUDE_IoReactivexInternalObserversQueueDrainObserver 1
#include "IoReactivexInternalObserversQueueDrainObserver.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexScheduler;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver : IoReactivexInternalObserversQueueDrainObserver < JavaLangRunnable, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jlong timespan_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
  id<IoReactivexDisposablesDisposable> s_;
  id<JavaUtilCollection> buffer_;
  JavaUtilConcurrentAtomicAtomicReference *timer_;
}

#pragma mark Public

- (void)acceptWithIoReactivexObserver:(id<IoReactivexObserver>)a
                               withId:(id<JavaUtilCollection>)v;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                   withLong:(jlong)timespan
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0
withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver, scheduler_, IoReactivexScheduler *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver, buffer_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver, timer_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver *self, id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver *new_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver *create_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactUnboundedObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_

#define RESTRICT_IoReactivexInternalObserversQueueDrainObserver 1
#define INCLUDE_IoReactivexInternalObserversQueueDrainObserver 1
#include "IoReactivexInternalObserversQueueDrainObserver.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexScheduler_Worker;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilList;

@interface IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver : IoReactivexInternalObserversQueueDrainObserver < JavaLangRunnable, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jlong timespan_;
  jlong timeskip_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler_Worker *w_;
  id<JavaUtilList> buffers_;
  id<IoReactivexDisposablesDisposable> s_;
}

#pragma mark Public

- (void)acceptWithIoReactivexObserver:(id<IoReactivexObserver>)a
                               withId:(id<JavaUtilCollection>)v;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                   withLong:(jlong)timespan
                                   withLong:(jlong)timeskip
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
            withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)w;

- (void)clear;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0
withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver, w_, IoReactivexScheduler_Worker *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver, buffers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *self, id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *new_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *create_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer))
#define IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver:(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *)outer$
                                                                                       withJavaUtilCollection:(id<JavaUtilCollection>)b;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer_initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer *self, IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *outer$, id<JavaUtilCollection> b);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer *new_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer_initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *outer$, id<JavaUtilCollection> b) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer *create_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer_initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *outer$, id<JavaUtilCollection> b);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBuffer)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit))
#define IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver:(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *)outer$
                                                                                       withJavaUtilCollection:(id<JavaUtilCollection>)buffer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit_initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit *self, IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *outer$, id<JavaUtilCollection> buffer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit *new_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit_initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *outer$, id<JavaUtilCollection> buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit *create_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit_initWithIoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver *outer$, id<JavaUtilCollection> buffer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferSkipBoundedObserver_RemoveFromBufferEmit)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver_

#define RESTRICT_IoReactivexInternalObserversQueueDrainObserver 1
#define INCLUDE_IoReactivexInternalObserversQueueDrainObserver 1
#include "IoReactivexInternalObserversQueueDrainObserver.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexScheduler_Worker;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver : IoReactivexInternalObserversQueueDrainObserver < JavaLangRunnable, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jlong timespan_;
  JavaUtilConcurrentTimeUnit *unit_;
  jint maxSize_;
  jboolean restartTimerOnMaxSize_;
  IoReactivexScheduler_Worker *w_;
  id<JavaUtilCollection> buffer_;
  id<IoReactivexDisposablesDisposable> timer_;
  id<IoReactivexDisposablesDisposable> s_;
  jlong producerIndex_;
  jlong consumerIndex_;
}

#pragma mark Public

- (void)acceptWithIoReactivexObserver:(id<IoReactivexObserver>)a
                               withId:(id<JavaUtilCollection>)v;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                   withLong:(jlong)timespan
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                    withInt:(jint)maxSize
                                withBoolean:(jboolean)restartOnMaxSize
            withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)w;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0
withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver, w_, IoReactivexScheduler_Worker *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver, buffer_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver, timer_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withInt_withBoolean_withIoReactivexScheduler_Worker_(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver *self, id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint maxSize, jboolean restartOnMaxSize, IoReactivexScheduler_Worker *w);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver *new_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withInt_withBoolean_withIoReactivexScheduler_Worker_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint maxSize, jboolean restartOnMaxSize, IoReactivexScheduler_Worker *w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver *create_IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withInt_withBoolean_withIoReactivexScheduler_Worker_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint maxSize, jboolean restartOnMaxSize, IoReactivexScheduler_Worker *w);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferTimed_BufferExactBoundedObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferTimed")
