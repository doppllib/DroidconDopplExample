//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilEndConsumerHelper")
#ifdef RESTRICT_IoReactivexInternalUtilEndConsumerHelper
#define INCLUDE_ALL_IoReactivexInternalUtilEndConsumerHelper 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilEndConsumerHelper 1
#endif
#undef RESTRICT_IoReactivexInternalUtilEndConsumerHelper

#if !defined (IoReactivexInternalUtilEndConsumerHelper_) && (INCLUDE_ALL_IoReactivexInternalUtilEndConsumerHelper || defined(INCLUDE_IoReactivexInternalUtilEndConsumerHelper))
#define IoReactivexInternalUtilEndConsumerHelper_

@class IOSClass;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexDisposablesDisposable;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalUtilEndConsumerHelper : NSObject

#pragma mark Public

+ (NSString *)composeMessageWithNSString:(NSString *)consumer;

+ (void)reportDoubleSubscriptionWithIOSClass:(IOSClass *)consumer;

+ (jboolean)setOnceWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)upstream
                          withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)next
                                                  withIOSClass:(IOSClass *)observer;

+ (jboolean)setOnceWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)upstream
                            withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)next
                                                  withIOSClass:(IOSClass *)subscriber;

+ (jboolean)validateWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)upstream
                    withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)next
                                            withIOSClass:(IOSClass *)observer;

+ (jboolean)validateWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)upstream
                    withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)next
                                          withIOSClass:(IOSClass *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilEndConsumerHelper)

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilEndConsumerHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_withIOSClass_(id<IoReactivexDisposablesDisposable> upstream, id<IoReactivexDisposablesDisposable> next, IOSClass *observer);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilEndConsumerHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexDisposablesDisposable_withIOSClass_(JavaUtilConcurrentAtomicAtomicReference *upstream, id<IoReactivexDisposablesDisposable> next, IOSClass *observer);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilEndConsumerHelper_validateWithOrgReactivestreamsSubscription_withOrgReactivestreamsSubscription_withIOSClass_(id<OrgReactivestreamsSubscription> upstream, id<OrgReactivestreamsSubscription> next, IOSClass *subscriber);

FOUNDATION_EXPORT jboolean IoReactivexInternalUtilEndConsumerHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_withIOSClass_(JavaUtilConcurrentAtomicAtomicReference *upstream, id<OrgReactivestreamsSubscription> next, IOSClass *subscriber);

FOUNDATION_EXPORT NSString *IoReactivexInternalUtilEndConsumerHelper_composeMessageWithNSString_(NSString *consumer);

FOUNDATION_EXPORT void IoReactivexInternalUtilEndConsumerHelper_reportDoubleSubscriptionWithIOSClass_(IOSClass *consumer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilEndConsumerHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilEndConsumerHelper")
