//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexSubjectsSerializedSubject")
#ifdef RESTRICT_IoReactivexSubjectsSerializedSubject
#define INCLUDE_ALL_IoReactivexSubjectsSerializedSubject 0
#else
#define INCLUDE_ALL_IoReactivexSubjectsSerializedSubject 1
#endif
#undef RESTRICT_IoReactivexSubjectsSerializedSubject

#if !defined (IoReactivexSubjectsSerializedSubject_) && (INCLUDE_ALL_IoReactivexSubjectsSerializedSubject || defined(INCLUDE_IoReactivexSubjectsSerializedSubject))
#define IoReactivexSubjectsSerializedSubject_

#define RESTRICT_IoReactivexSubjectsSubject 1
#define INCLUDE_IoReactivexSubjectsSubject 1
#include "IoReactivexSubjectsSubject.h"

#define RESTRICT_IoReactivexInternalUtilAppendOnlyLinkedArrayList 1
#define INCLUDE_IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate 1
#include "IoReactivexInternalUtilAppendOnlyLinkedArrayList.h"

@class IoReactivexInternalUtilAppendOnlyLinkedArrayList;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol IoReactivexObserver;

@interface IoReactivexSubjectsSerializedSubject : IoReactivexSubjectsSubject < IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate > {
 @public
  IoReactivexSubjectsSubject *actual_;
  jboolean emitting_;
  IoReactivexInternalUtilAppendOnlyLinkedArrayList *queue_;
  volatile_jboolean done_;
}

#pragma mark Public

- (JavaLangThrowable *)getThrowable;

- (jboolean)hasComplete;

- (jboolean)hasObservers;

- (jboolean)hasThrowable;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (jboolean)testWithId:(id)o;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSubjectsSubject:(IoReactivexSubjectsSubject *)actual;

- (void)emitLoop;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexSubjectsSerializedSubject)

J2OBJC_FIELD_SETTER(IoReactivexSubjectsSerializedSubject, actual_, IoReactivexSubjectsSubject *)
J2OBJC_FIELD_SETTER(IoReactivexSubjectsSerializedSubject, queue_, IoReactivexInternalUtilAppendOnlyLinkedArrayList *)

FOUNDATION_EXPORT void IoReactivexSubjectsSerializedSubject_initWithIoReactivexSubjectsSubject_(IoReactivexSubjectsSerializedSubject *self, IoReactivexSubjectsSubject *actual);

FOUNDATION_EXPORT IoReactivexSubjectsSerializedSubject *new_IoReactivexSubjectsSerializedSubject_initWithIoReactivexSubjectsSubject_(IoReactivexSubjectsSubject *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexSubjectsSerializedSubject *create_IoReactivexSubjectsSerializedSubject_initWithIoReactivexSubjectsSubject_(IoReactivexSubjectsSubject *actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexSubjectsSerializedSubject)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexSubjectsSerializedSubject")
