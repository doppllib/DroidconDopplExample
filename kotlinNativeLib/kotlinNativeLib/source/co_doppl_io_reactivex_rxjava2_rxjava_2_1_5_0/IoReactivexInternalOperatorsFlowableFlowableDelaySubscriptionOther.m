//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexFlowable.h"
#include "IoReactivexFlowableSubscriber.h"
#include "IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther.h"
#include "IoReactivexInternalSubscriptionsSubscriptionArbiter.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsPublisher.h"
#include "OrgReactivestreamsSubscriber.h"
#include "OrgReactivestreamsSubscription.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"

@interface IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber () {
 @public
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *this$0_;
}

@end

@interface IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription () {
 @public
  id<OrgReactivestreamsSubscription> s_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription, s_, id<OrgReactivestreamsSubscription>)

@interface IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber () {
 @public
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *this$0_;
}

@end

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)main
                    withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(self, main, other);
  return self;
}

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)child {
  IoReactivexInternalSubscriptionsSubscriptionArbiter *serial = create_IoReactivexInternalSubscriptionsSubscriptionArbiter_init();
  [((id<OrgReactivestreamsSubscriber>) nil_chk(child)) onSubscribeWithOrgReactivestreamsSubscription:serial];
  id<IoReactivexFlowableSubscriber> otherSubscriber = create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(self, serial, child);
  [((id<OrgReactivestreamsPublisher>) nil_chk(other_)) subscribeWithOrgReactivestreamsSubscriber:otherSubscriber];
}

- (void)dealloc {
  RELEASE_(main_);
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsPublisher:withOrgReactivestreamsPublisher:);
  methods[1].selector = @selector(subscribeActualWithOrgReactivestreamsSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "main_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "other_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsPublisher;LOrgReactivestreamsPublisher;", "(Lorg/reactivestreams/Publisher<+TT;>;Lorg/reactivestreams/Publisher<TU;>;)V", "subscribeActual", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TT;>;)V", "Lorg/reactivestreams/Publisher<+TT;>;", "Lorg/reactivestreams/Publisher<TU;>;", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/Flowable<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther = { "FlowableDelaySubscriptionOther", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *self, id<OrgReactivestreamsPublisher> main, id<OrgReactivestreamsPublisher> other) {
  IoReactivexFlowable_init(self);
  JreStrongAssign(&self->main_, main);
  JreStrongAssign(&self->other_, other);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> main, id<OrgReactivestreamsPublisher> other) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther, initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_, main, other)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> main, id<OrgReactivestreamsPublisher> other) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther, initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_, main, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther)

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *)outer$
                                   withIoReactivexInternalSubscriptionsSubscriptionArbiter:(IoReactivexInternalSubscriptionsSubscriptionArbiter *)serial
                                                          withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)child {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(self, outer$, serial, child);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  [((IoReactivexInternalSubscriptionsSubscriptionArbiter *) nil_chk(serial_)) setSubscriptionWithOrgReactivestreamsSubscription:create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_(self, s)];
  [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onNextWithId:(id)t {
  [self onComplete];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (done_) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(e);
    return;
  }
  done_ = true;
  [((id<OrgReactivestreamsSubscriber>) nil_chk(child_)) onErrorWithJavaLangThrowable:e];
}

- (void)onComplete {
  if (done_) {
    return;
  }
  done_ = true;
  [((id<OrgReactivestreamsPublisher>) nil_chk(this$0_->main_)) subscribeWithOrgReactivestreamsSubscriber:create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_(self)];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(serial_);
  RELEASE_(child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther:withIoReactivexInternalSubscriptionsSubscriptionArbiter:withOrgReactivestreamsSubscriber:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "serial_", "LIoReactivexInternalSubscriptionsSubscriptionArbiter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "child_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalSubscriptionsSubscriptionArbiter;LOrgReactivestreamsSubscriber;", "(Lio/reactivex/internal/subscriptions/SubscriptionArbiter;Lorg/reactivestreams/Subscriber<-TT;>;)V", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TU;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther<TT;TU;>;", "Lorg/reactivestreams/Subscriber<-TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther;", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription;LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber;", "Ljava/lang/Object;Lio/reactivex/FlowableSubscriber<TU;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber = { "DelaySubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x10, 5, 4, 11, 12, -1, 13, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *serial, id<OrgReactivestreamsSubscriber> child) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->serial_, serial);
  JreStrongAssign(&self->child_, child);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *serial, id<OrgReactivestreamsSubscriber> child) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_, outer$, serial, child)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *serial, id<OrgReactivestreamsSubscriber> child) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_, outer$, serial, child)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber)

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *)outer$
                                                                        withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_(self, outer$, s);
  return self;
}

- (void)requestWithLong:(jlong)n {
}

- (void)cancel {
  [((id<OrgReactivestreamsSubscription>) nil_chk(s_)) cancel];
}

- (void)dealloc {
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber:withOrgReactivestreamsSubscription:);
  methods[1].selector = @selector(requestWithLong:);
  methods[2].selector = @selector(cancel);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s_", "LOrgReactivestreamsSubscription;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscription;", "request", "J", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription = { "DelaySubscription", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x10, 3, 1, 3, -1, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *outer$, id<OrgReactivestreamsSubscription> s) {
  NSObject_init(self);
  JreStrongAssign(&self->s_, s);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *outer$, id<OrgReactivestreamsSubscription> s) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_, outer$, s)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *outer$, id<OrgReactivestreamsSubscription> s) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_withOrgReactivestreamsSubscription_, outer$, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_DelaySubscription)

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *)outer$ {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_(self, outer$);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  [((IoReactivexInternalSubscriptionsSubscriptionArbiter *) nil_chk(this$0_->serial_)) setSubscriptionWithOrgReactivestreamsSubscription:s];
}

- (void)onNextWithId:(id)t {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(this$0_->child_)) onNextWithId:t];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(this$0_->child_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(this$0_->child_)) onComplete];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber;", "Ljava/lang/Object;Lio/reactivex/FlowableSubscriber<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber = { "OnCompleteSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x10, 5, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_, outer$)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_DelaySubscriber_OnCompleteSubscriber)
