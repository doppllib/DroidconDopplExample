//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource

#if !defined (IoReactivexInternalOperatorsSingleSingleFromUnsafeSource_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource))
#define IoReactivexInternalOperatorsSingleSingleFromUnsafeSource_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleFromUnsafeSource : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleFromUnsafeSource)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleFromUnsafeSource, source_, id<IoReactivexSingleSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleFromUnsafeSource_initWithIoReactivexSingleSource_(IoReactivexInternalOperatorsSingleSingleFromUnsafeSource *self, id<IoReactivexSingleSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleFromUnsafeSource *new_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource_initWithIoReactivexSingleSource_(id<IoReactivexSingleSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleFromUnsafeSource *create_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource_initWithIoReactivexSingleSource_(id<IoReactivexSingleSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleFromUnsafeSource)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleFromUnsafeSource")
