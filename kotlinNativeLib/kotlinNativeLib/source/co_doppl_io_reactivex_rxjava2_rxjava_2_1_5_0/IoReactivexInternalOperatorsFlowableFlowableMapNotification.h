//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMapNotification")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableMapNotification
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMapNotification 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMapNotification 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableMapNotification

#if !defined (IoReactivexInternalOperatorsFlowableFlowableMapNotification_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMapNotification || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableMapNotification))
#define IoReactivexInternalOperatorsFlowableFlowableMapNotification_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsFunction;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableMapNotification : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> onNextMapper_;
  id<IoReactivexFunctionsFunction> onErrorMapper_;
  id<JavaUtilConcurrentCallable> onCompleteSupplier_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)onNextMapper
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)onErrorMapper
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)onCompleteSupplier;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableMapNotification)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableMapNotification, onNextMapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableMapNotification, onErrorMapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableMapNotification, onCompleteSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableMapNotification_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsFlowableFlowableMapNotification *self, IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> onNextMapper, id<IoReactivexFunctionsFunction> onErrorMapper, id<JavaUtilConcurrentCallable> onCompleteSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMapNotification *new_IoReactivexInternalOperatorsFlowableFlowableMapNotification_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> onNextMapper, id<IoReactivexFunctionsFunction> onErrorMapper, id<JavaUtilConcurrentCallable> onCompleteSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMapNotification *create_IoReactivexInternalOperatorsFlowableFlowableMapNotification_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> onNextMapper, id<IoReactivexFunctionsFunction> onErrorMapper, id<JavaUtilConcurrentCallable> onCompleteSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableMapNotification)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMapNotification || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersSinglePostCompleteSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersSinglePostCompleteSubscriber 1
#include "IoReactivexInternalSubscribersSinglePostCompleteSubscriber.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber : IoReactivexInternalSubscribersSinglePostCompleteSubscriber {
 @public
  id<IoReactivexFunctionsFunction> onNextMapper_;
  id<IoReactivexFunctionsFunction> onErrorMapper_;
  id<JavaUtilConcurrentCallable> onCompleteSupplier_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)onNextMapper
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)onErrorMapper
                      withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)onCompleteSupplier;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber, onNextMapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber, onErrorMapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber, onCompleteSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> onNextMapper, id<IoReactivexFunctionsFunction> onErrorMapper, id<JavaUtilConcurrentCallable> onCompleteSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> onNextMapper, id<IoReactivexFunctionsFunction> onErrorMapper, id<JavaUtilConcurrentCallable> onCompleteSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> onNextMapper, id<IoReactivexFunctionsFunction> onErrorMapper, id<JavaUtilConcurrentCallable> onCompleteSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableMapNotification_MapNotificationSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMapNotification")
