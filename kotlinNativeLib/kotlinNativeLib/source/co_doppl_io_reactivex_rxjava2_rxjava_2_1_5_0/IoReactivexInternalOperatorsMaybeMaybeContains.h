//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeContains")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeContains
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeContains 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeContains 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeContains

#if !defined (IoReactivexInternalOperatorsMaybeMaybeContains_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeContains || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeContains))
#define IoReactivexInternalOperatorsMaybeMaybeContains_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

#define RESTRICT_IoReactivexInternalFuseableHasUpstreamMaybeSource 1
#define INCLUDE_IoReactivexInternalFuseableHasUpstreamMaybeSource 1
#include "IoReactivexInternalFuseableHasUpstreamMaybeSource.h"

@class JavaLangBoolean;
@protocol IoReactivexMaybeSource;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeContains : IoReactivexSingle < IoReactivexInternalFuseableHasUpstreamMaybeSource > {
 @public
  id<IoReactivexMaybeSource> source_;
  id value_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
                                        withId:(id)value;

- (JavaLangBoolean *)blockingGet;

- (id<IoReactivexMaybeSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeContains)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeContains, source_, id<IoReactivexMaybeSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeContains, value_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeContains_initWithIoReactivexMaybeSource_withId_(IoReactivexInternalOperatorsMaybeMaybeContains *self, id<IoReactivexMaybeSource> source, id value);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeContains *new_IoReactivexInternalOperatorsMaybeMaybeContains_initWithIoReactivexMaybeSource_withId_(id<IoReactivexMaybeSource> source, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeContains *create_IoReactivexInternalOperatorsMaybeMaybeContains_initWithIoReactivexMaybeSource_withId_(id<IoReactivexMaybeSource> source, id value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeContains)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeContains || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id value_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                                           withId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver, value_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver_initWithIoReactivexSingleObserver_withId_(IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver *self, id<IoReactivexSingleObserver> actual, id value);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver_initWithIoReactivexSingleObserver_withId_(id<IoReactivexSingleObserver> actual, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver_initWithIoReactivexSingleObserver_withId_(id<IoReactivexSingleObserver> actual, id value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeContains_ContainsMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeContains")
