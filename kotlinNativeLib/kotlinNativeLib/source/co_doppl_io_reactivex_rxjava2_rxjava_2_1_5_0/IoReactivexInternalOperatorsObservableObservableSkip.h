//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkip")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableSkip
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkip 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkip 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableSkip

#if !defined (IoReactivexInternalOperatorsObservableObservableSkip_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkip || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSkip))
#define IoReactivexInternalOperatorsObservableObservableSkip_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableSkip : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  jlong n_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                           withLong:(jlong)n;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSkip)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSkip_initWithIoReactivexObservableSource_withLong_(IoReactivexInternalOperatorsObservableObservableSkip *self, id<IoReactivexObservableSource> source, jlong n);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkip *new_IoReactivexInternalOperatorsObservableObservableSkip_initWithIoReactivexObservableSource_withLong_(id<IoReactivexObservableSource> source, jlong n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkip *create_IoReactivexInternalOperatorsObservableObservableSkip_initWithIoReactivexObservableSource_withLong_(id<IoReactivexObservableSource> source, jlong n);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSkip)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkip || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver))
#define IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  jlong remaining_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                   withLong:(jlong)n;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver_initWithIoReactivexObserver_withLong_(IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver *self, id<IoReactivexObserver> actual, jlong n);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver *new_IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver_initWithIoReactivexObserver_withLong_(id<IoReactivexObserver> actual, jlong n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver *create_IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver_initWithIoReactivexObserver_withLong_(id<IoReactivexObserver> actual, jlong n);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSkip_SkipObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkip")
