//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError

#if !defined (IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError))
#define IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class IOSObjectArray;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError : IoReactivexFlowable {
 @public
  IOSObjectArray *sources_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSourceArray:(IOSObjectArray *)sources;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError, sources_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_initWithIoReactivexMaybeSourceArray_(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError *self, IOSObjectArray *sources);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError *new_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_initWithIoReactivexMaybeSourceArray_(IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError *create_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_initWithIoReactivexMaybeSourceArray_(IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class IOSObjectArray;
@class IoReactivexInternalDisposablesSequentialDisposable;
@class IoReactivexInternalUtilAtomicThrowable;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicLong;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexDisposablesDisposable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexMaybeObserver, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  JavaUtilConcurrentAtomicAtomicReference *current_;
  IoReactivexInternalDisposablesSequentialDisposable *disposables_;
  IOSObjectArray *sources_;
  IoReactivexInternalUtilAtomicThrowable *errors_;
  jint index_;
  jlong produced_;
}

#pragma mark Public

- (void)cancel;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                     withIoReactivexMaybeSourceArray:(IOSObjectArray *)sources;

- (void)drain;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver, requested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver, current_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver, disposables_, IoReactivexInternalDisposablesSequentialDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver, sources_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver, errors_, IoReactivexInternalUtilAtomicThrowable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver_initWithOrgReactivestreamsSubscriber_withIoReactivexMaybeSourceArray_(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver *self, id<OrgReactivestreamsSubscriber> actual, IOSObjectArray *sources);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver_initWithOrgReactivestreamsSubscriber_withIoReactivexMaybeSourceArray_(id<OrgReactivestreamsSubscriber> actual, IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver_initWithOrgReactivestreamsSubscriber_withIoReactivexMaybeSourceArray_(id<OrgReactivestreamsSubscriber> actual, IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError_ConcatMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeConcatArrayDelayError")
