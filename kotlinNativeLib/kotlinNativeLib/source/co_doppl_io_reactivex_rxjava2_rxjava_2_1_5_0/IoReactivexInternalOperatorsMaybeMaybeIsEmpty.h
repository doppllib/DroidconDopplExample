//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmpty")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeIsEmpty
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmpty 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmpty 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeIsEmpty

#if !defined (IoReactivexInternalOperatorsMaybeMaybeIsEmpty_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmpty || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeIsEmpty))
#define IoReactivexInternalOperatorsMaybeMaybeIsEmpty_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@class JavaLangBoolean;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeIsEmpty : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source;

- (JavaLangBoolean *)blockingGet;

- (JavaLangBoolean *)blockingGetWithId:(JavaLangBoolean *)arg0;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeIsEmpty)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeIsEmpty_initWithIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeMaybeIsEmpty *self, id<IoReactivexMaybeSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmpty *new_IoReactivexInternalOperatorsMaybeMaybeIsEmpty_initWithIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmpty *create_IoReactivexInternalOperatorsMaybeMaybeIsEmpty_initWithIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeIsEmpty)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmpty || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeIsEmpty_IsEmptyMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmpty")
