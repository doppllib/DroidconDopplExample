//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilter")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFilter
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilter 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilter 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFilter

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFilter_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilter || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFilter))
#define IoReactivexInternalOperatorsMaybeMaybeFilter_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeFilter : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsPredicate> predicate_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
             withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFilter)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilter, predicate_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFilter_initWithIoReactivexMaybeSource_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsMaybeMaybeFilter *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilter *new_IoReactivexInternalOperatorsMaybeMaybeFilter_initWithIoReactivexMaybeSource_withIoReactivexFunctionsPredicate_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilter *create_IoReactivexInternalOperatorsMaybeMaybeFilter_initWithIoReactivexMaybeSource_withIoReactivexFunctionsPredicate_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFilter)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilter || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsPredicate;

@interface IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsPredicate> predicate_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
               withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver, predicate_, id<IoReactivexFunctionsPredicate>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFilter_FilterMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilter")
