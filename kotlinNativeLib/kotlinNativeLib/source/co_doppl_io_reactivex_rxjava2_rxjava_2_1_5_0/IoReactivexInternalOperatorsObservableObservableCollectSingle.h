//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableCollectSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableCollectSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableCollectSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableCollectSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableCollectSingle

#if !defined (IoReactivexInternalOperatorsObservableObservableCollectSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableCollectSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableCollectSingle))
#define IoReactivexInternalOperatorsObservableObservableCollectSingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToObservable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToObservable 1
#include "IoReactivexInternalFuseableFuseToObservable.h"

@class IoReactivexObservable;
@protocol IoReactivexFunctionsBiConsumer;
@protocol IoReactivexObservableSource;
@protocol IoReactivexSingleObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableCollectSingle : IoReactivexSingle < IoReactivexInternalFuseableFuseToObservable > {
 @public
  id<IoReactivexObservableSource> source_;
  id<JavaUtilConcurrentCallable> initialSupplier_;
  id<IoReactivexFunctionsBiConsumer> collector_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                     withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)initialSupplier
                 withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)collector;

- (IoReactivexObservable *)fuseToObservable;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableCollectSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle, source_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle, initialSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle, collector_, id<IoReactivexFunctionsBiConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableCollectSingle_initWithIoReactivexObservableSource_withJavaUtilConcurrentCallable_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsObservableObservableCollectSingle *self, id<IoReactivexObservableSource> source, id<JavaUtilConcurrentCallable> initialSupplier, id<IoReactivexFunctionsBiConsumer> collector);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableCollectSingle *new_IoReactivexInternalOperatorsObservableObservableCollectSingle_initWithIoReactivexObservableSource_withJavaUtilConcurrentCallable_withIoReactivexFunctionsBiConsumer_(id<IoReactivexObservableSource> source, id<JavaUtilConcurrentCallable> initialSupplier, id<IoReactivexFunctionsBiConsumer> collector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableCollectSingle *create_IoReactivexInternalOperatorsObservableObservableCollectSingle_initWithIoReactivexObservableSource_withJavaUtilConcurrentCallable_withIoReactivexFunctionsBiConsumer_(id<IoReactivexObservableSource> source, id<JavaUtilConcurrentCallable> initialSupplier, id<IoReactivexFunctionsBiConsumer> collector);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableCollectSingle)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableCollectSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver))
#define IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiConsumer;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexFunctionsBiConsumer> collector_;
  id u_;
  id<IoReactivexDisposablesDisposable> s_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                                           withId:(id)u
               withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)collector;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver, collector_, id<IoReactivexFunctionsBiConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver, u_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver_initWithIoReactivexSingleObserver_withId_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver *self, id<IoReactivexSingleObserver> actual, id u, id<IoReactivexFunctionsBiConsumer> collector);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver *new_IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver_initWithIoReactivexSingleObserver_withId_withIoReactivexFunctionsBiConsumer_(id<IoReactivexSingleObserver> actual, id u, id<IoReactivexFunctionsBiConsumer> collector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver *create_IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver_initWithIoReactivexSingleObserver_withId_withIoReactivexFunctionsBiConsumer_(id<IoReactivexSingleObserver> actual, id u, id<IoReactivexFunctionsBiConsumer> collector);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableCollectSingle_CollectObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableCollectSingle")
