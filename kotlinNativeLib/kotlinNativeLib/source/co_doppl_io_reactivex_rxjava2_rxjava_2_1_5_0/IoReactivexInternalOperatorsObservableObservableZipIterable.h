//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableZipIterable")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableZipIterable
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableZipIterable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableZipIterable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableZipIterable

#if !defined (IoReactivexInternalOperatorsObservableObservableZipIterable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableZipIterable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableZipIterable))
#define IoReactivexInternalOperatorsObservableObservableZipIterable_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexObserver;
@protocol JavaLangIterable;

@interface IoReactivexInternalOperatorsObservableObservableZipIterable : IoReactivexObservable {
 @public
  IoReactivexObservable *source_;
  id<JavaLangIterable> other_;
  id<IoReactivexFunctionsBiFunction> zipper_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)source
                         withJavaLangIterable:(id<JavaLangIterable>)other
           withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)zipper;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableZipIterable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable, source_, IoReactivexObservable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable, other_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable, zipper_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableZipIterable_initWithIoReactivexObservable_withJavaLangIterable_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableZipIterable *self, IoReactivexObservable *source, id<JavaLangIterable> other, id<IoReactivexFunctionsBiFunction> zipper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableZipIterable *new_IoReactivexInternalOperatorsObservableObservableZipIterable_initWithIoReactivexObservable_withJavaLangIterable_withIoReactivexFunctionsBiFunction_(IoReactivexObservable *source, id<JavaLangIterable> other, id<IoReactivexFunctionsBiFunction> zipper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableZipIterable *create_IoReactivexInternalOperatorsObservableObservableZipIterable_initWithIoReactivexObservable_withJavaLangIterable_withIoReactivexFunctionsBiFunction_(IoReactivexObservable *source, id<JavaLangIterable> other, id<IoReactivexFunctionsBiFunction> zipper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableZipIterable)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableZipIterable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver))
#define IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol JavaUtilIterator;

@interface IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<JavaUtilIterator> iterator_;
  id<IoReactivexFunctionsBiFunction> zipper_;
  id<IoReactivexDisposablesDisposable> s_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                       withJavaUtilIterator:(id<JavaUtilIterator>)iterator
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)zipper;

- (void)errorWithJavaLangThrowable:(JavaLangThrowable *)e;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver, zipper_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver_initWithIoReactivexObserver_withJavaUtilIterator_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver *self, id<IoReactivexObserver> actual, id<JavaUtilIterator> iterator, id<IoReactivexFunctionsBiFunction> zipper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver *new_IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver_initWithIoReactivexObserver_withJavaUtilIterator_withIoReactivexFunctionsBiFunction_(id<IoReactivexObserver> actual, id<JavaUtilIterator> iterator, id<IoReactivexFunctionsBiFunction> zipper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver *create_IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver_initWithIoReactivexObserver_withJavaUtilIterator_withIoReactivexFunctionsBiFunction_(id<IoReactivexObserver> actual, id<JavaUtilIterator> iterator, id<IoReactivexFunctionsBiFunction> zipper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableZipIterable_ZipIterableObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableZipIterable")
