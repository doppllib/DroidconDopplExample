//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithObservable")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDelayWithObservable
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithObservable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithObservable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDelayWithObservable

#if !defined (IoReactivexInternalOperatorsSingleSingleDelayWithObservable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDelayWithObservable))
#define IoReactivexInternalOperatorsSingleSingleDelayWithObservable_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDelayWithObservable : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexObservableSource> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
                withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)subscriber;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelayWithObservable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithObservable, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithObservable, other_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDelayWithObservable_initWithIoReactivexSingleSource_withIoReactivexObservableSource_(IoReactivexInternalOperatorsSingleSingleDelayWithObservable *self, id<IoReactivexSingleSource> source, id<IoReactivexObservableSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithObservable *new_IoReactivexInternalOperatorsSingleSingleDelayWithObservable_initWithIoReactivexSingleSource_withIoReactivexObservableSource_(id<IoReactivexSingleSource> source, id<IoReactivexObservableSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithObservable *create_IoReactivexInternalOperatorsSingleSingleDelayWithObservable_initWithIoReactivexSingleSource_withIoReactivexObservableSource_(id<IoReactivexSingleSource> source, id<IoReactivexObservableSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDelayWithObservable)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithObservable || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber))
#define IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber : JavaUtilConcurrentAtomicAtomicReference < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexSingleSource> source_;
  jboolean done_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                      withIoReactivexSingleSource:(id<IoReactivexSingleSource>)source;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber, source_, id<IoReactivexSingleSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber_initWithIoReactivexSingleObserver_withIoReactivexSingleSource_(IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber *self, id<IoReactivexSingleObserver> actual, id<IoReactivexSingleSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber *new_IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber_initWithIoReactivexSingleObserver_withIoReactivexSingleSource_(id<IoReactivexSingleObserver> actual, id<IoReactivexSingleSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber *create_IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber_initWithIoReactivexSingleObserver_withIoReactivexSingleSource_(id<IoReactivexSingleObserver> actual, id<IoReactivexSingleSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDelayWithObservable_OtherSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithObservable")
