//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDefer")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDefer
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDefer 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDefer 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDefer

#if !defined (IoReactivexInternalOperatorsSingleSingleDefer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDefer || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDefer))
#define IoReactivexInternalOperatorsSingleSingleDefer_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@protocol IoReactivexSingleObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsSingleSingleDefer : IoReactivexSingle {
 @public
  id<JavaUtilConcurrentCallable> singleSupplier_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)singleSupplier;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDefer)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDefer, singleSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDefer_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsSingleSingleDefer *self, id<JavaUtilConcurrentCallable> singleSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDefer *new_IoReactivexInternalOperatorsSingleSingleDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> singleSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDefer *create_IoReactivexInternalOperatorsSingleSingleDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> singleSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDefer)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDefer")
