//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilBackpressureHelper")
#ifdef RESTRICT_IoReactivexInternalUtilBackpressureHelper
#define INCLUDE_ALL_IoReactivexInternalUtilBackpressureHelper 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilBackpressureHelper 1
#endif
#undef RESTRICT_IoReactivexInternalUtilBackpressureHelper

#if !defined (IoReactivexInternalUtilBackpressureHelper_) && (INCLUDE_ALL_IoReactivexInternalUtilBackpressureHelper || defined(INCLUDE_IoReactivexInternalUtilBackpressureHelper))
#define IoReactivexInternalUtilBackpressureHelper_

@class JavaUtilConcurrentAtomicAtomicLong;

@interface IoReactivexInternalUtilBackpressureHelper : NSObject

#pragma mark Public

+ (jlong)addWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                          withLong:(jlong)n;

+ (jlong)addCancelWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                                withLong:(jlong)n;

+ (jlong)addCapWithLong:(jlong)a
               withLong:(jlong)b;

+ (jlong)multiplyCapWithLong:(jlong)a
                    withLong:(jlong)b;

+ (jlong)producedWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                               withLong:(jlong)n;

+ (jlong)producedCancelWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                                     withLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilBackpressureHelper)

FOUNDATION_EXPORT jlong IoReactivexInternalUtilBackpressureHelper_addCapWithLong_withLong_(jlong a, jlong b);

FOUNDATION_EXPORT jlong IoReactivexInternalUtilBackpressureHelper_multiplyCapWithLong_withLong_(jlong a, jlong b);

FOUNDATION_EXPORT jlong IoReactivexInternalUtilBackpressureHelper_addWithJavaUtilConcurrentAtomicAtomicLong_withLong_(JavaUtilConcurrentAtomicAtomicLong *requested, jlong n);

FOUNDATION_EXPORT jlong IoReactivexInternalUtilBackpressureHelper_addCancelWithJavaUtilConcurrentAtomicAtomicLong_withLong_(JavaUtilConcurrentAtomicAtomicLong *requested, jlong n);

FOUNDATION_EXPORT jlong IoReactivexInternalUtilBackpressureHelper_producedWithJavaUtilConcurrentAtomicAtomicLong_withLong_(JavaUtilConcurrentAtomicAtomicLong *requested, jlong n);

FOUNDATION_EXPORT jlong IoReactivexInternalUtilBackpressureHelper_producedCancelWithJavaUtilConcurrentAtomicAtomicLong_withLong_(JavaUtilConcurrentAtomicAtomicLong *requested, jlong n);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilBackpressureHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilBackpressureHelper")
