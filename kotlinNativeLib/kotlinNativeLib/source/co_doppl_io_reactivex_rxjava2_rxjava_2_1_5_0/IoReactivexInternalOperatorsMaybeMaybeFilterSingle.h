//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilterSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFilterSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilterSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilterSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFilterSingle

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFilterSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilterSingle || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFilterSingle))
#define IoReactivexInternalOperatorsMaybeMaybeFilterSingle_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsMaybeMaybeFilterSingle : IoReactivexMaybe {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexFunctionsPredicate> predicate_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
              withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFilterSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle, predicate_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFilterSingle_initWithIoReactivexSingleSource_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsMaybeMaybeFilterSingle *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilterSingle *new_IoReactivexInternalOperatorsMaybeMaybeFilterSingle_initWithIoReactivexSingleSource_withIoReactivexFunctionsPredicate_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilterSingle *create_IoReactivexInternalOperatorsMaybeMaybeFilterSingle_initWithIoReactivexSingleSource_withIoReactivexFunctionsPredicate_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilterSingle || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver_

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "IoReactivexSingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver : NSObject < IoReactivexSingleObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsPredicate> predicate_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
               withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver, predicate_, id<IoReactivexFunctionsPredicate>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFilterSingle_FilterMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFilterSingle")
