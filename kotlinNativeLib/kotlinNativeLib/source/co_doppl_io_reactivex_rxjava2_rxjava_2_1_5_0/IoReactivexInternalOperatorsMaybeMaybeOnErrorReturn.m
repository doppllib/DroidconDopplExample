//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"
#include "IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn.h"
#include "IoReactivexMaybeObserver.h"
#include "IoReactivexMaybeSource.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@implementation IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
              withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier {
  IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(self, source, valueSupplier);
  return self;
}

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer {
  [((id<IoReactivexMaybeSource>) nil_chk(source_)) subscribeWithIoReactivexMaybeObserver:create_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(observer, valueSupplier_)];
}

- (void)dealloc {
  RELEASE_(valueSupplier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeSource:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexMaybeObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valueSupplier_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeSource;LIoReactivexFunctionsFunction;", "(Lio/reactivex/MaybeSource<TT;>;Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;)V", "subscribeActual", "LIoReactivexMaybeObserver;", "(Lio/reactivex/MaybeObserver<-TT;>;)V", "Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;", "LIoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn = { "MaybeOnErrorReturn", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn;
}

@end

void IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> valueSupplier) {
  IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream_initWithIoReactivexMaybeSource_(self, source);
  JreStrongAssign(&self->valueSupplier_, valueSupplier);
}

IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn *new_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn, initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_, source, valueSupplier)
}

IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn *create_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn, initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_, source, valueSupplier)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn)

@implementation IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier {
  IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(self, actual, valueSupplier);
  return self;
}

- (void)dispose {
  [((id<IoReactivexDisposablesDisposable>) nil_chk(d_)) dispose];
}

- (jboolean)isDisposed {
  return [((id<IoReactivexDisposablesDisposable>) nil_chk(d_)) isDisposed];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->d_, d)) {
    JreStrongAssign(&self->d_, d);
    [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  }
}

- (void)onSuccessWithId:(id)value {
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSuccessWithId:value];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  id v;
  @try {
    v = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(valueSupplier_)) applyWithId:e], @"The valueSupplier returned a null value");
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:JavaLangThrowable_class_()])];
    return;
  }
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSuccessWithId:v];
}

- (void)onComplete {
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onComplete];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(valueSupplier_);
  RELEASE_(d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeObserver:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[4].selector = @selector(onSuccessWithId:);
  methods[5].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[6].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexMaybeObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "valueSupplier_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "d_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeObserver;LIoReactivexFunctionsFunction;", "(Lio/reactivex/MaybeObserver<-TT;>;Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/MaybeObserver<-TT;>;", "Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;", "LIoReactivexInternalOperatorsMaybeMaybeOnErrorReturn;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/MaybeObserver<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver = { "OnErrorReturnMaybeObserver", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x18, 7, 3, 11, -1, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver;
}

@end

void IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> valueSupplier) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->valueSupplier_, valueSupplier);
}

IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver, initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_, actual, valueSupplier)
}

IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver, initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_, actual, valueSupplier)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver)
