//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableSkipUntil
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableSkipUntil

#if !defined (IoReactivexInternalOperatorsFlowableFlowableSkipUntil_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableSkipUntil))
#define IoReactivexInternalOperatorsFlowableFlowableSkipUntil_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableSkipUntil : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<OrgReactivestreamsPublisher> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
            withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)child;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableSkipUntil)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil, other_, id<OrgReactivestreamsPublisher>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableSkipUntil_initWithIoReactivexFlowable_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableSkipUntil *self, IoReactivexFlowable *source, id<OrgReactivestreamsPublisher> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableSkipUntil *new_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_initWithIoReactivexFlowable_withOrgReactivestreamsPublisher_(IoReactivexFlowable *source, id<OrgReactivestreamsPublisher> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableSkipUntil *create_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_initWithIoReactivexFlowable_withOrgReactivestreamsPublisher_(IoReactivexFlowable *source, id<OrgReactivestreamsPublisher> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexInternalFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalFuseableConditionalSubscriber 1
#include "IoReactivexInternalFuseableConditionalSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber;
@class IoReactivexInternalUtilAtomicThrowable;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicLong;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexInternalFuseableConditionalSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  JavaUtilConcurrentAtomicAtomicReference *s_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber *other_;
  IoReactivexInternalUtilAtomicThrowable *error_;
  volatile_jboolean gate_;
}

#pragma mark Public

- (void)cancel;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber, s_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber, requested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber, other_, IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber, error_, IoReactivexInternalUtilAtomicThrowable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

@class IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber;
@class JavaLangThrowable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber : JavaUtilConcurrentAtomicAtomicReference < IoReactivexFlowableSubscriber >

#pragma mark Public

- (id<OrgReactivestreamsSubscription>)accumulateAndGetWithId:(id<OrgReactivestreamsSubscription>)arg0
                          withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<OrgReactivestreamsSubscription>)get;

- (id<OrgReactivestreamsSubscription>)getAndAccumulateWithId:(id<OrgReactivestreamsSubscription>)arg0
                          withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<OrgReactivestreamsSubscription>)getAndSetWithId:(id<OrgReactivestreamsSubscription>)arg0;

- (id<OrgReactivestreamsSubscription>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (id<OrgReactivestreamsSubscription>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber:(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber *self, IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *outer$);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableSkipUntil_SkipUntilMainSubscriber_OtherSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableSkipUntil")
