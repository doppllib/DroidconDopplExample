//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableHide")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableHide
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableHide 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableHide 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableHide

#if !defined (IoReactivexInternalOperatorsObservableObservableHide_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableHide || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableHide))
#define IoReactivexInternalOperatorsObservableObservableHide_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableHide : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)o;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableHide)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableHide_initWithIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableHide *self, id<IoReactivexObservableSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableHide *new_IoReactivexInternalOperatorsObservableObservableHide_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableHide *create_IoReactivexInternalOperatorsObservableObservableHide_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableHide)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableHide_HideDisposable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableHide || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableHide_HideDisposable))
#define IoReactivexInternalOperatorsObservableObservableHide_HideDisposable_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsObservableObservableHide_HideDisposable : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableHide_HideDisposable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableHide_HideDisposable, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableHide_HideDisposable, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableHide_HideDisposable_initWithIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableHide_HideDisposable *self, id<IoReactivexObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableHide_HideDisposable *new_IoReactivexInternalOperatorsObservableObservableHide_HideDisposable_initWithIoReactivexObserver_(id<IoReactivexObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableHide_HideDisposable *create_IoReactivexInternalOperatorsObservableObservableHide_HideDisposable_initWithIoReactivexObserver_(id<IoReactivexObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableHide_HideDisposable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableHide")
