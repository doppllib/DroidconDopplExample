//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexAnnotationsBackpressureKind.h"
#include "IoReactivexAnnotationsBackpressureSupport.h"
#include "IoReactivexAnnotationsCheckReturnValue.h"
#include "IoReactivexAnnotationsSchedulerSupport.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFunctionsAction.h"
#include "IoReactivexFunctionsBiConsumer.h"
#include "IoReactivexFunctionsBiFunction.h"
#include "IoReactivexFunctionsConsumer.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexFunctionsLongConsumer.h"
#include "IoReactivexFunctionsPredicate.h"
#include "IoReactivexInternalFunctionsFunctions.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsParallelParallelCollect.h"
#include "IoReactivexInternalOperatorsParallelParallelConcatMap.h"
#include "IoReactivexInternalOperatorsParallelParallelDoOnNextTry.h"
#include "IoReactivexInternalOperatorsParallelParallelFilter.h"
#include "IoReactivexInternalOperatorsParallelParallelFilterTry.h"
#include "IoReactivexInternalOperatorsParallelParallelFlatMap.h"
#include "IoReactivexInternalOperatorsParallelParallelFromArray.h"
#include "IoReactivexInternalOperatorsParallelParallelFromPublisher.h"
#include "IoReactivexInternalOperatorsParallelParallelJoin.h"
#include "IoReactivexInternalOperatorsParallelParallelMap.h"
#include "IoReactivexInternalOperatorsParallelParallelMapTry.h"
#include "IoReactivexInternalOperatorsParallelParallelPeek.h"
#include "IoReactivexInternalOperatorsParallelParallelReduce.h"
#include "IoReactivexInternalOperatorsParallelParallelReduceFull.h"
#include "IoReactivexInternalOperatorsParallelParallelRunOn.h"
#include "IoReactivexInternalOperatorsParallelParallelSortedJoin.h"
#include "IoReactivexInternalSubscriptionsEmptySubscription.h"
#include "IoReactivexInternalUtilErrorMode.h"
#include "IoReactivexInternalUtilExceptionHelper.h"
#include "IoReactivexInternalUtilListAddBiConsumer.h"
#include "IoReactivexInternalUtilMergerBiFunction.h"
#include "IoReactivexInternalUtilSorterFunction.h"
#include "IoReactivexParallelParallelFailureHandling.h"
#include "IoReactivexParallelParallelFlowable.h"
#include "IoReactivexParallelParallelTransformer.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "IoReactivexScheduler.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsPublisher.h"
#include "OrgReactivestreamsSubscriber.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Runtime.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Comparator.h"
#include "java/util/concurrent/Callable.h"

__attribute__((unused)) static IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_mapWithIoReactivexFunctionsFunction_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper);

__attribute__((unused)) static IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_runOnWithIoReactivexScheduler_withInt_(IoReactivexParallelParallelFlowable *self, IoReactivexScheduler *scheduler, jint prefetch);

__attribute__((unused)) static IoReactivexFlowable *IoReactivexParallelParallelFlowable_reduceWithIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsBiFunction> reducer);

__attribute__((unused)) static IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_reduceWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *self, id<JavaUtilConcurrentCallable> initialSupplier, id<IoReactivexFunctionsBiFunction> reducer);

__attribute__((unused)) static IoReactivexFlowable *IoReactivexParallelParallelFlowable_sequentialWithInt_(IoReactivexParallelParallelFlowable *self, jint prefetch);

__attribute__((unused)) static IoReactivexFlowable *IoReactivexParallelParallelFlowable_sequentialDelayErrorWithInt_(IoReactivexParallelParallelFlowable *self, jint prefetch);

__attribute__((unused)) static IoReactivexFlowable *IoReactivexParallelParallelFlowable_sortedWithJavaUtilComparator_withInt_(IoReactivexParallelParallelFlowable *self, id<JavaUtilComparator> comparator, jint capacityHint);

__attribute__((unused)) static IoReactivexFlowable *IoReactivexParallelParallelFlowable_toSortedListWithJavaUtilComparator_withInt_(IoReactivexParallelParallelFlowable *self, id<JavaUtilComparator> comparator, jint capacityHint);

__attribute__((unused)) static IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_flatMapWithIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper, jboolean delayError, jint maxConcurrency, jint prefetch);

__attribute__((unused)) static IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_concatMapWithIoReactivexFunctionsFunction_withInt_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper, jint prefetch);

__attribute__((unused)) static IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_concatMapDelayErrorWithIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper, jint prefetch, jboolean tillTheEnd);

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$1();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$2();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$3();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$4();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$5();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$6();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$7();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$8();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$9();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$10();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$11();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$12();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$13();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$14();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$15();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$16();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$17();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$18();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$19();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$20();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$21();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$22();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$23();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$24();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$25();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$26();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$27();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$28();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$29();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$30();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$31();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$32();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$33();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$34();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$35();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$36();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$37();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$38();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$39();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$40();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$41();

__attribute__((unused)) static IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$42();

@implementation IoReactivexParallelParallelFlowable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexParallelParallelFlowable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)subscribeWithOrgReactivestreamsSubscriberArray:(IOSObjectArray * __nonnull)subscribers {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)parallelism {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)validateWithOrgReactivestreamsSubscriberArray:(IOSObjectArray * __nonnull)subscribers {
  jint p = [self parallelism];
  if (((IOSObjectArray *) nil_chk(subscribers))->size_ != p) {
    JavaLangThrowable *iae = create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"parallelism = ", p, @", subscribers = ", subscribers->size_));
    {
      IOSObjectArray *a__ = subscribers;
      id<OrgReactivestreamsSubscriber> const *b__ = a__->buffer_;
      id<OrgReactivestreamsSubscriber> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgReactivestreamsSubscriber> s = *b__++;
        IoReactivexInternalSubscriptionsEmptySubscription_errorWithJavaLangThrowable_withOrgReactivestreamsSubscriber_(iae, s);
      }
    }
    return false;
  }
  return true;
}

+ (IoReactivexParallelParallelFlowable *)fromWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher> __nonnull)source {
  return IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_(source);
}

+ (IoReactivexParallelParallelFlowable *)fromWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher> __nonnull)source
                                                                     withInt:(jint)parallelism {
  return IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_(source, parallelism);
}

+ (IoReactivexParallelParallelFlowable * __nonnull)fromWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher> __nonnull)source
                                                                               withInt:(jint)parallelism
                                                                               withInt:(jint)prefetch {
  return IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_withInt_(source, parallelism, prefetch);
}

- (IoReactivexParallelParallelFlowable * __nonnull)mapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper {
  return IoReactivexParallelParallelFlowable_mapWithIoReactivexFunctionsFunction_(self, mapper);
}

- (IoReactivexParallelParallelFlowable * __nonnull)mapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                        withIoReactivexParallelParallelFailureHandling:(IoReactivexParallelParallelFailureHandling * __nonnull)errorHandler {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(mapper, @"mapper");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(errorHandler, @"errorHandler is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelMapTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(self, mapper, errorHandler));
}

- (IoReactivexParallelParallelFlowable * __nonnull)mapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                    withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)errorHandler {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(mapper, @"mapper");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(errorHandler, @"errorHandler is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelMapTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(self, mapper, errorHandler));
}

- (IoReactivexParallelParallelFlowable *)filterWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate> __nonnull)predicate {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(predicate, @"predicate");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelFilter_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsPredicate_(self, predicate));
}

- (IoReactivexParallelParallelFlowable *)filterWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate> __nonnull)predicate
                                  withIoReactivexParallelParallelFailureHandling:(IoReactivexParallelParallelFailureHandling * __nonnull)errorHandler {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(predicate, @"predicate");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(errorHandler, @"errorHandler is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelFilterTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(self, predicate, errorHandler));
}

- (IoReactivexParallelParallelFlowable *)filterWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate> __nonnull)predicate
                                              withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)errorHandler {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(predicate, @"predicate");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(errorHandler, @"errorHandler is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelFilterTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(self, predicate, errorHandler));
}

- (IoReactivexParallelParallelFlowable * __nonnull)runOnWithIoReactivexScheduler:(IoReactivexScheduler * __nonnull)scheduler {
  return IoReactivexParallelParallelFlowable_runOnWithIoReactivexScheduler_withInt_(self, scheduler, IoReactivexFlowable_bufferSize());
}

- (IoReactivexParallelParallelFlowable * __nonnull)runOnWithIoReactivexScheduler:(IoReactivexScheduler * __nonnull)scheduler
                                                                         withInt:(jint)prefetch {
  return IoReactivexParallelParallelFlowable_runOnWithIoReactivexScheduler_withInt_(self, scheduler, prefetch);
}

- (IoReactivexFlowable * __nonnull)reduceWithIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)reducer {
  return IoReactivexParallelParallelFlowable_reduceWithIoReactivexFunctionsBiFunction_(self, reducer);
}

- (IoReactivexParallelParallelFlowable * __nonnull)reduceWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable> __nonnull)initialSupplier
                                                     withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)reducer {
  return IoReactivexParallelParallelFlowable_reduceWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_(self, initialSupplier, reducer);
}

- (IoReactivexFlowable *)sequential {
  return IoReactivexParallelParallelFlowable_sequentialWithInt_(self, IoReactivexFlowable_bufferSize());
}

- (IoReactivexFlowable * __nonnull)sequentialWithInt:(jint)prefetch {
  return IoReactivexParallelParallelFlowable_sequentialWithInt_(self, prefetch);
}

- (IoReactivexFlowable * __nonnull)sequentialDelayError {
  return IoReactivexParallelParallelFlowable_sequentialDelayErrorWithInt_(self, IoReactivexFlowable_bufferSize());
}

- (IoReactivexFlowable * __nonnull)sequentialDelayErrorWithInt:(jint)prefetch {
  return IoReactivexParallelParallelFlowable_sequentialDelayErrorWithInt_(self, prefetch);
}

- (IoReactivexFlowable * __nonnull)sortedWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator {
  return IoReactivexParallelParallelFlowable_sortedWithJavaUtilComparator_withInt_(self, comparator, 16);
}

- (IoReactivexFlowable * __nonnull)sortedWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator
                                                        withInt:(jint)capacityHint {
  return IoReactivexParallelParallelFlowable_sortedWithJavaUtilComparator_withInt_(self, comparator, capacityHint);
}

- (IoReactivexFlowable * __nonnull)toSortedListWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator {
  return IoReactivexParallelParallelFlowable_toSortedListWithJavaUtilComparator_withInt_(self, comparator, 16);
}

- (IoReactivexFlowable * __nonnull)toSortedListWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)comparator
                                                              withInt:(jint)capacityHint {
  return IoReactivexParallelParallelFlowable_toSortedListWithJavaUtilComparator_withInt_(self, comparator, capacityHint);
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onNext {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onNext, @"onNext is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, onNext, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onNext
                                             withIoReactivexParallelParallelFailureHandling:(IoReactivexParallelParallelFailureHandling * __nonnull)errorHandler {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onNext, @"onNext is null");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(errorHandler, @"errorHandler is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(self, onNext, errorHandler));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onNext
                                                         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction> __nonnull)errorHandler {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onNext, @"onNext is null");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(errorHandler, @"errorHandler is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(self, onNext, errorHandler));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doAfterNextWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onAfterNext {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onAfterNext, @"onAfterNext is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), onAfterNext, IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnErrorWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onError {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onError, @"onError is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), onError, JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnCompleteWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)onComplete {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onComplete, @"onComplete is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), onComplete, JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doAfterTerminatedWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)onAfterTerminate {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onAfterTerminate, @"onAfterTerminate is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), onAfterTerminate, IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnSubscribeWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer> __nonnull)onSubscribe {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onSubscribe, @"onSubscribe is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), onSubscribe, JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnRequestWithIoReactivexFunctionsLongConsumer:(id<IoReactivexFunctionsLongConsumer> __nonnull)onRequest {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onRequest, @"onRequest is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), IoReactivexInternalFunctionsFunctions_emptyConsumer(), onRequest, JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION)));
}

- (IoReactivexParallelParallelFlowable * __nonnull)doOnCancelWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)onCancel {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(onCancel, @"onCancel is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelPeek_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsLongConsumer_withIoReactivexFunctionsAction_(self, IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_ACTION), IoReactivexInternalFunctionsFunctions_emptyConsumer(), JreLoadStatic(IoReactivexInternalFunctionsFunctions, EMPTY_LONG_CONSUMER), onCancel));
}

- (IoReactivexParallelParallelFlowable * __nonnull)collectWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable> __nonnull)collectionSupplier
                                                      withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer> __nonnull)collector {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(collectionSupplier, @"collectionSupplier is null");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(collector, @"collector is null");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelCollect_initWithIoReactivexParallelParallelFlowable_withJavaUtilConcurrentCallable_withIoReactivexFunctionsBiConsumer_(self, collectionSupplier, collector));
}

+ (IoReactivexParallelParallelFlowable * __nonnull)fromArrayWithOrgReactivestreamsPublisherArray:(IOSObjectArray * __nonnull)publishers {
  return IoReactivexParallelParallelFlowable_fromArrayWithOrgReactivestreamsPublisherArray_(publishers);
}

- (id __nonnull)toWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)converter {
  @try {
    return [((id<IoReactivexFunctionsFunction>) nil_chk(IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(converter, @"converter is null"))) applyWithId:self];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    @throw nil_chk(IoReactivexInternalUtilExceptionHelper_wrapOrThrowWithJavaLangThrowable_(ex));
  }
}

- (IoReactivexParallelParallelFlowable * __nonnull)composeWithIoReactivexParallelParallelTransformer:(id<IoReactivexParallelParallelTransformer> __nonnull)composer {
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_([((id<IoReactivexParallelParallelTransformer>) nil_chk(IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(composer, @"composer is null"))) applyWithIoReactivexParallelParallelFlowable:self]);
}

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper {
  return IoReactivexParallelParallelFlowable_flatMapWithIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(self, mapper, false, JavaLangInteger_MAX_VALUE, IoReactivexFlowable_bufferSize());
}

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                               withBoolean:(jboolean)delayError {
  return IoReactivexParallelParallelFlowable_flatMapWithIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(self, mapper, delayError, JavaLangInteger_MAX_VALUE, IoReactivexFlowable_bufferSize());
}

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                               withBoolean:(jboolean)delayError
                                                                                   withInt:(jint)maxConcurrency {
  return IoReactivexParallelParallelFlowable_flatMapWithIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(self, mapper, delayError, maxConcurrency, IoReactivexFlowable_bufferSize());
}

- (IoReactivexParallelParallelFlowable * __nonnull)flatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                               withBoolean:(jboolean)delayError
                                                                                   withInt:(jint)maxConcurrency
                                                                                   withInt:(jint)prefetch {
  return IoReactivexParallelParallelFlowable_flatMapWithIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(self, mapper, delayError, maxConcurrency, prefetch);
}

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper {
  return IoReactivexParallelParallelFlowable_concatMapWithIoReactivexFunctionsFunction_withInt_(self, mapper, 2);
}

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                                     withInt:(jint)prefetch {
  return IoReactivexParallelParallelFlowable_concatMapWithIoReactivexFunctionsFunction_withInt_(self, mapper, prefetch);
}

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapDelayErrorWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                                           withBoolean:(jboolean)tillTheEnd {
  return IoReactivexParallelParallelFlowable_concatMapDelayErrorWithIoReactivexFunctionsFunction_withInt_withBoolean_(self, mapper, 2, tillTheEnd);
}

- (IoReactivexParallelParallelFlowable * __nonnull)concatMapDelayErrorWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction> __nonnull)mapper
                                                                                               withInt:(jint)prefetch
                                                                                           withBoolean:(jboolean)tillTheEnd {
  return IoReactivexParallelParallelFlowable_concatMapDelayErrorWithIoReactivexFunctionsFunction_withInt_withBoolean_(self, mapper, prefetch, tillTheEnd);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x14, 3, 1, -1, 4, -1, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x9, 5, 6, -1, 7, 8, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x9, 5, 9, -1, 10, 11, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x9, 5, 12, -1, 13, 14, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 15, 16, -1, 17, 18, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 15, 19, -1, 20, 21, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 15, 22, -1, 23, 24, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 25, 26, -1, 27, 28, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 25, 29, -1, 30, 31, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 25, 32, -1, 33, 34, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 35, 36, -1, 37, 38, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 35, 39, -1, 40, 41, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 42, 43, -1, 44, 45, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 42, 46, -1, 47, 48, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, -1, -1, -1, 49, 50, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 51, 52, -1, 53, 54, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, -1, -1, -1, 49, 55, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 56, 52, -1, 53, 57, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 58, 59, -1, 60, 61, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 58, 62, -1, 63, 64, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 65, 59, -1, 66, 67, -1 },
    { NULL, "LIoReactivexFlowable;", 0x11, 65, 62, -1, 68, 69, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 70, 71, -1, 72, 73, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 70, 74, -1, 75, 76, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 70, 77, -1, 78, 79, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 80, 71, -1, 72, 81, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 82, 71, -1, 83, 84, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 85, 86, -1, 87, 88, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 89, 86, -1, 87, 90, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 91, 71, -1, 92, 93, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 94, 95, -1, 96, 97, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 98, 86, -1, 87, 99, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 100, 101, -1, 102, 103, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x89, 104, 105, -1, 106, 107, -1 },
    { NULL, "LNSObject;", 0x11, 108, 16, -1, 109, 110, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 111, 112, -1, 113, 114, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 115, 16, -1, 116, 117, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 115, 118, -1, 119, 120, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 115, 121, -1, 122, 123, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 115, 124, -1, 125, 126, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 127, 16, -1, 116, 128, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 127, 129, -1, 130, 131, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 132, 118, -1, 119, 133, -1 },
    { NULL, "LIoReactivexParallelParallelFlowable;", 0x11, 132, 134, -1, 135, 136, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(subscribeWithOrgReactivestreamsSubscriberArray:);
  methods[2].selector = @selector(parallelism);
  methods[3].selector = @selector(validateWithOrgReactivestreamsSubscriberArray:);
  methods[4].selector = @selector(fromWithOrgReactivestreamsPublisher:);
  methods[5].selector = @selector(fromWithOrgReactivestreamsPublisher:withInt:);
  methods[6].selector = @selector(fromWithOrgReactivestreamsPublisher:withInt:withInt:);
  methods[7].selector = @selector(mapWithIoReactivexFunctionsFunction:);
  methods[8].selector = @selector(mapWithIoReactivexFunctionsFunction:withIoReactivexParallelParallelFailureHandling:);
  methods[9].selector = @selector(mapWithIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[10].selector = @selector(filterWithIoReactivexFunctionsPredicate:);
  methods[11].selector = @selector(filterWithIoReactivexFunctionsPredicate:withIoReactivexParallelParallelFailureHandling:);
  methods[12].selector = @selector(filterWithIoReactivexFunctionsPredicate:withIoReactivexFunctionsBiFunction:);
  methods[13].selector = @selector(runOnWithIoReactivexScheduler:);
  methods[14].selector = @selector(runOnWithIoReactivexScheduler:withInt:);
  methods[15].selector = @selector(reduceWithIoReactivexFunctionsBiFunction:);
  methods[16].selector = @selector(reduceWithJavaUtilConcurrentCallable:withIoReactivexFunctionsBiFunction:);
  methods[17].selector = @selector(sequential);
  methods[18].selector = @selector(sequentialWithInt:);
  methods[19].selector = @selector(sequentialDelayError);
  methods[20].selector = @selector(sequentialDelayErrorWithInt:);
  methods[21].selector = @selector(sortedWithJavaUtilComparator:);
  methods[22].selector = @selector(sortedWithJavaUtilComparator:withInt:);
  methods[23].selector = @selector(toSortedListWithJavaUtilComparator:);
  methods[24].selector = @selector(toSortedListWithJavaUtilComparator:withInt:);
  methods[25].selector = @selector(doOnNextWithIoReactivexFunctionsConsumer:);
  methods[26].selector = @selector(doOnNextWithIoReactivexFunctionsConsumer:withIoReactivexParallelParallelFailureHandling:);
  methods[27].selector = @selector(doOnNextWithIoReactivexFunctionsConsumer:withIoReactivexFunctionsBiFunction:);
  methods[28].selector = @selector(doAfterNextWithIoReactivexFunctionsConsumer:);
  methods[29].selector = @selector(doOnErrorWithIoReactivexFunctionsConsumer:);
  methods[30].selector = @selector(doOnCompleteWithIoReactivexFunctionsAction:);
  methods[31].selector = @selector(doAfterTerminatedWithIoReactivexFunctionsAction:);
  methods[32].selector = @selector(doOnSubscribeWithIoReactivexFunctionsConsumer:);
  methods[33].selector = @selector(doOnRequestWithIoReactivexFunctionsLongConsumer:);
  methods[34].selector = @selector(doOnCancelWithIoReactivexFunctionsAction:);
  methods[35].selector = @selector(collectWithJavaUtilConcurrentCallable:withIoReactivexFunctionsBiConsumer:);
  methods[36].selector = @selector(fromArrayWithOrgReactivestreamsPublisherArray:);
  methods[37].selector = @selector(toWithIoReactivexFunctionsFunction:);
  methods[38].selector = @selector(composeWithIoReactivexParallelParallelTransformer:);
  methods[39].selector = @selector(flatMapWithIoReactivexFunctionsFunction:);
  methods[40].selector = @selector(flatMapWithIoReactivexFunctionsFunction:withBoolean:);
  methods[41].selector = @selector(flatMapWithIoReactivexFunctionsFunction:withBoolean:withInt:);
  methods[42].selector = @selector(flatMapWithIoReactivexFunctionsFunction:withBoolean:withInt:withInt:);
  methods[43].selector = @selector(concatMapWithIoReactivexFunctionsFunction:);
  methods[44].selector = @selector(concatMapWithIoReactivexFunctionsFunction:withInt:);
  methods[45].selector = @selector(concatMapDelayErrorWithIoReactivexFunctionsFunction:withBoolean:);
  methods[46].selector = @selector(concatMapDelayErrorWithIoReactivexFunctionsFunction:withInt:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "subscribe", "[LOrgReactivestreamsSubscriber;", "([Lorg/reactivestreams/Subscriber<-TT;>;)V", "validate", "([Lorg/reactivestreams/Subscriber<*>;)Z", "from", "LOrgReactivestreamsPublisher;", "<T:Ljava/lang/Object;>(Lorg/reactivestreams/Publisher<+TT;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$0, "LOrgReactivestreamsPublisher;I", "<T:Ljava/lang/Object;>(Lorg/reactivestreams/Publisher<+TT;>;I)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$1, "LOrgReactivestreamsPublisher;II", "<T:Ljava/lang/Object;>(Lorg/reactivestreams/Publisher<+TT;>;II)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$2, "map", "LIoReactivexFunctionsFunction;", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+TR;>;)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$3, "LIoReactivexFunctionsFunction;LIoReactivexParallelParallelFailureHandling;", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+TR;>;Lio/reactivex/parallel/ParallelFailureHandling;)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$4, "LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+TR;>;Lio/reactivex/functions/BiFunction<-Ljava/lang/Long;-Ljava/lang/Throwable;Lio/reactivex/parallel/ParallelFailureHandling;>;)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$5, "filter", "LIoReactivexFunctionsPredicate;", "(Lio/reactivex/functions/Predicate<-TT;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$6, "LIoReactivexFunctionsPredicate;LIoReactivexParallelParallelFailureHandling;", "(Lio/reactivex/functions/Predicate<-TT;>;Lio/reactivex/parallel/ParallelFailureHandling;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$7, "LIoReactivexFunctionsPredicate;LIoReactivexFunctionsBiFunction;", "(Lio/reactivex/functions/Predicate<-TT;>;Lio/reactivex/functions/BiFunction<-Ljava/lang/Long;-Ljava/lang/Throwable;Lio/reactivex/parallel/ParallelFailureHandling;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$8, "runOn", "LIoReactivexScheduler;", "(Lio/reactivex/Scheduler;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$9, "LIoReactivexScheduler;I", "(Lio/reactivex/Scheduler;I)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$10, "reduce", "LIoReactivexFunctionsBiFunction;", "(Lio/reactivex/functions/BiFunction<TT;TT;TT;>;)Lio/reactivex/Flowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$11, "LJavaUtilConcurrentCallable;LIoReactivexFunctionsBiFunction;", "<R:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<TR;>;Lio/reactivex/functions/BiFunction<TR;-TT;TR;>;)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$12, "()Lio/reactivex/Flowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$13, "sequential", "I", "(I)Lio/reactivex/Flowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$14, (void *)&IoReactivexParallelParallelFlowable__Annotations$15, "sequentialDelayError", (void *)&IoReactivexParallelParallelFlowable__Annotations$16, "sorted", "LJavaUtilComparator;", "(Ljava/util/Comparator<-TT;>;)Lio/reactivex/Flowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$17, "LJavaUtilComparator;I", "(Ljava/util/Comparator<-TT;>;I)Lio/reactivex/Flowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$18, "toSortedList", "(Ljava/util/Comparator<-TT;>;)Lio/reactivex/Flowable<Ljava/util/List<TT;>;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$19, "(Ljava/util/Comparator<-TT;>;I)Lio/reactivex/Flowable<Ljava/util/List<TT;>;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$20, "doOnNext", "LIoReactivexFunctionsConsumer;", "(Lio/reactivex/functions/Consumer<-TT;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$21, "LIoReactivexFunctionsConsumer;LIoReactivexParallelParallelFailureHandling;", "(Lio/reactivex/functions/Consumer<-TT;>;Lio/reactivex/parallel/ParallelFailureHandling;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$22, "LIoReactivexFunctionsConsumer;LIoReactivexFunctionsBiFunction;", "(Lio/reactivex/functions/Consumer<-TT;>;Lio/reactivex/functions/BiFunction<-Ljava/lang/Long;-Ljava/lang/Throwable;Lio/reactivex/parallel/ParallelFailureHandling;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$23, "doAfterNext", (void *)&IoReactivexParallelParallelFlowable__Annotations$24, "doOnError", "(Lio/reactivex/functions/Consumer<Ljava/lang/Throwable;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$25, "doOnComplete", "LIoReactivexFunctionsAction;", "(Lio/reactivex/functions/Action;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$26, "doAfterTerminated", (void *)&IoReactivexParallelParallelFlowable__Annotations$27, "doOnSubscribe", "(Lio/reactivex/functions/Consumer<-Lorg/reactivestreams/Subscription;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$28, "doOnRequest", "LIoReactivexFunctionsLongConsumer;", "(Lio/reactivex/functions/LongConsumer;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$29, "doOnCancel", (void *)&IoReactivexParallelParallelFlowable__Annotations$30, "collect", "LJavaUtilConcurrentCallable;LIoReactivexFunctionsBiConsumer;", "<C:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<+TC;>;Lio/reactivex/functions/BiConsumer<-TC;-TT;>;)Lio/reactivex/parallel/ParallelFlowable<TC;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$31, "fromArray", "[LOrgReactivestreamsPublisher;", "<T:Ljava/lang/Object;>([Lorg/reactivestreams/Publisher<TT;>;)Lio/reactivex/parallel/ParallelFlowable<TT;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$32, "to", "<U:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-Lio/reactivex/parallel/ParallelFlowable<TT;>;TU;>;)TU;", (void *)&IoReactivexParallelParallelFlowable__Annotations$33, "compose", "LIoReactivexParallelParallelTransformer;", "<U:Ljava/lang/Object;>(Lio/reactivex/parallel/ParallelTransformer<TT;TU;>;)Lio/reactivex/parallel/ParallelFlowable<TU;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$34, "flatMap", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TR;>;>;)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$35, "LIoReactivexFunctionsFunction;Z", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TR;>;>;Z)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$36, "LIoReactivexFunctionsFunction;ZI", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TR;>;>;ZI)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$37, "LIoReactivexFunctionsFunction;ZII", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TR;>;>;ZII)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$38, "concatMap", (void *)&IoReactivexParallelParallelFlowable__Annotations$39, "LIoReactivexFunctionsFunction;I", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TR;>;>;I)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$40, "concatMapDelayError", (void *)&IoReactivexParallelParallelFlowable__Annotations$41, "LIoReactivexFunctionsFunction;IZ", "<R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TR;>;>;IZ)Lio/reactivex/parallel/ParallelFlowable<TR;>;", (void *)&IoReactivexParallelParallelFlowable__Annotations$42, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _IoReactivexParallelParallelFlowable = { "ParallelFlowable", "io.reactivex.parallel", ptrTable, methods, NULL, 7, 0x401, 47, 0, -1, -1, -1, 137, -1 };
  return &_IoReactivexParallelParallelFlowable;
}

@end

void IoReactivexParallelParallelFlowable_init(IoReactivexParallelParallelFlowable *self) {
  NSObject_init(self);
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source) {
  IoReactivexParallelParallelFlowable_initialize();
  return IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_withInt_(source, [((JavaLangRuntime *) nil_chk(JavaLangRuntime_getRuntime())) availableProcessors], IoReactivexFlowable_bufferSize());
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_(id<OrgReactivestreamsPublisher> source, jint parallelism) {
  IoReactivexParallelParallelFlowable_initialize();
  return IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_withInt_(source, parallelism, IoReactivexFlowable_bufferSize());
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromWithOrgReactivestreamsPublisher_withInt_withInt_(id<OrgReactivestreamsPublisher> source, jint parallelism, jint prefetch) {
  IoReactivexParallelParallelFlowable_initialize();
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(source, @"source");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(parallelism, @"parallelism");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelFromPublisher_initWithOrgReactivestreamsPublisher_withInt_withInt_(source, parallelism, prefetch));
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_mapWithIoReactivexFunctionsFunction_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(mapper, @"mapper");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelMap_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsFunction_(self, mapper));
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_runOnWithIoReactivexScheduler_withInt_(IoReactivexParallelParallelFlowable *self, IoReactivexScheduler *scheduler, jint prefetch) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(scheduler, @"scheduler");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelRunOn_initWithIoReactivexParallelParallelFlowable_withIoReactivexScheduler_withInt_(self, scheduler, prefetch));
}

IoReactivexFlowable *IoReactivexParallelParallelFlowable_reduceWithIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsBiFunction> reducer) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(reducer, @"reducer");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsParallelParallelReduceFull_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsBiFunction_(self, reducer));
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_reduceWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *self, id<JavaUtilConcurrentCallable> initialSupplier, id<IoReactivexFunctionsBiFunction> reducer) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(initialSupplier, @"initialSupplier");
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(reducer, @"reducer");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelReduce_initWithIoReactivexParallelParallelFlowable_withJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_(self, initialSupplier, reducer));
}

IoReactivexFlowable *IoReactivexParallelParallelFlowable_sequentialWithInt_(IoReactivexParallelParallelFlowable *self, jint prefetch) {
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsParallelParallelJoin_initWithIoReactivexParallelParallelFlowable_withInt_withBoolean_(self, prefetch, false));
}

IoReactivexFlowable *IoReactivexParallelParallelFlowable_sequentialDelayErrorWithInt_(IoReactivexParallelParallelFlowable *self, jint prefetch) {
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsParallelParallelJoin_initWithIoReactivexParallelParallelFlowable_withInt_withBoolean_(self, prefetch, true));
}

IoReactivexFlowable *IoReactivexParallelParallelFlowable_sortedWithJavaUtilComparator_withInt_(IoReactivexParallelParallelFlowable *self, id<JavaUtilComparator> comparator, jint capacityHint) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(comparator, @"comparator is null");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(capacityHint, @"capacityHint");
  jint ch = capacityHint / [self parallelism] + 1;
  IoReactivexParallelParallelFlowable *railReduced = IoReactivexParallelParallelFlowable_reduceWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_(self, IoReactivexInternalFunctionsFunctions_createArrayListWithInt_(ch), IoReactivexInternalUtilListAddBiConsumer_instance());
  IoReactivexParallelParallelFlowable *railSorted = IoReactivexParallelParallelFlowable_mapWithIoReactivexFunctionsFunction_(nil_chk(railReduced), create_IoReactivexInternalUtilSorterFunction_initWithJavaUtilComparator_(comparator));
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsParallelParallelSortedJoin_initWithIoReactivexParallelParallelFlowable_withJavaUtilComparator_(railSorted, comparator));
}

IoReactivexFlowable *IoReactivexParallelParallelFlowable_toSortedListWithJavaUtilComparator_withInt_(IoReactivexParallelParallelFlowable *self, id<JavaUtilComparator> comparator, jint capacityHint) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(comparator, @"comparator is null");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(capacityHint, @"capacityHint");
  jint ch = capacityHint / [self parallelism] + 1;
  IoReactivexParallelParallelFlowable *railReduced = IoReactivexParallelParallelFlowable_reduceWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_(self, IoReactivexInternalFunctionsFunctions_createArrayListWithInt_(ch), IoReactivexInternalUtilListAddBiConsumer_instance());
  IoReactivexParallelParallelFlowable *railSorted = IoReactivexParallelParallelFlowable_mapWithIoReactivexFunctionsFunction_(nil_chk(railReduced), create_IoReactivexInternalUtilSorterFunction_initWithJavaUtilComparator_(comparator));
  IoReactivexFlowable *merged = IoReactivexParallelParallelFlowable_reduceWithIoReactivexFunctionsBiFunction_(nil_chk(railSorted), create_IoReactivexInternalUtilMergerBiFunction_initWithJavaUtilComparator_(comparator));
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(merged);
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_fromArrayWithOrgReactivestreamsPublisherArray_(IOSObjectArray *publishers) {
  IoReactivexParallelParallelFlowable_initialize();
  if (((IOSObjectArray *) nil_chk(publishers))->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Zero publishers not supported");
  }
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelFromArray_initWithOrgReactivestreamsPublisherArray_(publishers));
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_flatMapWithIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper, jboolean delayError, jint maxConcurrency, jint prefetch) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(mapper, @"mapper is null");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(maxConcurrency, @"maxConcurrency");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelFlatMap_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsFunction_withBoolean_withInt_withInt_(self, mapper, delayError, maxConcurrency, prefetch));
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_concatMapWithIoReactivexFunctionsFunction_withInt_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper, jint prefetch) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(mapper, @"mapper is null");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelConcatMap_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(self, mapper, prefetch, JreLoadEnum(IoReactivexInternalUtilErrorMode, IMMEDIATE)));
}

IoReactivexParallelParallelFlowable *IoReactivexParallelParallelFlowable_concatMapDelayErrorWithIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexParallelParallelFlowable *self, id<IoReactivexFunctionsFunction> mapper, jint prefetch, jboolean tillTheEnd) {
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(mapper, @"mapper is null");
  IoReactivexInternalFunctionsObjectHelper_verifyPositiveWithInt_withNSString_(prefetch, @"prefetch");
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexParallelParallelFlowable_(create_IoReactivexInternalOperatorsParallelParallelConcatMap_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(self, mapper, prefetch, tillTheEnd ? JreLoadEnum(IoReactivexInternalUtilErrorMode, END) : JreLoadEnum(IoReactivexInternalUtilErrorMode, BOUNDARY)));
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsBackpressureSupport(JreLoadEnum(IoReactivexAnnotationsBackpressureKind, FULL)), create_IoReactivexAnnotationsSchedulerSupport(@"none"), create_IoReactivexAnnotationsCheckReturnValue() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsBackpressureSupport(JreLoadEnum(IoReactivexAnnotationsBackpressureKind, FULL)), create_IoReactivexAnnotationsSchedulerSupport(@"none"), create_IoReactivexAnnotationsCheckReturnValue() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsBackpressureSupport(JreLoadEnum(IoReactivexAnnotationsBackpressureKind, FULL)), create_IoReactivexAnnotationsSchedulerSupport(@"none"), create_IoReactivexAnnotationsCheckReturnValue() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsBackpressureSupport(JreLoadEnum(IoReactivexAnnotationsBackpressureKind, FULL)), create_IoReactivexAnnotationsSchedulerSupport(@"none"), create_IoReactivexAnnotationsCheckReturnValue() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$29() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$30() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$31() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$32() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$33() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$34() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$35() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$36() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$37() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$38() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$39() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$40() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$41() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *IoReactivexParallelParallelFlowable__Annotations$42() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_IoReactivexAnnotationsCheckReturnValue() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexParallelParallelFlowable)
