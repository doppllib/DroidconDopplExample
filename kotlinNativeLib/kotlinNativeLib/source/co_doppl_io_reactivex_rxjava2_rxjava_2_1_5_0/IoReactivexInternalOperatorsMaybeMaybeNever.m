//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalOperatorsMaybeMaybeNever.h"
#include "IoReactivexMaybe.h"
#include "IoReactivexMaybeObserver.h"
#include "J2ObjC_source.h"

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsMaybeMaybeNever)

IoReactivexInternalOperatorsMaybeMaybeNever *IoReactivexInternalOperatorsMaybeMaybeNever_INSTANCE;

@implementation IoReactivexInternalOperatorsMaybeMaybeNever

+ (IoReactivexInternalOperatorsMaybeMaybeNever *)INSTANCE {
  return IoReactivexInternalOperatorsMaybeMaybeNever_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexInternalOperatorsMaybeMaybeNever_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer {
  [((id<IoReactivexMaybeObserver>) nil_chk(observer)) onSubscribeWithIoReactivexDisposablesDisposable:JreLoadEnum(IoReactivexInternalDisposablesEmptyDisposable, NEVER)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(subscribeActualWithIoReactivexMaybeObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LIoReactivexInternalOperatorsMaybeMaybeNever;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "subscribeActual", "LIoReactivexMaybeObserver;", "(Lio/reactivex/MaybeObserver<-Ljava/lang/Object;>;)V", &IoReactivexInternalOperatorsMaybeMaybeNever_INSTANCE, "Lio/reactivex/Maybe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybeNever = { "MaybeNever", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, 4, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybeNever;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsMaybeMaybeNever class]) {
    JreStrongAssignAndConsume(&IoReactivexInternalOperatorsMaybeMaybeNever_INSTANCE, new_IoReactivexInternalOperatorsMaybeMaybeNever_init());
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsMaybeMaybeNever)
  }
}

@end

void IoReactivexInternalOperatorsMaybeMaybeNever_init(IoReactivexInternalOperatorsMaybeMaybeNever *self) {
  IoReactivexMaybe_init(self);
}

IoReactivexInternalOperatorsMaybeMaybeNever *new_IoReactivexInternalOperatorsMaybeMaybeNever_init() {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybeNever, init)
}

IoReactivexInternalOperatorsMaybeMaybeNever *create_IoReactivexInternalOperatorsMaybeMaybeNever_init() {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybeNever, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybeNever)
