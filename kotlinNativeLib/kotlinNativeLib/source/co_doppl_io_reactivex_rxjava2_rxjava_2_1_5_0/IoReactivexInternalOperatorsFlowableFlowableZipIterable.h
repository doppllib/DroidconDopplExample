//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableZipIterable")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableZipIterable
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableZipIterable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableZipIterable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableZipIterable

#if !defined (IoReactivexInternalOperatorsFlowableFlowableZipIterable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableZipIterable || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableZipIterable))
#define IoReactivexInternalOperatorsFlowableFlowableZipIterable_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol JavaLangIterable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableZipIterable : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<JavaLangIterable> other_;
  id<IoReactivexFunctionsBiFunction> zipper_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
                       withJavaLangIterable:(id<JavaLangIterable>)other
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)zipper;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableZipIterable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableZipIterable, other_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableZipIterable, zipper_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableZipIterable_initWithIoReactivexFlowable_withJavaLangIterable_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableZipIterable *self, IoReactivexFlowable *source, id<JavaLangIterable> other, id<IoReactivexFunctionsBiFunction> zipper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableZipIterable *new_IoReactivexInternalOperatorsFlowableFlowableZipIterable_initWithIoReactivexFlowable_withJavaLangIterable_withIoReactivexFunctionsBiFunction_(IoReactivexFlowable *source, id<JavaLangIterable> other, id<IoReactivexFunctionsBiFunction> zipper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableZipIterable *create_IoReactivexInternalOperatorsFlowableFlowableZipIterable_initWithIoReactivexFlowable_withJavaLangIterable_withIoReactivexFunctionsBiFunction_(IoReactivexFlowable *source, id<JavaLangIterable> other, id<IoReactivexFunctionsBiFunction> zipper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableZipIterable)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableZipIterable || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol JavaUtilIterator;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber : NSObject < IoReactivexFlowableSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<JavaUtilIterator> iterator_;
  id<IoReactivexFunctionsBiFunction> zipper_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                                withJavaUtilIterator:(id<JavaUtilIterator>)iterator
                  withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)zipper;

- (void)errorWithJavaLangThrowable:(JavaLangThrowable *)e;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber, zipper_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilIterator_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<JavaUtilIterator> iterator, id<IoReactivexFunctionsBiFunction> zipper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilIterator_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilIterator> iterator, id<IoReactivexFunctionsBiFunction> zipper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilIterator_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilIterator> iterator, id<IoReactivexFunctionsBiFunction> zipper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableZipIterable_ZipIterableSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableZipIterable")
