//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybePeek")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybePeek
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybePeek 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybePeek 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybePeek

#if !defined (IoReactivexInternalOperatorsMaybeMaybePeek_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybePeek || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybePeek))
#define IoReactivexInternalOperatorsMaybeMaybePeek_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybePeek : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsConsumer> onSubscribeCall_;
  id<IoReactivexFunctionsConsumer> onSuccessCall_;
  id<IoReactivexFunctionsConsumer> onErrorCall_;
  id<IoReactivexFunctionsAction> onCompleteCall_;
  id<IoReactivexFunctionsAction> onAfterTerminate_;
  id<IoReactivexFunctionsAction> onDisposeCall_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
              withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribeCall
              withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSuccessCall
              withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onErrorCall
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onCompleteCall
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onAfterTerminate
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onDispose;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybePeek)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek, onSubscribeCall_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek, onSuccessCall_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek, onErrorCall_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek, onCompleteCall_, id<IoReactivexFunctionsAction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek, onAfterTerminate_, id<IoReactivexFunctionsAction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek, onDisposeCall_, id<IoReactivexFunctionsAction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsMaybeMaybePeek *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsConsumer> onSubscribeCall, id<IoReactivexFunctionsConsumer> onSuccessCall, id<IoReactivexFunctionsConsumer> onErrorCall, id<IoReactivexFunctionsAction> onCompleteCall, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybePeek *new_IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsConsumer> onSubscribeCall, id<IoReactivexFunctionsConsumer> onSuccessCall, id<IoReactivexFunctionsConsumer> onErrorCall, id<IoReactivexFunctionsAction> onCompleteCall, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybePeek *create_IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsConsumer> onSubscribeCall, id<IoReactivexFunctionsConsumer> onSuccessCall, id<IoReactivexFunctionsConsumer> onErrorCall, id<IoReactivexFunctionsAction> onCompleteCall, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybePeek)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybePeek || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver))
#define IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalOperatorsMaybeMaybePeek;
@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  IoReactivexInternalOperatorsMaybeMaybePeek *parent_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
  withIoReactivexInternalOperatorsMaybeMaybePeek:(IoReactivexInternalOperatorsMaybeMaybePeek *)parent;

- (void)onAfterTerminate;

- (void)onErrorInnerWithJavaLangThrowable:(JavaLangThrowable *)e;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver, parent_, IoReactivexInternalOperatorsMaybeMaybePeek *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver *self, id<IoReactivexMaybeObserver> actual, IoReactivexInternalOperatorsMaybeMaybePeek *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver *new_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(id<IoReactivexMaybeObserver> actual, IoReactivexInternalOperatorsMaybeMaybePeek *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver *create_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(id<IoReactivexMaybeObserver> actual, IoReactivexInternalOperatorsMaybeMaybePeek *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybePeek")
