//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilAtomicThrowable")
#ifdef RESTRICT_IoReactivexInternalUtilAtomicThrowable
#define INCLUDE_ALL_IoReactivexInternalUtilAtomicThrowable 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilAtomicThrowable 1
#endif
#undef RESTRICT_IoReactivexInternalUtilAtomicThrowable

#if !defined (IoReactivexInternalUtilAtomicThrowable_) && (INCLUDE_ALL_IoReactivexInternalUtilAtomicThrowable || defined(INCLUDE_IoReactivexInternalUtilAtomicThrowable))
#define IoReactivexInternalUtilAtomicThrowable_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

@class JavaLangThrowable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalUtilAtomicThrowable : JavaUtilConcurrentAtomicAtomicReference

#pragma mark Public

- (instancetype)init;

- (JavaLangThrowable *)accumulateAndGetWithId:(JavaLangThrowable *)arg0
           withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (jboolean)addThrowableWithJavaLangThrowable:(JavaLangThrowable *)t;

- (JavaLangThrowable *)get;

- (JavaLangThrowable *)getAndAccumulateWithId:(JavaLangThrowable *)arg0
           withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (JavaLangThrowable *)getAndSetWithId:(JavaLangThrowable *)arg0;

- (JavaLangThrowable *)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isTerminated;

- (JavaLangThrowable *)terminate;

- (JavaLangThrowable *)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilAtomicThrowable)

FOUNDATION_EXPORT void IoReactivexInternalUtilAtomicThrowable_init(IoReactivexInternalUtilAtomicThrowable *self);

FOUNDATION_EXPORT IoReactivexInternalUtilAtomicThrowable *new_IoReactivexInternalUtilAtomicThrowable_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalUtilAtomicThrowable *create_IoReactivexInternalUtilAtomicThrowable_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilAtomicThrowable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilAtomicThrowable")
