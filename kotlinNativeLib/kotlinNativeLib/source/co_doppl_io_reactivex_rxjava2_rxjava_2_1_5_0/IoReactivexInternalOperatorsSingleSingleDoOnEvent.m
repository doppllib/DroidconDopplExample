//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsBiConsumer.h"
#include "IoReactivexInternalOperatorsSingleSingleDoOnEvent.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "IoReactivexSingleSource.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@interface IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent () {
 @public
  IoReactivexInternalOperatorsSingleSingleDoOnEvent *this$0_;
  id<IoReactivexSingleObserver> s_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent, s_, id<IoReactivexSingleObserver>)

@implementation IoReactivexInternalOperatorsSingleSingleDoOnEvent

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
             withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)onEvent {
  IoReactivexInternalOperatorsSingleSingleDoOnEvent_initWithIoReactivexSingleSource_withIoReactivexFunctionsBiConsumer_(self, source, onEvent);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  [((id<IoReactivexSingleSource>) nil_chk(source_)) subscribeWithIoReactivexSingleObserver:create_IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_(self, s)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(onEvent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleSource:withIoReactivexFunctionsBiConsumer:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexSingleSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "onEvent_", "LIoReactivexFunctionsBiConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleSource;LIoReactivexFunctionsBiConsumer;", "(Lio/reactivex/SingleSource<TT;>;Lio/reactivex/functions/BiConsumer<-TT;-Ljava/lang/Throwable;>;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "Lio/reactivex/SingleSource<TT;>;", "Lio/reactivex/functions/BiConsumer<-TT;-Ljava/lang/Throwable;>;", "LIoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent;", "<T:Ljava/lang/Object;>Lio/reactivex/Single<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDoOnEvent = { "SingleDoOnEvent", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDoOnEvent;
}

@end

void IoReactivexInternalOperatorsSingleSingleDoOnEvent_initWithIoReactivexSingleSource_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsSingleSingleDoOnEvent *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->onEvent_, onEvent);
}

IoReactivexInternalOperatorsSingleSingleDoOnEvent *new_IoReactivexInternalOperatorsSingleSingleDoOnEvent_initWithIoReactivexSingleSource_withIoReactivexFunctionsBiConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnEvent, initWithIoReactivexSingleSource_withIoReactivexFunctionsBiConsumer_, source, onEvent)
}

IoReactivexInternalOperatorsSingleSingleDoOnEvent *create_IoReactivexInternalOperatorsSingleSingleDoOnEvent_initWithIoReactivexSingleSource_withIoReactivexFunctionsBiConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnEvent, initWithIoReactivexSingleSource_withIoReactivexFunctionsBiConsumer_, source, onEvent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleDoOnEvent)

@implementation IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent:(IoReactivexInternalOperatorsSingleSingleDoOnEvent *)outer$
                                            withIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_(self, outer$, s);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((id<IoReactivexSingleObserver>) nil_chk(s_)) onSubscribeWithIoReactivexDisposablesDisposable:d];
}

- (void)onSuccessWithId:(id)value {
  @try {
    [((id<IoReactivexFunctionsBiConsumer>) nil_chk(this$0_->onEvent_)) acceptWithId:value withId:nil];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [((id<IoReactivexSingleObserver>) nil_chk(s_)) onErrorWithJavaLangThrowable:ex];
    return;
  }
  [((id<IoReactivexSingleObserver>) nil_chk(s_)) onSuccessWithId:value];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  @try {
    [((id<IoReactivexFunctionsBiConsumer>) nil_chk(this$0_->onEvent_)) acceptWithId:nil withId:e];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    e = create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:JavaLangThrowable_class_()]);
  }
  [((id<IoReactivexSingleObserver>) nil_chk(s_)) onErrorWithJavaLangThrowable:e];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent:withIoReactivexSingleObserver:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onSuccessWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsSingleSingleDoOnEvent;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "s_", "LIoReactivexSingleObserver;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/single/SingleDoOnEvent<TT;>;", "Lio/reactivex/SingleObserver<-TT;>;", "LIoReactivexInternalOperatorsSingleSingleDoOnEvent;", "Ljava/lang/Object;Lio/reactivex/SingleObserver<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent = { "DoOnEvent", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x10, 4, 2, 11, -1, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent;
}

@end

void IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent *self, IoReactivexInternalOperatorsSingleSingleDoOnEvent *outer$, id<IoReactivexSingleObserver> s) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->s_, s);
}

IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent *new_IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDoOnEvent *outer$, id<IoReactivexSingleObserver> s) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent, initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_, outer$, s)
}

IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent *create_IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDoOnEvent *outer$, id<IoReactivexSingleObserver> s) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent, initWithIoReactivexInternalOperatorsSingleSingleDoOnEvent_withIoReactivexSingleObserver_, outer$, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleDoOnEvent_DoOnEvent)
