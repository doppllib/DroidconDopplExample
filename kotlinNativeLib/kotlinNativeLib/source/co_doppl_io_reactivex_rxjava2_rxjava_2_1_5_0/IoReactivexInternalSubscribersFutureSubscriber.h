//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscribersFutureSubscriber")
#ifdef RESTRICT_IoReactivexInternalSubscribersFutureSubscriber
#define INCLUDE_ALL_IoReactivexInternalSubscribersFutureSubscriber 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscribersFutureSubscriber 1
#endif
#undef RESTRICT_IoReactivexInternalSubscribersFutureSubscriber

#if !defined (IoReactivexInternalSubscribersFutureSubscriber_) && (INCLUDE_ALL_IoReactivexInternalSubscribersFutureSubscriber || defined(INCLUDE_IoReactivexInternalSubscribersFutureSubscriber))
#define IoReactivexInternalSubscribersFutureSubscriber_

#define RESTRICT_JavaUtilConcurrentCountDownLatch 1
#define INCLUDE_JavaUtilConcurrentCountDownLatch 1
#include "java/util/concurrent/CountDownLatch.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_JavaUtilConcurrentFuture 1
#define INCLUDE_JavaUtilConcurrentFuture 1
#include "java/util/concurrent/Future.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentTimeUnit;

@interface IoReactivexInternalSubscribersFutureSubscriber : JavaUtilConcurrentCountDownLatch < IoReactivexFlowableSubscriber, JavaUtilConcurrentFuture, OrgReactivestreamsSubscription > {
 @public
  id value_;
  JavaLangThrowable *error_;
  JavaUtilConcurrentAtomicAtomicReference *s_;
}

#pragma mark Public

- (instancetype)init;

- (void)cancel;

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (id)get;

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (jboolean)isCancelled;

- (jboolean)isDone;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscribersFutureSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersFutureSubscriber, value_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersFutureSubscriber, error_, JavaLangThrowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersFutureSubscriber, s_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalSubscribersFutureSubscriber_init(IoReactivexInternalSubscribersFutureSubscriber *self);

FOUNDATION_EXPORT IoReactivexInternalSubscribersFutureSubscriber *new_IoReactivexInternalSubscribersFutureSubscriber_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscribersFutureSubscriber *create_IoReactivexInternalSubscribersFutureSubscriber_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscribersFutureSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscribersFutureSubscriber")
