//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSchedulersDisposeOnCancel")
#ifdef RESTRICT_IoReactivexInternalSchedulersDisposeOnCancel
#define INCLUDE_ALL_IoReactivexInternalSchedulersDisposeOnCancel 0
#else
#define INCLUDE_ALL_IoReactivexInternalSchedulersDisposeOnCancel 1
#endif
#undef RESTRICT_IoReactivexInternalSchedulersDisposeOnCancel

#if !defined (IoReactivexInternalSchedulersDisposeOnCancel_) && (INCLUDE_ALL_IoReactivexInternalSchedulersDisposeOnCancel || defined(INCLUDE_IoReactivexInternalSchedulersDisposeOnCancel))
#define IoReactivexInternalSchedulersDisposeOnCancel_

#define RESTRICT_JavaUtilConcurrentFuture 1
#define INCLUDE_JavaUtilConcurrentFuture 1
#include "java/util/concurrent/Future.h"

@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalSchedulersDisposeOnCancel : NSObject < JavaUtilConcurrentFuture > {
 @public
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (id)get;

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (jboolean)isCancelled;

- (jboolean)isDone;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSchedulersDisposeOnCancel)

J2OBJC_FIELD_SETTER(IoReactivexInternalSchedulersDisposeOnCancel, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalSchedulersDisposeOnCancel_initWithIoReactivexDisposablesDisposable_(IoReactivexInternalSchedulersDisposeOnCancel *self, id<IoReactivexDisposablesDisposable> d);

FOUNDATION_EXPORT IoReactivexInternalSchedulersDisposeOnCancel *new_IoReactivexInternalSchedulersDisposeOnCancel_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSchedulersDisposeOnCancel *create_IoReactivexInternalSchedulersDisposeOnCancel_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> d);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSchedulersDisposeOnCancel)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSchedulersDisposeOnCancel")
