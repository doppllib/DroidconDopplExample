//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexAnnotationsBackpressureKind")
#ifdef RESTRICT_IoReactivexAnnotationsBackpressureKind
#define INCLUDE_ALL_IoReactivexAnnotationsBackpressureKind 0
#else
#define INCLUDE_ALL_IoReactivexAnnotationsBackpressureKind 1
#endif
#undef RESTRICT_IoReactivexAnnotationsBackpressureKind

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexAnnotationsBackpressureKind_) && (INCLUDE_ALL_IoReactivexAnnotationsBackpressureKind || defined(INCLUDE_IoReactivexAnnotationsBackpressureKind))
#define IoReactivexAnnotationsBackpressureKind_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, IoReactivexAnnotationsBackpressureKind_Enum) {
  IoReactivexAnnotationsBackpressureKind_Enum_PASS_THROUGH = 0,
  IoReactivexAnnotationsBackpressureKind_Enum_FULL = 1,
  IoReactivexAnnotationsBackpressureKind_Enum_SPECIAL = 2,
  IoReactivexAnnotationsBackpressureKind_Enum_UNBOUNDED_IN = 3,
  IoReactivexAnnotationsBackpressureKind_Enum_ERROR = 4,
  IoReactivexAnnotationsBackpressureKind_Enum_NONE = 5,
};

@interface IoReactivexAnnotationsBackpressureKind : JavaLangEnum

+ (IoReactivexAnnotationsBackpressureKind * __nonnull)PASS_THROUGH;

+ (IoReactivexAnnotationsBackpressureKind * __nonnull)FULL;

+ (IoReactivexAnnotationsBackpressureKind * __nonnull)SPECIAL;

+ (IoReactivexAnnotationsBackpressureKind * __nonnull)UNBOUNDED_IN;

+ (IoReactivexAnnotationsBackpressureKind * __nonnull)ERROR;

+ (IoReactivexAnnotationsBackpressureKind * __nonnull)NONE;

#pragma mark Public

+ (IoReactivexAnnotationsBackpressureKind *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (IoReactivexAnnotationsBackpressureKind_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(IoReactivexAnnotationsBackpressureKind)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_values_[];

inline IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_get_PASS_THROUGH();
J2OBJC_ENUM_CONSTANT(IoReactivexAnnotationsBackpressureKind, PASS_THROUGH)

inline IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_get_FULL();
J2OBJC_ENUM_CONSTANT(IoReactivexAnnotationsBackpressureKind, FULL)

inline IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_get_SPECIAL();
J2OBJC_ENUM_CONSTANT(IoReactivexAnnotationsBackpressureKind, SPECIAL)

inline IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_get_UNBOUNDED_IN();
J2OBJC_ENUM_CONSTANT(IoReactivexAnnotationsBackpressureKind, UNBOUNDED_IN)

inline IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_get_ERROR();
J2OBJC_ENUM_CONSTANT(IoReactivexAnnotationsBackpressureKind, ERROR)

inline IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_get_NONE();
J2OBJC_ENUM_CONSTANT(IoReactivexAnnotationsBackpressureKind, NONE)

FOUNDATION_EXPORT IOSObjectArray *IoReactivexAnnotationsBackpressureKind_values();

FOUNDATION_EXPORT IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT IoReactivexAnnotationsBackpressureKind *IoReactivexAnnotationsBackpressureKind_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexAnnotationsBackpressureKind)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexAnnotationsBackpressureKind")
