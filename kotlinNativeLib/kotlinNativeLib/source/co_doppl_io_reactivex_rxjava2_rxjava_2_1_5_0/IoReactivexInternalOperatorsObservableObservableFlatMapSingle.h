//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFlatMapSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFlatMapSingle

#if !defined (IoReactivexInternalOperatorsObservableObservableFlatMapSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFlatMapSingle))
#define IoReactivexInternalOperatorsObservableObservableFlatMapSingle_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFlatMapSingle : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
  jboolean delayErrors_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                        withBoolean:(jboolean)delayError;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFlatMapSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle, mapper_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFlatMapSingle_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withBoolean_(IoReactivexInternalOperatorsObservableObservableFlatMapSingle *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> mapper, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFlatMapSingle *new_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withBoolean_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> mapper, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFlatMapSingle *create_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withBoolean_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> mapper, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver))
#define IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexDisposablesCompositeDisposable;
@class IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver;
@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@class IoReactivexInternalUtilAtomicThrowable;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexFunctionsFunction;

@interface IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  jboolean delayErrors_;
  IoReactivexDisposablesCompositeDisposable *set_;
  JavaUtilConcurrentAtomicAtomicInteger *active_;
  IoReactivexInternalUtilAtomicThrowable *errors_;
  id<IoReactivexFunctionsFunction> mapper_;
  JavaUtilConcurrentAtomicAtomicReference *queue_;
  id<IoReactivexDisposablesDisposable> d_;
  volatile_jboolean cancelled_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                withBoolean:(jboolean)delayErrors;

- (void)clear;

- (void)drain;

- (void)drainLoop;

- (IoReactivexInternalQueueSpscLinkedArrayQueue *)getOrCreateQueue;

- (void)innerErrorWithIoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver:(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver *)inner
                                                                                                  withJavaLangThrowable:(JavaLangThrowable *)e;

- (void)innerSuccessWithIoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver:(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver *)inner
                                                                                                                   withId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, set_, IoReactivexDisposablesCompositeDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, active_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, errors_, IoReactivexInternalUtilAtomicThrowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, queue_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withBoolean_(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jboolean delayErrors);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *new_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jboolean delayErrors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *create_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> mapper, jboolean delayErrors);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver))
#define IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "IoReactivexSingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver;
@class JavaLangThrowable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexSingleObserver, IoReactivexDisposablesDisposable >

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver:(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver_initWithIoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver *self, IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *outer$);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver *new_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver_initWithIoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver *create_IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver_initWithIoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver *outer$);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFlatMapSingle_FlatMapSingleObserver_InnerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFlatMapSingle")
