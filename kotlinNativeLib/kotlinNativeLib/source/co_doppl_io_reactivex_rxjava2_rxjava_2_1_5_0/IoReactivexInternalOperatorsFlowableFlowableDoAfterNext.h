//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext))
#define IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsConsumer;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDoAfterNext : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsConsumer> onAfterNext_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onAfterNext;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext, onAfterNext_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_initWithIoReactivexFlowable_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext *self, IoReactivexFlowable *source, id<IoReactivexFunctionsConsumer> onAfterNext);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDoAfterNext *new_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_initWithIoReactivexFlowable_withIoReactivexFunctionsConsumer_(IoReactivexFlowable *source, id<IoReactivexFunctionsConsumer> onAfterNext) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDoAfterNext *create_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_initWithIoReactivexFlowable_withIoReactivexFunctionsConsumer_(IoReactivexFlowable *source, id<IoReactivexFunctionsConsumer> onAfterNext);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersBasicFuseableSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersBasicFuseableSubscriber 1
#include "IoReactivexInternalSubscribersBasicFuseableSubscriber.h"

@protocol IoReactivexFunctionsConsumer;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber : IoReactivexInternalSubscribersBasicFuseableSubscriber {
 @public
  id<IoReactivexFunctionsConsumer> onAfterNext_;
}

#pragma mark Public

- (void)onNextWithId:(id)t;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onAfterNext;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber, onAfterNext_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onAfterNext);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onAfterNext) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onAfterNext);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber 1
#include "IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber.h"

@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexInternalFuseableConditionalSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber : IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber {
 @public
  id<IoReactivexFunctionsConsumer> onAfterNext_;
}

#pragma mark Public

- (void)onNextWithId:(id)t;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)actual
                                        withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onAfterNext;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber, onAfterNext_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber *self, id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsConsumer> onAfterNext);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsConsumer_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsConsumer> onAfterNext) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsConsumer_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsConsumer> onAfterNext);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDoAfterNext_DoAfterConditionalSubscriber)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDoAfterNext")
