//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilBlockingHelper")
#ifdef RESTRICT_IoReactivexInternalUtilBlockingHelper
#define INCLUDE_ALL_IoReactivexInternalUtilBlockingHelper 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilBlockingHelper 1
#endif
#undef RESTRICT_IoReactivexInternalUtilBlockingHelper

#if !defined (IoReactivexInternalUtilBlockingHelper_) && (INCLUDE_ALL_IoReactivexInternalUtilBlockingHelper || defined(INCLUDE_IoReactivexInternalUtilBlockingHelper))
#define IoReactivexInternalUtilBlockingHelper_

@class JavaUtilConcurrentCountDownLatch;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalUtilBlockingHelper : NSObject

#pragma mark Public

+ (void)awaitForCompleteWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch
                        withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)subscription;

+ (void)verifyNonBlocking;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilBlockingHelper)

FOUNDATION_EXPORT void IoReactivexInternalUtilBlockingHelper_awaitForCompleteWithJavaUtilConcurrentCountDownLatch_withIoReactivexDisposablesDisposable_(JavaUtilConcurrentCountDownLatch *latch, id<IoReactivexDisposablesDisposable> subscription);

FOUNDATION_EXPORT void IoReactivexInternalUtilBlockingHelper_verifyNonBlocking();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilBlockingHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilBlockingHelper")
