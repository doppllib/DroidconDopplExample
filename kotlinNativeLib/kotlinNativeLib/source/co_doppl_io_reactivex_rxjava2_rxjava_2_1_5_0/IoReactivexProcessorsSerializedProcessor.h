//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexProcessorsSerializedProcessor")
#ifdef RESTRICT_IoReactivexProcessorsSerializedProcessor
#define INCLUDE_ALL_IoReactivexProcessorsSerializedProcessor 0
#else
#define INCLUDE_ALL_IoReactivexProcessorsSerializedProcessor 1
#endif
#undef RESTRICT_IoReactivexProcessorsSerializedProcessor

#if !defined (IoReactivexProcessorsSerializedProcessor_) && (INCLUDE_ALL_IoReactivexProcessorsSerializedProcessor || defined(INCLUDE_IoReactivexProcessorsSerializedProcessor))
#define IoReactivexProcessorsSerializedProcessor_

#define RESTRICT_IoReactivexProcessorsFlowableProcessor 1
#define INCLUDE_IoReactivexProcessorsFlowableProcessor 1
#include "IoReactivexProcessorsFlowableProcessor.h"

@class IoReactivexInternalUtilAppendOnlyLinkedArrayList;
@class JavaLangThrowable;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexProcessorsSerializedProcessor : IoReactivexProcessorsFlowableProcessor {
 @public
  IoReactivexProcessorsFlowableProcessor *actual_;
  jboolean emitting_;
  IoReactivexInternalUtilAppendOnlyLinkedArrayList *queue_;
  volatile_jboolean done_;
}

#pragma mark Public

- (JavaLangThrowable *)getThrowable;

- (jboolean)hasComplete;

- (jboolean)hasSubscribers;

- (jboolean)hasThrowable;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexProcessorsFlowableProcessor:(IoReactivexProcessorsFlowableProcessor *)actual;

- (void)emitLoop;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexProcessorsSerializedProcessor)

J2OBJC_FIELD_SETTER(IoReactivexProcessorsSerializedProcessor, actual_, IoReactivexProcessorsFlowableProcessor *)
J2OBJC_FIELD_SETTER(IoReactivexProcessorsSerializedProcessor, queue_, IoReactivexInternalUtilAppendOnlyLinkedArrayList *)

FOUNDATION_EXPORT void IoReactivexProcessorsSerializedProcessor_initWithIoReactivexProcessorsFlowableProcessor_(IoReactivexProcessorsSerializedProcessor *self, IoReactivexProcessorsFlowableProcessor *actual);

FOUNDATION_EXPORT IoReactivexProcessorsSerializedProcessor *new_IoReactivexProcessorsSerializedProcessor_initWithIoReactivexProcessorsFlowableProcessor_(IoReactivexProcessorsFlowableProcessor *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexProcessorsSerializedProcessor *create_IoReactivexProcessorsSerializedProcessor_initWithIoReactivexProcessorsFlowableProcessor_(IoReactivexProcessorsFlowableProcessor *actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexProcessorsSerializedProcessor)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexProcessorsSerializedProcessor")
