//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsAction.h"
#include "IoReactivexFunctionsConsumer.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"
#include "IoReactivexInternalOperatorsMaybeMaybePeek.h"
#include "IoReactivexMaybeObserver.h"
#include "IoReactivexMaybeSource.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@implementation IoReactivexInternalOperatorsMaybeMaybePeek

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
              withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribeCall
              withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSuccessCall
              withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onErrorCall
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onCompleteCall
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onAfterTerminate
                withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onDispose {
  IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(self, source, onSubscribeCall, onSuccessCall, onErrorCall, onCompleteCall, onAfterTerminate, onDispose);
  return self;
}

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer {
  [((id<IoReactivexMaybeSource>) nil_chk(source_)) subscribeWithIoReactivexMaybeObserver:create_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(observer, self)];
}

- (void)dealloc {
  RELEASE_(onSubscribeCall_);
  RELEASE_(onSuccessCall_);
  RELEASE_(onErrorCall_);
  RELEASE_(onCompleteCall_);
  RELEASE_(onAfterTerminate_);
  RELEASE_(onDisposeCall_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeSource:withIoReactivexFunctionsConsumer:withIoReactivexFunctionsConsumer:withIoReactivexFunctionsConsumer:withIoReactivexFunctionsAction:withIoReactivexFunctionsAction:withIoReactivexFunctionsAction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexMaybeObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "onSubscribeCall_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "onSuccessCall_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
    { "onErrorCall_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "onCompleteCall_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onAfterTerminate_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onDisposeCall_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeSource;LIoReactivexFunctionsConsumer;LIoReactivexFunctionsConsumer;LIoReactivexFunctionsConsumer;LIoReactivexFunctionsAction;LIoReactivexFunctionsAction;LIoReactivexFunctionsAction;", "(Lio/reactivex/MaybeSource<TT;>;Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;Lio/reactivex/functions/Consumer<-TT;>;Lio/reactivex/functions/Consumer<-Ljava/lang/Throwable;>;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V", "subscribeActual", "LIoReactivexMaybeObserver;", "(Lio/reactivex/MaybeObserver<-TT;>;)V", "Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;", "Lio/reactivex/functions/Consumer<-TT;>;", "Lio/reactivex/functions/Consumer<-Ljava/lang/Throwable;>;", "LIoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybePeek = { "MaybePeek", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x11, 2, 6, -1, 8, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybePeek;
}

@end

void IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsMaybeMaybePeek *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsConsumer> onSubscribeCall, id<IoReactivexFunctionsConsumer> onSuccessCall, id<IoReactivexFunctionsConsumer> onErrorCall, id<IoReactivexFunctionsAction> onCompleteCall, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) {
  IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream_initWithIoReactivexMaybeSource_(self, source);
  JreStrongAssign(&self->onSubscribeCall_, onSubscribeCall);
  JreStrongAssign(&self->onSuccessCall_, onSuccessCall);
  JreStrongAssign(&self->onErrorCall_, onErrorCall);
  JreStrongAssign(&self->onCompleteCall_, onCompleteCall);
  JreStrongAssign(&self->onAfterTerminate_, onAfterTerminate);
  JreStrongAssign(&self->onDisposeCall_, onDispose);
}

IoReactivexInternalOperatorsMaybeMaybePeek *new_IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsConsumer> onSubscribeCall, id<IoReactivexFunctionsConsumer> onSuccessCall, id<IoReactivexFunctionsConsumer> onErrorCall, id<IoReactivexFunctionsAction> onCompleteCall, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybePeek, initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_, source, onSubscribeCall, onSuccessCall, onErrorCall, onCompleteCall, onAfterTerminate, onDispose)
}

IoReactivexInternalOperatorsMaybeMaybePeek *create_IoReactivexInternalOperatorsMaybeMaybePeek_initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsConsumer> onSubscribeCall, id<IoReactivexFunctionsConsumer> onSuccessCall, id<IoReactivexFunctionsConsumer> onErrorCall, id<IoReactivexFunctionsAction> onCompleteCall, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybePeek, initWithIoReactivexMaybeSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_, source, onSubscribeCall, onSuccessCall, onErrorCall, onCompleteCall, onAfterTerminate, onDispose)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybePeek)

@implementation IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
  withIoReactivexInternalOperatorsMaybeMaybePeek:(IoReactivexInternalOperatorsMaybeMaybePeek *)parent {
  IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(self, actual, parent);
  return self;
}

- (void)dispose {
  @try {
    [((id<IoReactivexFunctionsAction>) nil_chk(((IoReactivexInternalOperatorsMaybeMaybePeek *) nil_chk(parent_))->onDisposeCall_)) run];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(ex);
  }
  [((id<IoReactivexDisposablesDisposable>) nil_chk(d_)) dispose];
  JreStrongAssign(&d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
}

- (jboolean)isDisposed {
  return [((id<IoReactivexDisposablesDisposable>) nil_chk(d_)) isDisposed];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->d_, d)) {
    @try {
      [((id<IoReactivexFunctionsConsumer>) nil_chk(((IoReactivexInternalOperatorsMaybeMaybePeek *) nil_chk(parent_))->onSubscribeCall_)) acceptWithId:d];
    }
    @catch (JavaLangThrowable *ex) {
      IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
      [((id<IoReactivexDisposablesDisposable>) nil_chk(d)) dispose];
      JreStrongAssign(&self->d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
      IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexMaybeObserver_(ex, actual_);
      return;
    }
    JreStrongAssign(&self->d_, d);
    [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  }
}

- (void)onSuccessWithId:(id)value {
  if (self->d_ == JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED)) {
    return;
  }
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(((IoReactivexInternalOperatorsMaybeMaybePeek *) nil_chk(parent_))->onSuccessCall_)) acceptWithId:value];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [self onErrorInnerWithJavaLangThrowable:ex];
    return;
  }
  JreStrongAssign(&self->d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onSuccessWithId:value];
  [self onAfterTerminate];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (self->d_ == JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED)) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(e);
    return;
  }
  [self onErrorInnerWithJavaLangThrowable:e];
}

- (void)onErrorInnerWithJavaLangThrowable:(JavaLangThrowable *)e {
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(((IoReactivexInternalOperatorsMaybeMaybePeek *) nil_chk(parent_))->onErrorCall_)) acceptWithId:e];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    e = create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:JavaLangThrowable_class_()]);
  }
  JreStrongAssign(&self->d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
  [self onAfterTerminate];
}

- (void)onComplete {
  if (self->d_ == JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED)) {
    return;
  }
  @try {
    [((id<IoReactivexFunctionsAction>) nil_chk(((IoReactivexInternalOperatorsMaybeMaybePeek *) nil_chk(parent_))->onCompleteCall_)) run];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [self onErrorInnerWithJavaLangThrowable:ex];
    return;
  }
  JreStrongAssign(&self->d_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  [((id<IoReactivexMaybeObserver>) nil_chk(actual_)) onComplete];
  [self onAfterTerminate];
}

- (void)onAfterTerminate {
  @try {
    [((id<IoReactivexFunctionsAction>) nil_chk(((IoReactivexInternalOperatorsMaybeMaybePeek *) nil_chk(parent_))->onAfterTerminate_)) run];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(ex);
  }
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(parent_);
  RELEASE_(d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeObserver:withIoReactivexInternalOperatorsMaybeMaybePeek:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[4].selector = @selector(onSuccessWithId:);
  methods[5].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[6].selector = @selector(onErrorInnerWithJavaLangThrowable:);
  methods[7].selector = @selector(onComplete);
  methods[8].selector = @selector(onAfterTerminate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexMaybeObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "parent_", "LIoReactivexInternalOperatorsMaybeMaybePeek;", .constantValue.asLong = 0, 0x10, -1, -1, 11, -1 },
    { "d_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeObserver;LIoReactivexInternalOperatorsMaybeMaybePeek;", "(Lio/reactivex/MaybeObserver<-TT;>;Lio/reactivex/internal/operators/maybe/MaybePeek<TT;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "onErrorInner", "Lio/reactivex/MaybeObserver<-TT;>;", "Lio/reactivex/internal/operators/maybe/MaybePeek<TT;>;", "LIoReactivexInternalOperatorsMaybeMaybePeek;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/MaybeObserver<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver = { "MaybePeekObserver", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x18, 9, 3, 12, -1, -1, 13, -1 };
  return &_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver;
}

@end

void IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver *self, id<IoReactivexMaybeObserver> actual, IoReactivexInternalOperatorsMaybeMaybePeek *parent) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->parent_, parent);
}

IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver *new_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(id<IoReactivexMaybeObserver> actual, IoReactivexInternalOperatorsMaybeMaybePeek *parent) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver, initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_, actual, parent)
}

IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver *create_IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver_initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_(id<IoReactivexMaybeObserver> actual, IoReactivexInternalOperatorsMaybeMaybePeek *parent) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver, initWithIoReactivexMaybeObserver_withIoReactivexInternalOperatorsMaybeMaybePeek_, actual, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeMaybePeek_MaybePeekObserver)
