//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableTimeout
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableTimeout
#ifdef INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber
#define INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout 1
#endif
#ifdef INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber
#define INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout 1
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTimeout_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout))
#define IoReactivexInternalOperatorsFlowableFlowableTimeout_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableTimeout : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<OrgReactivestreamsPublisher> firstTimeoutIndicator_;
  id<IoReactivexFunctionsFunction> itemTimeoutIndicator_;
  id<OrgReactivestreamsPublisher> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
            withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)firstTimeoutIndicator
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemTimeoutIndicator
            withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTimeout)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout, firstTimeoutIndicator_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout, itemTimeoutIndicator_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout, other_, id<OrgReactivestreamsPublisher>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableTimeout_initWithIoReactivexFlowable_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableTimeout *self, IoReactivexFlowable *source, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator, id<OrgReactivestreamsPublisher> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout *new_IoReactivexInternalOperatorsFlowableFlowableTimeout_initWithIoReactivexFlowable_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withOrgReactivestreamsPublisher_(IoReactivexFlowable *source, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator, id<OrgReactivestreamsPublisher> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout *create_IoReactivexInternalOperatorsFlowableFlowableTimeout_initWithIoReactivexFlowable_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withOrgReactivestreamsPublisher_(IoReactivexFlowable *source, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator, id<OrgReactivestreamsPublisher> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTimeout)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout))
#define IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout_

@class JavaLangThrowable;

@protocol IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout < JavaObject >

- (void)timeoutWithLong:(jlong)index;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout)

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber : NSObject < IoReactivexFlowableSubscriber, OrgReactivestreamsSubscription, IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<OrgReactivestreamsPublisher> firstTimeoutIndicator_;
  id<IoReactivexFunctionsFunction> itemTimeoutIndicator_;
  id<OrgReactivestreamsSubscription> s_;
  volatile_jboolean cancelled_;
  volatile_jlong index_;
  JavaUtilConcurrentAtomicAtomicReference *timeout_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (void)timeoutWithLong:(jlong)idx;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                     withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)firstTimeoutIndicator
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemTimeoutIndicator;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber, firstTimeoutIndicator_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber, itemTimeoutIndicator_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber, timeout_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber_initWithOrgReactivestreamsSubscriber_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber_initWithOrgReactivestreamsSubscriber_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_(id<OrgReactivestreamsSubscriber> actual, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber_initWithOrgReactivestreamsSubscriber_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_(id<OrgReactivestreamsSubscriber> actual, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber_

#define RESTRICT_IoReactivexSubscribersDisposableSubscriber 1
#define INCLUDE_IoReactivexSubscribersDisposableSubscriber 1
#include "IoReactivexSubscribersDisposableSubscriber.h"

@class JavaLangThrowable;
@protocol IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout;

@interface IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber : IoReactivexSubscribersDisposableSubscriber {
 @public
  id<IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout> parent_;
  jlong index_;
  jboolean done_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout:(id<IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout>)parent
                                                                             withLong:(jlong)index;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber, parent_, id<IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout_withLong_(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber *self, id<IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout> parent, jlong index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout_withLong_(id<IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout> parent, jlong index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout_withLong_(id<IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout> parent, jlong index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutInnerSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalSubscriptionsFullArbiter;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber : NSObject < IoReactivexFlowableSubscriber, IoReactivexDisposablesDisposable, IoReactivexInternalOperatorsFlowableFlowableTimeout_OnTimeout > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<OrgReactivestreamsPublisher> firstTimeoutIndicator_;
  id<IoReactivexFunctionsFunction> itemTimeoutIndicator_;
  id<OrgReactivestreamsPublisher> other_;
  IoReactivexInternalSubscriptionsFullArbiter *arbiter_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
  volatile_jboolean cancelled_;
  volatile_jlong index_;
  JavaUtilConcurrentAtomicAtomicReference *timeout_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)timeoutWithLong:(jlong)idx;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                     withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)firstTimeoutIndicator
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemTimeoutIndicator
                     withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, firstTimeoutIndicator_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, itemTimeoutIndicator_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, other_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, arbiter_, IoReactivexInternalSubscriptionsFullArbiter *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber, timeout_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber_initWithOrgReactivestreamsSubscriber_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator, id<OrgReactivestreamsPublisher> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber_initWithOrgReactivestreamsSubscriber_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsSubscriber> actual, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator, id<OrgReactivestreamsPublisher> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber_initWithOrgReactivestreamsSubscriber_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsSubscriber> actual, id<OrgReactivestreamsPublisher> firstTimeoutIndicator, id<IoReactivexFunctionsFunction> itemTimeoutIndicator, id<OrgReactivestreamsPublisher> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableTimeout_TimeoutOtherSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableTimeout")
