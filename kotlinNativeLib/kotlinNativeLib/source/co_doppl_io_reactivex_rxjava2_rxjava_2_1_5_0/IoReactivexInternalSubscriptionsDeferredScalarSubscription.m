//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalFuseableQueueFuseable.h"
#include "IoReactivexInternalSubscriptionsBasicIntQueueSubscription.h"
#include "IoReactivexInternalSubscriptionsDeferredScalarSubscription.h"
#include "IoReactivexInternalSubscriptionsSubscriptionHelper.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsSubscriber.h"

inline jlong IoReactivexInternalSubscriptionsDeferredScalarSubscription_get_serialVersionUID();
#define IoReactivexInternalSubscriptionsDeferredScalarSubscription_serialVersionUID -2151279923272604993LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSubscriptionsDeferredScalarSubscription, serialVersionUID, jlong)

@implementation IoReactivexInternalSubscriptionsDeferredScalarSubscription

+ (jint)NO_REQUEST_NO_VALUE {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_NO_VALUE;
}

+ (jint)NO_REQUEST_HAS_VALUE {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_HAS_VALUE;
}

+ (jint)HAS_REQUEST_NO_VALUE {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_NO_VALUE;
}

+ (jint)HAS_REQUEST_HAS_VALUE {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_HAS_VALUE;
}

+ (jint)CANCELLED {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED;
}

+ (jint)FUSED_EMPTY {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_EMPTY;
}

+ (jint)FUSED_READY {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_READY;
}

+ (jint)FUSED_CONSUMED {
  return IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_CONSUMED;
}

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual {
  IoReactivexInternalSubscriptionsDeferredScalarSubscription_initWithOrgReactivestreamsSubscriber_(self, actual);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithLong_(n)) {
    for (; ; ) {
      jint state = [self get];
      if ((state & ~IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_HAS_VALUE) != 0) {
        return;
      }
      if (state == IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_HAS_VALUE) {
        if ([self compareAndSetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_HAS_VALUE withInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_HAS_VALUE]) {
          id v = value_DeferredScalarSubscription_;
          if (v != nil) {
            JreStrongAssign(&value_DeferredScalarSubscription_, nil);
            id<OrgReactivestreamsSubscriber> a = actual_;
            [((id<OrgReactivestreamsSubscriber>) nil_chk(a)) onNextWithId:v];
            if ([self get] != IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED) {
              [a onComplete];
            }
          }
        }
        return;
      }
      if ([self compareAndSetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_NO_VALUE withInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_NO_VALUE]) {
        return;
      }
    }
  }
}

- (void)completeWithId:(id)v {
  jint state = [self get];
  for (; ; ) {
    if (state == IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_EMPTY) {
      JreStrongAssign(&value_DeferredScalarSubscription_, v);
      [self lazySetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_READY];
      id<OrgReactivestreamsSubscriber> a = actual_;
      [((id<OrgReactivestreamsSubscriber>) nil_chk(a)) onNextWithId:v];
      if ([self get] != IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED) {
        [a onComplete];
      }
      return;
    }
    if ((state & ~IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_NO_VALUE) != 0) {
      return;
    }
    if (state == IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_NO_VALUE) {
      [self lazySetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_HAS_VALUE];
      id<OrgReactivestreamsSubscriber> a = actual_;
      [((id<OrgReactivestreamsSubscriber>) nil_chk(a)) onNextWithId:v];
      if ([self get] != IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED) {
        [a onComplete];
      }
      return;
    }
    JreStrongAssign(&value_DeferredScalarSubscription_, v);
    if ([self compareAndSetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_NO_VALUE withInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_HAS_VALUE]) {
      return;
    }
    state = [self get];
    if (state == IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED) {
      JreStrongAssign(&value_DeferredScalarSubscription_, nil);
      return;
    }
  }
}

- (jint)requestFusionWithInt:(jint)mode {
  if ((mode & IoReactivexInternalFuseableQueueFuseable_ASYNC) != 0) {
    [self lazySetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_EMPTY];
    return IoReactivexInternalFuseableQueueFuseable_ASYNC;
  }
  return IoReactivexInternalFuseableQueueFuseable_NONE;
}

- (id __nullable)poll {
  if ([self get] == IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_READY) {
    [self lazySetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_CONSUMED];
    id v = value_DeferredScalarSubscription_;
    JreStrongAssign(&value_DeferredScalarSubscription_, nil);
    return v;
  }
  return nil;
}

- (jboolean)isEmpty {
  return [self get] != IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_READY;
}

- (void)clear {
  [self lazySetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_CONSUMED];
  JreStrongAssign(&value_DeferredScalarSubscription_, nil);
}

- (void)cancel {
  [self setWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED];
  JreStrongAssign(&value_DeferredScalarSubscription_, nil);
}

- (jboolean)isCancelled {
  return [self get] == IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED;
}

- (jboolean)tryCancel {
  return [self getAndSetWithInt:IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED] != IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED;
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(value_DeferredScalarSubscription_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x11, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 4, 5, -1, 6, -1, -1 },
    { NULL, "I", 0x11, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x11, -1, -1, -1, 9, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  methods[2].selector = @selector(completeWithId:);
  methods[3].selector = @selector(requestFusionWithInt:);
  methods[4].selector = @selector(poll);
  methods[5].selector = @selector(isEmpty);
  methods[6].selector = @selector(clear);
  methods[7].selector = @selector(cancel);
  methods[8].selector = @selector(isCancelled);
  methods[9].selector = @selector(tryCancel);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalSubscriptionsDeferredScalarSubscription_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x14, -1, -1, 10, -1 },
    { "value_DeferredScalarSubscription_", "LNSObject;", .constantValue.asLong = 0, 0x4, 11, -1, 12, -1 },
    { "NO_REQUEST_NO_VALUE", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_NO_VALUE, 0x18, -1, -1, -1, -1 },
    { "NO_REQUEST_HAS_VALUE", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_NO_REQUEST_HAS_VALUE, 0x18, -1, -1, -1, -1 },
    { "HAS_REQUEST_NO_VALUE", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_NO_VALUE, 0x18, -1, -1, -1, -1 },
    { "HAS_REQUEST_HAS_VALUE", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_HAS_REQUEST_HAS_VALUE, 0x18, -1, -1, -1, -1 },
    { "CANCELLED", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_CANCELLED, 0x18, -1, -1, -1, -1 },
    { "FUSED_EMPTY", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_EMPTY, 0x18, -1, -1, -1, -1 },
    { "FUSED_READY", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_READY, 0x18, -1, -1, -1, -1 },
    { "FUSED_CONSUMED", "I", .constantValue.asInt = IoReactivexInternalSubscriptionsDeferredScalarSubscription_FUSED_CONSUMED, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TT;>;)V", "request", "J", "complete", "LNSObject;", "(TT;)V", "requestFusion", "I", "()TT;", "Lorg/reactivestreams/Subscriber<-TT;>;", "value", "TT;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/subscriptions/BasicIntQueueSubscription<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalSubscriptionsDeferredScalarSubscription = { "DeferredScalarSubscription", "io.reactivex.internal.subscriptions", ptrTable, methods, fields, 7, 0x1, 10, 11, -1, -1, -1, 13, -1 };
  return &_IoReactivexInternalSubscriptionsDeferredScalarSubscription;
}

@end

void IoReactivexInternalSubscriptionsDeferredScalarSubscription_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalSubscriptionsDeferredScalarSubscription *self, id<OrgReactivestreamsSubscriber> actual) {
  IoReactivexInternalSubscriptionsBasicIntQueueSubscription_init(self);
  JreStrongAssign(&self->actual_, actual);
}

IoReactivexInternalSubscriptionsDeferredScalarSubscription *new_IoReactivexInternalSubscriptionsDeferredScalarSubscription_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) {
  J2OBJC_NEW_IMPL(IoReactivexInternalSubscriptionsDeferredScalarSubscription, initWithOrgReactivestreamsSubscriber_, actual)
}

IoReactivexInternalSubscriptionsDeferredScalarSubscription *create_IoReactivexInternalSubscriptionsDeferredScalarSubscription_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalSubscriptionsDeferredScalarSubscription, initWithOrgReactivestreamsSubscriber_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalSubscriptionsDeferredScalarSubscription)
