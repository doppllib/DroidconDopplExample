//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "IoReactivexInternalUtilHashMapSupplier.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/concurrent/Callable.h"

__attribute__((unused)) static void IoReactivexInternalUtilHashMapSupplier_initWithNSString_withInt_(IoReactivexInternalUtilHashMapSupplier *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalUtilHashMapSupplier)

IoReactivexInternalUtilHashMapSupplier *IoReactivexInternalUtilHashMapSupplier_values_[1];

@implementation IoReactivexInternalUtilHashMapSupplier

+ (IoReactivexInternalUtilHashMapSupplier *)INSTANCE {
  return JreEnum(IoReactivexInternalUtilHashMapSupplier, INSTANCE);
}

+ (id<JavaUtilConcurrentCallable>)asCallable {
  return IoReactivexInternalUtilHashMapSupplier_asCallable();
}

- (id<JavaUtilMap>)call {
  return create_JavaUtilHashMap_init();
}

+ (IOSObjectArray *)values {
  return IoReactivexInternalUtilHashMapSupplier_values();
}

+ (IoReactivexInternalUtilHashMapSupplier *)valueOfWithNSString:(NSString *)name {
  return IoReactivexInternalUtilHashMapSupplier_valueOfWithNSString_(name);
}

- (IoReactivexInternalUtilHashMapSupplier_Enum)toNSEnum {
  return (IoReactivexInternalUtilHashMapSupplier_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, 1, 2, -1, -1 },
    { NULL, "[LIoReactivexInternalUtilHashMapSupplier;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexInternalUtilHashMapSupplier;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(asCallable);
  methods[1].selector = @selector(call);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LIoReactivexInternalUtilHashMapSupplier;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/concurrent/Callable<Ljava/util/Map<TK;TV;>;>;", "LJavaLangException;", "()Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;", "valueOf", "LNSString;", &JreEnum(IoReactivexInternalUtilHashMapSupplier, INSTANCE), "Ljava/lang/Enum<Lio/reactivex/internal/util/HashMapSupplier;>;Ljava/util/concurrent/Callable<Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalUtilHashMapSupplier = { "HashMapSupplier", "io.reactivex.internal.util", ptrTable, methods, fields, 7, 0x4011, 4, 1, -1, -1, -1, 6, -1 };
  return &_IoReactivexInternalUtilHashMapSupplier;
}

+ (void)initialize {
  if (self == [IoReactivexInternalUtilHashMapSupplier class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 1; i++) {
      (IoReactivexInternalUtilHashMapSupplier_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      IoReactivexInternalUtilHashMapSupplier_initWithNSString_withInt_(e, JreEnumConstantName(IoReactivexInternalUtilHashMapSupplier_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(IoReactivexInternalUtilHashMapSupplier)
  }
}

@end

void IoReactivexInternalUtilHashMapSupplier_initWithNSString_withInt_(IoReactivexInternalUtilHashMapSupplier *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalUtilHashMapSupplier_asCallable() {
  IoReactivexInternalUtilHashMapSupplier_initialize();
  return JreEnum(IoReactivexInternalUtilHashMapSupplier, INSTANCE);
}

IOSObjectArray *IoReactivexInternalUtilHashMapSupplier_values() {
  IoReactivexInternalUtilHashMapSupplier_initialize();
  return [IOSObjectArray arrayWithObjects:IoReactivexInternalUtilHashMapSupplier_values_ count:1 type:IoReactivexInternalUtilHashMapSupplier_class_()];
}

IoReactivexInternalUtilHashMapSupplier *IoReactivexInternalUtilHashMapSupplier_valueOfWithNSString_(NSString *name) {
  IoReactivexInternalUtilHashMapSupplier_initialize();
  for (int i = 0; i < 1; i++) {
    IoReactivexInternalUtilHashMapSupplier *e = IoReactivexInternalUtilHashMapSupplier_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoReactivexInternalUtilHashMapSupplier *IoReactivexInternalUtilHashMapSupplier_fromOrdinal(NSUInteger ordinal) {
  IoReactivexInternalUtilHashMapSupplier_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return IoReactivexInternalUtilHashMapSupplier_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalUtilHashMapSupplier)
