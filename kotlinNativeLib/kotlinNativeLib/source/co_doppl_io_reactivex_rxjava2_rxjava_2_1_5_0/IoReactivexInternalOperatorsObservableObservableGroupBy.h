//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableGroupBy
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableGroupBy

#if !defined (IoReactivexInternalOperatorsObservableObservableGroupBy_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableGroupBy))
#define IoReactivexInternalOperatorsObservableObservableGroupBy_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@class IoReactivexObservablesGroupedObservable;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableGroupBy : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> keySelector_;
  id<IoReactivexFunctionsFunction> valueSelector_;
  jint bufferSize_;
  jboolean delayError_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)keySelector
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSelector
                                            withInt:(jint)bufferSize
                                        withBoolean:(jboolean)delayError;

- (IoReactivexObservablesGroupedObservable *)blockingFirst;

- (IoReactivexObservablesGroupedObservable *)blockingFirstWithId:(IoReactivexObservablesGroupedObservable *)arg0;

- (IoReactivexObservablesGroupedObservable *)blockingLast;

- (IoReactivexObservablesGroupedObservable *)blockingLastWithId:(IoReactivexObservablesGroupedObservable *)arg0;

- (IoReactivexObservablesGroupedObservable *)blockingSingle;

- (IoReactivexObservablesGroupedObservable *)blockingSingleWithId:(IoReactivexObservablesGroupedObservable *)arg0;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableGroupBy)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy, keySelector_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy, valueSelector_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableGroupBy_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexInternalOperatorsObservableObservableGroupBy *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> keySelector, id<IoReactivexFunctionsFunction> valueSelector, jint bufferSize, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy *new_IoReactivexInternalOperatorsObservableObservableGroupBy_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> keySelector, id<IoReactivexFunctionsFunction> valueSelector, jint bufferSize, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy *create_IoReactivexInternalOperatorsObservableObservableGroupBy_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> keySelector, id<IoReactivexFunctionsFunction> valueSelector, jint bufferSize, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableGroupBy)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver))
#define IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicBoolean;
@protocol IoReactivexFunctionsFunction;
@protocol JavaUtilMap;

@interface IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexFunctionsFunction> keySelector_;
  id<IoReactivexFunctionsFunction> valueSelector_;
  jint bufferSize_;
  jboolean delayError_;
  id<JavaUtilMap> groups_;
  id<IoReactivexDisposablesDisposable> s_;
  JavaUtilConcurrentAtomicAtomicBoolean *cancelled_;
}

+ (id)NULL_KEY;

#pragma mark Public

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)keySelector
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSelector
                                    withInt:(jint)bufferSize
                                withBoolean:(jboolean)delayError;

- (void)cancelWithId:(id)key;

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, keySelector_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, valueSelector_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, groups_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, cancelled_, JavaUtilConcurrentAtomicAtomicBoolean *)

inline id IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_get_NULL_KEY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_NULL_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver, NULL_KEY, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> keySelector, id<IoReactivexFunctionsFunction> valueSelector, jint bufferSize, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *new_IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> keySelector, id<IoReactivexFunctionsFunction> valueSelector, jint bufferSize, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *create_IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> keySelector, id<IoReactivexFunctionsFunction> valueSelector, jint bufferSize, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast))
#define IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast_

#define RESTRICT_IoReactivexObservablesGroupedObservable 1
#define INCLUDE_IoReactivexObservablesGroupedObservable 1
#include "IoReactivexObservablesGroupedObservable.h"

@class IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver;
@class IoReactivexInternalOperatorsObservableObservableGroupBy_State;
@class JavaLangThrowable;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast : IoReactivexObservablesGroupedObservable {
 @public
  IoReactivexInternalOperatorsObservableObservableGroupBy_State *state_;
}

#pragma mark Public

+ (IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast *)createWithWithId:(id)key
                                                                                     withInt:(jint)bufferSize
                 withIoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver:(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *)parent
                                                                                 withBoolean:(jboolean)delayError;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)t;

#pragma mark Protected

- (instancetype)initWithId:(id)key
withIoReactivexInternalOperatorsObservableObservableGroupBy_State:(IoReactivexInternalOperatorsObservableObservableGroupBy_State *)state;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast, state_, IoReactivexInternalOperatorsObservableObservableGroupBy_State *)

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast *IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast_createWithWithId_withInt_withIoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_withBoolean_(id key, jint bufferSize, IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *parent, jboolean delayError);

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast_initWithId_withIoReactivexInternalOperatorsObservableObservableGroupBy_State_(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast *self, id key, IoReactivexInternalOperatorsObservableObservableGroupBy_State *state);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast *new_IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast_initWithId_withIoReactivexInternalOperatorsObservableObservableGroupBy_State_(id key, IoReactivexInternalOperatorsObservableObservableGroupBy_State *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast *create_IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast_initWithId_withIoReactivexInternalOperatorsObservableObservableGroupBy_State_(id key, IoReactivexInternalOperatorsObservableObservableGroupBy_State *state);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupedUnicast)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableGroupBy_State_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableGroupBy_State))
#define IoReactivexInternalOperatorsObservableObservableGroupBy_State_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

#define RESTRICT_IoReactivexObservableSource 1
#define INCLUDE_IoReactivexObservableSource 1
#include "IoReactivexObservableSource.h"

@class IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver;
@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicBoolean;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableGroupBy_State : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexDisposablesDisposable, IoReactivexObservableSource > {
 @public
  id key_;
  IoReactivexInternalQueueSpscLinkedArrayQueue *queue_;
  IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *parent_;
  jboolean delayError_;
  volatile_jboolean done_;
  JavaLangThrowable *error_;
  JavaUtilConcurrentAtomicAtomicBoolean *cancelled_;
  JavaUtilConcurrentAtomicAtomicBoolean *once_;
  JavaUtilConcurrentAtomicAtomicReference *actual_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)t;

- (void)subscribeWithIoReactivexObserver:(id<IoReactivexObserver>)s;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)bufferSize
withIoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver:(IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *)parent
                     withId:(id)key
                withBoolean:(jboolean)delayError;

- (jboolean)checkTerminatedWithBoolean:(jboolean)d
                           withBoolean:(jboolean)empty
               withIoReactivexObserver:(id<IoReactivexObserver>)a
                           withBoolean:(jboolean)delayError;

- (void)drain;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableGroupBy_State)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, key_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, queue_, IoReactivexInternalQueueSpscLinkedArrayQueue *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, parent_, IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, error_, JavaLangThrowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, cancelled_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGroupBy_State, actual_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableGroupBy_State_initWithInt_withIoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_withId_withBoolean_(IoReactivexInternalOperatorsObservableObservableGroupBy_State *self, jint bufferSize, IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *parent, id key, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_State *new_IoReactivexInternalOperatorsObservableObservableGroupBy_State_initWithInt_withIoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_withId_withBoolean_(jint bufferSize, IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *parent, id key, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGroupBy_State *create_IoReactivexInternalOperatorsObservableObservableGroupBy_State_initWithInt_withIoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver_withId_withBoolean_(jint bufferSize, IoReactivexInternalOperatorsObservableObservableGroupBy_GroupByObserver *parent, id key, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableGroupBy_State)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGroupBy")
