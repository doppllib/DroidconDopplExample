//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGenerate")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableGenerate
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGenerate 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGenerate 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableGenerate

#if !defined (IoReactivexInternalOperatorsObservableObservableGenerate_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGenerate || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableGenerate))
#define IoReactivexInternalOperatorsObservableObservableGenerate_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableGenerate : IoReactivexObservable {
 @public
  id<JavaUtilConcurrentCallable> stateSupplier_;
  id<IoReactivexFunctionsBiFunction> generator_;
  id<IoReactivexFunctionsConsumer> disposeState_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)stateSupplier
                withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)generator
                  withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)disposeState;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableGenerate)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate, stateSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate, generator_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate, disposeState_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableGenerate_initWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsObservableObservableGenerate *self, id<JavaUtilConcurrentCallable> stateSupplier, id<IoReactivexFunctionsBiFunction> generator, id<IoReactivexFunctionsConsumer> disposeState);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGenerate *new_IoReactivexInternalOperatorsObservableObservableGenerate_initWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_withIoReactivexFunctionsConsumer_(id<JavaUtilConcurrentCallable> stateSupplier, id<IoReactivexFunctionsBiFunction> generator, id<IoReactivexFunctionsConsumer> disposeState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGenerate *create_IoReactivexInternalOperatorsObservableObservableGenerate_initWithJavaUtilConcurrentCallable_withIoReactivexFunctionsBiFunction_withIoReactivexFunctionsConsumer_(id<JavaUtilConcurrentCallable> stateSupplier, id<IoReactivexFunctionsBiFunction> generator, id<IoReactivexFunctionsConsumer> disposeState);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableGenerate)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGenerate || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable))
#define IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable_

#define RESTRICT_IoReactivexEmitter 1
#define INCLUDE_IoReactivexEmitter 1
#include "IoReactivexEmitter.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable : NSObject < IoReactivexEmitter, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexFunctionsBiFunction> generator_;
  id<IoReactivexFunctionsConsumer> disposeState_;
  id state_;
  volatile_jboolean cancelled_;
  jboolean terminate_;
  jboolean hasNext_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)generator
           withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)disposeState
                                     withId:(id)initialState;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable, generator_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable, disposeState_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable, state_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsBiFunction_withIoReactivexFunctionsConsumer_withId_(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsBiFunction> generator, id<IoReactivexFunctionsConsumer> disposeState, id initialState);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable *new_IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsBiFunction_withIoReactivexFunctionsConsumer_withId_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsBiFunction> generator, id<IoReactivexFunctionsConsumer> disposeState, id initialState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable *create_IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsBiFunction_withIoReactivexFunctionsConsumer_withId_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsBiFunction> generator, id<IoReactivexFunctionsConsumer> disposeState, id initialState);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableGenerate_GeneratorDisposable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableGenerate")
