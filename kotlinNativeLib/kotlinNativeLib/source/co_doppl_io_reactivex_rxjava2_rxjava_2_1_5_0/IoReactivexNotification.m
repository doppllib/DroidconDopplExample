//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalUtilNotificationLite.h"
#include "IoReactivexNotification.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@interface IoReactivexNotification ()

- (instancetype)initWithId:(id)value;

@end

__attribute__((unused)) static void IoReactivexNotification_initWithId_(IoReactivexNotification *self, id value);

__attribute__((unused)) static IoReactivexNotification *new_IoReactivexNotification_initWithId_(id value) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexNotification *create_IoReactivexNotification_initWithId_(id value);

J2OBJC_INITIALIZED_DEFN(IoReactivexNotification)

IoReactivexNotification *IoReactivexNotification_COMPLETE;

@implementation IoReactivexNotification

+ (IoReactivexNotification *)COMPLETE {
  return IoReactivexNotification_COMPLETE;
}

- (instancetype)initWithId:(id)value {
  IoReactivexNotification_initWithId_(self, value);
  return self;
}

- (jboolean)isOnComplete {
  return value_ == nil;
}

- (jboolean)isOnError {
  return IoReactivexInternalUtilNotificationLite_isErrorWithId_(value_);
}

- (jboolean)isOnNext {
  id o = value_;
  return o != nil && !IoReactivexInternalUtilNotificationLite_isErrorWithId_(o);
}

- (id __nullable)getValue {
  id o = value_;
  if (o != nil && !IoReactivexInternalUtilNotificationLite_isErrorWithId_(o)) {
    return value_;
  }
  return nil;
}

- (JavaLangThrowable * __nullable)getError {
  id o = value_;
  if (IoReactivexInternalUtilNotificationLite_isErrorWithId_(o)) {
    return IoReactivexInternalUtilNotificationLite_getErrorWithId_(o);
  }
  return nil;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[IoReactivexNotification class]]) {
    IoReactivexNotification *n = (IoReactivexNotification *) cast_chk(obj, [IoReactivexNotification class]);
    return IoReactivexInternalFunctionsObjectHelper_equalsWithId_withId_(value_, ((IoReactivexNotification *) nil_chk(n))->value_);
  }
  return false;
}

- (NSUInteger)hash {
  id o = value_;
  return o != nil ? ((jint) [o hash]) : 0;
}

- (NSString *)description {
  id o = value_;
  if (o == nil) {
    return @"OnCompleteNotification";
  }
  if (IoReactivexInternalUtilNotificationLite_isErrorWithId_(o)) {
    return JreStrcat("$@C", @"OnErrorNotification[", IoReactivexInternalUtilNotificationLite_getErrorWithId_(o), ']');
  }
  return JreStrcat("$@C", @"OnNextNotification[", value_, ']');
}

+ (IoReactivexNotification * __nonnull)createOnNextWithId:(id __nonnull)value {
  return IoReactivexNotification_createOnNextWithId_(value);
}

+ (IoReactivexNotification * __nonnull)createOnErrorWithJavaLangThrowable:(JavaLangThrowable * __nonnull)error {
  return IoReactivexNotification_createOnErrorWithJavaLangThrowable_(error);
}

+ (IoReactivexNotification * __nonnull)createOnComplete {
  return IoReactivexNotification_createOnComplete();
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexNotification;", 0x9, 5, 0, -1, 6, -1, -1 },
    { NULL, "LIoReactivexNotification;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "LIoReactivexNotification;", 0x9, -1, -1, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(isOnComplete);
  methods[2].selector = @selector(isOnError);
  methods[3].selector = @selector(isOnNext);
  methods[4].selector = @selector(getValue);
  methods[5].selector = @selector(getError);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(description);
  methods[9].selector = @selector(createOnNextWithId:);
  methods[10].selector = @selector(createOnErrorWithJavaLangThrowable:);
  methods[11].selector = @selector(createOnComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "COMPLETE", "LIoReactivexNotification;", .constantValue.asLong = 0, 0x18, -1, 11, 12, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "()TT;", "equals", "hashCode", "toString", "createOnNext", "<T:Ljava/lang/Object;>(TT;)Lio/reactivex/Notification<TT;>;", "createOnError", "LJavaLangThrowable;", "<T:Ljava/lang/Object;>(Ljava/lang/Throwable;)Lio/reactivex/Notification<TT;>;", "<T:Ljava/lang/Object;>()Lio/reactivex/Notification<TT;>;", &IoReactivexNotification_COMPLETE, "Lio/reactivex/Notification<Ljava/lang/Object;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _IoReactivexNotification = { "Notification", "io.reactivex", ptrTable, methods, fields, 7, 0x11, 12, 2, -1, -1, -1, 13, -1 };
  return &_IoReactivexNotification;
}

+ (void)initialize {
  if (self == [IoReactivexNotification class]) {
    JreStrongAssignAndConsume(&IoReactivexNotification_COMPLETE, new_IoReactivexNotification_initWithId_(nil));
    J2OBJC_SET_INITIALIZED(IoReactivexNotification)
  }
}

@end

void IoReactivexNotification_initWithId_(IoReactivexNotification *self, id value) {
  NSObject_init(self);
  JreStrongAssign(&self->value_, value);
}

IoReactivexNotification *new_IoReactivexNotification_initWithId_(id value) {
  J2OBJC_NEW_IMPL(IoReactivexNotification, initWithId_, value)
}

IoReactivexNotification *create_IoReactivexNotification_initWithId_(id value) {
  J2OBJC_CREATE_IMPL(IoReactivexNotification, initWithId_, value)
}

IoReactivexNotification *IoReactivexNotification_createOnNextWithId_(id value) {
  IoReactivexNotification_initialize();
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(value, @"value is null");
  return create_IoReactivexNotification_initWithId_(value);
}

IoReactivexNotification *IoReactivexNotification_createOnErrorWithJavaLangThrowable_(JavaLangThrowable *error) {
  IoReactivexNotification_initialize();
  IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(error, @"error is null");
  return create_IoReactivexNotification_initWithId_(IoReactivexInternalUtilNotificationLite_errorWithJavaLangThrowable_(error));
}

IoReactivexNotification *IoReactivexNotification_createOnComplete() {
  IoReactivexNotification_initialize();
  return IoReactivexNotification_COMPLETE;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexNotification)
