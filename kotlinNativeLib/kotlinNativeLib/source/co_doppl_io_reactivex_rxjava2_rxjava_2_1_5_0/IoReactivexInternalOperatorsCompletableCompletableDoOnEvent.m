//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexCompletable.h"
#include "IoReactivexCompletableObserver.h"
#include "IoReactivexCompletableSource.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsConsumer.h"
#include "IoReactivexInternalOperatorsCompletableCompletableDoOnEvent.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@interface IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent () {
 @public
  IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *this$0_;
  id<IoReactivexCompletableObserver> observer_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent, observer_, id<IoReactivexCompletableObserver>)

@implementation IoReactivexInternalOperatorsCompletableCompletableDoOnEvent

- (instancetype)initWithIoReactivexCompletableSource:(id<IoReactivexCompletableSource>)source
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onEvent {
  IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_(self, source, onEvent);
  return self;
}

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s {
  [((id<IoReactivexCompletableSource>) nil_chk(source_)) subscribeWithIoReactivexCompletableObserver:create_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_(self, s)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(onEvent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexCompletableSource:withIoReactivexFunctionsConsumer:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexCompletableObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexCompletableSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onEvent_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableSource;LIoReactivexFunctionsConsumer;", "(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer<-Ljava/lang/Throwable;>;)V", "subscribeActual", "LIoReactivexCompletableObserver;", "Lio/reactivex/functions/Consumer<-Ljava/lang/Throwable;>;", "LIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableDoOnEvent = { "CompletableDoOnEvent", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 5, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *self, id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsConsumer> onEvent) {
  IoReactivexCompletable_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->onEvent_, onEvent);
}

IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *new_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_(id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsConsumer> onEvent) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent, initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_, source, onEvent)
}

IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *create_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_(id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsConsumer> onEvent) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent, initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_, source, onEvent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent)

@implementation IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent:(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *)outer$
                                                 withIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)observer {
  IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_(self, outer$, observer);
  return self;
}

- (void)onComplete {
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(this$0_->onEvent_)) acceptWithId:nil];
  }
  @catch (JavaLangThrowable *e) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(e);
    [((id<IoReactivexCompletableObserver>) nil_chk(observer_)) onErrorWithJavaLangThrowable:e];
    return;
  }
  [((id<IoReactivexCompletableObserver>) nil_chk(observer_)) onComplete];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(this$0_->onEvent_)) acceptWithId:e];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    e = create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:JavaLangThrowable_class_()]);
  }
  [((id<IoReactivexCompletableObserver>) nil_chk(observer_)) onErrorWithJavaLangThrowable:e];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((id<IoReactivexCompletableObserver>) nil_chk(observer_)) onSubscribeWithIoReactivexDisposablesDisposable:d];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent:withIoReactivexCompletableObserver:);
  methods[1].selector = @selector(onComplete);
  methods[2].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableDoOnEvent;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "observer_", "LIoReactivexCompletableObserver;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableObserver;", "onError", "LJavaLangThrowable;", "onSubscribe", "LIoReactivexDisposablesDisposable;", "LIoReactivexInternalOperatorsCompletableCompletableDoOnEvent;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent = { "DoOnEvent", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x10, 4, 2, 5, -1, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent *self, IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *outer$, id<IoReactivexCompletableObserver> observer) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->observer_, observer);
}

IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent *new_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *outer$, id<IoReactivexCompletableObserver> observer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent, initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_, outer$, observer)
}

IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent *create_IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent_initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent *outer$, id<IoReactivexCompletableObserver> observer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent, initWithIoReactivexInternalOperatorsCompletableCompletableDoOnEvent_withIoReactivexCompletableObserver_, outer$, observer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableDoOnEvent_DoOnEvent)
