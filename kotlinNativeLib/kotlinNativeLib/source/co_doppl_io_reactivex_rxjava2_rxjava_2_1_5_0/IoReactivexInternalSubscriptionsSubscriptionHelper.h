//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsSubscriptionHelper")
#ifdef RESTRICT_IoReactivexInternalSubscriptionsSubscriptionHelper
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsSubscriptionHelper 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsSubscriptionHelper 1
#endif
#undef RESTRICT_IoReactivexInternalSubscriptionsSubscriptionHelper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalSubscriptionsSubscriptionHelper_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsSubscriptionHelper || defined(INCLUDE_IoReactivexInternalSubscriptionsSubscriptionHelper))
#define IoReactivexInternalSubscriptionsSubscriptionHelper_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class IOSObjectArray;
@class JavaUtilConcurrentAtomicAtomicLong;
@class JavaUtilConcurrentAtomicAtomicReference;

typedef NS_ENUM(NSUInteger, IoReactivexInternalSubscriptionsSubscriptionHelper_Enum) {
  IoReactivexInternalSubscriptionsSubscriptionHelper_Enum_CANCELLED = 0,
};

@interface IoReactivexInternalSubscriptionsSubscriptionHelper : JavaLangEnum < OrgReactivestreamsSubscription >

+ (IoReactivexInternalSubscriptionsSubscriptionHelper * __nonnull)CANCELLED;

#pragma mark Public

- (void)cancel;

+ (jboolean)cancelWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)field;

+ (void)deferredRequestWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)field
                            withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                                          withLong:(jlong)n;

+ (jboolean)deferredSetOnceWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)field
                                withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                    withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

+ (jboolean)isCancelledWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

+ (jboolean)replaceWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)field
                            withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

+ (void)reportMoreProducedWithLong:(jlong)n;

+ (void)reportSubscriptionSet;

- (void)requestWithLong:(jlong)n;

+ (jboolean)setWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)field
                        withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

+ (jboolean)setOnceWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)field
                            withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

+ (jboolean)validateWithLong:(jlong)n;

+ (jboolean)validateWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)current
                    withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)next;

+ (IoReactivexInternalSubscriptionsSubscriptionHelper *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (IoReactivexInternalSubscriptionsSubscriptionHelper_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalSubscriptionsSubscriptionHelper)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT IoReactivexInternalSubscriptionsSubscriptionHelper *IoReactivexInternalSubscriptionsSubscriptionHelper_values_[];

inline IoReactivexInternalSubscriptionsSubscriptionHelper *IoReactivexInternalSubscriptionsSubscriptionHelper_get_CANCELLED();
J2OBJC_ENUM_CONSTANT(IoReactivexInternalSubscriptionsSubscriptionHelper, CANCELLED)

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithOrgReactivestreamsSubscription_withOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> current, id<OrgReactivestreamsSubscription> next);

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsSubscriptionHelper_reportSubscriptionSet();

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithLong_(jlong n);

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsSubscriptionHelper_reportMoreProducedWithLong_(jlong n);

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_isCancelledWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_setWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_(JavaUtilConcurrentAtomicAtomicReference *field, id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_(JavaUtilConcurrentAtomicAtomicReference *field, id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_replaceWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_(JavaUtilConcurrentAtomicAtomicReference *field, id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *field);

FOUNDATION_EXPORT jboolean IoReactivexInternalSubscriptionsSubscriptionHelper_deferredSetOnceWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicLong_withOrgReactivestreamsSubscription_(JavaUtilConcurrentAtomicAtomicReference *field, JavaUtilConcurrentAtomicAtomicLong *requested, id<OrgReactivestreamsSubscription> s);

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsSubscriptionHelper_deferredRequestWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicLong_withLong_(JavaUtilConcurrentAtomicAtomicReference *field, JavaUtilConcurrentAtomicAtomicLong *requested, jlong n);

FOUNDATION_EXPORT IOSObjectArray *IoReactivexInternalSubscriptionsSubscriptionHelper_values();

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsSubscriptionHelper *IoReactivexInternalSubscriptionsSubscriptionHelper_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsSubscriptionHelper *IoReactivexInternalSubscriptionsSubscriptionHelper_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsSubscriptionHelper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsSubscriptionHelper")
