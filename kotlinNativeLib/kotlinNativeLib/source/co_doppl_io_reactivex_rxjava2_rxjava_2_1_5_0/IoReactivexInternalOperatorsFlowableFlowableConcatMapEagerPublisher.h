//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher

#if !defined (IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher))
#define IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class IoReactivexInternalUtilErrorMode;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher : IoReactivexFlowable {
 @public
  id<OrgReactivestreamsPublisher> source_;
  id<IoReactivexFunctionsFunction> mapper_;
  jint maxConcurrency_;
  jint prefetch_;
  IoReactivexInternalUtilErrorMode *errorMode_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                            withInt:(jint)maxConcurrency
                                            withInt:(jint)prefetch
               withIoReactivexInternalUtilErrorMode:(IoReactivexInternalUtilErrorMode *)errorMode;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher, source_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher, errorMode_, IoReactivexInternalUtilErrorMode *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher *self, id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher *new_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher *create_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEagerPublisher")
