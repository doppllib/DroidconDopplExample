//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexCompletable.h"
#include "IoReactivexCompletableObserver.h"
#include "IoReactivexCompletableSource.h"
#include "IoReactivexDisposablesCompositeDisposable.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalOperatorsCompletableCompletableMerge.h"
#include "IoReactivexInternalSubscriptionsSubscriptionHelper.h"
#include "IoReactivexInternalUtilAtomicThrowable.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsPublisher.h"
#include "OrgReactivestreamsSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_get_serialVersionUID();
#define IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_serialVersionUID -2108443387387077490LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber, serialVersionUID, jlong)

@interface IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver () {
 @public
  IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *this$0_;
}

@end

inline jlong IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_get_serialVersionUID();
#define IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_serialVersionUID 251330541679988317LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsCompletableCompletableMerge

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                                            withInt:(jint)maxConcurrency
                                        withBoolean:(jboolean)delayErrors {
  IoReactivexInternalOperatorsCompletableCompletableMerge_initWithOrgReactivestreamsPublisher_withInt_withBoolean_(self, source, maxConcurrency, delayErrors);
  return self;
}

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s {
  IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *parent = create_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_initWithIoReactivexCompletableObserver_withInt_withBoolean_(s, maxConcurrency_, delayErrors_);
  [((id<OrgReactivestreamsPublisher>) nil_chk(source_)) subscribeWithOrgReactivestreamsSubscriber:parent];
}

- (void)dealloc {
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsPublisher:withInt:withBoolean:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexCompletableObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
    { "maxConcurrency_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayErrors_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsPublisher;IZ", "(Lorg/reactivestreams/Publisher<+Lio/reactivex/CompletableSource;>;IZ)V", "subscribeActual", "LIoReactivexCompletableObserver;", "Lorg/reactivestreams/Publisher<+Lio/reactivex/CompletableSource;>;", "LIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableMerge = { "CompletableMerge", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, 5, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableMerge;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableMerge_initWithOrgReactivestreamsPublisher_withInt_withBoolean_(IoReactivexInternalOperatorsCompletableCompletableMerge *self, id<OrgReactivestreamsPublisher> source, jint maxConcurrency, jboolean delayErrors) {
  IoReactivexCompletable_init(self);
  JreStrongAssign(&self->source_, source);
  self->maxConcurrency_ = maxConcurrency;
  self->delayErrors_ = delayErrors;
}

IoReactivexInternalOperatorsCompletableCompletableMerge *new_IoReactivexInternalOperatorsCompletableCompletableMerge_initWithOrgReactivestreamsPublisher_withInt_withBoolean_(id<OrgReactivestreamsPublisher> source, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableMerge, initWithOrgReactivestreamsPublisher_withInt_withBoolean_, source, maxConcurrency, delayErrors)
}

IoReactivexInternalOperatorsCompletableCompletableMerge *create_IoReactivexInternalOperatorsCompletableCompletableMerge_initWithOrgReactivestreamsPublisher_withInt_withBoolean_(id<OrgReactivestreamsPublisher> source, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableMerge, initWithOrgReactivestreamsPublisher_withInt_withBoolean_, source, maxConcurrency, delayErrors)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableMerge)

@implementation IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber

- (instancetype)initWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)actual
                                               withInt:(jint)maxConcurrency
                                           withBoolean:(jboolean)delayErrors {
  IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_initWithIoReactivexCompletableObserver_withInt_withBoolean_(self, actual, maxConcurrency, delayErrors);
  return self;
}

- (void)dispose {
  [((id<OrgReactivestreamsSubscription>) nil_chk(JreLoadVolatileId(&s_))) cancel];
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(set_)) dispose];
}

- (jboolean)isDisposed {
  return [((IoReactivexDisposablesCompositeDisposable *) nil_chk(set_)) isDisposed];
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithOrgReactivestreamsSubscription_withOrgReactivestreamsSubscription_(JreLoadVolatileId(&self->s_), s)) {
    JreVolatileStrongAssign(&self->s_, s);
    [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
    if (maxConcurrency_ == JavaLangInteger_MAX_VALUE) {
      [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
    }
    else {
      [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:maxConcurrency_];
    }
  }
}

- (void)onNextWithId:(id<IoReactivexCompletableSource>)t {
  [self getAndIncrement];
  IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver *inner = create_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_(self);
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(set_)) addWithIoReactivexDisposablesDisposable:inner];
  [((id<IoReactivexCompletableSource>) nil_chk(t)) subscribeWithIoReactivexCompletableObserver:inner];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  if (!delayErrors_) {
    [((IoReactivexDisposablesCompositeDisposable *) nil_chk(set_)) dispose];
    if ([((IoReactivexInternalUtilAtomicThrowable *) nil_chk(error_)) addThrowableWithJavaLangThrowable:t]) {
      if ([self getAndSetWithInt:0] > 0) {
        [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:[error_ terminate]];
      }
    }
    else {
      IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    }
  }
  else {
    if ([((IoReactivexInternalUtilAtomicThrowable *) nil_chk(error_)) addThrowableWithJavaLangThrowable:t]) {
      if ([self decrementAndGet] == 0) {
        [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:[error_ terminate]];
      }
    }
    else {
      IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    }
  }
}

- (void)onComplete {
  if ([self decrementAndGet] == 0) {
    JavaLangThrowable *ex = [((IoReactivexInternalUtilAtomicThrowable *) nil_chk(error_)) get];
    if (ex != nil) {
      [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:[error_ terminate]];
    }
    else {
      [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onComplete];
    }
  }
}

- (void)innerErrorWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver:(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver *)inner
                                                                                                      withJavaLangThrowable:(JavaLangThrowable *)t {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(set_)) delete__WithIoReactivexDisposablesDisposable:inner];
  if (!delayErrors_) {
    [((id<OrgReactivestreamsSubscription>) nil_chk(JreLoadVolatileId(&s_))) cancel];
    [set_ dispose];
    if ([((IoReactivexInternalUtilAtomicThrowable *) nil_chk(error_)) addThrowableWithJavaLangThrowable:t]) {
      if ([self getAndSetWithInt:0] > 0) {
        [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:[error_ terminate]];
      }
    }
    else {
      IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    }
  }
  else {
    if ([((IoReactivexInternalUtilAtomicThrowable *) nil_chk(error_)) addThrowableWithJavaLangThrowable:t]) {
      if ([self decrementAndGet] == 0) {
        [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:[error_ terminate]];
      }
      else {
        if (maxConcurrency_ != JavaLangInteger_MAX_VALUE) {
          [((id<OrgReactivestreamsSubscription>) nil_chk(JreLoadVolatileId(&s_))) requestWithLong:1];
        }
      }
    }
    else {
      IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    }
  }
}

- (void)innerCompleteWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver:(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver *)inner {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(set_)) delete__WithIoReactivexDisposablesDisposable:inner];
  if ([self decrementAndGet] == 0) {
    JavaLangThrowable *ex = [((IoReactivexInternalUtilAtomicThrowable *) nil_chk(error_)) get];
    if (ex != nil) {
      [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:ex];
    }
    else {
      [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onComplete];
    }
  }
  else {
    if (maxConcurrency_ != JavaLangInteger_MAX_VALUE) {
      [((id<OrgReactivestreamsSubscription>) nil_chk(JreLoadVolatileId(&s_))) requestWithLong:1];
    }
  }
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)__javaClone:(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&s_, &original->s_);
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(error_);
  RELEASE_(set_);
  JreReleaseVolatile(&s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexCompletableObserver:withInt:withBoolean:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[4].selector = @selector(onNextWithId:);
  methods[5].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[6].selector = @selector(onComplete);
  methods[7].selector = @selector(innerErrorWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver:withJavaLangThrowable:);
  methods[8].selector = @selector(innerCompleteWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LIoReactivexCompletableObserver;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxConcurrency_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayErrors_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "error_", "LIoReactivexInternalUtilAtomicThrowable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "set_", "LIoReactivexDisposablesCompositeDisposable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "s_", "LOrgReactivestreamsSubscription;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableObserver;IZ", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LIoReactivexCompletableSource;", "onError", "LJavaLangThrowable;", "innerError", "LIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver;LJavaLangThrowable;", "innerComplete", "LIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver;", "LIoReactivexInternalOperatorsCompletableCompletableMerge;", "Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/FlowableSubscriber<Lio/reactivex/CompletableSource;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber = { "CompletableMergeSubscriber", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x18, 9, 7, 11, 10, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_initWithIoReactivexCompletableObserver_withInt_withBoolean_(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *self, id<IoReactivexCompletableObserver> actual, jint maxConcurrency, jboolean delayErrors) {
  JavaUtilConcurrentAtomicAtomicInteger_init(self);
  JreStrongAssign(&self->actual_, actual);
  self->maxConcurrency_ = maxConcurrency;
  self->delayErrors_ = delayErrors;
  JreStrongAssignAndConsume(&self->set_, new_IoReactivexDisposablesCompositeDisposable_init());
  JreStrongAssignAndConsume(&self->error_, new_IoReactivexInternalUtilAtomicThrowable_init());
  [self lazySetWithInt:1];
}

IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *new_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_initWithIoReactivexCompletableObserver_withInt_withBoolean_(id<IoReactivexCompletableObserver> actual, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber, initWithIoReactivexCompletableObserver_withInt_withBoolean_, actual, maxConcurrency, delayErrors)
}

IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *create_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_initWithIoReactivexCompletableObserver_withInt_withBoolean_(id<IoReactivexCompletableObserver> actual, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber, initWithIoReactivexCompletableObserver_withInt_withBoolean_, actual, maxConcurrency, delayErrors)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber)

@implementation IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber:(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *)outer$ {
  IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_(self, outer$);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  IoReactivexInternalDisposablesDisposableHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexDisposablesDisposable_(self, d);
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [this$0_ innerErrorWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver:self withJavaLangThrowable:e];
}

- (void)onComplete {
  [this$0_ innerCompleteWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver:self];
}

- (jboolean)isDisposed {
  return IoReactivexInternalDisposablesDisposableHelper_isDisposedWithIoReactivexDisposablesDisposable_([self get]);
}

- (void)dispose {
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(self);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[3].selector = @selector(onComplete);
  methods[4].selector = @selector(isDisposed);
  methods[5].selector = @selector(dispose);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LIoReactivexDisposablesDisposable;", "onError", "LJavaLangThrowable;", "LIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber;", "Ljava/util/concurrent/atomic/AtomicReference<Lio/reactivex/disposables/Disposable;>;Lio/reactivex/CompletableObserver;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver = { "MergeInnerObserver", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x10, 6, 2, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver *self, IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilConcurrentAtomicAtomicReference_init(self);
}

IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver *new_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver, initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_, outer$)
}

IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver *create_IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver_initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver, initWithIoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableMerge_CompletableMergeSubscriber_MergeInnerObserver)
