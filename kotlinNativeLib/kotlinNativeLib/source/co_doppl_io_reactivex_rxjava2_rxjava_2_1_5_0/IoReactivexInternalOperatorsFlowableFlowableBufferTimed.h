//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableBufferTimed
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableBufferTimed

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferTimed_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferTimed))
#define IoReactivexInternalOperatorsFlowableFlowableBufferTimed_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@class IoReactivexScheduler;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferTimed : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  jlong timespan_;
  jlong timeskip_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jint maxSize_;
  jboolean restartTimerOnMaxSize_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
                                   withLong:(jlong)timespan
                                   withLong:(jlong)timeskip
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withIoReactivexScheduler:(IoReactivexScheduler *)scheduler
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                    withInt:(jint)maxSize
                                withBoolean:(jboolean)restartTimerOnMaxSize;

- (id<JavaUtilCollection>)blockingFirst;

- (id<JavaUtilCollection>)blockingFirstWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingLast;

- (id<JavaUtilCollection>)blockingLastWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingSingle;

- (id<JavaUtilCollection>)blockingSingleWithId:(id<JavaUtilCollection>)arg0;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferTimed)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed, scheduler_, IoReactivexScheduler *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed, bufferSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferTimed_initWithIoReactivexFlowable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withJavaUtilConcurrentCallable_withInt_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed *self, IoReactivexFlowable *source, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, id<JavaUtilConcurrentCallable> bufferSupplier, jint maxSize, jboolean restartTimerOnMaxSize);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed *new_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_initWithIoReactivexFlowable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withJavaUtilConcurrentCallable_withInt_withBoolean_(IoReactivexFlowable *source, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, id<JavaUtilConcurrentCallable> bufferSupplier, jint maxSize, jboolean restartTimerOnMaxSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed *create_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_initWithIoReactivexFlowable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withJavaUtilConcurrentCallable_withInt_withBoolean_(IoReactivexFlowable *source, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, id<JavaUtilConcurrentCallable> bufferSupplier, jint maxSize, jboolean restartTimerOnMaxSize);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#include "IoReactivexInternalSubscribersQueueDrainSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexScheduler;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicReference;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber : IoReactivexInternalSubscribersQueueDrainSubscriber < OrgReactivestreamsSubscription, JavaLangRunnable, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jlong timespan_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
  id<OrgReactivestreamsSubscription> s_;
  id<JavaUtilCollection> buffer_;
  JavaUtilConcurrentAtomicAtomicReference *timer_;
}

#pragma mark Public

- (jboolean)acceptWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a
                                            withId:(id<JavaUtilCollection>)v;

- (void)cancel;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                      withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                            withLong:(jlong)timespan
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                            withIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0
     withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber, scheduler_, IoReactivexScheduler *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber, buffer_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber, timer_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactUnboundedSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#include "IoReactivexInternalSubscribersQueueDrainSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexScheduler_Worker;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilList;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber : IoReactivexInternalSubscribersQueueDrainSubscriber < OrgReactivestreamsSubscription, JavaLangRunnable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jlong timespan_;
  jlong timeskip_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler_Worker *w_;
  id<JavaUtilList> buffers_;
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (jboolean)acceptWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a
                                            withId:(id<JavaUtilCollection>)v;

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                      withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                            withLong:(jlong)timespan
                                            withLong:(jlong)timeskip
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)w;

- (void)clear;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0
     withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber, w_, IoReactivexScheduler_Worker *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber, buffers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, jlong timeskip, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer))
#define IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber:(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *)outer$
                                                                                     withJavaUtilCollection:(id<JavaUtilCollection>)buffer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer_initWithIoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_withJavaUtilCollection_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer *self, IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *outer$, id<JavaUtilCollection> buffer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer *new_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer_initWithIoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_withJavaUtilCollection_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *outer$, id<JavaUtilCollection> buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer *create_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer_initWithIoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_withJavaUtilCollection_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber *outer$, id<JavaUtilCollection> buffer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferSkipBoundedSubscriber_RemoveFromBuffer)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#include "IoReactivexInternalSubscribersQueueDrainSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexScheduler_Worker;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber : IoReactivexInternalSubscribersQueueDrainSubscriber < OrgReactivestreamsSubscription, JavaLangRunnable, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  jlong timespan_;
  JavaUtilConcurrentTimeUnit *unit_;
  jint maxSize_;
  jboolean restartTimerOnMaxSize_;
  IoReactivexScheduler_Worker *w_;
  id<JavaUtilCollection> buffer_;
  id<IoReactivexDisposablesDisposable> timer_;
  id<OrgReactivestreamsSubscription> s_;
  jlong producerIndex_;
  jlong consumerIndex_;
}

#pragma mark Public

- (jboolean)acceptWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a
                                            withId:(id<JavaUtilCollection>)v;

- (void)cancel;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                      withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                                            withLong:(jlong)timespan
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                             withInt:(jint)maxSize
                                         withBoolean:(jboolean)restartOnMaxSize
                     withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)w;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0
     withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber, w_, IoReactivexScheduler_Worker *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber, buffer_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber, timer_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withInt_withBoolean_withIoReactivexScheduler_Worker_(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint maxSize, jboolean restartOnMaxSize, IoReactivexScheduler_Worker *w);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withInt_withBoolean_withIoReactivexScheduler_Worker_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint maxSize, jboolean restartOnMaxSize, IoReactivexScheduler_Worker *w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withLong_withJavaUtilConcurrentTimeUnit_withInt_withBoolean_withIoReactivexScheduler_Worker_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, jlong timespan, JavaUtilConcurrentTimeUnit *unit, jint maxSize, jboolean restartOnMaxSize, IoReactivexScheduler_Worker *w);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferTimed_BufferExactBoundedSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferTimed")
