//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableLastMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableLastMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableLastMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableLastMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableLastMaybe

#if !defined (IoReactivexInternalOperatorsObservableObservableLastMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableLastMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableLastMaybe))
#define IoReactivexInternalOperatorsObservableObservableLastMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

@protocol IoReactivexMaybeObserver;
@protocol IoReactivexObservableSource;

@interface IoReactivexInternalOperatorsObservableObservableLastMaybe : IoReactivexMaybe {
 @public
  id<IoReactivexObservableSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableLastMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableLastMaybe, source_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableLastMaybe_initWithIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableLastMaybe *self, id<IoReactivexObservableSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableLastMaybe *new_IoReactivexInternalOperatorsObservableObservableLastMaybe_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableLastMaybe *create_IoReactivexInternalOperatorsObservableObservableLastMaybe_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableLastMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableLastMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver))
#define IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  volatile_id s_;
  id item_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_VOLATILE_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver, item_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver *new_IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver *create_IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableLastMaybe_LastObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableLastMaybe")
