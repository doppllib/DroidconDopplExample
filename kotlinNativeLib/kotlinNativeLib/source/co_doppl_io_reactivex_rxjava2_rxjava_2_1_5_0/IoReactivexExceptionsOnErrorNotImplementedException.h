//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexExceptionsOnErrorNotImplementedException")
#ifdef RESTRICT_IoReactivexExceptionsOnErrorNotImplementedException
#define INCLUDE_ALL_IoReactivexExceptionsOnErrorNotImplementedException 0
#else
#define INCLUDE_ALL_IoReactivexExceptionsOnErrorNotImplementedException 1
#endif
#undef RESTRICT_IoReactivexExceptionsOnErrorNotImplementedException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexExceptionsOnErrorNotImplementedException_) && (INCLUDE_ALL_IoReactivexExceptionsOnErrorNotImplementedException || defined(INCLUDE_IoReactivexExceptionsOnErrorNotImplementedException))
#define IoReactivexExceptionsOnErrorNotImplementedException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface IoReactivexExceptionsOnErrorNotImplementedException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable * __nonnull)e;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable * __nonnull)e;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexExceptionsOnErrorNotImplementedException)

FOUNDATION_EXPORT void IoReactivexExceptionsOnErrorNotImplementedException_initWithNSString_withJavaLangThrowable_(IoReactivexExceptionsOnErrorNotImplementedException *self, NSString *message, JavaLangThrowable *e);

FOUNDATION_EXPORT IoReactivexExceptionsOnErrorNotImplementedException *new_IoReactivexExceptionsOnErrorNotImplementedException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexExceptionsOnErrorNotImplementedException *create_IoReactivexExceptionsOnErrorNotImplementedException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e);

FOUNDATION_EXPORT void IoReactivexExceptionsOnErrorNotImplementedException_initWithJavaLangThrowable_(IoReactivexExceptionsOnErrorNotImplementedException *self, JavaLangThrowable *e);

FOUNDATION_EXPORT IoReactivexExceptionsOnErrorNotImplementedException *new_IoReactivexExceptionsOnErrorNotImplementedException_initWithJavaLangThrowable_(JavaLangThrowable *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexExceptionsOnErrorNotImplementedException *create_IoReactivexExceptionsOnErrorNotImplementedException_initWithJavaLangThrowable_(JavaLangThrowable *e);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexExceptionsOnErrorNotImplementedException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexExceptionsOnErrorNotImplementedException")
