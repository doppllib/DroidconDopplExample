//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleAmb")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleAmb
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleAmb 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleAmb 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleAmb

#if !defined (IoReactivexInternalOperatorsSingleSingleAmb_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleAmb || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleAmb))
#define IoReactivexInternalOperatorsSingleSingleAmb_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@class IOSObjectArray;
@protocol IoReactivexSingleObserver;
@protocol JavaLangIterable;

@interface IoReactivexInternalOperatorsSingleSingleAmb : IoReactivexSingle

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSourceArray:(IOSObjectArray *)sources
                                withJavaLangIterable:(id<JavaLangIterable>)sourcesIterable;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleAmb)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleAmb_initWithIoReactivexSingleSourceArray_withJavaLangIterable_(IoReactivexInternalOperatorsSingleSingleAmb *self, IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleAmb *new_IoReactivexInternalOperatorsSingleSingleAmb_initWithIoReactivexSingleSourceArray_withJavaLangIterable_(IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleAmb *create_IoReactivexInternalOperatorsSingleSingleAmb_initWithIoReactivexSingleSourceArray_withJavaLangIterable_(IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleAmb)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleAmb || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver))
#define IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicBoolean 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicBoolean 1
#include "java/util/concurrent/atomic/AtomicBoolean.h"

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "IoReactivexSingleObserver.h"

@class IoReactivexDisposablesCompositeDisposable;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver : JavaUtilConcurrentAtomicAtomicBoolean < IoReactivexSingleObserver > {
 @public
  IoReactivexDisposablesCompositeDisposable *set_;
  id<IoReactivexSingleObserver> s_;
}

#pragma mark Public

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s
    withIoReactivexDisposablesCompositeDisposable:(IoReactivexDisposablesCompositeDisposable *)set;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver, set_, IoReactivexDisposablesCompositeDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver, s_, id<IoReactivexSingleObserver>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexDisposablesCompositeDisposable_(IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver *self, id<IoReactivexSingleObserver> s, IoReactivexDisposablesCompositeDisposable *set);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver *new_IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexDisposablesCompositeDisposable_(id<IoReactivexSingleObserver> s, IoReactivexDisposablesCompositeDisposable *set) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver *create_IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexDisposablesCompositeDisposable_(id<IoReactivexSingleObserver> s, IoReactivexDisposablesCompositeDisposable *set);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleAmb_AmbSingleObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleAmb")
