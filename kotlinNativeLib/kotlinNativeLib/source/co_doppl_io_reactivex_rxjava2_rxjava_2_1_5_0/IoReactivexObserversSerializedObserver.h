//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexObserversSerializedObserver")
#ifdef RESTRICT_IoReactivexObserversSerializedObserver
#define INCLUDE_ALL_IoReactivexObserversSerializedObserver 0
#else
#define INCLUDE_ALL_IoReactivexObserversSerializedObserver 1
#endif
#undef RESTRICT_IoReactivexObserversSerializedObserver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexObserversSerializedObserver_) && (INCLUDE_ALL_IoReactivexObserversSerializedObserver || defined(INCLUDE_IoReactivexObserversSerializedObserver))
#define IoReactivexObserversSerializedObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalUtilAppendOnlyLinkedArrayList;
@class JavaLangThrowable;

@interface IoReactivexObserversSerializedObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  jboolean delayError_;
  id<IoReactivexDisposablesDisposable> s_;
  jboolean emitting_;
  IoReactivexInternalUtilAppendOnlyLinkedArrayList *queue_;
  volatile_jboolean done_;
}

+ (jint)QUEUE_LINK_SIZE;

#pragma mark Public

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)actual;

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)actual
                                withBoolean:(jboolean)delayError;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable * __nonnull)t;

- (void)onNextWithId:(id __nonnull)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable> __nonnull)s;

#pragma mark Package-Private

- (void)emitLoop;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexObserversSerializedObserver)

J2OBJC_FIELD_SETTER(IoReactivexObserversSerializedObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexObserversSerializedObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexObserversSerializedObserver, queue_, IoReactivexInternalUtilAppendOnlyLinkedArrayList *)

inline jint IoReactivexObserversSerializedObserver_get_QUEUE_LINK_SIZE();
#define IoReactivexObserversSerializedObserver_QUEUE_LINK_SIZE 4
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexObserversSerializedObserver, QUEUE_LINK_SIZE, jint)

FOUNDATION_EXPORT void IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_(IoReactivexObserversSerializedObserver *self, id<IoReactivexObserver> actual);

FOUNDATION_EXPORT IoReactivexObserversSerializedObserver *new_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexObserversSerializedObserver *create_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> actual);

FOUNDATION_EXPORT void IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_withBoolean_(IoReactivexObserversSerializedObserver *self, id<IoReactivexObserver> actual, jboolean delayError);

FOUNDATION_EXPORT IoReactivexObserversSerializedObserver *new_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_withBoolean_(id<IoReactivexObserver> actual, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexObserversSerializedObserver *create_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_withBoolean_(id<IoReactivexObserver> actual, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexObserversSerializedObserver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexObserversSerializedObserver")
