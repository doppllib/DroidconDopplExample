//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop

#if !defined (IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop))
#define IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

#define RESTRICT_IoReactivexFunctionsConsumer 1
#define INCLUDE_IoReactivexFunctionsConsumer 1
#include "IoReactivexFunctionsConsumer.h"

@class IoReactivexFlowable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream < IoReactivexFunctionsConsumer > {
 @public
  id<IoReactivexFunctionsConsumer> onDrop_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source;

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onDrop;

- (void)acceptWithId:(id)t;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop, onDrop_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_initWithIoReactivexFlowable_(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop *self, IoReactivexFlowable *source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop *new_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_initWithIoReactivexFlowable_(IoReactivexFlowable *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop *create_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_initWithIoReactivexFlowable_(IoReactivexFlowable *source);

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_initWithIoReactivexFlowable_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop *self, IoReactivexFlowable *source, id<IoReactivexFunctionsConsumer> onDrop);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop *new_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_initWithIoReactivexFlowable_withIoReactivexFunctionsConsumer_(IoReactivexFlowable *source, id<IoReactivexFunctionsConsumer> onDrop) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop *create_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_initWithIoReactivexFlowable_withIoReactivexFunctionsConsumer_(IoReactivexFlowable *source, id<IoReactivexFunctionsConsumer> onDrop);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicLong 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicLong 1
#include "java/util/concurrent/atomic/AtomicLong.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsConsumer;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber : JavaUtilConcurrentAtomicAtomicLong < IoReactivexFlowableSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<IoReactivexFunctionsConsumer> onDrop_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)cancel;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onDrop;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithLong:(jlong)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber, onDrop_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onDrop);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onDrop) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onDrop);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop_BackpressureDropSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnBackpressureDrop")
