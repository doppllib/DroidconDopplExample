//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSchedulersScheduledRunnable")
#ifdef RESTRICT_IoReactivexInternalSchedulersScheduledRunnable
#define INCLUDE_ALL_IoReactivexInternalSchedulersScheduledRunnable 0
#else
#define INCLUDE_ALL_IoReactivexInternalSchedulersScheduledRunnable 1
#endif
#undef RESTRICT_IoReactivexInternalSchedulersScheduledRunnable

#if !defined (IoReactivexInternalSchedulersScheduledRunnable_) && (INCLUDE_ALL_IoReactivexInternalSchedulersScheduledRunnable || defined(INCLUDE_IoReactivexInternalSchedulersScheduledRunnable))
#define IoReactivexInternalSchedulersScheduledRunnable_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReferenceArray 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReferenceArray 1
#include "java/util/concurrent/atomic/AtomicReferenceArray.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_JavaUtilConcurrentCallable 1
#define INCLUDE_JavaUtilConcurrentCallable 1
#include "java/util/concurrent/Callable.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IOSObjectArray;
@protocol IoReactivexInternalDisposablesDisposableContainer;
@protocol JavaUtilConcurrentFuture;

@interface IoReactivexInternalSchedulersScheduledRunnable : JavaUtilConcurrentAtomicAtomicReferenceArray < JavaLangRunnable, JavaUtilConcurrentCallable, IoReactivexDisposablesDisposable > {
 @public
  id<JavaLangRunnable> actual_;
}

+ (id)DISPOSED;

+ (id)DONE;

+ (jint)PARENT_INDEX;

+ (jint)FUTURE_INDEX;

+ (jint)THREAD_INDEX;

#pragma mark Public

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)actual
withIoReactivexInternalDisposablesDisposableContainer:(id<IoReactivexInternalDisposablesDisposableContainer>)parent;

- (id)call;

- (void)dispose;

- (jboolean)isDisposed;

- (void)run;

- (void)setFutureWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)f;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalSchedulersScheduledRunnable)

J2OBJC_FIELD_SETTER(IoReactivexInternalSchedulersScheduledRunnable, actual_, id<JavaLangRunnable>)

inline id IoReactivexInternalSchedulersScheduledRunnable_get_DISPOSED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id IoReactivexInternalSchedulersScheduledRunnable_DISPOSED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalSchedulersScheduledRunnable, DISPOSED, id)

inline id IoReactivexInternalSchedulersScheduledRunnable_get_DONE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id IoReactivexInternalSchedulersScheduledRunnable_DONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalSchedulersScheduledRunnable, DONE, id)

inline jint IoReactivexInternalSchedulersScheduledRunnable_get_PARENT_INDEX();
#define IoReactivexInternalSchedulersScheduledRunnable_PARENT_INDEX 0
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSchedulersScheduledRunnable, PARENT_INDEX, jint)

inline jint IoReactivexInternalSchedulersScheduledRunnable_get_FUTURE_INDEX();
#define IoReactivexInternalSchedulersScheduledRunnable_FUTURE_INDEX 1
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSchedulersScheduledRunnable, FUTURE_INDEX, jint)

inline jint IoReactivexInternalSchedulersScheduledRunnable_get_THREAD_INDEX();
#define IoReactivexInternalSchedulersScheduledRunnable_THREAD_INDEX 2
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSchedulersScheduledRunnable, THREAD_INDEX, jint)

FOUNDATION_EXPORT void IoReactivexInternalSchedulersScheduledRunnable_initWithJavaLangRunnable_withIoReactivexInternalDisposablesDisposableContainer_(IoReactivexInternalSchedulersScheduledRunnable *self, id<JavaLangRunnable> actual, id<IoReactivexInternalDisposablesDisposableContainer> parent);

FOUNDATION_EXPORT IoReactivexInternalSchedulersScheduledRunnable *new_IoReactivexInternalSchedulersScheduledRunnable_initWithJavaLangRunnable_withIoReactivexInternalDisposablesDisposableContainer_(id<JavaLangRunnable> actual, id<IoReactivexInternalDisposablesDisposableContainer> parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSchedulersScheduledRunnable *create_IoReactivexInternalSchedulersScheduledRunnable_initWithJavaLangRunnable_withIoReactivexInternalDisposablesDisposableContainer_(id<JavaLangRunnable> actual, id<IoReactivexInternalDisposablesDisposableContainer> parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSchedulersScheduledRunnable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSchedulersScheduledRunnable")
