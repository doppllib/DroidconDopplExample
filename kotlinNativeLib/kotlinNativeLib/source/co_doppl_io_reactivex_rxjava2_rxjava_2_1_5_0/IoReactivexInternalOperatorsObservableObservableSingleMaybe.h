//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSingleMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableSingleMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSingleMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSingleMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableSingleMaybe

#if !defined (IoReactivexInternalOperatorsObservableObservableSingleMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSingleMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSingleMaybe))
#define IoReactivexInternalOperatorsObservableObservableSingleMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

@protocol IoReactivexMaybeObserver;
@protocol IoReactivexObservableSource;

@interface IoReactivexInternalOperatorsObservableObservableSingleMaybe : IoReactivexMaybe {
 @public
  id<IoReactivexObservableSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source;

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSingleMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSingleMaybe, source_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSingleMaybe_initWithIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableSingleMaybe *self, id<IoReactivexObservableSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSingleMaybe *new_IoReactivexInternalOperatorsObservableObservableSingleMaybe_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSingleMaybe *create_IoReactivexInternalOperatorsObservableObservableSingleMaybe_initWithIoReactivexObservableSource_(id<IoReactivexObservableSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSingleMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSingleMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver))
#define IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexDisposablesDisposable> s_;
  id value_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver, value_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver *new_IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver *create_IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSingleMaybe_SingleElementObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSingleMaybe")
