//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTimer")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableTimer
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTimer 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTimer 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableTimer

#if !defined (IoReactivexInternalOperatorsObservableObservableTimer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTimer || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableTimer))
#define IoReactivexInternalOperatorsObservableObservableTimer_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class IoReactivexScheduler;
@class JavaLangLong;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableTimer : IoReactivexObservable {
 @public
  IoReactivexScheduler *scheduler_;
  jlong delay_;
  JavaUtilConcurrentTimeUnit *unit_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
    withIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

- (JavaLangLong *)blockingFirst;

- (JavaLangLong *)blockingFirstWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingLast;

- (JavaLangLong *)blockingLastWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingSingle;

- (JavaLangLong *)blockingSingleWithId:(JavaLangLong *)arg0;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableTimer)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableTimer, scheduler_, IoReactivexScheduler *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableTimer, unit_, JavaUtilConcurrentTimeUnit *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableTimer_initWithLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableTimer *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTimer *new_IoReactivexInternalOperatorsObservableObservableTimer_initWithLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTimer *create_IoReactivexInternalOperatorsObservableObservableTimer_initWithLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableTimer)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTimer || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver))
#define IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@protocol IoReactivexObserver;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexDisposablesDisposable, JavaLangRunnable > {
 @public
  id<IoReactivexObserver> actual_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)run;

- (void)setResourceWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver, actual_, id<IoReactivexObserver>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver_initWithIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver *self, id<IoReactivexObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver *new_IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver *create_IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableTimer_TimerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTimer")
