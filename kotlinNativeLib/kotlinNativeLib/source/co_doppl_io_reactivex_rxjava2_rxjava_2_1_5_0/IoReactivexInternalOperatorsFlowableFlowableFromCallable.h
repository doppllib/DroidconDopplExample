//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromCallable")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFromCallable
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromCallable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromCallable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFromCallable

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFromCallable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromCallable || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFromCallable))
#define IoReactivexInternalOperatorsFlowableFlowableFromCallable_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

#define RESTRICT_JavaUtilConcurrentCallable 1
#define INCLUDE_JavaUtilConcurrentCallable 1
#include "java/util/concurrent/Callable.h"

@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFromCallable : IoReactivexFlowable < JavaUtilConcurrentCallable > {
 @public
  id<JavaUtilConcurrentCallable> callable_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

- (id)call;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFromCallable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFromCallable, callable_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFromCallable_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsFlowableFlowableFromCallable *self, id<JavaUtilConcurrentCallable> callable);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromCallable *new_IoReactivexInternalOperatorsFlowableFlowableFromCallable_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromCallable *create_IoReactivexInternalOperatorsFlowableFlowableFromCallable_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFromCallable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromCallable")
