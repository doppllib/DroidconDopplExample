//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsSingleSingleMap.h"
#include "IoReactivexInternalOperatorsSingleSingleZipArray.h"
#include "IoReactivexInternalOperatorsSingleSingleZipIterable.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "IoReactivexSingleSource.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"
#include "java/util/NoSuchElementException.h"

@interface IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc () {
 @public
  IoReactivexInternalOperatorsSingleSingleZipIterable *this$0_;
}

@end

@implementation IoReactivexInternalOperatorsSingleSingleZipIterable

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources
        withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper {
  IoReactivexInternalOperatorsSingleSingleZipIterable_initWithJavaLangIterable_withIoReactivexFunctionsFunction_(self, sources, zipper);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer {
  IOSObjectArray *a = [IOSObjectArray arrayWithLength:8 type:IoReactivexSingleSource_class_()];
  jint n = 0;
  @try {
    for (id<IoReactivexSingleSource> __strong source in nil_chk(sources_)) {
      if (source == nil) {
        IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexSingleObserver_(create_JavaLangNullPointerException_initWithNSString_(@"One of the sources is null"), observer);
        return;
      }
      if (n == a->size_) {
        a = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(a, n + (JreRShift32(n, 2)));
      }
      IOSObjectArray_Set(nil_chk(a), n++, source);
    }
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexSingleObserver_(ex, observer);
    return;
  }
  if (n == 0) {
    IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexSingleObserver_(create_JavaUtilNoSuchElementException_init(), observer);
    return;
  }
  if (n == 1) {
    [((id<IoReactivexSingleSource>) nil_chk(IOSObjectArray_Get(a, 0))) subscribeWithIoReactivexSingleObserver:create_IoReactivexInternalOperatorsSingleSingleMap_MapSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsFunction_(observer, create_IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipIterable_(self))];
    return;
  }
  IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *parent = create_IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexFunctionsFunction_(observer, n, zipper_);
  [((id<IoReactivexSingleObserver>) nil_chk(observer)) onSubscribeWithIoReactivexDisposablesDisposable:parent];
  for (jint i = 0; i < n; i++) {
    if ([parent isDisposed]) {
      return;
    }
    [((id<IoReactivexSingleSource>) nil_chk(IOSObjectArray_Get(a, i))) subscribeWithIoReactivexSingleObserver:IOSObjectArray_Get(nil_chk(parent->observers_), i)];
  }
}

- (void)dealloc {
  RELEASE_(sources_);
  RELEASE_(zipper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangIterable:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "zipper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangIterable;LIoReactivexFunctionsFunction;", "(Ljava/lang/Iterable<+Lio/reactivex/SingleSource<+TT;>;>;Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TR;>;)V", "Ljava/lang/Iterable<+Lio/reactivex/SingleSource<+TT;>;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;", "LIoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/Single<TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleZipIterable = { "SingleZipIterable", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleZipIterable;
}

@end

void IoReactivexInternalOperatorsSingleSingleZipIterable_initWithJavaLangIterable_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsSingleSingleZipIterable *self, id<JavaLangIterable> sources, id<IoReactivexFunctionsFunction> zipper) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->sources_, sources);
  JreStrongAssign(&self->zipper_, zipper);
}

IoReactivexInternalOperatorsSingleSingleZipIterable *new_IoReactivexInternalOperatorsSingleSingleZipIterable_initWithJavaLangIterable_withIoReactivexFunctionsFunction_(id<JavaLangIterable> sources, id<IoReactivexFunctionsFunction> zipper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleZipIterable, initWithJavaLangIterable_withIoReactivexFunctionsFunction_, sources, zipper)
}

IoReactivexInternalOperatorsSingleSingleZipIterable *create_IoReactivexInternalOperatorsSingleSingleZipIterable_initWithJavaLangIterable_withIoReactivexFunctionsFunction_(id<JavaLangIterable> sources, id<IoReactivexFunctionsFunction> zipper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleZipIterable, initWithJavaLangIterable_withIoReactivexFunctionsFunction_, sources, zipper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleZipIterable)

@implementation IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleZipIterable:(IoReactivexInternalOperatorsSingleSingleZipIterable *)outer$ {
  IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipIterable_(self, outer$);
  return self;
}

- (id)applyWithId:(id)t {
  return IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(this$0_->zipper_)) applyWithId:[IOSObjectArray arrayWithObjects:(id[]){ t } count:1 type:NSObject_class_()]], @"The zipper returned a null value");
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsSingleSingleZipIterable:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsSingleSingleZipIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "apply", "LNSObject;", "LJavaLangException;", "(TT;)TR;", "Lio/reactivex/internal/operators/single/SingleZipIterable<TT;TR;>;", "LIoReactivexInternalOperatorsSingleSingleZipIterable;", "Ljava/lang/Object;Lio/reactivex/functions/Function<TT;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc = { "SingletonArrayFunc", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x10, 2, 1, 5, -1, -1, 6, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc;
}

@end

void IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipIterable_(IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc *self, IoReactivexInternalOperatorsSingleSingleZipIterable *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc *new_IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipIterable_(IoReactivexInternalOperatorsSingleSingleZipIterable *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc, initWithIoReactivexInternalOperatorsSingleSingleZipIterable_, outer$)
}

IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc *create_IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipIterable_(IoReactivexInternalOperatorsSingleSingleZipIterable *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc, initWithIoReactivexInternalOperatorsSingleSingleZipIterable_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleZipIterable_SingletonArrayFunc)
