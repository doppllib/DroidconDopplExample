//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesReferenceDisposable.h"
#include "IoReactivexDisposablesSubscriptionDisposable.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsSubscription.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong IoReactivexDisposablesSubscriptionDisposable_get_serialVersionUID();
#define IoReactivexDisposablesSubscriptionDisposable_serialVersionUID -707001650852963139LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexDisposablesSubscriptionDisposable, serialVersionUID, jlong)

@implementation IoReactivexDisposablesSubscriptionDisposable

- (instancetype)initWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)value {
  IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(self, value);
  return self;
}

- (void)onDisposedWithId:(id<OrgReactivestreamsSubscription> __nonnull)value {
  [((id<OrgReactivestreamsSubscription>) nil_chk(value)) cancel];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscription:);
  methods[1].selector = @selector(onDisposedWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexDisposablesSubscriptionDisposable_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscription;", "onDisposed", "Lio/reactivex/disposables/ReferenceDisposable<Lorg/reactivestreams/Subscription;>;" };
  static const J2ObjcClassInfo _IoReactivexDisposablesSubscriptionDisposable = { "SubscriptionDisposable", "io.reactivex.disposables", ptrTable, methods, fields, 7, 0x10, 2, 1, -1, -1, -1, 2, -1 };
  return &_IoReactivexDisposablesSubscriptionDisposable;
}

@end

void IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(IoReactivexDisposablesSubscriptionDisposable *self, id<OrgReactivestreamsSubscription> value) {
  IoReactivexDisposablesReferenceDisposable_initWithId_(self, value);
}

IoReactivexDisposablesSubscriptionDisposable *new_IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> value) {
  J2OBJC_NEW_IMPL(IoReactivexDisposablesSubscriptionDisposable, initWithOrgReactivestreamsSubscription_, value)
}

IoReactivexDisposablesSubscriptionDisposable *create_IoReactivexDisposablesSubscriptionDisposable_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> value) {
  J2OBJC_CREATE_IMPL(IoReactivexDisposablesSubscriptionDisposable, initWithOrgReactivestreamsSubscription_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexDisposablesSubscriptionDisposable)
