//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext

#if !defined (IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext))
#define IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableOnErrorNext : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> nextSupplier_;
  jboolean allowFatal_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)nextSupplier
                                withBoolean:(jboolean)allowFatal;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext, nextSupplier_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext *self, IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> nextSupplier, jboolean allowFatal);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnErrorNext *new_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withBoolean_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> nextSupplier, jboolean allowFatal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnErrorNext *create_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_withBoolean_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> nextSupplier, jboolean allowFatal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

@class IoReactivexInternalSubscriptionsSubscriptionArbiter;
@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber : NSObject < IoReactivexFlowableSubscriber > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<IoReactivexFunctionsFunction> nextSupplier_;
  jboolean allowFatal_;
  IoReactivexInternalSubscriptionsSubscriptionArbiter *arbiter_;
  jboolean once_;
  jboolean done_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)nextSupplier
                                         withBoolean:(jboolean)allowFatal;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber, nextSupplier_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber, arbiter_, IoReactivexInternalSubscriptionsSubscriptionArbiter *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> nextSupplier, jboolean allowFatal);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withBoolean_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> nextSupplier, jboolean allowFatal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withBoolean_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> nextSupplier, jboolean allowFatal);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableOnErrorNext_OnErrorNextSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableOnErrorNext")
