//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromCallable")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromCallable
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromCallable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromCallable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromCallable

#if !defined (IoReactivexInternalOperatorsObservableObservableFromCallable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromCallable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromCallable))
#define IoReactivexInternalOperatorsObservableObservableFromCallable_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

#define RESTRICT_JavaUtilConcurrentCallable 1
#define INCLUDE_JavaUtilConcurrentCallable 1
#include "java/util/concurrent/Callable.h"

@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFromCallable : IoReactivexObservable < JavaUtilConcurrentCallable > {
 @public
  id<JavaUtilConcurrentCallable> callable_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

- (id)call;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromCallable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromCallable, callable_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromCallable_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsObservableObservableFromCallable *self, id<JavaUtilConcurrentCallable> callable);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromCallable *new_IoReactivexInternalOperatorsObservableObservableFromCallable_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromCallable *create_IoReactivexInternalOperatorsObservableObservableFromCallable_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromCallable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromCallable")
