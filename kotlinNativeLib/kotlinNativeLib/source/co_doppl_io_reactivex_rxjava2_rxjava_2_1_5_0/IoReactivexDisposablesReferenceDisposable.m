//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesReferenceDisposable.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "J2ObjC_source.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

inline jlong IoReactivexDisposablesReferenceDisposable_get_serialVersionUID();
#define IoReactivexDisposablesReferenceDisposable_serialVersionUID 6537757548749041217LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexDisposablesReferenceDisposable, serialVersionUID, jlong)

@implementation IoReactivexDisposablesReferenceDisposable

- (instancetype)initWithId:(id)value {
  IoReactivexDisposablesReferenceDisposable_initWithId_(self, value);
  return self;
}

- (void)onDisposedWithId:(id __nonnull)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dispose {
  id value = [self get];
  if (value != nil) {
    value = [self getAndSetWithId:nil];
    if (value != nil) {
      [self onDisposedWithId:value];
    }
  }
}

- (jboolean)isDisposed {
  return [self get] == nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x404, 2, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(onDisposedWithId:);
  methods[2].selector = @selector(dispose);
  methods[3].selector = @selector(isDisposed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexDisposablesReferenceDisposable_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "onDisposed", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexDisposablesReferenceDisposable = { "ReferenceDisposable", "io.reactivex.disposables", ptrTable, methods, fields, 7, 0x400, 4, 1, -1, -1, -1, 3, -1 };
  return &_IoReactivexDisposablesReferenceDisposable;
}

@end

void IoReactivexDisposablesReferenceDisposable_initWithId_(IoReactivexDisposablesReferenceDisposable *self, id value) {
  JavaUtilConcurrentAtomicAtomicReference_initWithId_(self, IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_(value, @"value is null"));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexDisposablesReferenceDisposable)
