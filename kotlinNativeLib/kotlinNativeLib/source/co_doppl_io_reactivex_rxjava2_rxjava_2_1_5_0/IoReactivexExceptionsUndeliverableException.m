//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexExceptionsUndeliverableException.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Throwable.h"

inline jlong IoReactivexExceptionsUndeliverableException_get_serialVersionUID();
#define IoReactivexExceptionsUndeliverableException_serialVersionUID 1644750035281290266LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexExceptionsUndeliverableException, serialVersionUID, jlong)

@implementation IoReactivexExceptionsUndeliverableException

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexExceptionsUndeliverableException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _IoReactivexExceptionsUndeliverableException = { "UndeliverableException", "io.reactivex.exceptions", ptrTable, methods, fields, 7, 0x11, 1, 1, -1, -1, -1, -1, -1 };
  return &_IoReactivexExceptionsUndeliverableException;
}

@end

void IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(IoReactivexExceptionsUndeliverableException *self, JavaLangThrowable *cause) {
  JavaLangIllegalStateException_initWithJavaLangThrowable_(self, cause);
}

IoReactivexExceptionsUndeliverableException *new_IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(IoReactivexExceptionsUndeliverableException, initWithJavaLangThrowable_, cause)
}

IoReactivexExceptionsUndeliverableException *create_IoReactivexExceptionsUndeliverableException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(IoReactivexExceptionsUndeliverableException, initWithJavaLangThrowable_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexExceptionsUndeliverableException)
