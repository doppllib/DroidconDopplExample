//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAutoConnect")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableAutoConnect
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAutoConnect 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAutoConnect 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableAutoConnect

#if !defined (IoReactivexInternalOperatorsObservableObservableAutoConnect_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAutoConnect || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableAutoConnect))
#define IoReactivexInternalOperatorsObservableObservableAutoConnect_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class IoReactivexObservablesConnectableObservable;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableAutoConnect : IoReactivexObservable {
 @public
  IoReactivexObservablesConnectableObservable *source_;
  jint numberOfObservers_;
  id<IoReactivexFunctionsConsumer> connection_;
  JavaUtilConcurrentAtomicAtomicInteger *clients_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservablesConnectableObservable:(IoReactivexObservablesConnectableObservable *)source
                                                            withInt:(jint)numberOfObservers
                                   withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)connection;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)child;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableAutoConnect)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAutoConnect, source_, IoReactivexObservablesConnectableObservable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAutoConnect, connection_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableAutoConnect, clients_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableAutoConnect_initWithIoReactivexObservablesConnectableObservable_withInt_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsObservableObservableAutoConnect *self, IoReactivexObservablesConnectableObservable *source, jint numberOfObservers, id<IoReactivexFunctionsConsumer> connection);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAutoConnect *new_IoReactivexInternalOperatorsObservableObservableAutoConnect_initWithIoReactivexObservablesConnectableObservable_withInt_withIoReactivexFunctionsConsumer_(IoReactivexObservablesConnectableObservable *source, jint numberOfObservers, id<IoReactivexFunctionsConsumer> connection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableAutoConnect *create_IoReactivexInternalOperatorsObservableObservableAutoConnect_initWithIoReactivexObservablesConnectableObservable_withInt_withIoReactivexFunctionsConsumer_(IoReactivexObservablesConnectableObservable *source, jint numberOfObservers, id<IoReactivexFunctionsConsumer> connection);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableAutoConnect)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableAutoConnect")
