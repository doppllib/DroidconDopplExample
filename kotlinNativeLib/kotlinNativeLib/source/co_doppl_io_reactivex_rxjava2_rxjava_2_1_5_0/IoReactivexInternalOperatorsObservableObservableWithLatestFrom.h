//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableWithLatestFrom
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableWithLatestFrom

#if !defined (IoReactivexInternalOperatorsObservableObservableWithLatestFrom_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableWithLatestFrom))
#define IoReactivexInternalOperatorsObservableObservableWithLatestFrom_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableWithLatestFrom : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexFunctionsBiFunction> combiner_;
  id<IoReactivexObservableSource> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                 withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableWithLatestFrom)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom, combiner_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom, other_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableWithLatestFrom_initWithIoReactivexObservableSource_withIoReactivexFunctionsBiFunction_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableWithLatestFrom *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexObservableSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableWithLatestFrom *new_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_initWithIoReactivexObservableSource_withIoReactivexFunctionsBiFunction_withIoReactivexObservableSource_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexObservableSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableWithLatestFrom *create_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_initWithIoReactivexObservableSource_withIoReactivexFunctionsBiFunction_withIoReactivexObservableSource_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexObservableSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver))
#define IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;

@interface IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexFunctionsBiFunction> combiner_;
  JavaUtilConcurrentAtomicAtomicReference *s_;
  JavaUtilConcurrentAtomicAtomicReference *other_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (void)otherErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (jboolean)setOtherWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)o;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver, combiner_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver, s_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver, other_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsBiFunction> combiner);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *new_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsBiFunction> combiner) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *create_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_initWithIoReactivexObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsBiFunction> combiner);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom))
#define IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

@class IoReactivexInternalOperatorsObservableObservableWithLatestFrom;
@class IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom : NSObject < IoReactivexObserver >

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableWithLatestFrom:(IoReactivexInternalOperatorsObservableObservableWithLatestFrom *)outer$
withIoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver:(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *)wlf;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFrom_withIoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom *self, IoReactivexInternalOperatorsObservableObservableWithLatestFrom *outer$, IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *wlf);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom *new_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFrom_withIoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_(IoReactivexInternalOperatorsObservableObservableWithLatestFrom *outer$, IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *wlf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom *create_IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom_initWithIoReactivexInternalOperatorsObservableObservableWithLatestFrom_withIoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver_(IoReactivexInternalOperatorsObservableObservableWithLatestFrom *outer$, IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLatestFromObserver *wlf);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableWithLatestFrom_WithLastFrom)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableWithLatestFrom")
