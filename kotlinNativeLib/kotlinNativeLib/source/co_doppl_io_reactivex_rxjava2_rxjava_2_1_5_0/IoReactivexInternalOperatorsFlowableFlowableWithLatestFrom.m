//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFunctionsBiFunction.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"
#include "IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom.h"
#include "IoReactivexInternalSubscriptionsSubscriptionHelper.h"
#include "IoReactivexSubscribersSerializedSubscriber.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsPublisher.h"
#include "OrgReactivestreamsSubscriber.h"
#include "OrgReactivestreamsSubscription.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

inline jlong IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_get_serialVersionUID();
#define IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_serialVersionUID -312246233408980075LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber, serialVersionUID, jlong)

@interface IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber () {
 @public
  IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *wlf_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber, wlf_, IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *)

@implementation IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner
            withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other {
  IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_withOrgReactivestreamsPublisher_(self, source, combiner, other);
  return self;
}

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s {
  IoReactivexSubscribersSerializedSubscriber *serial = create_IoReactivexSubscribersSerializedSubscriber_initWithOrgReactivestreamsSubscriber_(s);
  IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *wlf = create_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_(serial, combiner_);
  [serial onSubscribeWithOrgReactivestreamsSubscription:wlf];
  [((id<OrgReactivestreamsPublisher>) nil_chk(other_)) subscribeWithOrgReactivestreamsSubscriber:create_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_(self, wlf)];
  [((IoReactivexFlowable *) nil_chk(source_)) subscribeWithIoReactivexFlowableSubscriber:wlf];
}

- (void)dealloc {
  RELEASE_(combiner_);
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:withIoReactivexFunctionsBiFunction:withOrgReactivestreamsPublisher:);
  methods[1].selector = @selector(subscribeActualWithOrgReactivestreamsSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "combiner_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "other_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;LIoReactivexFunctionsBiFunction;LOrgReactivestreamsPublisher;", "(Lio/reactivex/Flowable<TT;>;Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;Lorg/reactivestreams/Publisher<+TU;>;)V", "subscribeActual", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TR;>;)V", "Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;", "Lorg/reactivestreams/Publisher<+TU;>;", "LIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber;LIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream<TT;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom = { "FlowableWithLatestFrom", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *self, IoReactivexFlowable *source, id<IoReactivexFunctionsBiFunction> combiner, id<OrgReactivestreamsPublisher> other) {
  IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream_initWithIoReactivexFlowable_(self, source);
  JreStrongAssign(&self->combiner_, combiner);
  JreStrongAssign(&self->other_, other);
}

IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *new_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_withOrgReactivestreamsPublisher_(IoReactivexFlowable *source, id<IoReactivexFunctionsBiFunction> combiner, id<OrgReactivestreamsPublisher> other) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom, initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_withOrgReactivestreamsPublisher_, source, combiner, other)
}

IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *create_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_withOrgReactivestreamsPublisher_(IoReactivexFlowable *source, id<IoReactivexFunctionsBiFunction> combiner, id<OrgReactivestreamsPublisher> other) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom, initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_withOrgReactivestreamsPublisher_, source, combiner, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom)

@implementation IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                  withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner {
  IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_(self, actual, combiner);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  IoReactivexInternalSubscriptionsSubscriptionHelper_deferredSetOnceWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicLong_withOrgReactivestreamsSubscription_(self->s_, requested_, s);
}

- (void)onNextWithId:(id)t {
  if (![self tryOnNextWithId:t]) {
    [((id<OrgReactivestreamsSubscription>) nil_chk([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(s_)) get])) requestWithLong:1];
  }
}

- (jboolean)tryOnNextWithId:(id)t {
  id u = [self get];
  if (u != nil) {
    id r;
    @try {
      r = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsBiFunction>) nil_chk(combiner_)) applyWithId:t withId:u], @"The combiner returned a null value");
    }
    @catch (JavaLangThrowable *e) {
      IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(e);
      [self cancel];
      [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
      return false;
    }
    [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onNextWithId:r];
    return true;
  }
  else {
    return false;
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(other_);
  [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(other_);
  [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onComplete];
}

- (void)requestWithLong:(jlong)n {
  IoReactivexInternalSubscriptionsSubscriptionHelper_deferredRequestWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicLong_withLong_(s_, requested_, n);
}

- (void)cancel {
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(s_);
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(other_);
}

- (jboolean)setOtherWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)o {
  return IoReactivexInternalSubscriptionsSubscriptionHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_(other_, o);
}

- (void)otherErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(s_);
  [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(combiner_);
  RELEASE_(s_);
  RELEASE_(requested_);
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 5, -1, 8, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:withIoReactivexFunctionsBiFunction:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(tryOnNextWithId:);
  methods[4].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[5].selector = @selector(onComplete);
  methods[6].selector = @selector(requestWithLong:);
  methods[7].selector = @selector(cancel);
  methods[8].selector = @selector(setOtherWithOrgReactivestreamsSubscription:);
  methods[9].selector = @selector(otherErrorWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 15, -1 },
    { "combiner_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 16, -1 },
    { "s_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 17, -1 },
    { "requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "other_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;LIoReactivexFunctionsBiFunction;", "(Lorg/reactivestreams/Subscriber<-TR;>;Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;)V", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TT;)V", "tryOnNext", "(TT;)Z", "onError", "LJavaLangThrowable;", "request", "J", "setOther", "otherError", "Lorg/reactivestreams/Subscriber<-TR;>;", "Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;", "Ljava/util/concurrent/atomic/AtomicReference<Lorg/reactivestreams/Subscription;>;", "LIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<TU;>;Lio/reactivex/internal/fuseable/ConditionalSubscriber<TT;>;Lorg/reactivestreams/Subscription;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber = { "WithLatestFromSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 10, 6, 18, -1, -1, 19, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsBiFunction> combiner) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssignAndConsume(&self->s_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssignAndConsume(&self->requested_, new_JavaUtilConcurrentAtomicAtomicLong_init());
  JreStrongAssignAndConsume(&self->other_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->combiner_, combiner);
}

IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsBiFunction> combiner) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_, actual, combiner)
}

IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsBiFunction> combiner) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiFunction_, actual, combiner)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber)

@implementation IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom:(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *)outer$
withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber:(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *)wlf {
  IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_(self, outer$, wlf);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  if ([((IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *) nil_chk(wlf_)) setOtherWithOrgReactivestreamsSubscription:s]) {
    [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
  }
}

- (void)onNextWithId:(id)t {
  [((IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *) nil_chk(wlf_)) lazySetWithId:t];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  [((IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *) nil_chk(wlf_)) otherErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
}

- (void)dealloc {
  RELEASE_(wlf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom:withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wlf_", "LIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber;", "(Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$WithLatestFromSubscriber<TT;TU;TR;>;)V", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TU;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$WithLatestFromSubscriber<TT;TU;TR;>;", "LIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom;", "Ljava/lang/Object;Lio/reactivex/FlowableSubscriber<TU;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber = { "FlowableWithLatestSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x10, 5, 1, 10, -1, -1, 11, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber *self, IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *outer$, IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *wlf) {
  NSObject_init(self);
  JreStrongAssign(&self->wlf_, wlf);
}

IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *outer$, IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *wlf) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_, outer$, wlf)
}

IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom *outer$, IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber *wlf) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_withIoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_WithLatestFromSubscriber_, outer$, wlf)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableWithLatestFrom_FlowableWithLatestSubscriber)
