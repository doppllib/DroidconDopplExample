//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle

#if !defined (IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle))
#define IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

#define RESTRICT_IoReactivexInternalFuseableHasUpstreamMaybeSource 1
#define INCLUDE_IoReactivexInternalFuseableHasUpstreamMaybeSource 1
#include "IoReactivexInternalFuseableHasUpstreamMaybeSource.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToMaybe 1
#define INCLUDE_IoReactivexInternalFuseableFuseToMaybe 1
#include "IoReactivexInternalFuseableFuseToMaybe.h"

@class IoReactivexMaybe;
@class JavaLangBoolean;
@protocol IoReactivexMaybeSource;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle : IoReactivexSingle < IoReactivexInternalFuseableHasUpstreamMaybeSource, IoReactivexInternalFuseableFuseToMaybe > {
 @public
  id<IoReactivexMaybeSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source;

- (JavaLangBoolean *)blockingGet;

- (IoReactivexMaybe *)fuseToMaybe;

- (id<IoReactivexMaybeSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle, source_, id<IoReactivexMaybeSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_initWithIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle *self, id<IoReactivexMaybeSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle *new_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_initWithIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle *create_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_initWithIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver_initWithIoReactivexSingleObserver_(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver *self, id<IoReactivexSingleObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver_initWithIoReactivexSingleObserver_(id<IoReactivexSingleObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver_initWithIoReactivexSingleObserver_(id<IoReactivexSingleObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle_IsEmptyMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIsEmptySingle")
