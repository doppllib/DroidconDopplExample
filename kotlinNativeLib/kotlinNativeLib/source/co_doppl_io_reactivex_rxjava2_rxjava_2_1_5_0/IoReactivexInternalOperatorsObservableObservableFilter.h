//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFilter")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFilter
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFilter 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFilter 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFilter_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFilter || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFilter))
#define IoReactivexInternalOperatorsObservableObservableFilter_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFilter : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexFunctionsPredicate> predicate_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                  withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFilter)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFilter, predicate_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFilter_initWithIoReactivexObservableSource_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsObservableObservableFilter *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFilter *new_IoReactivexInternalOperatorsObservableObservableFilter_initWithIoReactivexObservableSource_withIoReactivexFunctionsPredicate_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFilter *create_IoReactivexInternalOperatorsObservableObservableFilter_initWithIoReactivexObservableSource_withIoReactivexFunctionsPredicate_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFilter)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFilter || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver))
#define IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver_

#define RESTRICT_IoReactivexInternalObserversBasicFuseableObserver 1
#define INCLUDE_IoReactivexInternalObserversBasicFuseableObserver 1
#include "IoReactivexInternalObserversBasicFuseableObserver.h"

@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver : IoReactivexInternalObserversBasicFuseableObserver {
 @public
  id<IoReactivexFunctionsPredicate> filter_;
}

#pragma mark Public

- (void)onNextWithId:(id)t;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
          withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)filter;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver, filter_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver_initWithIoReactivexObserver_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsPredicate> filter);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver *new_IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver_initWithIoReactivexObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsPredicate> filter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver *create_IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver_initWithIoReactivexObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsPredicate> filter);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFilter_FilterObserver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFilter")
