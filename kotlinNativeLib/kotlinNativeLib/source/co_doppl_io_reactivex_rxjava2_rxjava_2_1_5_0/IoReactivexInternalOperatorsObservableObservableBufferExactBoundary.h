//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary))
#define IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableBufferExactBoundary : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexObservableSource> boundary_;
  id<JavaUtilConcurrentCallable> bufferSupplier_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)boundary
                     withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier;

- (id<JavaUtilCollection>)blockingFirst;

- (id<JavaUtilCollection>)blockingFirstWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingLast;

- (id<JavaUtilCollection>)blockingLastWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingSingle;

- (id<JavaUtilCollection>)blockingSingleWithId:(id<JavaUtilCollection>)arg0;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary, boundary_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary, bufferSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary *self, id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> boundary, id<JavaUtilConcurrentCallable> bufferSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferExactBoundary *new_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withJavaUtilConcurrentCallable_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> boundary, id<JavaUtilConcurrentCallable> bufferSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferExactBoundary *create_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withJavaUtilConcurrentCallable_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> boundary, id<JavaUtilConcurrentCallable> bufferSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_

#define RESTRICT_IoReactivexInternalObserversQueueDrainObserver 1
#define INCLUDE_IoReactivexInternalObserversQueueDrainObserver 1
#include "IoReactivexInternalObserversQueueDrainObserver.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol IoReactivexObservableSource;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver : IoReactivexInternalObserversQueueDrainObserver < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  id<IoReactivexObservableSource> boundary_;
  id<IoReactivexDisposablesDisposable> s_;
  id<IoReactivexDisposablesDisposable> other_;
  id<JavaUtilCollection> buffer_;
}

#pragma mark Public

- (void)acceptWithIoReactivexObserver:(id<IoReactivexObserver>)a
                               withId:(id<JavaUtilCollection>)v;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
            withIoReactivexObservableSource:(id<IoReactivexObservableSource>)boundary;

- (void)next;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0
withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver, boundary_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver, other_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver, buffer_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *self, id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, id<IoReactivexObservableSource> boundary);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *new_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withIoReactivexObservableSource_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, id<IoReactivexObservableSource> boundary) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *create_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_initWithIoReactivexObserver_withJavaUtilConcurrentCallable_withIoReactivexObservableSource_(id<IoReactivexObserver> actual, id<JavaUtilConcurrentCallable> bufferSupplier, id<IoReactivexObservableSource> boundary);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver_

#define RESTRICT_IoReactivexObserversDisposableObserver 1
#define INCLUDE_IoReactivexObserversDisposableObserver 1
#include "IoReactivexObserversDisposableObserver.h"

@class IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver;
@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver : IoReactivexObserversDisposableObserver {
 @public
  IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *parent_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver:(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver, parent_, IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver_initWithIoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver *self, IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver *new_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver_initWithIoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver *create_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver_initWithIoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferExactBoundaryObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferExactBoundary_BufferBoundaryObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferExactBoundary")
