//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalOperatorsSingleSingleOnErrorReturn.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "IoReactivexSingleSource.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Throwable.h"

@interface IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn () {
 @public
  IoReactivexInternalOperatorsSingleSingleOnErrorReturn *this$0_;
  id<IoReactivexSingleObserver> observer_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn, observer_, id<IoReactivexSingleObserver>)

@implementation IoReactivexInternalOperatorsSingleSingleOnErrorReturn

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
               withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier
                                         withId:(id)value {
  IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(self, source, valueSupplier, value);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  [((id<IoReactivexSingleSource>) nil_chk(source_)) subscribeWithIoReactivexSingleObserver:create_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn_initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_(self, s)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(valueSupplier_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleSource:withIoReactivexFunctionsFunction:withId:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexSingleSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "valueSupplier_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleSource;LIoReactivexFunctionsFunction;LNSObject;", "(Lio/reactivex/SingleSource<+TT;>;Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;TT;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "Lio/reactivex/SingleSource<+TT;>;", "Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;", "TT;", "LIoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn;", "<T:Ljava/lang/Object;>Lio/reactivex/Single<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleOnErrorReturn = { "SingleOnErrorReturn", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, 8, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleOnErrorReturn;
}

@end

void IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(IoReactivexInternalOperatorsSingleSingleOnErrorReturn *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsFunction> valueSupplier, id value) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->valueSupplier_, valueSupplier);
  JreStrongAssign(&self->value_, value);
}

IoReactivexInternalOperatorsSingleSingleOnErrorReturn *new_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsFunction> valueSupplier, id value) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleOnErrorReturn, initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_, source, valueSupplier, value)
}

IoReactivexInternalOperatorsSingleSingleOnErrorReturn *create_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsFunction> valueSupplier, id value) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleOnErrorReturn, initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_, source, valueSupplier, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleOnErrorReturn)

@implementation IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn:(IoReactivexInternalOperatorsSingleSingleOnErrorReturn *)outer$
                                                withIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer {
  IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn_initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_(self, outer$, observer);
  return self;
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  id v;
  if (this$0_->valueSupplier_ != nil) {
    @try {
      v = [this$0_->valueSupplier_ applyWithId:e];
    }
    @catch (JavaLangThrowable *ex) {
      IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
      [((id<IoReactivexSingleObserver>) nil_chk(observer_)) onErrorWithJavaLangThrowable:create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:JavaLangThrowable_class_()])];
      return;
    }
  }
  else {
    v = this$0_->value_;
  }
  if (v == nil) {
    JavaLangNullPointerException *npe = create_JavaLangNullPointerException_initWithNSString_(@"Value supplied was null");
    [npe initCauseWithJavaLangThrowable:e];
    [((id<IoReactivexSingleObserver>) nil_chk(observer_)) onErrorWithJavaLangThrowable:npe];
    return;
  }
  [((id<IoReactivexSingleObserver>) nil_chk(observer_)) onSuccessWithId:v];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((id<IoReactivexSingleObserver>) nil_chk(observer_)) onSubscribeWithIoReactivexDisposablesDisposable:d];
}

- (void)onSuccessWithId:(id)value {
  [((id<IoReactivexSingleObserver>) nil_chk(observer_)) onSuccessWithId:value];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn:withIoReactivexSingleObserver:);
  methods[1].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[2].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[3].selector = @selector(onSuccessWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsSingleSingleOnErrorReturn;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "observer_", "LIoReactivexSingleObserver;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "onError", "LJavaLangThrowable;", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "Lio/reactivex/internal/operators/single/SingleOnErrorReturn<TT;>;", "Lio/reactivex/SingleObserver<-TT;>;", "LIoReactivexInternalOperatorsSingleSingleOnErrorReturn;", "Ljava/lang/Object;Lio/reactivex/SingleObserver<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn = { "OnErrorReturn", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x10, 4, 2, 11, -1, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn;
}

@end

void IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn_initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn *self, IoReactivexInternalOperatorsSingleSingleOnErrorReturn *outer$, id<IoReactivexSingleObserver> observer) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->observer_, observer);
}

IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn *new_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn_initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleOnErrorReturn *outer$, id<IoReactivexSingleObserver> observer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn, initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_, outer$, observer)
}

IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn *create_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn_initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleOnErrorReturn *outer$, id<IoReactivexSingleObserver> observer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn, initWithIoReactivexInternalOperatorsSingleSingleOnErrorReturn_withIoReactivexSingleObserver_, outer$, observer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleOnErrorReturn_OnErrorReturn)
