//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscribersBlockingBaseSubscriber")
#ifdef RESTRICT_IoReactivexInternalSubscribersBlockingBaseSubscriber
#define INCLUDE_ALL_IoReactivexInternalSubscribersBlockingBaseSubscriber 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscribersBlockingBaseSubscriber 1
#endif
#undef RESTRICT_IoReactivexInternalSubscribersBlockingBaseSubscriber

#if !defined (IoReactivexInternalSubscribersBlockingBaseSubscriber_) && (INCLUDE_ALL_IoReactivexInternalSubscribersBlockingBaseSubscriber || defined(INCLUDE_IoReactivexInternalSubscribersBlockingBaseSubscriber))
#define IoReactivexInternalSubscribersBlockingBaseSubscriber_

#define RESTRICT_JavaUtilConcurrentCountDownLatch 1
#define INCLUDE_JavaUtilConcurrentCountDownLatch 1
#include "java/util/concurrent/CountDownLatch.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

@class JavaLangThrowable;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalSubscribersBlockingBaseSubscriber : JavaUtilConcurrentCountDownLatch < IoReactivexFlowableSubscriber > {
 @public
  id value_;
  JavaLangThrowable *error_;
  volatile_id s_;
  volatile_jboolean cancelled_;
}

#pragma mark Public

- (instancetype)init;

- (id)blockingGet;

- (void)onComplete;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscribersBlockingBaseSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersBlockingBaseSubscriber, value_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersBlockingBaseSubscriber, error_, JavaLangThrowable *)
J2OBJC_VOLATILE_FIELD_SETTER(IoReactivexInternalSubscribersBlockingBaseSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalSubscribersBlockingBaseSubscriber_init(IoReactivexInternalSubscribersBlockingBaseSubscriber *self);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscribersBlockingBaseSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscribersBlockingBaseSubscriber")
