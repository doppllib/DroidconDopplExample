//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDistinct")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableDistinct
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDistinct 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDistinct 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableDistinct

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableDistinct_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDistinct || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableDistinct))
#define IoReactivexInternalOperatorsObservableObservableDistinct_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableDistinct : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> keySelector_;
  id<JavaUtilConcurrentCallable> collectionSupplier_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)keySelector
                     withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)collectionSupplier;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableDistinct)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableDistinct, keySelector_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableDistinct, collectionSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableDistinct_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsObservableObservableDistinct *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilConcurrentCallable> collectionSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableDistinct *new_IoReactivexInternalOperatorsObservableObservableDistinct_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilConcurrentCallable> collectionSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableDistinct *create_IoReactivexInternalOperatorsObservableObservableDistinct_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilConcurrentCallable> collectionSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableDistinct)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDistinct || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver))
#define IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver_

#define RESTRICT_IoReactivexInternalObserversBasicFuseableObserver 1
#define INCLUDE_IoReactivexInternalObserversBasicFuseableObserver 1
#include "IoReactivexInternalObserversBasicFuseableObserver.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver : IoReactivexInternalObserversBasicFuseableObserver {
 @public
  id<JavaUtilCollection> collection_;
  id<IoReactivexFunctionsFunction> keySelector_;
}

#pragma mark Public

- (void)clear;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)keySelector
                     withJavaUtilCollection:(id<JavaUtilCollection>)collection;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver, collection_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver, keySelector_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withJavaUtilCollection_(IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver *new_IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withJavaUtilCollection_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilCollection> collection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver *create_IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withJavaUtilCollection_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> keySelector, id<JavaUtilCollection> collection);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableDistinct_DistinctObserver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDistinct")
