//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDematerialize")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDematerialize
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDematerialize 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDematerialize 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDematerialize

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDematerialize_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDematerialize || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDematerialize))
#define IoReactivexInternalOperatorsFlowableFlowableDematerialize_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDematerialize : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDematerialize)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDematerialize_initWithIoReactivexFlowable_(IoReactivexInternalOperatorsFlowableFlowableDematerialize *self, IoReactivexFlowable *source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDematerialize *new_IoReactivexInternalOperatorsFlowableFlowableDematerialize_initWithIoReactivexFlowable_(IoReactivexFlowable *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDematerialize *create_IoReactivexInternalOperatorsFlowableFlowableDematerialize_initWithIoReactivexFlowable_(IoReactivexFlowable *source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDematerialize)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDematerialize || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class IoReactivexNotification;
@class JavaLangThrowable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber : NSObject < IoReactivexFlowableSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  jboolean done_;
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(IoReactivexNotification *)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDematerialize_DematerializeSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDematerialize")
