//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTakeLast")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableTakeLast
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTakeLast 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTakeLast 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableTakeLast

#if !defined (IoReactivexInternalOperatorsObservableObservableTakeLast_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTakeLast || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableTakeLast))
#define IoReactivexInternalOperatorsObservableObservableTakeLast_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableTakeLast : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  jint count_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                            withInt:(jint)count;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableTakeLast)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableTakeLast_initWithIoReactivexObservableSource_withInt_(IoReactivexInternalOperatorsObservableObservableTakeLast *self, id<IoReactivexObservableSource> source, jint count);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTakeLast *new_IoReactivexInternalOperatorsObservableObservableTakeLast_initWithIoReactivexObservableSource_withInt_(id<IoReactivexObservableSource> source, jint count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTakeLast *create_IoReactivexInternalOperatorsObservableObservableTakeLast_initWithIoReactivexObservableSource_withInt_(id<IoReactivexObservableSource> source, jint count);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableTakeLast)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTakeLast || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver))
#define IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver_

#define RESTRICT_JavaUtilArrayDeque 1
#define INCLUDE_JavaUtilArrayDeque 1
#include "java/util/ArrayDeque.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver : JavaUtilArrayDeque < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  jint count_;
  id<IoReactivexDisposablesDisposable> s_;
  volatile_jboolean cancelled_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                    withInt:(jint)count;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver_initWithIoReactivexObserver_withInt_(IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver *self, id<IoReactivexObserver> actual, jint count);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver *new_IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver_initWithIoReactivexObserver_withInt_(id<IoReactivexObserver> actual, jint count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver *create_IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver_initWithIoReactivexObserver_withInt_(id<IoReactivexObserver> actual, jint count);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableTakeLast_TakeLastObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableTakeLast")
