//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"
#include "IoReactivexMaybe.h"
#include "IoReactivexMaybeSource.h"
#include "J2ObjC_source.h"

@implementation IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source {
  IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream_initWithIoReactivexMaybeSource_(self, source);
  return self;
}

- (id<IoReactivexMaybeSource>)source {
  return source_;
}

- (void)dealloc {
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexMaybeSource;", 0x11, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexMaybeSource:);
  methods[1].selector = @selector(source);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexMaybeSource;", .constantValue.asLong = 0, 0x14, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexMaybeSource;", "(Lio/reactivex/MaybeSource<TT;>;)V", "()Lio/reactivex/MaybeSource<TT;>;", "Lio/reactivex/MaybeSource<TT;>;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/Maybe<TR;>;Lio/reactivex/internal/fuseable/HasUpstreamMaybeSource<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream = { "AbstractMaybeWithUpstream", "io.reactivex.internal.operators.maybe", ptrTable, methods, fields, 7, 0x400, 2, 1, -1, -1, -1, 4, -1 };
  return &_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream;
}

@end

void IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream_initWithIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream *self, id<IoReactivexMaybeSource> source) {
  IoReactivexMaybe_init(self);
  JreStrongAssign(&self->source_, source);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream)
