//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDetach")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDetach
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDetach 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDetach 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDetach

#if !defined (IoReactivexInternalOperatorsSingleSingleDetach_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDetach || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDetach))
#define IoReactivexInternalOperatorsSingleSingleDetach_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDetach : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDetach)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDetach, source_, id<IoReactivexSingleSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDetach_initWithIoReactivexSingleSource_(IoReactivexInternalOperatorsSingleSingleDetach *self, id<IoReactivexSingleSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDetach *new_IoReactivexInternalOperatorsSingleSingleDetach_initWithIoReactivexSingleSource_(id<IoReactivexSingleSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDetach *create_IoReactivexInternalOperatorsSingleSingleDetach_initWithIoReactivexSingleSource_(id<IoReactivexSingleSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDetach)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDetach || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver))
#define IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver_

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "IoReactivexSingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver : NSObject < IoReactivexSingleObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver_initWithIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver *self, id<IoReactivexSingleObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver *new_IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver_initWithIoReactivexSingleObserver_(id<IoReactivexSingleObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver *create_IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver_initWithIoReactivexSingleObserver_(id<IoReactivexSingleObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDetach_DetachSingleObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDetach")
