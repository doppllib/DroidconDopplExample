//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDefer")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDefer
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDefer 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDefer 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDefer

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDefer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDefer || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDefer))
#define IoReactivexInternalOperatorsFlowableFlowableDefer_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDefer : IoReactivexFlowable {
 @public
  id<JavaUtilConcurrentCallable> supplier_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)supplier;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDefer)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDefer, supplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDefer_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsFlowableFlowableDefer *self, id<JavaUtilConcurrentCallable> supplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDefer *new_IoReactivexInternalOperatorsFlowableFlowableDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> supplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDefer *create_IoReactivexInternalOperatorsFlowableFlowableDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> supplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDefer)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDefer")
