//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter")
#ifdef RESTRICT_IoReactivexInternalSubscriptionsFullArbiter
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter 1
#endif
#undef RESTRICT_IoReactivexInternalSubscriptionsFullArbiter
#ifdef INCLUDE_IoReactivexInternalSubscriptionsFullArbiter
#define INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad2 1
#endif
#ifdef INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad2
#define INCLUDE_IoReactivexInternalSubscriptionsFullArbiterMissed 1
#endif
#ifdef INCLUDE_IoReactivexInternalSubscriptionsFullArbiterMissed
#define INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad1 1
#endif
#ifdef INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad1
#define INCLUDE_IoReactivexInternalSubscriptionsFullArbiterWip 1
#endif
#ifdef INCLUDE_IoReactivexInternalSubscriptionsFullArbiterWip
#define INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad0 1
#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiterPad0_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad0))
#define IoReactivexInternalSubscriptionsFullArbiterPad0_

@interface IoReactivexInternalSubscriptionsFullArbiterPad0 : NSObject {
 @public
  volatile_jlong p1a_;
  volatile_jlong p2a_;
  volatile_jlong p3a_;
  volatile_jlong p4a_;
  volatile_jlong p5a_;
  volatile_jlong p6a_;
  volatile_jlong p7a_;
  volatile_jlong p8a_;
  volatile_jlong p9a_;
  volatile_jlong p10a_;
  volatile_jlong p11a_;
  volatile_jlong p12a_;
  volatile_jlong p13a_;
  volatile_jlong p14a_;
  volatile_jlong p15a_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiterPad0)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiterPad0_init(IoReactivexInternalSubscriptionsFullArbiterPad0 *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterPad0 *new_IoReactivexInternalSubscriptionsFullArbiterPad0_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterPad0 *create_IoReactivexInternalSubscriptionsFullArbiterPad0_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiterPad0)

#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiterWip_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiterWip))
#define IoReactivexInternalSubscriptionsFullArbiterWip_

@class JavaUtilConcurrentAtomicAtomicInteger;

@interface IoReactivexInternalSubscriptionsFullArbiterWip : IoReactivexInternalSubscriptionsFullArbiterPad0 {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *wip_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiterWip)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsFullArbiterWip, wip_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiterWip_init(IoReactivexInternalSubscriptionsFullArbiterWip *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterWip *new_IoReactivexInternalSubscriptionsFullArbiterWip_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterWip *create_IoReactivexInternalSubscriptionsFullArbiterWip_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiterWip)

#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiterPad1_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad1))
#define IoReactivexInternalSubscriptionsFullArbiterPad1_

@interface IoReactivexInternalSubscriptionsFullArbiterPad1 : IoReactivexInternalSubscriptionsFullArbiterWip {
 @public
  volatile_jlong p1b_;
  volatile_jlong p2b_;
  volatile_jlong p3b_;
  volatile_jlong p4b_;
  volatile_jlong p5b_;
  volatile_jlong p6b_;
  volatile_jlong p7b_;
  volatile_jlong p8b_;
  volatile_jlong p9b_;
  volatile_jlong p10b_;
  volatile_jlong p11b_;
  volatile_jlong p12b_;
  volatile_jlong p13b_;
  volatile_jlong p14b_;
  volatile_jlong p15b_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiterPad1)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiterPad1_init(IoReactivexInternalSubscriptionsFullArbiterPad1 *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterPad1 *new_IoReactivexInternalSubscriptionsFullArbiterPad1_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterPad1 *create_IoReactivexInternalSubscriptionsFullArbiterPad1_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiterPad1)

#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiterMissed_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiterMissed))
#define IoReactivexInternalSubscriptionsFullArbiterMissed_

@class JavaUtilConcurrentAtomicAtomicLong;

@interface IoReactivexInternalSubscriptionsFullArbiterMissed : IoReactivexInternalSubscriptionsFullArbiterPad1 {
 @public
  JavaUtilConcurrentAtomicAtomicLong *missedRequested_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiterMissed)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsFullArbiterMissed, missedRequested_, JavaUtilConcurrentAtomicAtomicLong *)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiterMissed_init(IoReactivexInternalSubscriptionsFullArbiterMissed *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterMissed *new_IoReactivexInternalSubscriptionsFullArbiterMissed_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterMissed *create_IoReactivexInternalSubscriptionsFullArbiterMissed_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiterMissed)

#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiterPad2_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiterPad2))
#define IoReactivexInternalSubscriptionsFullArbiterPad2_

@interface IoReactivexInternalSubscriptionsFullArbiterPad2 : IoReactivexInternalSubscriptionsFullArbiterMissed {
 @public
  volatile_jlong p1c_;
  volatile_jlong p2c_;
  volatile_jlong p3c_;
  volatile_jlong p4c_;
  volatile_jlong p5c_;
  volatile_jlong p6c_;
  volatile_jlong p7c_;
  volatile_jlong p8c_;
  volatile_jlong p9c_;
  volatile_jlong p10c_;
  volatile_jlong p11c_;
  volatile_jlong p12c_;
  volatile_jlong p13c_;
  volatile_jlong p14c_;
  volatile_jlong p15c_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiterPad2)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiterPad2_init(IoReactivexInternalSubscriptionsFullArbiterPad2 *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterPad2 *new_IoReactivexInternalSubscriptionsFullArbiterPad2_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiterPad2 *create_IoReactivexInternalSubscriptionsFullArbiterPad2_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiterPad2)

#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiter_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiter))
#define IoReactivexInternalSubscriptionsFullArbiter_

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalSubscriptionsFullArbiter : IoReactivexInternalSubscriptionsFullArbiterPad2 < OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  IoReactivexInternalQueueSpscLinkedArrayQueue *queue_;
  jlong requested_;
  volatile_id s_;
  id<IoReactivexDisposablesDisposable> resource_;
  volatile_jboolean cancelled_;
}

+ (id<OrgReactivestreamsSubscription>)INITIAL;

+ (id)REQUEST;

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)resource
                                             withInt:(jint)capacity;

- (void)cancel;

- (void)onCompleteWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)value
  withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (jboolean)onNextWithId:(id)value
withOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (jboolean)setSubscriptionWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (void)dispose;

- (void)drain;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiter)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsFullArbiter, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsFullArbiter, queue_, IoReactivexInternalQueueSpscLinkedArrayQueue *)
J2OBJC_VOLATILE_FIELD_SETTER(IoReactivexInternalSubscriptionsFullArbiter, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsFullArbiter, resource_, id<IoReactivexDisposablesDisposable>)

inline id<OrgReactivestreamsSubscription> IoReactivexInternalSubscriptionsFullArbiter_get_INITIAL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgReactivestreamsSubscription> IoReactivexInternalSubscriptionsFullArbiter_INITIAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalSubscriptionsFullArbiter, INITIAL, id<OrgReactivestreamsSubscription>)

inline id IoReactivexInternalSubscriptionsFullArbiter_get_REQUEST();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id IoReactivexInternalSubscriptionsFullArbiter_REQUEST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalSubscriptionsFullArbiter, REQUEST, id)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiter_initWithOrgReactivestreamsSubscriber_withIoReactivexDisposablesDisposable_withInt_(IoReactivexInternalSubscriptionsFullArbiter *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexDisposablesDisposable> resource, jint capacity);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiter *new_IoReactivexInternalSubscriptionsFullArbiter_initWithOrgReactivestreamsSubscriber_withIoReactivexDisposablesDisposable_withInt_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexDisposablesDisposable> resource, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiter *create_IoReactivexInternalSubscriptionsFullArbiter_initWithOrgReactivestreamsSubscriber_withIoReactivexDisposablesDisposable_withInt_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexDisposablesDisposable> resource, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiter)

#endif

#if !defined (IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter || defined(INCLUDE_IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription))
#define IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription_

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@interface IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription : NSObject < OrgReactivestreamsSubscription >

#pragma mark Public

- (void)cancel;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription_init(IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription *new_IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription *create_IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsFullArbiter_InitialSubscription)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsFullArbiter")
