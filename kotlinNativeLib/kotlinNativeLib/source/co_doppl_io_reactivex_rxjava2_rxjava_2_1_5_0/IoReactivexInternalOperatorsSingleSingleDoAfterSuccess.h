//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess

#if !defined (IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess))
#define IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDoAfterSuccess : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexFunctionsConsumer> onAfterSuccess_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
               withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onAfterSuccess;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess, onAfterSuccess_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onAfterSuccess);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoAfterSuccess *new_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onAfterSuccess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoAfterSuccess *create_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onAfterSuccess);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver))
#define IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver_

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "IoReactivexSingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsConsumer;

@interface IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver : NSObject < IoReactivexSingleObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexFunctionsConsumer> onAfterSuccess_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                 withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onAfterSuccess;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver, onAfterSuccess_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver *self, id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsConsumer> onAfterSuccess);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver *new_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsConsumer> onAfterSuccess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver *create_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsConsumer> onAfterSuccess);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDoAfterSuccess_DoAfterObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoAfterSuccess")
