//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAtMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableElementAtMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAtMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAtMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableElementAtMaybe

#if !defined (IoReactivexInternalOperatorsObservableObservableElementAtMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAtMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableElementAtMaybe))
#define IoReactivexInternalOperatorsObservableObservableElementAtMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToObservable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToObservable 1
#include "IoReactivexInternalFuseableFuseToObservable.h"

@class IoReactivexObservable;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexObservableSource;

@interface IoReactivexInternalOperatorsObservableObservableElementAtMaybe : IoReactivexMaybe < IoReactivexInternalFuseableFuseToObservable > {
 @public
  id<IoReactivexObservableSource> source_;
  jlong index_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                           withLong:(jlong)index;

- (IoReactivexObservable *)fuseToObservable;

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableElementAtMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAtMaybe, source_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableElementAtMaybe_initWithIoReactivexObservableSource_withLong_(IoReactivexInternalOperatorsObservableObservableElementAtMaybe *self, id<IoReactivexObservableSource> source, jlong index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAtMaybe *new_IoReactivexInternalOperatorsObservableObservableElementAtMaybe_initWithIoReactivexObservableSource_withLong_(id<IoReactivexObservableSource> source, jlong index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAtMaybe *create_IoReactivexInternalOperatorsObservableObservableElementAtMaybe_initWithIoReactivexObservableSource_withLong_(id<IoReactivexObservableSource> source, jlong index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableElementAtMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAtMaybe || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver))
#define IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  jlong index_;
  id<IoReactivexDisposablesDisposable> s_;
  jlong count_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                                        withLong:(jlong)index;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver_initWithIoReactivexMaybeObserver_withLong_(IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver *self, id<IoReactivexMaybeObserver> actual, jlong index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver *new_IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver_initWithIoReactivexMaybeObserver_withLong_(id<IoReactivexMaybeObserver> actual, jlong index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver *create_IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver_initWithIoReactivexMaybeObserver_withLong_(id<IoReactivexMaybeObserver> actual, jlong index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableElementAtMaybe_ElementAtObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableElementAtMaybe")
