//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"
#include "IoReactivexInternalOperatorsObservableObservableDebounce.h"
#include "IoReactivexObservableSource.h"
#include "IoReactivexObserver.h"
#include "IoReactivexObserversDisposableObserver.h"
#include "IoReactivexObserversSerializedObserver.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

@implementation IoReactivexInternalOperatorsObservableObservableDebounce

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)debounceSelector {
  IoReactivexInternalOperatorsObservableObservableDebounce_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_(self, source, debounceSelector);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t {
  [((id<IoReactivexObservableSource>) nil_chk(source_)) subscribeWithIoReactivexObserver:create_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_(create_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_(t), debounceSelector_)];
}

- (void)dealloc {
  RELEASE_(debounceSelector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSource:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debounceSelector_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservableSource;LIoReactivexFunctionsFunction;", "(Lio/reactivex/ObservableSource<TT;>;Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TT;>;)V", "Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;", "LIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDebounce = { "ObservableDebounce", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDebounce;
}

@end

void IoReactivexInternalOperatorsObservableObservableDebounce_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableDebounce *self, id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> debounceSelector) {
  IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream_initWithIoReactivexObservableSource_(self, source);
  JreStrongAssign(&self->debounceSelector_, debounceSelector);
}

IoReactivexInternalOperatorsObservableObservableDebounce *new_IoReactivexInternalOperatorsObservableObservableDebounce_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDebounce, initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_, source, debounceSelector)
}

IoReactivexInternalOperatorsObservableObservableDebounce *create_IoReactivexInternalOperatorsObservableObservableDebounce_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_(id<IoReactivexObservableSource> source, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDebounce, initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_, source, debounceSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableDebounce)

@implementation IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)debounceSelector {
  IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_(self, actual, debounceSelector);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->s_, s)) {
    JreStrongAssign(&self->s_, s);
    [((id<IoReactivexObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  }
}

- (void)onNextWithId:(id)t {
  if (done_) {
    return;
  }
  jlong idx = JreLoadVolatileLong(&index_) + 1;
  JreAssignVolatileLong(&index_, idx);
  id<IoReactivexDisposablesDisposable> d = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(debouncer_)) get];
  if (d != nil) {
    [d dispose];
  }
  id<IoReactivexObservableSource> p;
  @try {
    p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(debounceSelector_)) applyWithId:t], @"The ObservableSource supplied is null");
  }
  @catch (JavaLangThrowable *e) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(e);
    [self dispose];
    [((id<IoReactivexObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
    return;
  }
  IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *dis = create_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_(self, idx, t);
  if ([debouncer_ compareAndSetWithId:d withId:dis]) {
    [((id<IoReactivexObservableSource>) nil_chk(p)) subscribeWithIoReactivexObserver:dis];
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(debouncer_);
  [((id<IoReactivexObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  if (done_) {
    return;
  }
  done_ = true;
  id<IoReactivexDisposablesDisposable> d = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(debouncer_)) get];
  if (d != JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED)) {
    IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *dis = (IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *) cast_chk(d, [IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver class]);
    [((IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *) nil_chk(dis)) emit];
    IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(debouncer_);
    [((id<IoReactivexObserver>) nil_chk(actual_)) onComplete];
  }
}

- (void)dispose {
  [((id<IoReactivexDisposablesDisposable>) nil_chk(s_)) dispose];
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(debouncer_);
}

- (jboolean)isDisposed {
  return [((id<IoReactivexDisposablesDisposable>) nil_chk(s_)) isDisposed];
}

- (void)emitWithLong:(jlong)idx
              withId:(id)value {
  if (idx == JreLoadVolatileLong(&index_)) {
    [((id<IoReactivexObserver>) nil_chk(actual_)) onNextWithId:value];
  }
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(debounceSelector_);
  RELEASE_(s_);
  RELEASE_(debouncer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 10, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  methods[5].selector = @selector(dispose);
  methods[6].selector = @selector(isDisposed);
  methods[7].selector = @selector(emitWithLong:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 12, -1 },
    { "debounceSelector_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 13, -1 },
    { "s_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "debouncer_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 14, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;LIoReactivexFunctionsFunction;", "(Lio/reactivex/Observer<-TT;>;Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "emit", "JLNSObject;", "(JTT;)V", "Lio/reactivex/Observer<-TT;>;", "Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;", "Ljava/util/concurrent/atomic/AtomicReference<Lio/reactivex/disposables/Disposable;>;", "LIoReactivexInternalOperatorsObservableObservableDebounce;", "LIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/Observer<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver = { "DebounceObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 8, 6, 15, 16, -1, 17, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> debounceSelector) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->debouncer_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->debounceSelector_, debounceSelector);
}

IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *new_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_, actual, debounceSelector)
}

IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *create_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_, actual, debounceSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver)

@implementation IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver:(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *)parent
                                                                                         withLong:(jlong)index
                                                                                           withId:(id)value {
  IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_(self, parent, index, value);
  return self;
}

- (void)onNextWithId:(id)t {
  if (done_) {
    return;
  }
  done_ = true;
  [self dispose];
  [self emit];
}

- (void)emit {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *) nil_chk(parent_)) emitWithLong:index_ withId:value_];
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  if (done_) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    return;
  }
  done_ = true;
  [((IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *) nil_chk(parent_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  if (done_) {
    return;
  }
  done_ = true;
  [self emit];
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(value_);
  RELEASE_(once_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver:withLong:withId:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(emit);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver;JLNSObject;", "(Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver<TT;TU;>;JTT;)V", "onNext", "LNSObject;", "(TU;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/observable/ObservableDebounce$DebounceObserver<TT;TU;>;", "TT;", "LIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/observers/DisposableObserver<TU;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver = { "DebounceInnerObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 5, 5, 9, -1, -1, 10, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *self, IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *parent, jlong index, id value) {
  IoReactivexObserversDisposableObserver_init(self);
  JreStrongAssignAndConsume(&self->once_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
  JreStrongAssign(&self->parent_, parent);
  self->index_ = index;
  JreStrongAssign(&self->value_, value);
}

IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *new_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *parent, jlong index, id value) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver, initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_, parent, index, value)
}

IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver *create_IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver_initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver *parent, jlong index, id value) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver, initWithIoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_withLong_withId_, parent, index, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableDebounce_DebounceObserver_DebounceInnerObserver)
