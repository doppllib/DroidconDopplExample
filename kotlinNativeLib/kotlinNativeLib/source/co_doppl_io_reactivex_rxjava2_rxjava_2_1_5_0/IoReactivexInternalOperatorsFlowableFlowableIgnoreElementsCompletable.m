//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexCompletable.h"
#include "IoReactivexCompletableObserver.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexInternalOperatorsFlowableFlowableIgnoreElements.h"
#include "IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable.h"
#include "IoReactivexInternalSubscriptionsSubscriptionHelper.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsSubscription.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"

@implementation IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source {
  IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_initWithIoReactivexFlowable_(self, source);
  return self;
}

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)t {
  [((IoReactivexFlowable *) nil_chk(source_)) subscribeWithIoReactivexFlowableSubscriber:create_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber_initWithIoReactivexCompletableObserver_(t)];
}

- (IoReactivexFlowable *)fuseToFlowable {
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_initWithIoReactivexFlowable_(source_));
}

- (void)dealloc {
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexCompletableObserver:);
  methods[2].selector = @selector(fuseToFlowable);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexFlowable;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;", "(Lio/reactivex/Flowable<TT;>;)V", "subscribeActual", "LIoReactivexCompletableObserver;", "()Lio/reactivex/Flowable<TT;>;", "Lio/reactivex/Flowable<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber;", "<T:Ljava/lang/Object;>Lio/reactivex/Completable;Lio/reactivex/internal/fuseable/FuseToFlowable<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable = { "FlowableIgnoreElementsCompletable", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_initWithIoReactivexFlowable_(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable *self, IoReactivexFlowable *source) {
  IoReactivexCompletable_init(self);
  JreStrongAssign(&self->source_, source);
}

IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable *new_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_initWithIoReactivexFlowable_(IoReactivexFlowable *source) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable, initWithIoReactivexFlowable_, source)
}

IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable *create_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_initWithIoReactivexFlowable_(IoReactivexFlowable *source) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable, initWithIoReactivexFlowable_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable)

@implementation IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber

- (instancetype)initWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)actual {
  IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber_initWithIoReactivexCompletableObserver_(self, actual);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithOrgReactivestreamsSubscription_withOrgReactivestreamsSubscription_(JreLoadVolatileId(&self->s_), s)) {
    JreVolatileStrongAssign(&self->s_, s);
    [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
    [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
  }
}

- (void)onNextWithId:(id)t {
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  JreVolatileStrongAssign(&s_, JreLoadEnum(IoReactivexInternalSubscriptionsSubscriptionHelper, CANCELLED));
  [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  JreVolatileStrongAssign(&s_, JreLoadEnum(IoReactivexInternalSubscriptionsSubscriptionHelper, CANCELLED));
  [((id<IoReactivexCompletableObserver>) nil_chk(actual_)) onComplete];
}

- (void)dispose {
  [((id<OrgReactivestreamsSubscription>) nil_chk(JreLoadVolatileId(&s_))) cancel];
  JreVolatileStrongAssign(&s_, JreLoadEnum(IoReactivexInternalSubscriptionsSubscriptionHelper, CANCELLED));
}

- (jboolean)isDisposed {
  return JreLoadVolatileId(&s_) == JreLoadEnum(IoReactivexInternalSubscriptionsSubscriptionHelper, CANCELLED);
}

- (void)__javaClone:(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&s_, &original->s_);
}

- (void)dealloc {
  RELEASE_(actual_);
  JreReleaseVolatile(&s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexCompletableObserver:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  methods[5].selector = @selector(dispose);
  methods[6].selector = @selector(isDisposed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexCompletableObserver;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "s_", "LOrgReactivestreamsSubscription;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableObserver;", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "LIoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/FlowableSubscriber<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber = { "IgnoreElementsSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 7, 2, 8, -1, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber_initWithIoReactivexCompletableObserver_(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber *self, id<IoReactivexCompletableObserver> actual) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
}

IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber_initWithIoReactivexCompletableObserver_(id<IoReactivexCompletableObserver> actual) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber, initWithIoReactivexCompletableObserver_, actual)
}

IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber_initWithIoReactivexCompletableObserver_(id<IoReactivexCompletableObserver> actual) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber, initWithIoReactivexCompletableObserver_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableIgnoreElementsCompletable_IgnoreElementsSubscriber)
