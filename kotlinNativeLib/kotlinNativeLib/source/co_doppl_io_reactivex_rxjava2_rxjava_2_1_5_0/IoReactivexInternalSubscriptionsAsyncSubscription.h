//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsAsyncSubscription")
#ifdef RESTRICT_IoReactivexInternalSubscriptionsAsyncSubscription
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsAsyncSubscription 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsAsyncSubscription 1
#endif
#undef RESTRICT_IoReactivexInternalSubscriptionsAsyncSubscription

#if !defined (IoReactivexInternalSubscriptionsAsyncSubscription_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsAsyncSubscription || defined(INCLUDE_IoReactivexInternalSubscriptionsAsyncSubscription))
#define IoReactivexInternalSubscriptionsAsyncSubscription_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicLong 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicLong 1
#include "java/util/concurrent/atomic/AtomicLong.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaUtilConcurrentAtomicAtomicReference;

@interface IoReactivexInternalSubscriptionsAsyncSubscription : JavaUtilConcurrentAtomicAtomicLong < OrgReactivestreamsSubscription, IoReactivexDisposablesDisposable > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *actual_;
  JavaUtilConcurrentAtomicAtomicReference *resource_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)resource;

- (void)cancel;

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

- (jboolean)replaceResourceWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)r;

- (void)requestWithLong:(jlong)n;

- (jboolean)setResourceWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)r;

- (void)setSubscriptionWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithLong:(jlong)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsAsyncSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsAsyncSubscription, actual_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsAsyncSubscription, resource_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsAsyncSubscription_init(IoReactivexInternalSubscriptionsAsyncSubscription *self);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsAsyncSubscription *new_IoReactivexInternalSubscriptionsAsyncSubscription_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsAsyncSubscription *create_IoReactivexInternalSubscriptionsAsyncSubscription_init();

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsAsyncSubscription_initWithIoReactivexDisposablesDisposable_(IoReactivexInternalSubscriptionsAsyncSubscription *self, id<IoReactivexDisposablesDisposable> resource);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsAsyncSubscription *new_IoReactivexInternalSubscriptionsAsyncSubscription_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> resource) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsAsyncSubscription *create_IoReactivexInternalSubscriptionsAsyncSubscription_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> resource);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsAsyncSubscription)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsAsyncSubscription")
