//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromArray")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromArray
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromArray 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromArray 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromArray

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFromArray_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromArray || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromArray))
#define IoReactivexInternalOperatorsObservableObservableFromArray_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class IOSObjectArray;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFromArray : IoReactivexObservable {
 @public
  IOSObjectArray *array_;
}

#pragma mark Public

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromArray)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromArray, array_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromArray_initWithNSObjectArray_(IoReactivexInternalOperatorsObservableObservableFromArray *self, IOSObjectArray *array);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromArray *new_IoReactivexInternalOperatorsObservableObservableFromArray_initWithNSObjectArray_(IOSObjectArray *array) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromArray *create_IoReactivexInternalOperatorsObservableObservableFromArray_initWithNSObjectArray_(IOSObjectArray *array);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromArray)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromArray || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable))
#define IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable_

#define RESTRICT_IoReactivexInternalObserversBasicQueueDisposable 1
#define INCLUDE_IoReactivexInternalObserversBasicQueueDisposable 1
#include "IoReactivexInternalObserversBasicQueueDisposable.h"

@class IOSObjectArray;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable : IoReactivexInternalObserversBasicQueueDisposable {
 @public
  id<IoReactivexObserver> actual_;
  IOSObjectArray *array_;
  jint index_;
  jboolean fusionMode_;
  volatile_jboolean disposed_;
}

#pragma mark Public

- (void)clear;

- (void)dispose;

- (jboolean)isDisposed;

- (jboolean)isEmpty;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                          withNSObjectArray:(IOSObjectArray *)array;

- (void)run;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable, array_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable_initWithIoReactivexObserver_withNSObjectArray_(IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable *self, id<IoReactivexObserver> actual, IOSObjectArray *array);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable *new_IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable_initWithIoReactivexObserver_withNSObjectArray_(id<IoReactivexObserver> actual, IOSObjectArray *array) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable *create_IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable_initWithIoReactivexObserver_withNSObjectArray_(id<IoReactivexObserver> actual, IOSObjectArray *array);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromArray_FromArrayDisposable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromArray")
