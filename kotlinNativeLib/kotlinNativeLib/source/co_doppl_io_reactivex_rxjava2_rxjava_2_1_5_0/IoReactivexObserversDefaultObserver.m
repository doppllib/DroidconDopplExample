//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalUtilEndConsumerHelper.h"
#include "IoReactivexObserversDefaultObserver.h"
#include "J2ObjC_source.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface IoReactivexObserversDefaultObserver () {
 @public
  id<IoReactivexDisposablesDisposable> s_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexObserversDefaultObserver, s_, id<IoReactivexDisposablesDisposable>)

@implementation IoReactivexObserversDefaultObserver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexObserversDefaultObserver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable> __nonnull)s {
  if (IoReactivexInternalUtilEndConsumerHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_withIOSClass_(self->s_, s, [self java_getClass])) {
    JreStrongAssign(&self->s_, s);
    [self onStart];
  }
}

- (void)cancel {
  id<IoReactivexDisposablesDisposable> s = self->s_;
  JreStrongAssign(&self->s_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  [((id<IoReactivexDisposablesDisposable>) nil_chk(s)) dispose];
}

- (void)onStart {
}

- (void)dealloc {
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x14, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(cancel);
  methods[3].selector = @selector(onStart);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LIoReactivexDisposablesDisposable;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/Observer<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexObserversDefaultObserver = { "DefaultObserver", "io.reactivex.observers", ptrTable, methods, fields, 7, 0x401, 4, 1, -1, -1, -1, 2, -1 };
  return &_IoReactivexObserversDefaultObserver;
}

@end

void IoReactivexObserversDefaultObserver_init(IoReactivexObserversDefaultObserver *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexObserversDefaultObserver)
