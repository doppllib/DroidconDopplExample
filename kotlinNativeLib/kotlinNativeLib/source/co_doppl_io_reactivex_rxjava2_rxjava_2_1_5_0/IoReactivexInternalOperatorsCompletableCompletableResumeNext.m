//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexCompletable.h"
#include "IoReactivexCompletableObserver.h"
#include "IoReactivexCompletableSource.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesSequentialDisposable.h"
#include "IoReactivexInternalOperatorsCompletableCompletableResumeNext.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Throwable.h"

@interface IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext () {
 @public
  IoReactivexInternalOperatorsCompletableCompletableResumeNext *this$0_;
}

@end

@interface IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver () {
 @public
  IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *this$0_;
}

@end

@implementation IoReactivexInternalOperatorsCompletableCompletableResumeNext

- (instancetype)initWithIoReactivexCompletableSource:(id<IoReactivexCompletableSource>)source
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)errorMapper {
  IoReactivexInternalOperatorsCompletableCompletableResumeNext_initWithIoReactivexCompletableSource_withIoReactivexFunctionsFunction_(self, source, errorMapper);
  return self;
}

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s {
  IoReactivexInternalDisposablesSequentialDisposable *sd = create_IoReactivexInternalDisposablesSequentialDisposable_init();
  [((id<IoReactivexCompletableObserver>) nil_chk(s)) onSubscribeWithIoReactivexDisposablesDisposable:sd];
  [((id<IoReactivexCompletableSource>) nil_chk(source_)) subscribeWithIoReactivexCompletableObserver:create_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_(self, s, sd)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(errorMapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexCompletableSource:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexCompletableObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexCompletableSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "errorMapper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableSource;LIoReactivexFunctionsFunction;", "(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+Lio/reactivex/CompletableSource;>;)V", "subscribeActual", "LIoReactivexCompletableObserver;", "Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+Lio/reactivex/CompletableSource;>;", "LIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableResumeNext = { "CompletableResumeNext", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 5, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableResumeNext;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableResumeNext_initWithIoReactivexCompletableSource_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsCompletableCompletableResumeNext *self, id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsFunction> errorMapper) {
  IoReactivexCompletable_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->errorMapper_, errorMapper);
}

IoReactivexInternalOperatorsCompletableCompletableResumeNext *new_IoReactivexInternalOperatorsCompletableCompletableResumeNext_initWithIoReactivexCompletableSource_withIoReactivexFunctionsFunction_(id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsFunction> errorMapper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableResumeNext, initWithIoReactivexCompletableSource_withIoReactivexFunctionsFunction_, source, errorMapper)
}

IoReactivexInternalOperatorsCompletableCompletableResumeNext *create_IoReactivexInternalOperatorsCompletableCompletableResumeNext_initWithIoReactivexCompletableSource_withIoReactivexFunctionsFunction_(id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsFunction> errorMapper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableResumeNext, initWithIoReactivexCompletableSource_withIoReactivexFunctionsFunction_, source, errorMapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableResumeNext)

@implementation IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext:(IoReactivexInternalOperatorsCompletableCompletableResumeNext *)outer$
                                                  withIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s
                              withIoReactivexInternalDisposablesSequentialDisposable:(IoReactivexInternalDisposablesSequentialDisposable *)sd {
  IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_(self, outer$, s, sd);
  return self;
}

- (void)onComplete {
  [((id<IoReactivexCompletableObserver>) nil_chk(s_)) onComplete];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  id<IoReactivexCompletableSource> c;
  @try {
    c = [((id<IoReactivexFunctionsFunction>) nil_chk(this$0_->errorMapper_)) applyWithId:e];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [((id<IoReactivexCompletableObserver>) nil_chk(s_)) onErrorWithJavaLangThrowable:create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ ex, e } count:2 type:JavaLangThrowable_class_()])];
    return;
  }
  if (c == nil) {
    JavaLangNullPointerException *npe = create_JavaLangNullPointerException_initWithNSString_(@"The CompletableConsumable returned is null");
    [npe initCauseWithJavaLangThrowable:e];
    [((id<IoReactivexCompletableObserver>) nil_chk(s_)) onErrorWithJavaLangThrowable:npe];
    return;
  }
  [c subscribeWithIoReactivexCompletableObserver:create_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_(self)];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((IoReactivexInternalDisposablesSequentialDisposable *) nil_chk(sd_)) updateWithIoReactivexDisposablesDisposable:d];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(s_);
  RELEASE_(sd_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext:withIoReactivexCompletableObserver:withIoReactivexInternalDisposablesSequentialDisposable:);
  methods[1].selector = @selector(onComplete);
  methods[2].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableResumeNext;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "s_", "LIoReactivexCompletableObserver;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "sd_", "LIoReactivexInternalDisposablesSequentialDisposable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableObserver;LIoReactivexInternalDisposablesSequentialDisposable;", "onError", "LJavaLangThrowable;", "onSubscribe", "LIoReactivexDisposablesDisposable;", "LIoReactivexInternalOperatorsCompletableCompletableResumeNext;", "LIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext = { "ResumeNext", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x10, 4, 3, 5, 6, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *self, IoReactivexInternalOperatorsCompletableCompletableResumeNext *outer$, id<IoReactivexCompletableObserver> s, IoReactivexInternalDisposablesSequentialDisposable *sd) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->s_, s);
  JreStrongAssign(&self->sd_, sd);
}

IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *new_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_(IoReactivexInternalOperatorsCompletableCompletableResumeNext *outer$, id<IoReactivexCompletableObserver> s, IoReactivexInternalDisposablesSequentialDisposable *sd) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext, initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_, outer$, s, sd)
}

IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *create_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_(IoReactivexInternalOperatorsCompletableCompletableResumeNext *outer$, id<IoReactivexCompletableObserver> s, IoReactivexInternalDisposablesSequentialDisposable *sd) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext, initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_withIoReactivexCompletableObserver_withIoReactivexInternalDisposablesSequentialDisposable_, outer$, s, sd)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext)

@implementation IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext:(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *)outer$ {
  IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_(self, outer$);
  return self;
}

- (void)onComplete {
  [((id<IoReactivexCompletableObserver>) nil_chk(this$0_->s_)) onComplete];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  [((id<IoReactivexCompletableObserver>) nil_chk(this$0_->s_)) onErrorWithJavaLangThrowable:e];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((IoReactivexInternalDisposablesSequentialDisposable *) nil_chk(this$0_->sd_)) updateWithIoReactivexDisposablesDisposable:d];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext:);
  methods[1].selector = @selector(onComplete);
  methods[2].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LJavaLangThrowable;", "onSubscribe", "LIoReactivexDisposablesDisposable;", "LIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver = { "OnErrorObserver", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x10, 4, 1, 4, -1, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver *self, IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver *new_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver, initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_, outer$)
}

IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver *create_IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver_initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver, initWithIoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableResumeNext_ResumeNext_OnErrorObserver)
