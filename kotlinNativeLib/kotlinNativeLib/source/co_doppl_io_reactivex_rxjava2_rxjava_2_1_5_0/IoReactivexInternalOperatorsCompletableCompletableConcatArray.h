//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableConcatArray")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableConcatArray
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableConcatArray 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableConcatArray 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableConcatArray

#if !defined (IoReactivexInternalOperatorsCompletableCompletableConcatArray_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableConcatArray || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableConcatArray))
#define IoReactivexInternalOperatorsCompletableCompletableConcatArray_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

@class IOSObjectArray;
@protocol IoReactivexCompletableObserver;

@interface IoReactivexInternalOperatorsCompletableCompletableConcatArray : IoReactivexCompletable {
 @public
  IOSObjectArray *sources_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexCompletableSourceArray:(IOSObjectArray *)sources;

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableConcatArray)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableConcatArray, sources_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableConcatArray_initWithIoReactivexCompletableSourceArray_(IoReactivexInternalOperatorsCompletableCompletableConcatArray *self, IOSObjectArray *sources);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableConcatArray *new_IoReactivexInternalOperatorsCompletableCompletableConcatArray_initWithIoReactivexCompletableSourceArray_(IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableConcatArray *create_IoReactivexInternalOperatorsCompletableCompletableConcatArray_initWithIoReactivexCompletableSourceArray_(IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableConcatArray)

#endif

#if !defined (IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableConcatArray || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver))
#define IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexCompletableObserver 1
#define INCLUDE_IoReactivexCompletableObserver 1
#include "IoReactivexCompletableObserver.h"

@class IOSObjectArray;
@class IoReactivexInternalDisposablesSequentialDisposable;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexCompletableObserver > {
 @public
  id<IoReactivexCompletableObserver> actual_;
  IOSObjectArray *sources_;
  jint index_;
  IoReactivexInternalDisposablesSequentialDisposable *sd_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)actual
                 withIoReactivexCompletableSourceArray:(IOSObjectArray *)sources;

- (void)next;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver, actual_, id<IoReactivexCompletableObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver, sources_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver, sd_, IoReactivexInternalDisposablesSequentialDisposable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver_initWithIoReactivexCompletableObserver_withIoReactivexCompletableSourceArray_(IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver *self, id<IoReactivexCompletableObserver> actual, IOSObjectArray *sources);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver *new_IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver_initWithIoReactivexCompletableObserver_withIoReactivexCompletableSourceArray_(id<IoReactivexCompletableObserver> actual, IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver *create_IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver_initWithIoReactivexCompletableObserver_withIoReactivexCompletableSourceArray_(id<IoReactivexCompletableObserver> actual, IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableConcatArray_ConcatInnerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableConcatArray")
