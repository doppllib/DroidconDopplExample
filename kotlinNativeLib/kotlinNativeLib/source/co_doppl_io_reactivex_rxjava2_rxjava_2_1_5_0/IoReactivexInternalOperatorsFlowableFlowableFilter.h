//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFilter
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFilter_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFilter))
#define IoReactivexInternalOperatorsFlowableFlowableFilter_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsPredicate;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFilter : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsPredicate> predicate_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
          withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFilter)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFilter, predicate_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFilter_initWithIoReactivexFlowable_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsFlowableFlowableFilter *self, IoReactivexFlowable *source, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFilter *new_IoReactivexInternalOperatorsFlowableFlowableFilter_initWithIoReactivexFlowable_withIoReactivexFunctionsPredicate_(IoReactivexFlowable *source, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFilter *create_IoReactivexInternalOperatorsFlowableFlowableFilter_initWithIoReactivexFlowable_withIoReactivexFunctionsPredicate_(IoReactivexFlowable *source, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFilter)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersBasicFuseableSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersBasicFuseableSubscriber 1
#include "IoReactivexInternalSubscribersBasicFuseableSubscriber.h"

#define RESTRICT_IoReactivexInternalFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalFuseableConditionalSubscriber 1
#include "IoReactivexInternalFuseableConditionalSubscriber.h"

@protocol IoReactivexFunctionsPredicate;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber : IoReactivexInternalSubscribersBasicFuseableSubscriber < IoReactivexInternalFuseableConditionalSubscriber > {
 @public
  id<IoReactivexFunctionsPredicate> filter_;
}

#pragma mark Public

- (void)onNextWithId:(id)t;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                   withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)filter;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber, filter_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsPredicate> filter);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsPredicate_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsPredicate> filter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsPredicate_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsPredicate> filter);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber 1
#include "IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber.h"

@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexInternalFuseableConditionalSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber : IoReactivexInternalSubscribersBasicFuseableConditionalSubscriber {
 @public
  id<IoReactivexFunctionsPredicate> filter_;
}

#pragma mark Public

- (void)onNextWithId:(id)t;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)actual
                                       withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)filter;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber, filter_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber *self, id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsPredicate> filter);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsPredicate_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsPredicate> filter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsPredicate_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsPredicate> filter);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFilter_FilterConditionalSubscriber)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFilter")
