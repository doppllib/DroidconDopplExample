//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier

#if !defined (IoReactivexInternalOperatorsCompletableCompletableErrorSupplier_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier))
#define IoReactivexInternalOperatorsCompletableCompletableErrorSupplier_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

@protocol IoReactivexCompletableObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsCompletableCompletableErrorSupplier : IoReactivexCompletable {
 @public
  id<JavaUtilConcurrentCallable> errorSupplier_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)errorSupplier;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableErrorSupplier)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableErrorSupplier, errorSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableErrorSupplier_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsCompletableCompletableErrorSupplier *self, id<JavaUtilConcurrentCallable> errorSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableErrorSupplier *new_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> errorSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableErrorSupplier *create_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> errorSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableErrorSupplier)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableErrorSupplier")
