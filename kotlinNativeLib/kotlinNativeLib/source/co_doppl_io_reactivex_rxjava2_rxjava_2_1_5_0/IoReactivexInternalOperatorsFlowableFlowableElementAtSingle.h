//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle

#if !defined (IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle))
#define IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToFlowable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToFlowable 1
#include "IoReactivexInternalFuseableFuseToFlowable.h"

@class IoReactivexFlowable;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsFlowableFlowableElementAtSingle : IoReactivexSingle < IoReactivexInternalFuseableFuseToFlowable > {
 @public
  IoReactivexFlowable *source_;
  jlong index_;
  id defaultValue_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
                                   withLong:(jlong)index
                                     withId:(id)defaultValue;

- (IoReactivexFlowable *)fuseToFlowable;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle, source_, IoReactivexFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle, defaultValue_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_initWithIoReactivexFlowable_withLong_withId_(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle *self, IoReactivexFlowable *source, jlong index, id defaultValue);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtSingle *new_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_initWithIoReactivexFlowable_withLong_withId_(IoReactivexFlowable *source, jlong index, id defaultValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtSingle *create_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_initWithIoReactivexFlowable_withLong_withId_(IoReactivexFlowable *source, jlong index, id defaultValue);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexSingleObserver;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber : NSObject < IoReactivexFlowableSubscriber, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  jlong index_;
  id defaultValue_;
  volatile_id s_;
  jlong count_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                                         withLong:(jlong)index
                                           withId:(id)defaultValue;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber, defaultValue_, id)
J2OBJC_VOLATILE_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber_initWithIoReactivexSingleObserver_withLong_withId_(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber *self, id<IoReactivexSingleObserver> actual, jlong index, id defaultValue);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber_initWithIoReactivexSingleObserver_withLong_withId_(id<IoReactivexSingleObserver> actual, jlong index, id defaultValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber_initWithIoReactivexSingleObserver_withLong_withId_(id<IoReactivexSingleObserver> actual, jlong index, id defaultValue);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableElementAtSingle_ElementAtSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtSingle")
