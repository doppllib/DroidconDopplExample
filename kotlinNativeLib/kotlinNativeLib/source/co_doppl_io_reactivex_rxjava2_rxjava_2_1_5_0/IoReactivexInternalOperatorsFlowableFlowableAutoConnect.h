//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAutoConnect")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableAutoConnect
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAutoConnect 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAutoConnect 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableAutoConnect

#if !defined (IoReactivexInternalOperatorsFlowableFlowableAutoConnect_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAutoConnect || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableAutoConnect))
#define IoReactivexInternalOperatorsFlowableFlowableAutoConnect_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class IoReactivexFlowablesConnectableFlowable;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol IoReactivexFunctionsConsumer;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableAutoConnect : IoReactivexFlowable {
 @public
  IoReactivexFlowablesConnectableFlowable *source_;
  jint numberOfSubscribers_;
  id<IoReactivexFunctionsConsumer> connection_;
  JavaUtilConcurrentAtomicAtomicInteger *clients_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowablesConnectableFlowable:(IoReactivexFlowablesConnectableFlowable *)source
                                                        withInt:(jint)numberOfSubscribers
                               withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)connection;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)child;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableAutoConnect)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAutoConnect, source_, IoReactivexFlowablesConnectableFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAutoConnect, connection_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAutoConnect, clients_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableAutoConnect_initWithIoReactivexFlowablesConnectableFlowable_withInt_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableAutoConnect *self, IoReactivexFlowablesConnectableFlowable *source, jint numberOfSubscribers, id<IoReactivexFunctionsConsumer> connection);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableAutoConnect *new_IoReactivexInternalOperatorsFlowableFlowableAutoConnect_initWithIoReactivexFlowablesConnectableFlowable_withInt_withIoReactivexFunctionsConsumer_(IoReactivexFlowablesConnectableFlowable *source, jint numberOfSubscribers, id<IoReactivexFunctionsConsumer> connection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableAutoConnect *create_IoReactivexInternalOperatorsFlowableFlowableAutoConnect_initWithIoReactivexFlowablesConnectableFlowable_withInt_withIoReactivexFunctionsConsumer_(IoReactivexFlowablesConnectableFlowable *source, jint numberOfSubscribers, id<IoReactivexFunctionsConsumer> connection);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableAutoConnect)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAutoConnect")
