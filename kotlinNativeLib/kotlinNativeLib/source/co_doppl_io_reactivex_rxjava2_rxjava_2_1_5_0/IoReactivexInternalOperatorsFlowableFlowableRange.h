//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableRange
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableRange
#ifdef INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription
#define INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription 1
#endif
#ifdef INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription
#define INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRange_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange))
#define IoReactivexInternalOperatorsFlowableFlowableRange_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class JavaLangInteger;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRange : IoReactivexFlowable {
 @public
  jint start_;
  jint end_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)start
                    withInt:(jint)count;

- (JavaLangInteger *)blockingFirst;

- (JavaLangInteger *)blockingFirstWithId:(JavaLangInteger *)arg0;

- (JavaLangInteger *)blockingLast;

- (JavaLangInteger *)blockingLastWithId:(JavaLangInteger *)arg0;

- (JavaLangInteger *)blockingSingle;

- (JavaLangInteger *)blockingSingleWithId:(JavaLangInteger *)arg0;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRange)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRange_initWithInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableRange *self, jint start, jint count);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRange *new_IoReactivexInternalOperatorsFlowableFlowableRange_initWithInt_withInt_(jint start, jint count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRange *create_IoReactivexInternalOperatorsFlowableFlowableRange_initWithInt_withInt_(jint start, jint count);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRange)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription))
#define IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription_

#define RESTRICT_IoReactivexInternalSubscriptionsBasicQueueSubscription 1
#define INCLUDE_IoReactivexInternalSubscriptionsBasicQueueSubscription 1
#include "IoReactivexInternalSubscriptionsBasicQueueSubscription.h"

@class JavaLangInteger;

@interface IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription : IoReactivexInternalSubscriptionsBasicQueueSubscription {
 @public
  jint end_;
  jint index_;
  volatile_jboolean cancelled_;
}

#pragma mark Public

- (void)cancel;

- (void)clear;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (jboolean)isEqual:(id)obj;

- (JavaLangInteger * __nullable)poll;

- (void)requestWithLong:(jlong)n;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)index
                    withInt:(jint)end;

- (void)fastPath;

- (void)slowPathWithLong:(jlong)r;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription_initWithInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription *self, jint index, jint end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription))
#define IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription_

@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription : IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                                             withInt:(jint)index
                                             withInt:(jint)end;

- (void)fastPath;

- (void)slowPathWithLong:(jlong)r;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0
                    withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription, actual_, id<OrgReactivestreamsSubscriber>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription_initWithOrgReactivestreamsSubscriber_withInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription *self, id<OrgReactivestreamsSubscriber> actual, jint index, jint end);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription *new_IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription_initWithOrgReactivestreamsSubscriber_withInt_withInt_(id<OrgReactivestreamsSubscriber> actual, jint index, jint end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription *create_IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription_initWithOrgReactivestreamsSubscriber_withInt_withInt_(id<OrgReactivestreamsSubscriber> actual, jint index, jint end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRange_RangeSubscription)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription))
#define IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription_

@protocol IoReactivexInternalFuseableConditionalSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription : IoReactivexInternalOperatorsFlowableFlowableRange_BaseRangeSubscription {
 @public
  id<IoReactivexInternalFuseableConditionalSubscriber> actual_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)actual
                                                                 withInt:(jint)index
                                                                 withInt:(jint)end;

- (void)fastPath;

- (void)slowPathWithLong:(jlong)r;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0
                    withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription, actual_, id<IoReactivexInternalFuseableConditionalSubscriber>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription_initWithIoReactivexInternalFuseableConditionalSubscriber_withInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription *self, id<IoReactivexInternalFuseableConditionalSubscriber> actual, jint index, jint end);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription *new_IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription_initWithIoReactivexInternalFuseableConditionalSubscriber_withInt_withInt_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, jint index, jint end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription *create_IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription_initWithIoReactivexInternalFuseableConditionalSubscriber_withInt_withInt_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, jint index, jint end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRange_RangeConditionalSubscription)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRange")
