//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsScalarSubscription")
#ifdef RESTRICT_IoReactivexInternalSubscriptionsScalarSubscription
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsScalarSubscription 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscriptionsScalarSubscription 1
#endif
#undef RESTRICT_IoReactivexInternalSubscriptionsScalarSubscription

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalSubscriptionsScalarSubscription_) && (INCLUDE_ALL_IoReactivexInternalSubscriptionsScalarSubscription || defined(INCLUDE_IoReactivexInternalSubscriptionsScalarSubscription))
#define IoReactivexInternalSubscriptionsScalarSubscription_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexInternalFuseableQueueSubscription 1
#define INCLUDE_IoReactivexInternalFuseableQueueSubscription 1
#include "IoReactivexInternalFuseableQueueSubscription.h"

@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalSubscriptionsScalarSubscription : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexInternalFuseableQueueSubscription > {
 @public
  id value_ScalarSubscription_;
  id<OrgReactivestreamsSubscriber> subscriber_;
}

+ (jint)NO_REQUEST;

+ (jint)REQUESTED;

+ (jint)CANCELLED;

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber
                                              withId:(id)value;

- (void)cancel;

- (void)clear;

- (NSUInteger)hash;

- (jboolean)isCancelled;

- (jboolean)isEmpty;

- (jboolean)isEqual:(id)obj;

- (jboolean)offerWithId:(id)e;

- (jboolean)offerWithId:(id)v1
                 withId:(id)v2;

- (id __nullable)poll;

- (void)requestWithLong:(jlong)n;

- (jint)requestFusionWithInt:(jint)mode;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscriptionsScalarSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsScalarSubscription, value_ScalarSubscription_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscriptionsScalarSubscription, subscriber_, id<OrgReactivestreamsSubscriber>)

inline jint IoReactivexInternalSubscriptionsScalarSubscription_get_NO_REQUEST();
#define IoReactivexInternalSubscriptionsScalarSubscription_NO_REQUEST 0
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSubscriptionsScalarSubscription, NO_REQUEST, jint)

inline jint IoReactivexInternalSubscriptionsScalarSubscription_get_REQUESTED();
#define IoReactivexInternalSubscriptionsScalarSubscription_REQUESTED 1
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSubscriptionsScalarSubscription, REQUESTED, jint)

inline jint IoReactivexInternalSubscriptionsScalarSubscription_get_CANCELLED();
#define IoReactivexInternalSubscriptionsScalarSubscription_CANCELLED 2
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalSubscriptionsScalarSubscription, CANCELLED, jint)

FOUNDATION_EXPORT void IoReactivexInternalSubscriptionsScalarSubscription_initWithOrgReactivestreamsSubscriber_withId_(IoReactivexInternalSubscriptionsScalarSubscription *self, id<OrgReactivestreamsSubscriber> subscriber, id value);

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsScalarSubscription *new_IoReactivexInternalSubscriptionsScalarSubscription_initWithOrgReactivestreamsSubscriber_withId_(id<OrgReactivestreamsSubscriber> subscriber, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscriptionsScalarSubscription *create_IoReactivexInternalSubscriptionsScalarSubscription_initWithOrgReactivestreamsSubscriber_withId_(id<OrgReactivestreamsSubscriber> subscriber, id value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscriptionsScalarSubscription)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscriptionsScalarSubscription")
