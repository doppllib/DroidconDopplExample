//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromIterable")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromIterable
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromIterable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromIterable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableFromIterable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFromIterable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromIterable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromIterable))
#define IoReactivexInternalOperatorsObservableObservableFromIterable_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@protocol IoReactivexObserver;
@protocol JavaLangIterable;

@interface IoReactivexInternalOperatorsObservableObservableFromIterable : IoReactivexObservable {
 @public
  id<JavaLangIterable> source_;
}

#pragma mark Public

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)source;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromIterable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromIterable, source_, id<JavaLangIterable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromIterable_initWithJavaLangIterable_(IoReactivexInternalOperatorsObservableObservableFromIterable *self, id<JavaLangIterable> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromIterable *new_IoReactivexInternalOperatorsObservableObservableFromIterable_initWithJavaLangIterable_(id<JavaLangIterable> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromIterable *create_IoReactivexInternalOperatorsObservableObservableFromIterable_initWithJavaLangIterable_(id<JavaLangIterable> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromIterable)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromIterable || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable))
#define IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable_

#define RESTRICT_IoReactivexInternalObserversBasicQueueDisposable 1
#define INCLUDE_IoReactivexInternalObserversBasicQueueDisposable 1
#include "IoReactivexInternalObserversBasicQueueDisposable.h"

@protocol IoReactivexObserver;
@protocol JavaUtilIterator;

@interface IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable : IoReactivexInternalObserversBasicQueueDisposable {
 @public
  id<IoReactivexObserver> actual_;
  id<JavaUtilIterator> it_;
  volatile_jboolean disposed_;
  jboolean fusionMode_;
  jboolean done_;
  jboolean checkNext_;
}

#pragma mark Public

- (void)clear;

- (void)dispose;

- (jboolean)isDisposed;

- (jboolean)isEmpty;

- (id __nullable)poll;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                       withJavaUtilIterator:(id<JavaUtilIterator>)it;

- (void)run;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable, it_, id<JavaUtilIterator>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable_initWithIoReactivexObserver_withJavaUtilIterator_(IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable *self, id<IoReactivexObserver> actual, id<JavaUtilIterator> it);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable *new_IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable_initWithIoReactivexObserver_withJavaUtilIterator_(id<IoReactivexObserver> actual, id<JavaUtilIterator> it) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable *create_IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable_initWithIoReactivexObserver_withJavaUtilIterator_(id<IoReactivexObserver> actual, id<JavaUtilIterator> it);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableFromIterable_FromIterableDisposable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableFromIterable")
