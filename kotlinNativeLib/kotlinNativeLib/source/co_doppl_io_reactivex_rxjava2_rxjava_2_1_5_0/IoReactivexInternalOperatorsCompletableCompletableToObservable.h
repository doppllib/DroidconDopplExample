//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableToObservable")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableToObservable
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableToObservable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableToObservable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableToObservable

#if !defined (IoReactivexInternalOperatorsCompletableCompletableToObservable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableToObservable || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableToObservable))
#define IoReactivexInternalOperatorsCompletableCompletableToObservable_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@protocol IoReactivexCompletableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsCompletableCompletableToObservable : IoReactivexObservable {
 @public
  id<IoReactivexCompletableSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexCompletableSource:(id<IoReactivexCompletableSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableToObservable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableToObservable, source_, id<IoReactivexCompletableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableToObservable_initWithIoReactivexCompletableSource_(IoReactivexInternalOperatorsCompletableCompletableToObservable *self, id<IoReactivexCompletableSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableToObservable *new_IoReactivexInternalOperatorsCompletableCompletableToObservable_initWithIoReactivexCompletableSource_(id<IoReactivexCompletableSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableToObservable *create_IoReactivexInternalOperatorsCompletableCompletableToObservable_initWithIoReactivexCompletableSource_(id<IoReactivexCompletableSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableToObservable)

#endif

#if !defined (IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableToObservable || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver))
#define IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver_

#define RESTRICT_IoReactivexCompletableObserver 1
#define INCLUDE_IoReactivexCompletableObserver 1
#include "IoReactivexCompletableObserver.h"

@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver : NSObject < IoReactivexCompletableObserver >

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver_initWithIoReactivexObserver_(IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver *self, id<IoReactivexObserver> observer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver *new_IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver *create_IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> observer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableToObservable_ObserverCompletableObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableToObservable")
