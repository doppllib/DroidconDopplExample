//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableBufferBoundary
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableBufferBoundary

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferBoundary_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferBoundary))
#define IoReactivexInternalOperatorsObservableObservableBufferBoundary_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"

@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableBufferBoundary : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  id<IoReactivexObservableSource> bufferOpen_;
  id<IoReactivexFunctionsFunction> bufferClose_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)bufferOpen
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)bufferClose
                     withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier;

- (id<JavaUtilCollection>)blockingFirst;

- (id<JavaUtilCollection>)blockingFirstWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingLast;

- (id<JavaUtilCollection>)blockingLastWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingSingle;

- (id<JavaUtilCollection>)blockingSingleWithId:(id<JavaUtilCollection>)arg0;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferBoundary)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary, bufferOpen_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary, bufferClose_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferBoundary_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsObservableObservableBufferBoundary *self, id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> bufferOpen, id<IoReactivexFunctionsFunction> bufferClose, id<JavaUtilConcurrentCallable> bufferSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary *new_IoReactivexInternalOperatorsObservableObservableBufferBoundary_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> bufferOpen, id<IoReactivexFunctionsFunction> bufferClose, id<JavaUtilConcurrentCallable> bufferSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary *create_IoReactivexInternalOperatorsObservableObservableBufferBoundary_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> bufferOpen, id<IoReactivexFunctionsFunction> bufferClose, id<JavaUtilConcurrentCallable> bufferSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferBoundary)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_

#define RESTRICT_IoReactivexInternalObserversQueueDrainObserver 1
#define INCLUDE_IoReactivexInternalObserversQueueDrainObserver 1
#include "IoReactivexInternalObserversQueueDrainObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexDisposablesCompositeDisposable;
@class JavaLangThrowable;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexInternalFuseableSimplePlainQueue;
@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilList;

@interface IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver : IoReactivexInternalObserversQueueDrainObserver < IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObservableSource> bufferOpen_;
  id<IoReactivexFunctionsFunction> bufferClose_;
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  IoReactivexDisposablesCompositeDisposable *resources_;
  id<IoReactivexDisposablesDisposable> s_;
  id<JavaUtilList> buffers_;
  JavaUtilConcurrentAtomicAtomicInteger *windows_;
}

#pragma mark Public

- (void)acceptWithIoReactivexObserver:(id<IoReactivexObserver>)a
                               withId:(id<JavaUtilCollection>)v;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
            withIoReactivexObservableSource:(id<IoReactivexObservableSource>)bufferOpen
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)bufferClose
             withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier;

- (void)closeWithJavaUtilCollection:(id<JavaUtilCollection>)b
withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)complete;

- (void)openWithId:(id)window;

- (void)openFinishedWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)arg0
withIoReactivexInternalFuseableSimplePlainQueue:(id<IoReactivexInternalFuseableSimplePlainQueue>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, bufferOpen_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, bufferClose_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, resources_, IoReactivexDisposablesCompositeDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, s_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, buffers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver, windows_, JavaUtilConcurrentAtomicAtomicInteger *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_initWithIoReactivexObserver_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *self, id<IoReactivexObserver> actual, id<IoReactivexObservableSource> bufferOpen, id<IoReactivexFunctionsFunction> bufferClose, id<JavaUtilConcurrentCallable> bufferSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *new_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_initWithIoReactivexObserver_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<IoReactivexObserver> actual, id<IoReactivexObservableSource> bufferOpen, id<IoReactivexFunctionsFunction> bufferClose, id<JavaUtilConcurrentCallable> bufferSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *create_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_initWithIoReactivexObserver_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withJavaUtilConcurrentCallable_(id<IoReactivexObserver> actual, id<IoReactivexObservableSource> bufferOpen, id<IoReactivexFunctionsFunction> bufferClose, id<JavaUtilConcurrentCallable> bufferSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver_

#define RESTRICT_IoReactivexObserversDisposableObserver 1
#define INCLUDE_IoReactivexObserversDisposableObserver 1
#include "IoReactivexObserversDisposableObserver.h"

@class IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver;
@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver : IoReactivexObserversDisposableObserver {
 @public
  IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent_;
  jboolean done_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver:(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver, parent_, IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver_initWithIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver *self, IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver *new_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver_initWithIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver *create_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver_initWithIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferOpenObserver)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver))
#define IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver_

#define RESTRICT_IoReactivexObserversDisposableObserver 1
#define INCLUDE_IoReactivexObserversDisposableObserver 1
#include "IoReactivexObserversDisposableObserver.h"

@class IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver;
@class JavaLangThrowable;
@protocol JavaUtilCollection;

@interface IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver : IoReactivexObserversDisposableObserver {
 @public
  IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent_;
  id<JavaUtilCollection> value_;
  jboolean done_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)value
withIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver:(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver, parent_, IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver, value_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver_initWithJavaUtilCollection_withIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver *self, id<JavaUtilCollection> value, IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver *new_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver_initWithJavaUtilCollection_withIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_(id<JavaUtilCollection> value, IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver *create_IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver_initWithJavaUtilCollection_withIoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver_(id<JavaUtilCollection> value, IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferBoundaryObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableBufferBoundary_BufferCloseObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableBufferBoundary")
