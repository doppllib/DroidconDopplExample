//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry")
#ifdef RESTRICT_IoReactivexInternalOperatorsParallelParallelDoOnNextTry
#define INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsParallelParallelDoOnNextTry

#if !defined (IoReactivexInternalOperatorsParallelParallelDoOnNextTry_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelDoOnNextTry))
#define IoReactivexInternalOperatorsParallelParallelDoOnNextTry_

#define RESTRICT_IoReactivexParallelParallelFlowable 1
#define INCLUDE_IoReactivexParallelParallelFlowable 1
#include "IoReactivexParallelParallelFlowable.h"

@class IOSObjectArray;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsConsumer;

@interface IoReactivexInternalOperatorsParallelParallelDoOnNextTry : IoReactivexParallelParallelFlowable {
 @public
  IoReactivexParallelParallelFlowable *source_;
  id<IoReactivexFunctionsConsumer> onNext_;
  id<IoReactivexFunctionsBiFunction> errorHandler_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexParallelParallelFlowable:(IoReactivexParallelParallelFlowable *)source
                           withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onNext
                         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

- (jint)parallelism;

- (void)subscribeWithOrgReactivestreamsSubscriberArray:(IOSObjectArray *)subscribers;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelDoOnNextTry)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry, source_, IoReactivexParallelParallelFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry, onNext_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry, errorHandler_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelDoOnNextTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelDoOnNextTry *self, IoReactivexParallelParallelFlowable *source, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelDoOnNextTry *new_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *source, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelDoOnNextTry *create_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *source, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber))
#define IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber_

#define RESTRICT_IoReactivexInternalFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalFuseableConditionalSubscriber 1
#include "IoReactivexInternalFuseableConditionalSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsConsumer;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber : NSObject < IoReactivexInternalFuseableConditionalSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<IoReactivexFunctionsConsumer> onNext_;
  id<IoReactivexFunctionsBiFunction> errorHandler_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onNext
                  withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber, onNext_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber, errorHandler_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber *new_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber *create_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber))
#define IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber_

#define RESTRICT_IoReactivexInternalFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalFuseableConditionalSubscriber 1
#include "IoReactivexInternalFuseableConditionalSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsConsumer;

@interface IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber : NSObject < IoReactivexInternalFuseableConditionalSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<IoReactivexInternalFuseableConditionalSubscriber> actual_;
  id<IoReactivexFunctionsConsumer> onNext_;
  id<IoReactivexFunctionsBiFunction> errorHandler_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)actual
                                        withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onNext
                                      withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber, actual_, id<IoReactivexInternalFuseableConditionalSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber, onNext_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber, errorHandler_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber *self, id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber *new_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber *create_IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsBiFunction_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelDoOnNextTry_ParallelDoOnNextConditionalSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelDoOnNextTry")
