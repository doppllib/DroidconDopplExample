//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent

#if !defined (IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent))
#define IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsBiConsumer;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeDoOnEvent : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsBiConsumer> onEvent_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
            withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)onEvent;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent, onEvent_, id<IoReactivexFunctionsBiConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsBiConsumer> onEvent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoOnEvent *new_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsBiConsumer> onEvent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoOnEvent *create_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_initWithIoReactivexMaybeSource_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsBiConsumer> onEvent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiConsumer;

@interface IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsBiConsumer> onEvent_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
              withIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)onEvent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver, onEvent_, id<IoReactivexFunctionsBiConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiConsumer> onEvent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiConsumer> onEvent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiConsumer_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiConsumer> onEvent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeDoOnEvent_DoOnEventMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeDoOnEvent")
