//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalOperatorsObservableObservableLastSingle.h"
#include "IoReactivexObservableSource.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/util/NoSuchElementException.h"

@implementation IoReactivexInternalOperatorsObservableObservableLastSingle

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                             withId:(id)defaultItem {
  IoReactivexInternalOperatorsObservableObservableLastSingle_initWithIoReactivexObservableSource_withId_(self, source, defaultItem);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer {
  [((id<IoReactivexObservableSource>) nil_chk(source_)) subscribeWithIoReactivexObserver:create_IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver_initWithIoReactivexSingleObserver_withId_(observer, defaultItem_)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(defaultItem_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSource:withId:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexObservableSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "defaultItem_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservableSource;LNSObject;", "(Lio/reactivex/ObservableSource<TT;>;TT;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "Lio/reactivex/ObservableSource<TT;>;", "TT;", "LIoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/Single<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableLastSingle = { "ObservableLastSingle", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableLastSingle;
}

@end

void IoReactivexInternalOperatorsObservableObservableLastSingle_initWithIoReactivexObservableSource_withId_(IoReactivexInternalOperatorsObservableObservableLastSingle *self, id<IoReactivexObservableSource> source, id defaultItem) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->defaultItem_, defaultItem);
}

IoReactivexInternalOperatorsObservableObservableLastSingle *new_IoReactivexInternalOperatorsObservableObservableLastSingle_initWithIoReactivexObservableSource_withId_(id<IoReactivexObservableSource> source, id defaultItem) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableLastSingle, initWithIoReactivexObservableSource_withId_, source, defaultItem)
}

IoReactivexInternalOperatorsObservableObservableLastSingle *create_IoReactivexInternalOperatorsObservableObservableLastSingle_initWithIoReactivexObservableSource_withId_(id<IoReactivexObservableSource> source, id defaultItem) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableLastSingle, initWithIoReactivexObservableSource_withId_, source, defaultItem)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableLastSingle)

@implementation IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                                           withId:(id)defaultItem {
  IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver_initWithIoReactivexSingleObserver_withId_(self, actual, defaultItem);
  return self;
}

- (void)dispose {
  [((id<IoReactivexDisposablesDisposable>) nil_chk(s_)) dispose];
  JreStrongAssign(&s_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
}

- (jboolean)isDisposed {
  return s_ == JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED);
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->s_, s)) {
    JreStrongAssign(&self->s_, s);
    [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  }
}

- (void)onNextWithId:(id)t {
  JreStrongAssign(&item_, t);
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  JreStrongAssign(&s_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  JreStrongAssign(&item_, nil);
  [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  JreStrongAssign(&s_, JreLoadEnum(IoReactivexInternalDisposablesDisposableHelper, DISPOSED));
  id v = item_;
  if (v != nil) {
    JreStrongAssign(&item_, nil);
    [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onSuccessWithId:v];
  }
  else {
    v = defaultItem_;
    if (v != nil) {
      [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onSuccessWithId:v];
    }
    else {
      [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:create_JavaUtilNoSuchElementException_init()];
    }
  }
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(defaultItem_);
  RELEASE_(s_);
  RELEASE_(item_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleObserver:withId:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[4].selector = @selector(onNextWithId:);
  methods[5].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[6].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexSingleObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "defaultItem_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "s_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "item_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleObserver;LNSObject;", "(Lio/reactivex/SingleObserver<-TT;>;TT;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/SingleObserver<-TT;>;", "TT;", "LIoReactivexInternalOperatorsObservableObservableLastSingle;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/Observer<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver = { "LastObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 7, 4, 11, -1, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver_initWithIoReactivexSingleObserver_withId_(IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver *self, id<IoReactivexSingleObserver> actual, id defaultItem) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->defaultItem_, defaultItem);
}

IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver *new_IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver_initWithIoReactivexSingleObserver_withId_(id<IoReactivexSingleObserver> actual, id defaultItem) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver, initWithIoReactivexSingleObserver_withId_, actual, defaultItem)
}

IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver *create_IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver_initWithIoReactivexSingleObserver_withId_(id<IoReactivexSingleObserver> actual, id defaultItem) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver, initWithIoReactivexSingleObserver_withId_, actual, defaultItem)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableLastSingle_LastObserver)
