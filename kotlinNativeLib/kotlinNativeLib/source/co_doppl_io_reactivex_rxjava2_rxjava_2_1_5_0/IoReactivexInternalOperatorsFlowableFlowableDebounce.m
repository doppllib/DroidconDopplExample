//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexExceptionsMissingBackpressureException.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"
#include "IoReactivexInternalOperatorsFlowableFlowableDebounce.h"
#include "IoReactivexInternalSubscriptionsSubscriptionHelper.h"
#include "IoReactivexInternalUtilBackpressureHelper.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "IoReactivexSubscribersDisposableSubscriber.h"
#include "IoReactivexSubscribersSerializedSubscriber.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsPublisher.h"
#include "OrgReactivestreamsSubscriber.h"
#include "OrgReactivestreamsSubscription.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

inline jlong IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_get_serialVersionUID();
#define IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_serialVersionUID 6725975399620862591LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsFlowableFlowableDebounce

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)debounceSelector {
  IoReactivexInternalOperatorsFlowableFlowableDebounce_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(self, source, debounceSelector);
  return self;
}

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s {
  [((IoReactivexFlowable *) nil_chk(source_)) subscribeWithIoReactivexFlowableSubscriber:create_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(create_IoReactivexSubscribersSerializedSubscriber_initWithOrgReactivestreamsSubscriber_(s), debounceSelector_)];
}

- (void)dealloc {
  RELEASE_(debounceSelector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(subscribeActualWithOrgReactivestreamsSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debounceSelector_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;LIoReactivexFunctionsFunction;", "(Lio/reactivex/Flowable<TT;>;Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;)V", "subscribeActual", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TT;>;)V", "Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDebounce = { "FlowableDebounce", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDebounce;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDebounce_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableDebounce *self, IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> debounceSelector) {
  IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream_initWithIoReactivexFlowable_(self, source);
  JreStrongAssign(&self->debounceSelector_, debounceSelector);
}

IoReactivexInternalOperatorsFlowableFlowableDebounce *new_IoReactivexInternalOperatorsFlowableFlowableDebounce_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDebounce, initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_, source, debounceSelector)
}

IoReactivexInternalOperatorsFlowableFlowableDebounce *create_IoReactivexInternalOperatorsFlowableFlowableDebounce_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDebounce, initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_, source, debounceSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDebounce)

@implementation IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)debounceSelector {
  IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(self, actual, debounceSelector);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithOrgReactivestreamsSubscription_withOrgReactivestreamsSubscription_(self->s_, s)) {
    JreStrongAssign(&self->s_, s);
    [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onSubscribeWithOrgReactivestreamsSubscription:self];
    [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
  }
}

- (void)onNextWithId:(id)t {
  if (done_) {
    return;
  }
  jlong idx = JreLoadVolatileLong(&index_) + 1;
  JreAssignVolatileLong(&index_, idx);
  id<IoReactivexDisposablesDisposable> d = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(debouncer_)) get];
  if (d != nil) {
    [d dispose];
  }
  id<OrgReactivestreamsPublisher> p;
  @try {
    p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(debounceSelector_)) applyWithId:t], @"The publisher supplied is null");
  }
  @catch (JavaLangThrowable *e) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(e);
    [self cancel];
    [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
    return;
  }
  IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *dis = create_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_(self, idx, t);
  if ([debouncer_ compareAndSetWithId:d withId:dis]) {
    [((id<OrgReactivestreamsPublisher>) nil_chk(p)) subscribeWithOrgReactivestreamsSubscriber:dis];
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(debouncer_);
  [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  if (done_) {
    return;
  }
  done_ = true;
  id<IoReactivexDisposablesDisposable> d = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(debouncer_)) get];
  if (!IoReactivexInternalDisposablesDisposableHelper_isDisposedWithIoReactivexDisposablesDisposable_(d)) {
    IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *dis = (IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *) cast_chk(d, [IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber class]);
    [((IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *) nil_chk(dis)) emit];
    IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(debouncer_);
    [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onComplete];
  }
}

- (void)requestWithLong:(jlong)n {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithLong_(n)) {
    IoReactivexInternalUtilBackpressureHelper_addWithJavaUtilConcurrentAtomicAtomicLong_withLong_(self, n);
  }
}

- (void)cancel {
  [((id<OrgReactivestreamsSubscription>) nil_chk(s_)) cancel];
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(debouncer_);
}

- (void)emitWithLong:(jlong)idx
              withId:(id)value {
  if (idx == JreLoadVolatileLong(&index_)) {
    jlong r = [self get];
    if (r != 0LL) {
      [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onNextWithId:value];
      IoReactivexInternalUtilBackpressureHelper_producedWithJavaUtilConcurrentAtomicAtomicLong_withLong_(self, 1);
    }
    else {
      [self cancel];
      [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:create_IoReactivexExceptionsMissingBackpressureException_initWithNSString_(@"Could not deliver value due to lack of requests")];
    }
  }
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(debounceSelector_);
  RELEASE_(s_);
  RELEASE_(debouncer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 11, 12, -1, 13, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  methods[5].selector = @selector(requestWithLong:);
  methods[6].selector = @selector(cancel);
  methods[7].selector = @selector(emitWithLong:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 14, -1 },
    { "debounceSelector_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 15, -1 },
    { "s_", "LOrgReactivestreamsSubscription;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "debouncer_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 16, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;LIoReactivexFunctionsFunction;", "(Lorg/reactivestreams/Subscriber<-TT;>;Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;)V", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "request", "J", "emit", "JLNSObject;", "(JTT;)V", "Lorg/reactivestreams/Subscriber<-TT;>;", "Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;", "Ljava/util/concurrent/atomic/AtomicReference<Lio/reactivex/disposables/Disposable;>;", "LIoReactivexInternalOperatorsFlowableFlowableDebounce;", "LIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/FlowableSubscriber<TT;>;Lorg/reactivestreams/Subscription;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber = { "DebounceSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 8, 7, 17, 18, -1, 19, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> debounceSelector) {
  JavaUtilConcurrentAtomicAtomicLong_init(self);
  JreStrongAssignAndConsume(&self->debouncer_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->debounceSelector_, debounceSelector);
}

IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_, actual, debounceSelector)
}

IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> debounceSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_, actual, debounceSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber)

@implementation IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber:(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *)parent
                                                                                       withLong:(jlong)index
                                                                                         withId:(id)value {
  IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_(self, parent, index, value);
  return self;
}

- (void)onNextWithId:(id)t {
  if (done_) {
    return;
  }
  done_ = true;
  [self cancel];
  [self emit];
}

- (void)emit {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *) nil_chk(parent_)) emitWithLong:index_ withId:value_];
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  if (done_) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    return;
  }
  done_ = true;
  [((IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *) nil_chk(parent_)) onErrorWithJavaLangThrowable:t];
}

- (void)onComplete {
  if (done_) {
    return;
  }
  done_ = true;
  [self emit];
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(value_);
  RELEASE_(once_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber:withLong:withId:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(emit);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber;JLNSObject;", "(Lio/reactivex/internal/operators/flowable/FlowableDebounce$DebounceSubscriber<TT;TU;>;JTT;)V", "onNext", "LNSObject;", "(TU;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/flowable/FlowableDebounce$DebounceSubscriber<TT;TU;>;", "TT;", "LIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/subscribers/DisposableSubscriber<TU;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber = { "DebounceInnerSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 5, 5, 9, -1, -1, 10, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *self, IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *parent, jlong index, id value) {
  IoReactivexSubscribersDisposableSubscriber_init(self);
  JreStrongAssignAndConsume(&self->once_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
  JreStrongAssign(&self->parent_, parent);
  self->index_ = index;
  JreStrongAssign(&self->value_, value);
}

IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *parent, jlong index, id value) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_, parent, index, value)
}

IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber *parent, jlong index, id value) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_withLong_withId_, parent, index, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDebounce_DebounceSubscriber_DebounceInnerSubscriber)
