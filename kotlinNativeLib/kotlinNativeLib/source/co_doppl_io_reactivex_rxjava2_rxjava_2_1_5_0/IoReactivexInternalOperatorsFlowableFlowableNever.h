//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableNever")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableNever
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableNever 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableNever 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableNever

#if !defined (IoReactivexInternalOperatorsFlowableFlowableNever_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableNever || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableNever))
#define IoReactivexInternalOperatorsFlowableFlowableNever_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableNever : IoReactivexFlowable

+ (IoReactivexFlowable *)INSTANCE;

#pragma mark Public

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableNever)

inline IoReactivexFlowable *IoReactivexInternalOperatorsFlowableFlowableNever_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IoReactivexFlowable *IoReactivexInternalOperatorsFlowableFlowableNever_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalOperatorsFlowableFlowableNever, INSTANCE, IoReactivexFlowable *)

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableNever)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableNever")
