//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesCompositeDisposable.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsBiFunction.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream.h"
#include "IoReactivexInternalOperatorsObservableObservableGroupJoin.h"
#include "IoReactivexInternalOperatorsObservableObservableJoin.h"
#include "IoReactivexInternalQueueSpscLinkedArrayQueue.h"
#include "IoReactivexInternalUtilExceptionHelper.h"
#include "IoReactivexObservable.h"
#include "IoReactivexObservableSource.h"
#include "IoReactivexObserver.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/util/Collection.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

inline jlong IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_get_serialVersionUID();
#define IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_serialVersionUID -6071216598687999801LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsObservableObservableJoin

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)leftEnd
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)rightEnd
                 withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector {
  IoReactivexInternalOperatorsObservableObservableJoin_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(self, source, other, leftEnd, rightEnd, resultSelector);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s {
  IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable *parent = create_IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(s, leftEnd_, rightEnd_, resultSelector_);
  [((id<IoReactivexObserver>) nil_chk(s)) onSubscribeWithIoReactivexDisposablesDisposable:parent];
  IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver *left = create_IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver_initWithIoReactivexInternalOperatorsObservableObservableGroupJoin_JoinSupport_withBoolean_(parent, true);
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(parent->disposables_)) addWithIoReactivexDisposablesDisposable:left];
  IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver *right = create_IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver_initWithIoReactivexInternalOperatorsObservableObservableGroupJoin_JoinSupport_withBoolean_(parent, false);
  [parent->disposables_ addWithIoReactivexDisposablesDisposable:right];
  [((id<IoReactivexObservableSource>) nil_chk(source_)) subscribeWithIoReactivexObserver:left];
  [((id<IoReactivexObservableSource>) nil_chk(other_)) subscribeWithIoReactivexObserver:right];
}

- (void)dealloc {
  RELEASE_(other_);
  RELEASE_(leftEnd_);
  RELEASE_(rightEnd_);
  RELEASE_(resultSelector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSource:withIoReactivexObservableSource:withIoReactivexFunctionsFunction:withIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "other_", "LIoReactivexObservableSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "leftEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
    { "rightEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "resultSelector_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservableSource;LIoReactivexObservableSource;LIoReactivexFunctionsFunction;LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "(Lio/reactivex/ObservableSource<TTLeft;>;Lio/reactivex/ObservableSource<+TTRight;>;Lio/reactivex/functions/Function<-TTLeft;+Lio/reactivex/ObservableSource<TTLeftEnd;>;>;Lio/reactivex/functions/Function<-TTRight;+Lio/reactivex/ObservableSource<TTRightEnd;>;>;Lio/reactivex/functions/BiFunction<-TTLeft;-TTRight;+TR;>;)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TR;>;)V", "Lio/reactivex/ObservableSource<+TTRight;>;", "Lio/reactivex/functions/Function<-TTLeft;+Lio/reactivex/ObservableSource<TTLeftEnd;>;>;", "Lio/reactivex/functions/Function<-TTRight;+Lio/reactivex/ObservableSource<TTRightEnd;>;>;", "Lio/reactivex/functions/BiFunction<-TTLeft;-TTRight;+TR;>;", "LIoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable;", "<TLeft:Ljava/lang/Object;TRight:Ljava/lang/Object;TLeftEnd:Ljava/lang/Object;TRightEnd:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream<TTLeft;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableJoin = { "ObservableJoin", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 4, -1, 9, -1, 10, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableJoin;
}

@end

void IoReactivexInternalOperatorsObservableObservableJoin_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableJoin *self, id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream_initWithIoReactivexObservableSource_(self, source);
  JreStrongAssign(&self->other_, other);
  JreStrongAssign(&self->leftEnd_, leftEnd);
  JreStrongAssign(&self->rightEnd_, rightEnd);
  JreStrongAssign(&self->resultSelector_, resultSelector);
}

IoReactivexInternalOperatorsObservableObservableJoin *new_IoReactivexInternalOperatorsObservableObservableJoin_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableJoin, initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, source, other, leftEnd, rightEnd, resultSelector)
}

IoReactivexInternalOperatorsObservableObservableJoin *create_IoReactivexInternalOperatorsObservableObservableJoin_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableJoin, initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, source, other, leftEnd, rightEnd, resultSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableJoin)

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable)

JavaLangInteger *IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_VALUE;
JavaLangInteger *IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_VALUE;
JavaLangInteger *IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_CLOSE;
JavaLangInteger *IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_CLOSE;

@implementation IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable

+ (JavaLangInteger *)LEFT_VALUE {
  return IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_VALUE;
}

+ (JavaLangInteger *)RIGHT_VALUE {
  return IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_VALUE;
}

+ (JavaLangInteger *)LEFT_CLOSE {
  return IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_CLOSE;
}

+ (JavaLangInteger *)RIGHT_CLOSE {
  return IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_CLOSE;
}

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)leftEnd
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)rightEnd
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector {
  IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(self, actual, leftEnd, rightEnd, resultSelector);
  return self;
}

- (void)dispose {
  if (!JreLoadVolatileBoolean(&cancelled_)) {
    JreAssignVolatileBoolean(&cancelled_, true);
    [self cancelAll];
    if ([self getAndIncrement] == 0) {
      [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) clear];
    }
  }
}

- (jboolean)isDisposed {
  return JreLoadVolatileBoolean(&cancelled_);
}

- (void)cancelAll {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) dispose];
}

- (void)errorAllWithIoReactivexObserver:(id<IoReactivexObserver>)a {
  JavaLangThrowable *ex = IoReactivexInternalUtilExceptionHelper_terminateWithJavaUtilConcurrentAtomicAtomicReference_(error_);
  [((id<JavaUtilMap>) nil_chk(lefts_)) clear];
  [((id<JavaUtilMap>) nil_chk(rights_)) clear];
  [((id<IoReactivexObserver>) nil_chk(a)) onErrorWithJavaLangThrowable:ex];
}

- (void)failWithJavaLangThrowable:(JavaLangThrowable *)exc
          withIoReactivexObserver:(id<IoReactivexObserver>)a
withIoReactivexInternalQueueSpscLinkedArrayQueue:(IoReactivexInternalQueueSpscLinkedArrayQueue *)q {
  IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(exc);
  IoReactivexInternalUtilExceptionHelper_addThrowableWithJavaUtilConcurrentAtomicAtomicReference_withJavaLangThrowable_(error_, exc);
  [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) clear];
  [self cancelAll];
  [self errorAllWithIoReactivexObserver:a];
}

- (void)drain {
  if ([self getAndIncrement] != 0) {
    return;
  }
  jint missed = 1;
  IoReactivexInternalQueueSpscLinkedArrayQueue *q = queue_;
  id<IoReactivexObserver> a = actual_;
  for (; ; ) {
    for (; ; ) {
      if (JreLoadVolatileBoolean(&cancelled_)) {
        [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) clear];
        return;
      }
      JavaLangThrowable *ex = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(error_)) get];
      if (ex != nil) {
        [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) clear];
        [self cancelAll];
        [self errorAllWithIoReactivexObserver:a];
        return;
      }
      jboolean d = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(active_)) get] == 0;
      JavaLangInteger *mode = (JavaLangInteger *) cast_chk([((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) poll], [JavaLangInteger class]);
      jboolean empty = mode == nil;
      if (d && empty) {
        [((id<JavaUtilMap>) nil_chk(lefts_)) clear];
        [((id<JavaUtilMap>) nil_chk(rights_)) clear];
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) dispose];
        [((id<IoReactivexObserver>) nil_chk(a)) onComplete];
        return;
      }
      if (empty) {
        break;
      }
      id val = [q poll];
      if (mode == IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_VALUE) {
        id left = val;
        jint idx = leftIndex_++;
        [((id<JavaUtilMap>) nil_chk(lefts_)) putWithId:JavaLangInteger_valueOfWithInt_(idx) withId:left];
        id<IoReactivexObservableSource> p;
        @try {
          p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(leftEnd_)) applyWithId:left], @"The leftEnd returned a null ObservableSource");
        }
        @catch (JavaLangThrowable *exc) {
          [self failWithJavaLangThrowable:exc withIoReactivexObserver:a withIoReactivexInternalQueueSpscLinkedArrayQueue:q];
          return;
        }
        IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *end = create_IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver_initWithIoReactivexInternalOperatorsObservableObservableGroupJoin_JoinSupport_withBoolean_withInt_(self, true, idx);
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) addWithIoReactivexDisposablesDisposable:end];
        [((id<IoReactivexObservableSource>) nil_chk(p)) subscribeWithIoReactivexObserver:end];
        ex = [error_ get];
        if (ex != nil) {
          [q clear];
          [self cancelAll];
          [self errorAllWithIoReactivexObserver:a];
          return;
        }
        for (id __strong right in nil_chk([((id<JavaUtilMap>) nil_chk(rights_)) values])) {
          id w;
          @try {
            w = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsBiFunction>) nil_chk(resultSelector_)) applyWithId:left withId:right], @"The resultSelector returned a null value");
          }
          @catch (JavaLangThrowable *exc) {
            [self failWithJavaLangThrowable:exc withIoReactivexObserver:a withIoReactivexInternalQueueSpscLinkedArrayQueue:q];
            return;
          }
          [((id<IoReactivexObserver>) nil_chk(a)) onNextWithId:w];
        }
      }
      else if (mode == IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_VALUE) {
        id right = val;
        jint idx = rightIndex_++;
        [((id<JavaUtilMap>) nil_chk(rights_)) putWithId:JavaLangInteger_valueOfWithInt_(idx) withId:right];
        id<IoReactivexObservableSource> p;
        @try {
          p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(rightEnd_)) applyWithId:right], @"The rightEnd returned a null ObservableSource");
        }
        @catch (JavaLangThrowable *exc) {
          [self failWithJavaLangThrowable:exc withIoReactivexObserver:a withIoReactivexInternalQueueSpscLinkedArrayQueue:q];
          return;
        }
        IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *end = create_IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver_initWithIoReactivexInternalOperatorsObservableObservableGroupJoin_JoinSupport_withBoolean_withInt_(self, false, idx);
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) addWithIoReactivexDisposablesDisposable:end];
        [((id<IoReactivexObservableSource>) nil_chk(p)) subscribeWithIoReactivexObserver:end];
        ex = [error_ get];
        if (ex != nil) {
          [q clear];
          [self cancelAll];
          [self errorAllWithIoReactivexObserver:a];
          return;
        }
        for (id __strong left in nil_chk([((id<JavaUtilMap>) nil_chk(lefts_)) values])) {
          id w;
          @try {
            w = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsBiFunction>) nil_chk(resultSelector_)) applyWithId:left withId:right], @"The resultSelector returned a null value");
          }
          @catch (JavaLangThrowable *exc) {
            [self failWithJavaLangThrowable:exc withIoReactivexObserver:a withIoReactivexInternalQueueSpscLinkedArrayQueue:q];
            return;
          }
          [((id<IoReactivexObserver>) nil_chk(a)) onNextWithId:w];
        }
      }
      else if (mode == IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_CLOSE) {
        IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *end = (IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *) cast_chk(val, [IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver class]);
        [((id<JavaUtilMap>) nil_chk(lefts_)) removeWithId:JavaLangInteger_valueOfWithInt_(((IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *) nil_chk(end))->index_)];
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) removeWithIoReactivexDisposablesDisposable:end];
      }
      else {
        IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *end = (IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *) cast_chk(val, [IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver class]);
        [((id<JavaUtilMap>) nil_chk(rights_)) removeWithId:JavaLangInteger_valueOfWithInt_(((IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *) nil_chk(end))->index_)];
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) removeWithIoReactivexDisposablesDisposable:end];
      }
    }
    missed = [self addAndGetWithInt:-missed];
    if (missed == 0) {
      break;
    }
  }
}

- (void)innerErrorWithJavaLangThrowable:(JavaLangThrowable *)ex {
  if (IoReactivexInternalUtilExceptionHelper_addThrowableWithJavaUtilConcurrentAtomicAtomicReference_withJavaLangThrowable_(error_, ex)) {
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(active_)) decrementAndGet];
    [self drain];
  }
  else {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(ex);
  }
}

- (void)innerCompleteWithIoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver:(IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver *)sender {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) delete__WithIoReactivexDisposablesDisposable:sender];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(active_)) decrementAndGet];
  [self drain];
}

- (void)innerValueWithBoolean:(jboolean)isLeft
                       withId:(id)o {
  @synchronized(self) {
    [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) offerWithId:isLeft ? IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_VALUE : IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_VALUE withId:o];
  }
  [self drain];
}

- (void)innerCloseWithBoolean:(jboolean)isLeft
withIoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver:(IoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver *)index {
  @synchronized(self) {
    [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) offerWithId:isLeft ? IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_CLOSE : IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_CLOSE withId:index];
  }
  [self drain];
}

- (void)innerCloseErrorWithJavaLangThrowable:(JavaLangThrowable *)ex {
  if (IoReactivexInternalUtilExceptionHelper_addThrowableWithJavaUtilConcurrentAtomicAtomicReference_withJavaLangThrowable_(error_, ex)) {
    [self drain];
  }
  else {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(ex);
  }
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(queue_);
  RELEASE_(disposables_);
  RELEASE_(lefts_);
  RELEASE_(rights_);
  RELEASE_(error_);
  RELEASE_(leftEnd_);
  RELEASE_(rightEnd_);
  RELEASE_(resultSelector_);
  RELEASE_(active_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:withIoReactivexFunctionsFunction:withIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(cancelAll);
  methods[4].selector = @selector(errorAllWithIoReactivexObserver:);
  methods[5].selector = @selector(failWithJavaLangThrowable:withIoReactivexObserver:withIoReactivexInternalQueueSpscLinkedArrayQueue:);
  methods[6].selector = @selector(drain);
  methods[7].selector = @selector(innerErrorWithJavaLangThrowable:);
  methods[8].selector = @selector(innerCompleteWithIoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver:);
  methods[9].selector = @selector(innerValueWithBoolean:withId:);
  methods[10].selector = @selector(innerCloseWithBoolean:withIoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver:);
  methods[11].selector = @selector(innerCloseErrorWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 17, -1 },
    { "queue_", "LIoReactivexInternalQueueSpscLinkedArrayQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "disposables_", "LIoReactivexDisposablesCompositeDisposable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "lefts_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 19, -1 },
    { "rights_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 20, -1 },
    { "error_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 21, -1 },
    { "leftEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 22, -1 },
    { "rightEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 23, -1 },
    { "resultSelector_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 24, -1 },
    { "active_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "leftIndex_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "rightIndex_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cancelled_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "LEFT_VALUE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 25, -1, -1 },
    { "RIGHT_VALUE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 26, -1, -1 },
    { "LEFT_CLOSE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 27, -1, -1 },
    { "RIGHT_CLOSE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 28, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;LIoReactivexFunctionsFunction;LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "(Lio/reactivex/Observer<-TR;>;Lio/reactivex/functions/Function<-TTLeft;+Lio/reactivex/ObservableSource<TTLeftEnd;>;>;Lio/reactivex/functions/Function<-TTRight;+Lio/reactivex/ObservableSource<TTRightEnd;>;>;Lio/reactivex/functions/BiFunction<-TTLeft;-TTRight;+TR;>;)V", "errorAll", "LIoReactivexObserver;", "(Lio/reactivex/Observer<*>;)V", "fail", "LJavaLangThrowable;LIoReactivexObserver;LIoReactivexInternalQueueSpscLinkedArrayQueue;", "(Ljava/lang/Throwable;Lio/reactivex/Observer<*>;Lio/reactivex/internal/queue/SpscLinkedArrayQueue<*>;)V", "innerError", "LJavaLangThrowable;", "innerComplete", "LIoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightObserver;", "innerValue", "ZLNSObject;", "innerClose", "ZLIoReactivexInternalOperatorsObservableObservableGroupJoin_LeftRightEndObserver;", "innerCloseError", "Lio/reactivex/Observer<-TR;>;", "Lio/reactivex/internal/queue/SpscLinkedArrayQueue<Ljava/lang/Object;>;", "Ljava/util/Map<Ljava/lang/Integer;TTLeft;>;", "Ljava/util/Map<Ljava/lang/Integer;TTRight;>;", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "Lio/reactivex/functions/Function<-TTLeft;+Lio/reactivex/ObservableSource<TTLeftEnd;>;>;", "Lio/reactivex/functions/Function<-TTRight;+Lio/reactivex/ObservableSource<TTRightEnd;>;>;", "Lio/reactivex/functions/BiFunction<-TTLeft;-TTRight;+TR;>;", &IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_VALUE, &IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_VALUE, &IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_CLOSE, &IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_CLOSE, "LIoReactivexInternalOperatorsObservableObservableJoin;", "<TLeft:Ljava/lang/Object;TRight:Ljava/lang/Object;TLeftEnd:Ljava/lang/Object;TRightEnd:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/operators/observable/ObservableGroupJoin$JoinSupport;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable = { "JoinDisposable", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 12, 18, 29, -1, -1, 30, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable class]) {
    JreStrongAssign(&IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_VALUE, JavaLangInteger_valueOfWithInt_(1));
    JreStrongAssign(&IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_VALUE, JavaLangInteger_valueOfWithInt_(2));
    JreStrongAssign(&IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_LEFT_CLOSE, JavaLangInteger_valueOfWithInt_(3));
    JreStrongAssign(&IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_RIGHT_CLOSE, JavaLangInteger_valueOfWithInt_(4));
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable)
  }
}

@end

void IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  JavaUtilConcurrentAtomicAtomicInteger_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssignAndConsume(&self->disposables_, new_IoReactivexDisposablesCompositeDisposable_init());
  JreStrongAssignAndConsume(&self->queue_, new_IoReactivexInternalQueueSpscLinkedArrayQueue_initWithInt_(IoReactivexObservable_bufferSize()));
  JreStrongAssignAndConsume(&self->lefts_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->rights_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->error_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssign(&self->leftEnd_, leftEnd);
  JreStrongAssign(&self->rightEnd_, rightEnd);
  JreStrongAssign(&self->resultSelector_, resultSelector);
  JreStrongAssignAndConsume(&self->active_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(2));
}

IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable *new_IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, actual, leftEnd, rightEnd, resultSelector)
}

IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable *create_IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, actual, leftEnd, rightEnd, resultSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableJoin_JoinDisposable)
