//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableRangeLong
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableRangeLong
#ifdef INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription
#define INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription 1
#endif
#ifdef INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription
#define INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRangeLong_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong))
#define IoReactivexInternalOperatorsFlowableFlowableRangeLong_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class JavaLangLong;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRangeLong : IoReactivexFlowable {
 @public
  jlong start_;
  jlong end_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)start
                    withLong:(jlong)count;

- (JavaLangLong *)blockingFirst;

- (JavaLangLong *)blockingFirstWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingLast;

- (JavaLangLong *)blockingLastWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingSingle;

- (JavaLangLong *)blockingSingleWithId:(JavaLangLong *)arg0;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRangeLong)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRangeLong_initWithLong_withLong_(IoReactivexInternalOperatorsFlowableFlowableRangeLong *self, jlong start, jlong count);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRangeLong *new_IoReactivexInternalOperatorsFlowableFlowableRangeLong_initWithLong_withLong_(jlong start, jlong count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRangeLong *create_IoReactivexInternalOperatorsFlowableFlowableRangeLong_initWithLong_withLong_(jlong start, jlong count);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRangeLong)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription))
#define IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription_

#define RESTRICT_IoReactivexInternalSubscriptionsBasicQueueSubscription 1
#define INCLUDE_IoReactivexInternalSubscriptionsBasicQueueSubscription 1
#include "IoReactivexInternalSubscriptionsBasicQueueSubscription.h"

@class JavaLangLong;

@interface IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription : IoReactivexInternalSubscriptionsBasicQueueSubscription {
 @public
  jlong end_;
  jlong index_;
  volatile_jboolean cancelled_;
}

#pragma mark Public

- (void)cancel;

- (void)clear;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (jboolean)isEqual:(id)obj;

- (JavaLangLong * __nullable)poll;

- (void)requestWithLong:(jlong)n;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)index
                    withLong:(jlong)end;

- (void)fastPath;

- (void)slowPathWithLong:(jlong)r;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription_initWithLong_withLong_(IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription *self, jlong index, jlong end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription))
#define IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription_

@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription : IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                                            withLong:(jlong)index
                                            withLong:(jlong)end;

- (void)fastPath;

- (void)slowPathWithLong:(jlong)r;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithLong:(jlong)arg0
                    withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription, actual_, id<OrgReactivestreamsSubscriber>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription_initWithOrgReactivestreamsSubscriber_withLong_withLong_(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription *self, id<OrgReactivestreamsSubscriber> actual, jlong index, jlong end);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription *new_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription_initWithOrgReactivestreamsSubscriber_withLong_withLong_(id<OrgReactivestreamsSubscriber> actual, jlong index, jlong end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription *create_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription_initWithOrgReactivestreamsSubscriber_withLong_withLong_(id<OrgReactivestreamsSubscriber> actual, jlong index, jlong end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeSubscription)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription))
#define IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription_

@protocol IoReactivexInternalFuseableConditionalSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription : IoReactivexInternalOperatorsFlowableFlowableRangeLong_BaseRangeSubscription {
 @public
  id<IoReactivexInternalFuseableConditionalSubscriber> actual_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)actual
                                                                withLong:(jlong)index
                                                                withLong:(jlong)end;

- (void)fastPath;

- (void)slowPathWithLong:(jlong)r;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithLong:(jlong)arg0
                    withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription, actual_, id<IoReactivexInternalFuseableConditionalSubscriber>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription_initWithIoReactivexInternalFuseableConditionalSubscriber_withLong_withLong_(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription *self, id<IoReactivexInternalFuseableConditionalSubscriber> actual, jlong index, jlong end);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription *new_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription_initWithIoReactivexInternalFuseableConditionalSubscriber_withLong_withLong_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, jlong index, jlong end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription *create_IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription_initWithIoReactivexInternalFuseableConditionalSubscriber_withLong_withLong_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, jlong index, jlong end);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRangeLong_RangeConditionalSubscription)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRangeLong")
