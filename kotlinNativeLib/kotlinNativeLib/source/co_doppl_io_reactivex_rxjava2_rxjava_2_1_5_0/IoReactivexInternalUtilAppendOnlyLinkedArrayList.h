//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalUtilAppendOnlyLinkedArrayList")
#ifdef RESTRICT_IoReactivexInternalUtilAppendOnlyLinkedArrayList
#define INCLUDE_ALL_IoReactivexInternalUtilAppendOnlyLinkedArrayList 0
#else
#define INCLUDE_ALL_IoReactivexInternalUtilAppendOnlyLinkedArrayList 1
#endif
#undef RESTRICT_IoReactivexInternalUtilAppendOnlyLinkedArrayList

#if !defined (IoReactivexInternalUtilAppendOnlyLinkedArrayList_) && (INCLUDE_ALL_IoReactivexInternalUtilAppendOnlyLinkedArrayList || defined(INCLUDE_IoReactivexInternalUtilAppendOnlyLinkedArrayList))
#define IoReactivexInternalUtilAppendOnlyLinkedArrayList_

@class IOSObjectArray;
@protocol IoReactivexFunctionsBiPredicate;
@protocol IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate;
@protocol IoReactivexObserver;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalUtilAppendOnlyLinkedArrayList : NSObject {
 @public
  jint capacity_;
  IOSObjectArray *head_;
  IOSObjectArray *tail_;
  jint offset_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

- (jboolean)acceptWithIoReactivexObserver:(id<IoReactivexObserver>)observer;

- (jboolean)acceptWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber;

- (void)addWithId:(id)value;

- (void)forEachWhileWithIoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate:(id<IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate>)consumer;

- (void)forEachWhileWithId:(id)state
withIoReactivexFunctionsBiPredicate:(id<IoReactivexFunctionsBiPredicate>)consumer;

- (void)setFirstWithId:(id)value;

#pragma mark Protected

- (void)java_finalize;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilAppendOnlyLinkedArrayList)

J2OBJC_FIELD_SETTER(IoReactivexInternalUtilAppendOnlyLinkedArrayList, head_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalUtilAppendOnlyLinkedArrayList, tail_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalUtilAppendOnlyLinkedArrayList_initWithInt_(IoReactivexInternalUtilAppendOnlyLinkedArrayList *self, jint capacity);

FOUNDATION_EXPORT IoReactivexInternalUtilAppendOnlyLinkedArrayList *new_IoReactivexInternalUtilAppendOnlyLinkedArrayList_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalUtilAppendOnlyLinkedArrayList *create_IoReactivexInternalUtilAppendOnlyLinkedArrayList_initWithInt_(jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilAppendOnlyLinkedArrayList)

#endif

#if !defined (IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate_) && (INCLUDE_ALL_IoReactivexInternalUtilAppendOnlyLinkedArrayList || defined(INCLUDE_IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate))
#define IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate_

#define RESTRICT_IoReactivexFunctionsPredicate 1
#define INCLUDE_IoReactivexFunctionsPredicate 1
#include "IoReactivexFunctionsPredicate.h"

@protocol IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate < IoReactivexFunctionsPredicate, JavaObject >

- (jboolean)testWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate)

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalUtilAppendOnlyLinkedArrayList_NonThrowingPredicate)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalUtilAppendOnlyLinkedArrayList")
