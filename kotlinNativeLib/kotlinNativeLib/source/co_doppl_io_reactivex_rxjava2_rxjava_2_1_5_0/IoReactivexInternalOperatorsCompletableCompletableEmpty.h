//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableEmpty")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableEmpty
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableEmpty 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableEmpty 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableEmpty

#if !defined (IoReactivexInternalOperatorsCompletableCompletableEmpty_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableEmpty || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableEmpty))
#define IoReactivexInternalOperatorsCompletableCompletableEmpty_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

@protocol IoReactivexCompletableObserver;

@interface IoReactivexInternalOperatorsCompletableCompletableEmpty : IoReactivexCompletable

+ (IoReactivexCompletable *)INSTANCE;

#pragma mark Public

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableEmpty)

inline IoReactivexCompletable *IoReactivexInternalOperatorsCompletableCompletableEmpty_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IoReactivexCompletable *IoReactivexInternalOperatorsCompletableCompletableEmpty_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalOperatorsCompletableCompletableEmpty, INSTANCE, IoReactivexCompletable *)

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableEmpty)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableEmpty")
