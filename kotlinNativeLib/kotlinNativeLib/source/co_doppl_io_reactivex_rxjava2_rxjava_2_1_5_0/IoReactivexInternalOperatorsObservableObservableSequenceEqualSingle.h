//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle

#if !defined (IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle))
#define IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToObservable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToObservable 1
#include "IoReactivexInternalFuseableFuseToObservable.h"

@class IoReactivexObservable;
@class JavaLangBoolean;
@protocol IoReactivexFunctionsBiPredicate;
@protocol IoReactivexObservableSource;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle : IoReactivexSingle < IoReactivexInternalFuseableFuseToObservable > {
 @public
  id<IoReactivexObservableSource> first_;
  id<IoReactivexObservableSource> second_;
  id<IoReactivexFunctionsBiPredicate> comparer_;
  jint bufferSize_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)first
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)second
                withIoReactivexFunctionsBiPredicate:(id<IoReactivexFunctionsBiPredicate>)comparer
                                            withInt:(jint)bufferSize;

- (JavaLangBoolean *)blockingGet;

- (IoReactivexObservable *)fuseToObservable;

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle, first_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle, second_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle, comparer_, id<IoReactivexFunctionsBiPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsBiPredicate_withInt_(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle *self, id<IoReactivexObservableSource> first, id<IoReactivexObservableSource> second, id<IoReactivexFunctionsBiPredicate> comparer, jint bufferSize);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle *new_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsBiPredicate_withInt_(id<IoReactivexObservableSource> first, id<IoReactivexObservableSource> second, id<IoReactivexFunctionsBiPredicate> comparer, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle *create_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_initWithIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsBiPredicate_withInt_(id<IoReactivexObservableSource> first, id<IoReactivexObservableSource> second, id<IoReactivexFunctionsBiPredicate> comparer, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator))
#define IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IOSObjectArray;
@class IoReactivexInternalDisposablesArrayCompositeDisposable;
@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@protocol IoReactivexFunctionsBiPredicate;
@protocol IoReactivexObservableSource;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexFunctionsBiPredicate> comparer_;
  IoReactivexInternalDisposablesArrayCompositeDisposable *resources_;
  id<IoReactivexObservableSource> first_;
  id<IoReactivexObservableSource> second_;
  IOSObjectArray *observers_;
  volatile_jboolean cancelled_;
  id v1_;
  id v2_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                                          withInt:(jint)bufferSize
                  withIoReactivexObservableSource:(id<IoReactivexObservableSource>)first
                  withIoReactivexObservableSource:(id<IoReactivexObservableSource>)second
              withIoReactivexFunctionsBiPredicate:(id<IoReactivexFunctionsBiPredicate>)comparer;

- (void)cancelWithIoReactivexInternalQueueSpscLinkedArrayQueue:(IoReactivexInternalQueueSpscLinkedArrayQueue *)q1
              withIoReactivexInternalQueueSpscLinkedArrayQueue:(IoReactivexInternalQueueSpscLinkedArrayQueue *)q2;

- (void)drain;

- (jboolean)setDisposableWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s
                                                      withInt:(jint)index;

- (void)subscribe;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, comparer_, id<IoReactivexFunctionsBiPredicate>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, resources_, IoReactivexInternalDisposablesArrayCompositeDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, first_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, second_, id<IoReactivexObservableSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, observers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, v1_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator, v2_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsBiPredicate_(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *self, id<IoReactivexSingleObserver> actual, jint bufferSize, id<IoReactivexObservableSource> first, id<IoReactivexObservableSource> second, id<IoReactivexFunctionsBiPredicate> comparer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *new_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsBiPredicate_(id<IoReactivexSingleObserver> actual, jint bufferSize, id<IoReactivexObservableSource> first, id<IoReactivexObservableSource> second, id<IoReactivexFunctionsBiPredicate> comparer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *create_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexObservableSource_withIoReactivexObservableSource_withIoReactivexFunctionsBiPredicate_(id<IoReactivexSingleObserver> actual, jint bufferSize, id<IoReactivexObservableSource> first, id<IoReactivexObservableSource> second, id<IoReactivexFunctionsBiPredicate> comparer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver))
#define IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "IoReactivexObserver.h"

@class IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator;
@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver : NSObject < IoReactivexObserver > {
 @public
  IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *parent_;
  IoReactivexInternalQueueSpscLinkedArrayQueue *queue_;
  jint index_;
  volatile_jboolean done_;
  JavaLangThrowable *error_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator:(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *)parent
                                                                                                     withInt:(jint)index
                                                                                                     withInt:(jint)bufferSize;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver, parent_, IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver, queue_, IoReactivexInternalQueueSpscLinkedArrayQueue *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver, error_, JavaLangThrowable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver_initWithIoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_withInt_withInt_(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver *self, IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *parent, jint index, jint bufferSize);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver *new_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver_initWithIoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_withInt_withInt_(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *parent, jint index, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver *create_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver_initWithIoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator_withInt_withInt_(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualCoordinator *parent, jint index, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle_EqualObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSequenceEqualSingle")
