//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalDisposablesDisposableHelper.h"
#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsObservableObservableCombineLatest.h"
#include "IoReactivexInternalQueueSpscLinkedArrayQueue.h"
#include "IoReactivexInternalUtilAtomicThrowable.h"
#include "IoReactivexObservable.h"
#include "IoReactivexObservableSource.h"
#include "IoReactivexObserver.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_get_serialVersionUID();
#define IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_serialVersionUID 8567835998786448817LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator, serialVersionUID, jlong)

inline jlong IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_get_serialVersionUID();
#define IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_serialVersionUID -4823716997131257941LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsObservableObservableCombineLatest

- (instancetype)initWithIoReactivexObservableSourceArray:(IOSObjectArray *)sources
                                    withJavaLangIterable:(id<JavaLangIterable>)sourcesIterable
                        withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)combiner
                                                 withInt:(jint)bufferSize
                                             withBoolean:(jboolean)delayError {
  IoReactivexInternalOperatorsObservableObservableCombineLatest_initWithIoReactivexObservableSourceArray_withJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(self, sources, sourcesIterable, combiner, bufferSize, delayError);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s {
  IOSObjectArray *sources = self->sources_;
  jint count = 0;
  if (sources == nil) {
    sources = [IOSObjectArray arrayWithLength:8 type:IoReactivexObservable_class_()];
    for (id<IoReactivexObservableSource> __strong p in nil_chk(sourcesIterable_)) {
      if (count == sources->size_) {
        IOSObjectArray *b = [IOSObjectArray arrayWithLength:count + (JreRShift32(count, 2)) type:IoReactivexObservableSource_class_()];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(sources, 0, b, 0, count);
        sources = b;
      }
      IOSObjectArray_Set(sources, count++, p);
    }
  }
  else {
    count = sources->size_;
  }
  if (count == 0) {
    IoReactivexInternalDisposablesEmptyDisposable_completeWithIoReactivexObserver_(s);
    return;
  }
  IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *lc = create_IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(s, combiner_, count, bufferSize_, delayError_);
  [lc subscribeWithIoReactivexObservableSourceArray:sources];
}

- (void)dealloc {
  RELEASE_(sources_);
  RELEASE_(sourcesIterable_);
  RELEASE_(combiner_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSourceArray:withJavaLangIterable:withIoReactivexFunctionsFunction:withInt:withBoolean:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "[LIoReactivexObservableSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "sourcesIterable_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
    { "combiner_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "bufferSize_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LIoReactivexObservableSource;LJavaLangIterable;LIoReactivexFunctionsFunction;IZ", "([Lio/reactivex/ObservableSource<+TT;>;Ljava/lang/Iterable<+Lio/reactivex/ObservableSource<+TT;>;>;Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;IZ)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TR;>;)V", "[Lio/reactivex/ObservableSource<+TT;>;", "Ljava/lang/Iterable<+Lio/reactivex/ObservableSource<+TT;>;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;", "LIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator;LIoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/Observable<TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableCombineLatest = { "ObservableCombineLatest", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 5, -1, 8, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableCombineLatest;
}

@end

void IoReactivexInternalOperatorsObservableObservableCombineLatest_initWithIoReactivexObservableSourceArray_withJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexInternalOperatorsObservableObservableCombineLatest *self, IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayError) {
  IoReactivexObservable_init(self);
  JreStrongAssign(&self->sources_, sources);
  JreStrongAssign(&self->sourcesIterable_, sourcesIterable);
  JreStrongAssign(&self->combiner_, combiner);
  self->bufferSize_ = bufferSize;
  self->delayError_ = delayError;
}

IoReactivexInternalOperatorsObservableObservableCombineLatest *new_IoReactivexInternalOperatorsObservableObservableCombineLatest_initWithIoReactivexObservableSourceArray_withJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayError) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableCombineLatest, initWithIoReactivexObservableSourceArray_withJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_, sources, sourcesIterable, combiner, bufferSize, delayError)
}

IoReactivexInternalOperatorsObservableObservableCombineLatest *create_IoReactivexInternalOperatorsObservableObservableCombineLatest_initWithIoReactivexObservableSourceArray_withJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(IOSObjectArray *sources, id<JavaLangIterable> sourcesIterable, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayError) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableCombineLatest, initWithIoReactivexObservableSourceArray_withJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_, sources, sourcesIterable, combiner, bufferSize, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableCombineLatest)

@implementation IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)combiner
                                    withInt:(jint)count
                                    withInt:(jint)bufferSize
                                withBoolean:(jboolean)delayError {
  IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(self, actual, combiner, count, bufferSize, delayError);
  return self;
}

- (void)subscribeWithIoReactivexObservableSourceArray:(IOSObjectArray *)sources {
  IOSObjectArray *as = observers_;
  jint len = ((IOSObjectArray *) nil_chk(as))->size_;
  [((id<IoReactivexObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  for (jint i = 0; i < len; i++) {
    if (JreLoadVolatileBoolean(&done_) || JreLoadVolatileBoolean(&cancelled_)) {
      return;
    }
    [((id<IoReactivexObservableSource>) nil_chk(IOSObjectArray_Get(nil_chk(sources), i))) subscribeWithIoReactivexObserver:IOSObjectArray_Get(as, i)];
  }
}

- (void)dispose {
  if (!JreLoadVolatileBoolean(&cancelled_)) {
    JreAssignVolatileBoolean(&cancelled_, true);
    [self cancelSources];
    if ([self getAndIncrement] == 0) {
      [self clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:queue_];
    }
  }
}

- (jboolean)isDisposed {
  return JreLoadVolatileBoolean(&cancelled_);
}

- (void)cancelSources {
  {
    IOSObjectArray *a__ = observers_;
    IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver *s = *b__++;
      [((IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver *) nil_chk(s)) dispose];
    }
  }
}

- (void)clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:(IoReactivexInternalQueueSpscLinkedArrayQueue *)q {
  @synchronized(self) {
    JreStrongAssign(&latest_, nil);
  }
  [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) clear];
}

- (void)drain {
  if ([self getAndIncrement] != 0) {
    return;
  }
  IoReactivexInternalQueueSpscLinkedArrayQueue *q = queue_;
  id<IoReactivexObserver> a = actual_;
  jboolean delayError = self->delayError_;
  jint missed = 1;
  for (; ; ) {
    for (; ; ) {
      if (JreLoadVolatileBoolean(&cancelled_)) {
        [self clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:q];
        return;
      }
      if (!delayError && [((IoReactivexInternalUtilAtomicThrowable *) nil_chk(errors_)) get] != nil) {
        [self cancelSources];
        [self clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:q];
        [((id<IoReactivexObserver>) nil_chk(a)) onErrorWithJavaLangThrowable:[((IoReactivexInternalUtilAtomicThrowable *) nil_chk(errors_)) terminate]];
        return;
      }
      jboolean d = JreLoadVolatileBoolean(&done_);
      IOSObjectArray *s = [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) poll];
      jboolean empty = s == nil;
      if (d && empty) {
        [self clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:q];
        JavaLangThrowable *ex = [((IoReactivexInternalUtilAtomicThrowable *) nil_chk(errors_)) terminate];
        if (ex == nil) {
          [((id<IoReactivexObserver>) nil_chk(a)) onComplete];
        }
        else {
          [((id<IoReactivexObserver>) nil_chk(a)) onErrorWithJavaLangThrowable:ex];
        }
        return;
      }
      if (empty) {
        break;
      }
      id v;
      @try {
        v = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(combiner_)) applyWithId:s], @"The combiner returned a null value");
      }
      @catch (JavaLangThrowable *ex) {
        IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
        [((IoReactivexInternalUtilAtomicThrowable *) nil_chk(errors_)) addThrowableWithJavaLangThrowable:ex];
        [self cancelSources];
        [self clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:q];
        ex = [errors_ terminate];
        [((id<IoReactivexObserver>) nil_chk(a)) onErrorWithJavaLangThrowable:ex];
        return;
      }
      [((id<IoReactivexObserver>) nil_chk(a)) onNextWithId:v];
    }
    missed = [self addAndGetWithInt:-missed];
    if (missed == 0) {
      break;
    }
  }
}

- (void)innerNextWithInt:(jint)index
                  withId:(id)item {
  jboolean shouldDrain = false;
  @synchronized(self) {
    IOSObjectArray *latest = self->latest_;
    if (latest == nil) {
      return;
    }
    id o = IOSObjectArray_Get(latest, index);
    jint a = active_;
    if (o == nil) {
      active_ = ++a;
    }
    IOSObjectArray_Set(latest, index, item);
    if (a == latest->size_) {
      [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) offerWithId:[latest java_clone]];
      shouldDrain = true;
    }
  }
  if (shouldDrain) {
    [self drain];
  }
}

- (void)innerErrorWithInt:(jint)index
    withJavaLangThrowable:(JavaLangThrowable *)ex {
  if ([((IoReactivexInternalUtilAtomicThrowable *) nil_chk(errors_)) addThrowableWithJavaLangThrowable:ex]) {
    jboolean cancelOthers = true;
    if (delayError_) {
      @synchronized(self) {
        IOSObjectArray *latest = self->latest_;
        if (latest == nil) {
          return;
        }
        cancelOthers = (IOSObjectArray_Get(latest, index) == nil);
        if (cancelOthers || ++complete_ == latest->size_) {
          JreAssignVolatileBoolean(&done_, true);
        }
      }
    }
    if (cancelOthers) {
      [self cancelSources];
    }
    [self drain];
  }
  else {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(ex);
  }
}

- (void)innerCompleteWithInt:(jint)index {
  jboolean cancelOthers = false;
  @synchronized(self) {
    IOSObjectArray *latest = self->latest_;
    if (latest == nil) {
      return;
    }
    cancelOthers = (IOSObjectArray_Get(latest, index) == nil);
    if (cancelOthers || ++complete_ == latest->size_) {
      JreAssignVolatileBoolean(&done_, true);
    }
  }
  if (cancelOthers) {
    [self cancelSources];
  }
  [self drain];
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(combiner_);
  RELEASE_(observers_);
  RELEASE_(latest_);
  RELEASE_(queue_);
  RELEASE_(errors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, -1, 10, -1, -1 },
    { NULL, "V", 0x0, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:withIoReactivexFunctionsFunction:withInt:withInt:withBoolean:);
  methods[1].selector = @selector(subscribeWithIoReactivexObservableSourceArray:);
  methods[2].selector = @selector(dispose);
  methods[3].selector = @selector(isDisposed);
  methods[4].selector = @selector(cancelSources);
  methods[5].selector = @selector(clearWithIoReactivexInternalQueueSpscLinkedArrayQueue:);
  methods[6].selector = @selector(drain);
  methods[7].selector = @selector(innerNextWithInt:withId:);
  methods[8].selector = @selector(innerErrorWithInt:withJavaLangThrowable:);
  methods[9].selector = @selector(innerCompleteWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 15, -1 },
    { "combiner_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 16, -1 },
    { "observers_", "[LIoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 17, -1 },
    { "latest_", "[LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "queue_", "LIoReactivexInternalQueueSpscLinkedArrayQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "cancelled_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "errors_", "LIoReactivexInternalUtilAtomicThrowable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "active_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "complete_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;LIoReactivexFunctionsFunction;IIZ", "(Lio/reactivex/Observer<-TR;>;Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;IIZ)V", "subscribe", "[LIoReactivexObservableSource;", "([Lio/reactivex/ObservableSource<+TT;>;)V", "clear", "LIoReactivexInternalQueueSpscLinkedArrayQueue;", "(Lio/reactivex/internal/queue/SpscLinkedArrayQueue<*>;)V", "innerNext", "ILNSObject;", "(ITT;)V", "innerError", "ILJavaLangThrowable;", "innerComplete", "I", "Lio/reactivex/Observer<-TR;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;", "[Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver<TT;TR;>;", "Lio/reactivex/internal/queue/SpscLinkedArrayQueue<[Ljava/lang/Object;>;", "LIoReactivexInternalOperatorsObservableObservableCombineLatest;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator = { "LatestCoordinator", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 10, 12, 19, -1, -1, 20, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator;
}

@end

void IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *self, id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> combiner, jint count, jint bufferSize, jboolean delayError) {
  JavaUtilConcurrentAtomicAtomicInteger_init(self);
  JreStrongAssignAndConsume(&self->errors_, new_IoReactivexInternalUtilAtomicThrowable_init());
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->combiner_, combiner);
  self->delayError_ = delayError;
  JreStrongAssignAndConsume(&self->latest_, [IOSObjectArray newArrayWithLength:count type:NSObject_class_()]);
  IOSObjectArray *as = [IOSObjectArray arrayWithLength:count type:IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_class_()];
  for (jint i = 0; i < count; i++) {
    IOSObjectArray_SetAndConsume(as, i, new_IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_(self, i));
  }
  JreStrongAssign(&self->observers_, as);
  JreStrongAssignAndConsume(&self->queue_, new_IoReactivexInternalQueueSpscLinkedArrayQueue_initWithInt_(bufferSize));
}

IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *new_IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> combiner, jint count, jint bufferSize, jboolean delayError) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_, actual, combiner, count, bufferSize, delayError)
}

IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *create_IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(id<IoReactivexObserver> actual, id<IoReactivexFunctionsFunction> combiner, jint count, jint bufferSize, jboolean delayError) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator, initWithIoReactivexObserver_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_, actual, combiner, count, bufferSize, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator)

@implementation IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator:(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *)parent
                                                                                                withInt:(jint)index {
  IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_(self, parent, index);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s {
  IoReactivexInternalDisposablesDisposableHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexDisposablesDisposable_(self, s);
}

- (void)onNextWithId:(id)t {
  [((IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *) nil_chk(parent_)) innerNextWithInt:index_ withId:t];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  [((IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *) nil_chk(parent_)) innerErrorWithInt:index_ withJavaLangThrowable:t];
}

- (void)onComplete {
  [((IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *) nil_chk(parent_)) innerCompleteWithInt:index_];
}

- (void)dispose {
  IoReactivexInternalDisposablesDisposableHelper_disposeWithJavaUtilConcurrentAtomicAtomicReference_(self);
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator:withInt:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[4].selector = @selector(onComplete);
  methods[5].selector = @selector(dispose);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "parent_", "LIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator;I", "(Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator<TT;TR;>;I)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator<TT;TR;>;", "LIoReactivexInternalOperatorsObservableObservableCombineLatest;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<Lio/reactivex/disposables/Disposable;>;Lio/reactivex/Observer<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver = { "CombinerObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 6, 3, 10, -1, -1, 11, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_(IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver *self, IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *parent, jint index) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->index_ = index;
}

IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver *new_IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *parent, jint index) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver, initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_, parent, index)
}

IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver *create_IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver_initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_(IoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator *parent, jint index) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver, initWithIoReactivexInternalOperatorsObservableObservableCombineLatest_LatestCoordinator_withInt_, parent, index)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableCombineLatest_CombinerObserver)
