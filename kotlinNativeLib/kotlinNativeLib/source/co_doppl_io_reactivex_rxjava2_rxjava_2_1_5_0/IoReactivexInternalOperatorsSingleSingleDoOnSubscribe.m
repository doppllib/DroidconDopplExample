//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFunctionsConsumer.h"
#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalOperatorsSingleSingleDoOnSubscribe.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "IoReactivexSingleSource.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@implementation IoReactivexInternalOperatorsSingleSingleDoOnSubscribe

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
               withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribe {
  IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(self, source, onSubscribe);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  [((id<IoReactivexSingleSource>) nil_chk(source_)) subscribeWithIoReactivexSingleObserver:create_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(s, onSubscribe_)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(onSubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleSource:withIoReactivexFunctionsConsumer:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexSingleSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "onSubscribe_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleSource;LIoReactivexFunctionsConsumer;", "(Lio/reactivex/SingleSource<TT;>;Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "Lio/reactivex/SingleSource<TT;>;", "Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;", "LIoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/Single<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDoOnSubscribe = { "SingleDoOnSubscribe", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, 7, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe;
}

@end

void IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onSubscribe) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->onSubscribe_, onSubscribe);
}

IoReactivexInternalOperatorsSingleSingleDoOnSubscribe *new_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onSubscribe) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe, initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_, source, onSubscribe)
}

IoReactivexInternalOperatorsSingleSingleDoOnSubscribe *create_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onSubscribe) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe, initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_, source, onSubscribe)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe)

@implementation IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                 withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribe {
  IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(self, actual, onSubscribe);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(onSubscribe_)) acceptWithId:d];
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    done_ = true;
    [((id<IoReactivexDisposablesDisposable>) nil_chk(d)) dispose];
    IoReactivexInternalDisposablesEmptyDisposable_errorWithJavaLangThrowable_withIoReactivexSingleObserver_(ex, actual_);
    return;
  }
  [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:d];
}

- (void)onSuccessWithId:(id)value {
  if (done_) {
    return;
  }
  [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onSuccessWithId:value];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e {
  if (done_) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(e);
    return;
  }
  [((id<IoReactivexSingleObserver>) nil_chk(actual_)) onErrorWithJavaLangThrowable:e];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(onSubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleObserver:withIoReactivexFunctionsConsumer:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onSuccessWithId:);
  methods[3].selector = @selector(onErrorWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexSingleObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "onSubscribe_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleObserver;LIoReactivexFunctionsConsumer;", "(Lio/reactivex/SingleObserver<-TT;>;Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/SingleObserver<-TT;>;", "Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;", "LIoReactivexInternalOperatorsSingleSingleDoOnSubscribe;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/SingleObserver<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver = { "DoOnSubscribeSingleObserver", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x18, 4, 3, 11, -1, -1, 12, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver;
}

@end

void IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver *self, id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsConsumer> onSubscribe) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->onSubscribe_, onSubscribe);
}

IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver *new_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsConsumer> onSubscribe) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver, initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_, actual, onSubscribe)
}

IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver *create_IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsConsumer> onSubscribe) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver, initWithIoReactivexSingleObserver_withIoReactivexFunctionsConsumer_, actual, onSubscribe)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleDoOnSubscribe_DoOnSubscribeSingleObserver)
