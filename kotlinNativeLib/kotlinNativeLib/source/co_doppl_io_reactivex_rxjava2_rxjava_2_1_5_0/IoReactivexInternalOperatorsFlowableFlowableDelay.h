//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDelay
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableDelay

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDelay_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDelay))
#define IoReactivexInternalOperatorsFlowableFlowableDelay_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@class IoReactivexScheduler;
@class JavaUtilConcurrentTimeUnit;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDelay : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  jlong delay_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
  jboolean delayError_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
                                   withLong:(jlong)delay
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withIoReactivexScheduler:(IoReactivexScheduler *)scheduler
                                withBoolean:(jboolean)delayError;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)t;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelay)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelay, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelay, scheduler_, IoReactivexScheduler *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDelay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableDelay *self, IoReactivexFlowable *source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay *new_IoReactivexInternalOperatorsFlowableFlowableDelay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(IoReactivexFlowable *source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay *create_IoReactivexInternalOperatorsFlowableFlowableDelay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(IoReactivexFlowable *source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDelay)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class IoReactivexScheduler_Worker;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnit;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber : NSObject < IoReactivexFlowableSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  jlong delay_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler_Worker *w_;
  jboolean delayError_;
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                                            withLong:(jlong)delay
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)w
                                         withBoolean:(jboolean)delayError;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber, w_, IoReactivexScheduler_Worker *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_initWithOrgReactivestreamsSubscriber_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *self, id<OrgReactivestreamsSubscriber> actual, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *new_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_initWithOrgReactivestreamsSubscriber_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(id<OrgReactivestreamsSubscriber> actual, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *create_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_initWithOrgReactivestreamsSubscriber_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(id<OrgReactivestreamsSubscriber> actual, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext))
#define IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber:(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *)outer$
                                                                                   withId:(id)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_withId_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext *self, IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$, id t);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext *new_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_withId_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$, id t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext *create_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_withId_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$, id t);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnNext)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError))
#define IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber;
@class JavaLangThrowable;

@interface IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber:(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *)outer$
                                                                    withJavaLangThrowable:(JavaLangThrowable *)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_withJavaLangThrowable_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError *self, IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$, JavaLangThrowable *t);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError *new_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_withJavaLangThrowable_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$, JavaLangThrowable *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError *create_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_withJavaLangThrowable_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$, JavaLangThrowable *t);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnError)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete))
#define IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber:(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete *self, IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete *new_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete *create_IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete_initWithIoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableDelay_DelaySubscriber_OnComplete)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableDelay")
