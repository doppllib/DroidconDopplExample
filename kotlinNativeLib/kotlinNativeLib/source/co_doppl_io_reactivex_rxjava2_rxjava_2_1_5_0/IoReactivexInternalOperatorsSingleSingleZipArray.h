//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleZipArray
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleZipArray

#if !defined (IoReactivexInternalOperatorsSingleSingleZipArray_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleZipArray))
#define IoReactivexInternalOperatorsSingleSingleZipArray_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@class IOSObjectArray;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsSingleSingleZipArray : IoReactivexSingle {
 @public
  IOSObjectArray *sources_;
  id<IoReactivexFunctionsFunction> zipper_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSourceArray:(IOSObjectArray *)sources
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleZipArray)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray, sources_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray, zipper_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleZipArray_initWithIoReactivexSingleSourceArray_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsSingleSingleZipArray *self, IOSObjectArray *sources, id<IoReactivexFunctionsFunction> zipper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray *new_IoReactivexInternalOperatorsSingleSingleZipArray_initWithIoReactivexSingleSourceArray_withIoReactivexFunctionsFunction_(IOSObjectArray *sources, id<IoReactivexFunctionsFunction> zipper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray *create_IoReactivexInternalOperatorsSingleSingleZipArray_initWithIoReactivexSingleSourceArray_withIoReactivexFunctionsFunction_(IOSObjectArray *sources, id<IoReactivexFunctionsFunction> zipper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleZipArray)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator))
#define IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IOSObjectArray;
@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexFunctionsFunction> zipper_;
  IOSObjectArray *observers_;
  IOSObjectArray *values_;
}

#pragma mark Public

- (void)dispose;

- (NSUInteger)hash;

- (jboolean)isDisposed;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer
                                          withInt:(jint)n
                 withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper;

- (void)disposeExceptWithInt:(jint)index;

- (void)innerErrorWithJavaLangThrowable:(JavaLangThrowable *)ex
                                withInt:(jint)index;

- (void)innerSuccessWithId:(id)value
                   withInt:(jint)index;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator, zipper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator, observers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator, values_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *self, id<IoReactivexSingleObserver> observer, jint n, id<IoReactivexFunctionsFunction> zipper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *new_IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexFunctionsFunction_(id<IoReactivexSingleObserver> observer, jint n, id<IoReactivexFunctionsFunction> zipper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *create_IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_initWithIoReactivexSingleObserver_withInt_withIoReactivexFunctionsFunction_(id<IoReactivexSingleObserver> observer, jint n, id<IoReactivexFunctionsFunction> zipper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver))
#define IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "IoReactivexSingleObserver.h"

@class IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexSingleObserver > {
 @public
  IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *parent_;
  jint index_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator:(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *)parent
                                                                                withInt:(jint)index;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver, parent_, IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver_initWithIoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_withInt_(IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver *self, IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *parent, jint index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver *new_IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver_initWithIoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_withInt_(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *parent, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver *create_IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver_initWithIoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator_withInt_(IoReactivexInternalOperatorsSingleSingleZipArray_ZipCoordinator *parent, jint index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleZipArray_ZipSingleObserver)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc))
#define IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc_

#define RESTRICT_IoReactivexFunctionsFunction 1
#define INCLUDE_IoReactivexFunctionsFunction 1
#include "IoReactivexFunctionsFunction.h"

@class IoReactivexInternalOperatorsSingleSingleZipArray;

@interface IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc : NSObject < IoReactivexFunctionsFunction >

#pragma mark Public

- (id)applyWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleZipArray:(IoReactivexInternalOperatorsSingleSingleZipArray *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipArray_(IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc *self, IoReactivexInternalOperatorsSingleSingleZipArray *outer$);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc *new_IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipArray_(IoReactivexInternalOperatorsSingleSingleZipArray *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc *create_IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc_initWithIoReactivexInternalOperatorsSingleSingleZipArray_(IoReactivexInternalOperatorsSingleSingleZipArray *outer$);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleZipArray_SingletonArrayFunc)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleZipArray")
