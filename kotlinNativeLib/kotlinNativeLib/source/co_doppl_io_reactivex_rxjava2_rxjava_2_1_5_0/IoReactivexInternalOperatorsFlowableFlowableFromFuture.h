//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromFuture")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFromFuture
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromFuture 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromFuture 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableFromFuture

#if !defined (IoReactivexInternalOperatorsFlowableFlowableFromFuture_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromFuture || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableFromFuture))
#define IoReactivexInternalOperatorsFlowableFlowableFromFuture_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilConcurrentFuture;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableFromFuture : IoReactivexFlowable {
 @public
  id<JavaUtilConcurrentFuture> future_;
  jlong timeout_;
  JavaUtilConcurrentTimeUnit *unit_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                        withLong:(jlong)timeout
                  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableFromFuture)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFromFuture, future_, id<JavaUtilConcurrentFuture>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableFromFuture, unit_, JavaUtilConcurrentTimeUnit *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(IoReactivexInternalOperatorsFlowableFlowableFromFuture *self, id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromFuture *new_IoReactivexInternalOperatorsFlowableFlowableFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableFromFuture *create_IoReactivexInternalOperatorsFlowableFlowableFromFuture_initWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableFromFuture)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableFromFuture")
