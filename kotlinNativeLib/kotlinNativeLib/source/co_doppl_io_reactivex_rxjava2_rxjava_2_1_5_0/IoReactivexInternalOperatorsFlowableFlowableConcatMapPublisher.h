//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher

#if !defined (IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher))
#define IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "IoReactivexFlowable.h"

@class IoReactivexInternalUtilErrorMode;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher : IoReactivexFlowable {
 @public
  id<OrgReactivestreamsPublisher> source_;
  id<IoReactivexFunctionsFunction> mapper_;
  jint prefetch_;
  IoReactivexInternalUtilErrorMode *errorMode_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                            withInt:(jint)prefetch
               withIoReactivexInternalUtilErrorMode:(IoReactivexInternalUtilErrorMode *)errorMode;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher, source_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher, errorMode_, IoReactivexInternalUtilErrorMode *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher *self, id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher *new_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher *create_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapPublisher")
