//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMaterialize")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableMaterialize
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMaterialize 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMaterialize 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableMaterialize

#if !defined (IoReactivexInternalOperatorsFlowableFlowableMaterialize_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMaterialize || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableMaterialize))
#define IoReactivexInternalOperatorsFlowableFlowableMaterialize_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@class IoReactivexNotification;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableMaterialize : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source;

- (IoReactivexNotification *)blockingFirst;

- (IoReactivexNotification *)blockingFirstWithId:(IoReactivexNotification *)arg0;

- (IoReactivexNotification *)blockingLast;

- (IoReactivexNotification *)blockingLastWithId:(IoReactivexNotification *)arg0;

- (IoReactivexNotification *)blockingSingle;

- (IoReactivexNotification *)blockingSingleWithId:(IoReactivexNotification *)arg0;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableMaterialize)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableMaterialize_initWithIoReactivexFlowable_(IoReactivexInternalOperatorsFlowableFlowableMaterialize *self, IoReactivexFlowable *source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMaterialize *new_IoReactivexInternalOperatorsFlowableFlowableMaterialize_initWithIoReactivexFlowable_(IoReactivexFlowable *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMaterialize *create_IoReactivexInternalOperatorsFlowableFlowableMaterialize_initWithIoReactivexFlowable_(IoReactivexFlowable *source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableMaterialize)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMaterialize || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber_

#define RESTRICT_IoReactivexInternalSubscribersSinglePostCompleteSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersSinglePostCompleteSubscriber 1
#include "IoReactivexInternalSubscribersSinglePostCompleteSubscriber.h"

@class IoReactivexNotification;
@class JavaLangThrowable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber : IoReactivexInternalSubscribersSinglePostCompleteSubscriber

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

#pragma mark Protected

- (void)onDropWithId:(IoReactivexNotification *)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableMaterialize_MaterializeSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableMaterialize")
