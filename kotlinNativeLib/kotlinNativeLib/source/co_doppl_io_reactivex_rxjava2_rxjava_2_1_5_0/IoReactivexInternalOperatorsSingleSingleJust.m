//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexDisposablesDisposables.h"
#include "IoReactivexInternalOperatorsSingleSingleJust.h"
#include "IoReactivexSingle.h"
#include "IoReactivexSingleObserver.h"
#include "J2ObjC_source.h"

@implementation IoReactivexInternalOperatorsSingleSingleJust

- (instancetype)initWithId:(id)value {
  IoReactivexInternalOperatorsSingleSingleJust_initWithId_(self, value);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  [((id<IoReactivexSingleObserver>) nil_chk(s)) onSubscribeWithIoReactivexDisposablesDisposable:IoReactivexDisposablesDisposables_disposed()];
  [s onSuccessWithId:value_];
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "TT;", "<T:Ljava/lang/Object;>Lio/reactivex/Single<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleJust = { "SingleJust", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, 6, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleJust;
}

@end

void IoReactivexInternalOperatorsSingleSingleJust_initWithId_(IoReactivexInternalOperatorsSingleSingleJust *self, id value) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->value_, value);
}

IoReactivexInternalOperatorsSingleSingleJust *new_IoReactivexInternalOperatorsSingleSingleJust_initWithId_(id value) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleJust, initWithId_, value)
}

IoReactivexInternalOperatorsSingleSingleJust *create_IoReactivexInternalOperatorsSingleSingleJust_initWithId_(id value) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleJust, initWithId_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleJust)
