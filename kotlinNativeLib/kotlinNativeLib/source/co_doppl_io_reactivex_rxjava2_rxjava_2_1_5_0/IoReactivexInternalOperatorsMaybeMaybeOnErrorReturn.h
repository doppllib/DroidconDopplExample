//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn

#if !defined (IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn))
#define IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> valueSupplier_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
              withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn, valueSupplier_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> valueSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn *new_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> valueSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn *create_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> valueSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;

@interface IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsFunction> valueSupplier_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver, valueSupplier_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> valueSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> valueSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> valueSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn_OnErrorReturnMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeOnErrorReturn")
