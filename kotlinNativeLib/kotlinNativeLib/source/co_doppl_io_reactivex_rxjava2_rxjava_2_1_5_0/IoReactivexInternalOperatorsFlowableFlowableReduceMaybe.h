//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe

#if !defined (IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe))
#define IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

#define RESTRICT_IoReactivexInternalFuseableHasUpstreamPublisher 1
#define INCLUDE_IoReactivexInternalFuseableHasUpstreamPublisher 1
#include "IoReactivexInternalFuseableHasUpstreamPublisher.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToFlowable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToFlowable 1
#include "IoReactivexInternalFuseableFuseToFlowable.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexMaybeObserver;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsFlowableFlowableReduceMaybe : IoReactivexMaybe < IoReactivexInternalFuseableHasUpstreamPublisher, IoReactivexInternalFuseableFuseToFlowable > {
 @public
  IoReactivexFlowable *source_;
  id<IoReactivexFunctionsBiFunction> reducer_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)reducer;

- (IoReactivexFlowable *)fuseToFlowable;

- (id<OrgReactivestreamsPublisher>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe, source_, IoReactivexFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe, reducer_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe *self, IoReactivexFlowable *source, id<IoReactivexFunctionsBiFunction> reducer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableReduceMaybe *new_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_(IoReactivexFlowable *source, id<IoReactivexFunctionsBiFunction> reducer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableReduceMaybe *create_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_initWithIoReactivexFlowable_withIoReactivexFunctionsBiFunction_(IoReactivexFlowable *source, id<IoReactivexFunctionsBiFunction> reducer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber_

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexMaybeObserver;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber : NSObject < IoReactivexFlowableSubscriber, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsBiFunction> reducer_;
  id value_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
              withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)reducer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber, reducer_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber, value_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiFunction> reducer);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiFunction> reducer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiFunction> reducer);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableReduceMaybe_ReduceSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableReduceMaybe")
