//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher))
#define IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<OrgReactivestreamsPublisher> other_;
  id<IoReactivexMaybeSource> fallback_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
               withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other
                    withIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)fallback;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher, other_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher, fallback_, id<IoReactivexMaybeSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_initWithIoReactivexMaybeSource_withOrgReactivestreamsPublisher_withIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher *self, id<IoReactivexMaybeSource> source, id<OrgReactivestreamsPublisher> other, id<IoReactivexMaybeSource> fallback);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher *new_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_initWithIoReactivexMaybeSource_withOrgReactivestreamsPublisher_withIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source, id<OrgReactivestreamsPublisher> other, id<IoReactivexMaybeSource> fallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher *create_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_initWithIoReactivexMaybeSource_withOrgReactivestreamsPublisher_withIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source, id<OrgReactivestreamsPublisher> other, id<IoReactivexMaybeSource> fallback);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver;
@class IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver;
@class JavaLangThrowable;
@protocol IoReactivexMaybeSource;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver *other_;
  id<IoReactivexMaybeSource> fallback_;
  IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver *otherObserver_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (void)otherComplete;

- (void)otherErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                      withIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)fallback;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver, other_, IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver, fallback_, id<IoReactivexMaybeSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver, otherObserver_, IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexMaybeSource> fallback);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexMaybeSource_(id<IoReactivexMaybeObserver> actual, id<IoReactivexMaybeSource> fallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexMaybeSource_(id<IoReactivexMaybeObserver> actual, id<IoReactivexMaybeSource> fallback);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

@class IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver;
@class JavaLangThrowable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexFlowableSubscriber > {
 @public
  IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *parent_;
}

#pragma mark Public

- (id<OrgReactivestreamsSubscription>)accumulateAndGetWithId:(id<OrgReactivestreamsSubscription>)arg0
                          withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<OrgReactivestreamsSubscription>)get;

- (id<OrgReactivestreamsSubscription>)getAndAccumulateWithId:(id<OrgReactivestreamsSubscription>)arg0
                          withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<OrgReactivestreamsSubscription>)getAndSetWithId:(id<OrgReactivestreamsSubscription>)arg0;

- (id<OrgReactivestreamsSubscription>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onNextWithId:(id)value;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (id<OrgReactivestreamsSubscription>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver:(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver, parent_, IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver_initWithIoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver *self, IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver_initWithIoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver_initWithIoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutMainMaybeObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutOtherMaybeObserver)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver > {
 @public
  id<IoReactivexMaybeObserver> actual_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver, actual_, id<IoReactivexMaybeObserver>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher_TimeoutFallbackMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTimeoutPublisher")
