//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry")
#ifdef RESTRICT_IoReactivexInternalOperatorsParallelParallelFilterTry
#define INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsParallelParallelFilterTry
#ifdef INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber
#define INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber 1
#endif
#ifdef INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber
#define INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber 1
#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelFilterTry_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry))
#define IoReactivexInternalOperatorsParallelParallelFilterTry_

#define RESTRICT_IoReactivexParallelParallelFlowable 1
#define INCLUDE_IoReactivexParallelParallelFlowable 1
#include "IoReactivexParallelParallelFlowable.h"

@class IOSObjectArray;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsPredicate;

@interface IoReactivexInternalOperatorsParallelParallelFilterTry : IoReactivexParallelParallelFlowable {
 @public
  IoReactivexParallelParallelFlowable *source_;
  id<IoReactivexFunctionsPredicate> predicate_;
  id<IoReactivexFunctionsBiFunction> errorHandler_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexParallelParallelFlowable:(IoReactivexParallelParallelFlowable *)source
                          withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate
                         withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

- (jint)parallelism;

- (void)subscribeWithOrgReactivestreamsSubscriberArray:(IOSObjectArray *)subscribers;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelFilterTry)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry, source_, IoReactivexParallelParallelFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry, predicate_, id<IoReactivexFunctionsPredicate>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry, errorHandler_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelFilterTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelFilterTry *self, IoReactivexParallelParallelFlowable *source, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelFilterTry *new_IoReactivexInternalOperatorsParallelParallelFilterTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *source, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelFilterTry *create_IoReactivexInternalOperatorsParallelParallelFilterTry_initWithIoReactivexParallelParallelFlowable_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(IoReactivexParallelParallelFlowable *source, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelFilterTry)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber))
#define IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber_

#define RESTRICT_IoReactivexInternalFuseableConditionalSubscriber 1
#define INCLUDE_IoReactivexInternalFuseableConditionalSubscriber 1
#include "IoReactivexInternalFuseableConditionalSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsPredicate;

@interface IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber : NSObject < IoReactivexInternalFuseableConditionalSubscriber, OrgReactivestreamsSubscription > {
 @public
  id<IoReactivexFunctionsPredicate> predicate_;
  id<IoReactivexFunctionsBiFunction> errorHandler_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)cancel;

- (void)onNextWithId:(id)t;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate
                   withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber, predicate_, id<IoReactivexFunctionsPredicate>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber, errorHandler_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber_initWithIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber *self, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber))
#define IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber_

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsPredicate;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber : IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                   withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate
                  withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)arg0
                   withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber, actual_, id<OrgReactivestreamsSubscriber>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber *new_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber *create_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterSubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber))
#define IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber_

@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexInternalFuseableConditionalSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber : IoReactivexInternalOperatorsParallelParallelFilterTry_BaseFilterSubscriber {
 @public
  id<IoReactivexInternalFuseableConditionalSubscriber> actual_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (jboolean)tryOnNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalFuseableConditionalSubscriber:(id<IoReactivexInternalFuseableConditionalSubscriber>)actual
                                       withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate
                                      withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)errorHandler;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)arg0
                   withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber, actual_, id<IoReactivexInternalFuseableConditionalSubscriber>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber *self, id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber *new_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber *create_IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber_initWithIoReactivexInternalFuseableConditionalSubscriber_withIoReactivexFunctionsPredicate_withIoReactivexFunctionsBiFunction_(id<IoReactivexInternalFuseableConditionalSubscriber> actual, id<IoReactivexFunctionsPredicate> predicate, id<IoReactivexFunctionsBiFunction> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelFilterTry_ParallelFilterConditionalSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelFilterTry")
