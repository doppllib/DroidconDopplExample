//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "IoReactivexEmitter.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFlowablesConnectableFlowable.h"
#include "IoReactivexFunctionsAction.h"
#include "IoReactivexFunctionsBiConsumer.h"
#include "IoReactivexFunctionsBiFunction.h"
#include "IoReactivexFunctionsConsumer.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalFunctionsFunctions.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsFlowableFlowableFromIterable.h"
#include "IoReactivexInternalOperatorsFlowableFlowableInternalHelper.h"
#include "IoReactivexInternalOperatorsFlowableFlowableMapPublisher.h"
#include "IoReactivexInternalOperatorsFlowableFlowableTakePublisher.h"
#include "IoReactivexScheduler.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsPublisher.h"
#include "OrgReactivestreamsSubscriber.h"
#include "OrgReactivestreamsSubscription.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"
#include "java/util/List.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/TimeUnit.h"

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper ()

- (instancetype)init;

@end

__attribute__((unused)) static void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init(IoReactivexInternalOperatorsFlowableFlowableInternalHelper *self);

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableInternalHelper *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableInternalHelper *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init();

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner () {
 @public
  id<IoReactivexFunctionsBiFunction> combiner_;
  id t_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner, combiner_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner, t_, id)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter () {
 @public
  id<IoReactivexFunctionsBiFunction> combiner_;
  id<IoReactivexFunctionsFunction> mapper_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter, combiner_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter, mapper_, id<IoReactivexFunctionsFunction>)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable () {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable, mapper_, id<IoReactivexFunctionsFunction>)

__attribute__((unused)) static void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_initWithNSString_withInt_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *self, NSString *__name, jint __ordinal);

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction () {
 @public
  id<IoReactivexFunctionsFunction> zipper_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction, zipper_, id<IoReactivexFunctionsFunction>)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable () {
 @public
  IoReactivexFlowable *parent_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable, parent_, IoReactivexFlowable *)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable () {
 @public
  IoReactivexFlowable *parent_;
  jint bufferSize_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable, parent_, IoReactivexFlowable *)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay () {
 @public
  IoReactivexFlowable *parent_;
  jint bufferSize_;
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay, parent_, IoReactivexFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay, scheduler_, IoReactivexScheduler *)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay () {
 @public
  IoReactivexFlowable *parent_;
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay, parent_, IoReactivexFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay, scheduler_, IoReactivexScheduler *)

@interface IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction () {
 @public
  id<IoReactivexFunctionsFunction> selector_;
  IoReactivexScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction, selector_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction, scheduler_, IoReactivexScheduler *)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<IoReactivexFunctionsBiFunction>)simpleGeneratorWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)consumer {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_simpleGeneratorWithIoReactivexFunctionsConsumer_(consumer);
}

+ (id<IoReactivexFunctionsBiFunction>)simpleBiGeneratorWithIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)consumer {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_simpleBiGeneratorWithIoReactivexFunctionsBiConsumer_(consumer);
}

+ (id<IoReactivexFunctionsFunction>)itemDelayWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemDelay {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_itemDelayWithIoReactivexFunctionsFunction_(itemDelay);
}

+ (id<IoReactivexFunctionsConsumer>)subscriberOnNextWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_subscriberOnNextWithOrgReactivestreamsSubscriber_(subscriber);
}

+ (id<IoReactivexFunctionsConsumer>)subscriberOnErrorWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_subscriberOnErrorWithOrgReactivestreamsSubscriber_(subscriber);
}

+ (id<IoReactivexFunctionsAction>)subscriberOnCompleteWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_subscriberOnCompleteWithOrgReactivestreamsSubscriber_(subscriber);
}

+ (id<IoReactivexFunctionsFunction>)flatMapWithCombinerWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                                     withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_flatMapWithCombinerWithIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(mapper, combiner);
}

+ (id<IoReactivexFunctionsFunction>)flatMapIntoIterableWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_flatMapIntoIterableWithIoReactivexFunctionsFunction_(mapper);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexFlowable:(IoReactivexFlowable *)parent {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_(parent);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexFlowable:(IoReactivexFlowable *)parent
                                                                withInt:(jint)bufferSize {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_withInt_(parent, bufferSize);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexFlowable:(IoReactivexFlowable *)parent
                                                                withInt:(jint)bufferSize
                                                               withLong:(jlong)time
                                         withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                               withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, bufferSize, time, unit, scheduler);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexFlowable:(IoReactivexFlowable *)parent
                                                               withLong:(jlong)time
                                         withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                               withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, time, unit, scheduler);
}

+ (id<IoReactivexFunctionsFunction>)replayFunctionWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)selector
                                                          withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayFunctionWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(selector, scheduler);
}

+ (id<IoReactivexFunctionsFunction>)zipIterableWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_zipIterableWithIoReactivexFunctionsFunction_(zipper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexFunctionsBiFunction;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LIoReactivexFunctionsBiFunction;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LIoReactivexFunctionsConsumer;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "LIoReactivexFunctionsConsumer;", 0x9, 12, 10, -1, 13, -1, -1 },
    { NULL, "LIoReactivexFunctionsAction;", 0x9, 14, 10, -1, 15, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 16, 17, -1, 18, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 19, 7, -1, 20, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 21, 22, -1, 23, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 21, 24, -1, 25, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 21, 26, -1, 27, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 21, 28, -1, 29, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 30, 31, -1, 32, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 33, 7, -1, 34, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(simpleGeneratorWithIoReactivexFunctionsConsumer:);
  methods[2].selector = @selector(simpleBiGeneratorWithIoReactivexFunctionsBiConsumer:);
  methods[3].selector = @selector(itemDelayWithIoReactivexFunctionsFunction:);
  methods[4].selector = @selector(subscriberOnNextWithOrgReactivestreamsSubscriber:);
  methods[5].selector = @selector(subscriberOnErrorWithOrgReactivestreamsSubscriber:);
  methods[6].selector = @selector(subscriberOnCompleteWithOrgReactivestreamsSubscriber:);
  methods[7].selector = @selector(flatMapWithCombinerWithIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[8].selector = @selector(flatMapIntoIterableWithIoReactivexFunctionsFunction:);
  methods[9].selector = @selector(replayCallableWithIoReactivexFlowable:);
  methods[10].selector = @selector(replayCallableWithIoReactivexFlowable:withInt:);
  methods[11].selector = @selector(replayCallableWithIoReactivexFlowable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[12].selector = @selector(replayCallableWithIoReactivexFlowable:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[13].selector = @selector(replayFunctionWithIoReactivexFunctionsFunction:withIoReactivexScheduler:);
  methods[14].selector = @selector(zipIterableWithIoReactivexFunctionsFunction:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "simpleGenerator", "LIoReactivexFunctionsConsumer;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>(Lio/reactivex/functions/Consumer<Lio/reactivex/Emitter<TT;>;>;)Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;", "simpleBiGenerator", "LIoReactivexFunctionsBiConsumer;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>(Lio/reactivex/functions/BiConsumer<TS;Lio/reactivex/Emitter<TT;>;>;)Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;", "itemDelay", "LIoReactivexFunctionsFunction;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;)Lio/reactivex/functions/Function<TT;Lorg/reactivestreams/Publisher<TT;>;>;", "subscriberOnNext", "LOrgReactivestreamsSubscriber;", "<T:Ljava/lang/Object;>(Lorg/reactivestreams/Subscriber<TT;>;)Lio/reactivex/functions/Consumer<TT;>;", "subscriberOnError", "<T:Ljava/lang/Object;>(Lorg/reactivestreams/Subscriber<TT;>;)Lio/reactivex/functions/Consumer<Ljava/lang/Throwable;>;", "subscriberOnComplete", "<T:Ljava/lang/Object;>(Lorg/reactivestreams/Subscriber<TT;>;)Lio/reactivex/functions/Action;", "flatMapWithCombiner", "LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TU;>;>;Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;)Lio/reactivex/functions/Function<TT;Lorg/reactivestreams/Publisher<TR;>;>;", "flatMapIntoIterable", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Ljava/lang/Iterable<+TU;>;>;)Lio/reactivex/functions/Function<TT;Lorg/reactivestreams/Publisher<TU;>;>;", "replayCallable", "LIoReactivexFlowable;", "<T:Ljava/lang/Object;>(Lio/reactivex/Flowable<TT;>;)Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;", "LIoReactivexFlowable;I", "<T:Ljava/lang/Object;>(Lio/reactivex/Flowable<TT;>;I)Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;", "LIoReactivexFlowable;IJLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "<T:Ljava/lang/Object;>(Lio/reactivex/Flowable<TT;>;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;", "LIoReactivexFlowable;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "<T:Ljava/lang/Object;>(Lio/reactivex/Flowable<TT;>;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;", "replayFunction", "LIoReactivexFunctionsFunction;LIoReactivexScheduler;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-Lio/reactivex/Flowable<TT;>;+Lorg/reactivestreams/Publisher<TR;>;>;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function<Lio/reactivex/Flowable<TT;>;Lorg/reactivestreams/Publisher<TR;>;>;", "zipIterable", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;)Lio/reactivex/functions/Function<Ljava/util/List<Lorg/reactivestreams/Publisher<+TT;>;>;Lorg/reactivestreams/Publisher<+TR;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay;LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper = { "FlowableInternalHelper", "io.reactivex.internal.operators.flowable", ptrTable, methods, NULL, 7, 0x11, 15, 0, -1, 35, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init(IoReactivexInternalOperatorsFlowableFlowableInternalHelper *self) {
  NSObject_init(self);
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"No instances!");
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init() {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper, init)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_init() {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper, init)
}

id<IoReactivexFunctionsBiFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_simpleGeneratorWithIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> consumer) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(consumer);
}

id<IoReactivexFunctionsBiFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_simpleBiGeneratorWithIoReactivexFunctionsBiConsumer_(id<IoReactivexFunctionsBiConsumer> consumer) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(consumer);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_itemDelayWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> itemDelay) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(itemDelay);
}

id<IoReactivexFunctionsConsumer> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_subscriberOnNextWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext_initWithOrgReactivestreamsSubscriber_(subscriber);
}

id<IoReactivexFunctionsConsumer> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_subscriberOnErrorWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError_initWithOrgReactivestreamsSubscriber_(subscriber);
}

id<IoReactivexFunctionsAction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_subscriberOnCompleteWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete_initWithOrgReactivestreamsSubscriber_(subscriber);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_flatMapWithCombinerWithIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> combiner) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(combiner, mapper);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_flatMapIntoIterableWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> mapper) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(mapper);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_(IoReactivexFlowable *parent) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable_initWithIoReactivexFlowable_(parent);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_withInt_(IoReactivexFlowable *parent, jint bufferSize) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable_initWithIoReactivexFlowable_withInt_(parent, bufferSize);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexFlowable *parent, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay_initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, bufferSize, time, unit, scheduler);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayCallableWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexFlowable *parent, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, time, unit, scheduler);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_replayFunctionWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> selector, IoReactivexScheduler *scheduler) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(selector, scheduler);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsFlowableFlowableInternalHelper_zipIterableWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> zipper) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(zipper);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator

- (instancetype)initWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)consumer {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(self, consumer);
  return self;
}

- (id)applyWithId:(id)t1
           withId:(id<IoReactivexEmitter>)t2 {
  [((id<IoReactivexFunctionsConsumer>) nil_chk(consumer_)) acceptWithId:t2];
  return t1;
}

- (void)dealloc {
  RELEASE_(consumer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsConsumer:);
  methods[1].selector = @selector(applyWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsConsumer;", "(Lio/reactivex/functions/Consumer<Lio/reactivex/Emitter<TT;>;>;)V", "apply", "LNSObject;LIoReactivexEmitter;", "LJavaLangException;", "(TS;Lio/reactivex/Emitter<TT;>;)TS;", "Lio/reactivex/functions/Consumer<Lio/reactivex/Emitter<TT;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator = { "SimpleGenerator", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator *self, id<IoReactivexFunctionsConsumer> consumer) {
  NSObject_init(self);
  JreStrongAssign(&self->consumer_, consumer);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> consumer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator, initWithIoReactivexFunctionsConsumer_, consumer)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> consumer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator, initWithIoReactivexFunctionsConsumer_, consumer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleGenerator)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator

- (instancetype)initWithIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)consumer {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(self, consumer);
  return self;
}

- (id)applyWithId:(id)t1
           withId:(id<IoReactivexEmitter>)t2 {
  [((id<IoReactivexFunctionsBiConsumer>) nil_chk(consumer_)) acceptWithId:t1 withId:t2];
  return t1;
}

- (void)dealloc {
  RELEASE_(consumer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsBiConsumer:);
  methods[1].selector = @selector(applyWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LIoReactivexFunctionsBiConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsBiConsumer;", "(Lio/reactivex/functions/BiConsumer<TS;Lio/reactivex/Emitter<TT;>;>;)V", "apply", "LNSObject;LIoReactivexEmitter;", "LJavaLangException;", "(TS;Lio/reactivex/Emitter<TT;>;)TS;", "Lio/reactivex/functions/BiConsumer<TS;Lio/reactivex/Emitter<TT;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator = { "SimpleBiGenerator", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator *self, id<IoReactivexFunctionsBiConsumer> consumer) {
  NSObject_init(self);
  JreStrongAssign(&self->consumer_, consumer);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(id<IoReactivexFunctionsBiConsumer> consumer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator, initWithIoReactivexFunctionsBiConsumer_, consumer)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(id<IoReactivexFunctionsBiConsumer> consumer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator, initWithIoReactivexFunctionsBiConsumer_, consumer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SimpleBiGenerator)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemDelay {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(self, itemDelay);
  return self;
}

- (id<OrgReactivestreamsPublisher>)applyWithId:(id)v {
  id<OrgReactivestreamsPublisher> p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(itemDelay_)) applyWithId:v], @"The itemDelay returned a null Publisher");
  return [((IoReactivexFlowable *) nil_chk([create_IoReactivexInternalOperatorsFlowableFlowableTakePublisher_initWithOrgReactivestreamsPublisher_withLong_(p, 1) mapWithIoReactivexFunctionsFunction:IoReactivexInternalFunctionsFunctions_justFunctionWithId_(v)])) defaultIfEmptyWithId:v];
}

- (void)dealloc {
  RELEASE_(itemDelay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgReactivestreamsPublisher;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "itemDelay_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;)V", "apply", "LNSObject;", "LJavaLangException;", "(TT;)Lorg/reactivestreams/Publisher<TT;>;", "Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<TU;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TT;Lorg/reactivestreams/Publisher<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction = { "ItemDelayFunction", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction *self, id<IoReactivexFunctionsFunction> itemDelay) {
  NSObject_init(self);
  JreStrongAssign(&self->itemDelay_, itemDelay);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> itemDelay) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction, initWithIoReactivexFunctionsFunction_, itemDelay)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> itemDelay) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction, initWithIoReactivexFunctionsFunction_, itemDelay)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ItemDelayFunction)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext_initWithOrgReactivestreamsSubscriber_(self, subscriber);
  return self;
}

- (void)acceptWithId:(id)v {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(subscriber_)) onNextWithId:v];
}

- (void)dealloc {
  RELEASE_(subscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:);
  methods[1].selector = @selector(acceptWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<TT;>;)V", "accept", "LNSObject;", "LJavaLangException;", "(TT;)V", "Lorg/reactivestreams/Subscriber<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Consumer<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext = { "SubscriberOnNext", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext *self, id<OrgReactivestreamsSubscriber> subscriber) {
  NSObject_init(self);
  JreStrongAssign(&self->subscriber_, subscriber);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext, initWithOrgReactivestreamsSubscriber_, subscriber)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext, initWithOrgReactivestreamsSubscriber_, subscriber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnNext)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError_initWithOrgReactivestreamsSubscriber_(self, subscriber);
  return self;
}

- (void)acceptWithId:(JavaLangThrowable *)v {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(subscriber_)) onErrorWithJavaLangThrowable:v];
}

- (void)dealloc {
  RELEASE_(subscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:);
  methods[1].selector = @selector(acceptWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<TT;>;)V", "accept", "LJavaLangThrowable;", "LJavaLangException;", "Lorg/reactivestreams/Subscriber<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Consumer<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError = { "SubscriberOnError", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError *self, id<OrgReactivestreamsSubscriber> subscriber) {
  NSObject_init(self);
  JreStrongAssign(&self->subscriber_, subscriber);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError, initWithOrgReactivestreamsSubscriber_, subscriber)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError, initWithOrgReactivestreamsSubscriber_, subscriber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnError)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)subscriber {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete_initWithOrgReactivestreamsSubscriber_(self, subscriber);
  return self;
}

- (void)run {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(subscriber_)) onComplete];
}

- (void)dealloc {
  RELEASE_(subscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<TT;>;)V", "LJavaLangException;", "Lorg/reactivestreams/Subscriber<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Action;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete = { "SubscriberOnComplete", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete *self, id<OrgReactivestreamsSubscriber> subscriber) {
  NSObject_init(self);
  JreStrongAssign(&self->subscriber_, subscriber);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete, initWithOrgReactivestreamsSubscriber_, subscriber)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> subscriber) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete, initWithOrgReactivestreamsSubscriber_, subscriber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_SubscriberOnComplete)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner

- (instancetype)initWithIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner
                                                withId:(id)t {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(self, combiner, t);
  return self;
}

- (id)applyWithId:(id)w {
  return [((id<IoReactivexFunctionsBiFunction>) nil_chk(combiner_)) applyWithId:t_ withId:w];
}

- (void)dealloc {
  RELEASE_(combiner_);
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsBiFunction:withId:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "combiner_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "t_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsBiFunction;LNSObject;", "(Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;TT;)V", "apply", "LNSObject;", "LJavaLangException;", "(TU;)TR;", "Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;", "TT;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<U:Ljava/lang/Object;R:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TU;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner = { "FlatMapWithCombinerInner", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner *self, id<IoReactivexFunctionsBiFunction> combiner, id t) {
  NSObject_init(self);
  JreStrongAssign(&self->combiner_, combiner);
  JreStrongAssign(&self->t_, t);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(id<IoReactivexFunctionsBiFunction> combiner, id t) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner, initWithIoReactivexFunctionsBiFunction_withId_, combiner, t)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(id<IoReactivexFunctionsBiFunction> combiner, id t) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner, initWithIoReactivexFunctionsBiFunction_withId_, combiner, t)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter

- (instancetype)initWithIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner
                      withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(self, combiner, mapper);
  return self;
}

- (id<OrgReactivestreamsPublisher>)applyWithId:(id)t {
  id<OrgReactivestreamsPublisher> u = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(mapper_)) applyWithId:t], @"The mapper returned a null Publisher");
  return create_IoReactivexInternalOperatorsFlowableFlowableMapPublisher_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_(u, create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(combiner_, t));
}

- (void)dealloc {
  RELEASE_(combiner_);
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgReactivestreamsPublisher;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsBiFunction:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "combiner_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "mapper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsBiFunction;LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TU;>;>;)V", "apply", "LNSObject;", "LJavaLangException;", "(TT;)Lorg/reactivestreams/Publisher<TR;>;", "Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;", "Lio/reactivex/functions/Function<-TT;+Lorg/reactivestreams/Publisher<+TU;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TT;Lorg/reactivestreams/Publisher<TR;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter = { "FlatMapWithCombinerOuter", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter *self, id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexFunctionsFunction> mapper) {
  NSObject_init(self);
  JreStrongAssign(&self->combiner_, combiner);
  JreStrongAssign(&self->mapper_, mapper);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter, initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_, combiner, mapper)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter, initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_, combiner, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapWithCombinerOuter)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(self, mapper);
  return self;
}

- (id<OrgReactivestreamsPublisher>)applyWithId:(id)t {
  return create_IoReactivexInternalOperatorsFlowableFlowableFromIterable_initWithJavaLangIterable_(IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(mapper_)) applyWithId:t], @"The mapper returned a null Iterable"));
}

- (void)dealloc {
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgReactivestreamsPublisher;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-TT;+Ljava/lang/Iterable<+TU;>;>;)V", "apply", "LNSObject;", "LJavaLangException;", "(TT;)Lorg/reactivestreams/Publisher<TU;>;", "Lio/reactivex/functions/Function<-TT;+Ljava/lang/Iterable<+TU;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TT;Lorg/reactivestreams/Publisher<TU;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable = { "FlatMapIntoIterable", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable *self, id<IoReactivexFunctionsFunction> mapper) {
  NSObject_init(self);
  JreStrongAssign(&self->mapper_, mapper);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable, initWithIoReactivexFunctionsFunction_, mapper)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable, initWithIoReactivexFunctionsFunction_, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_FlatMapIntoIterable)

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax)

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values_[1];

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax

+ (IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *)INSTANCE {
  return JreEnum(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax, INSTANCE);
}

- (void)acceptWithId:(id<OrgReactivestreamsSubscription>)t {
  [((id<OrgReactivestreamsSubscription>) nil_chk(t)) requestWithLong:JavaLangLong_MAX_VALUE];
}

+ (IOSObjectArray *)values {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values();
}

+ (IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *)valueOfWithNSString:(NSString *)name {
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_valueOfWithNSString_(name);
}

- (IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_Enum)toNSEnum {
  return (IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "[LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(acceptWithId:);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "accept", "LOrgReactivestreamsSubscription;", "LJavaLangException;", "valueOf", "LNSString;", &JreEnum(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax, INSTANCE), "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "Ljava/lang/Enum<Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$RequestMax;>;Lio/reactivex/functions/Consumer<Lorg/reactivestreams/Subscription;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax = { "RequestMax", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x4019, 3, 1, 6, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 1; i++) {
      (IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_initWithNSString_withInt_(e, JreEnumConstantName(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax)
  }
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_initWithNSString_withInt_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values() {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_initialize();
  return [IOSObjectArray arrayWithObjects:IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values_ count:1 type:IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_class_()];
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_valueOfWithNSString_(NSString *name) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_initialize();
  for (int i = 0; i < 1; i++) {
    IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *e = IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax *IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_fromOrdinal(NSUInteger ordinal) {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_RequestMax)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(self, zipper);
  return self;
}

- (id<OrgReactivestreamsPublisher>)applyWithId:(id<JavaUtilList>)list {
  return IoReactivexFlowable_zipIterableWithJavaLangIterable_withIoReactivexFunctionsFunction_withBoolean_withInt_(list, zipper_, false, IoReactivexFlowable_bufferSize());
}

- (void)dealloc {
  RELEASE_(zipper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgReactivestreamsPublisher;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "zipper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;)V", "apply", "LJavaUtilList;", "(Ljava/util/List<Lorg/reactivestreams/Publisher<+TT;>;>;)Lorg/reactivestreams/Publisher<+TR;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<Ljava/util/List<Lorg/reactivestreams/Publisher<+TT;>;>;Lorg/reactivestreams/Publisher<+TR;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction = { "ZipIterableFunction", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction *self, id<IoReactivexFunctionsFunction> zipper) {
  NSObject_init(self);
  JreStrongAssign(&self->zipper_, zipper);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> zipper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction, initWithIoReactivexFunctionsFunction_, zipper)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> zipper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction, initWithIoReactivexFunctionsFunction_, zipper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ZipIterableFunction)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)parent {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable_initWithIoReactivexFlowable_(self, parent);
  return self;
}

- (IoReactivexFlowablesConnectableFlowable *)call {
  return [((IoReactivexFlowable *) nil_chk(parent_)) replay];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexFlowablesConnectableFlowable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LIoReactivexFlowable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;", "(Lio/reactivex/Flowable<TT;>;)V", "()Lio/reactivex/flowables/ConnectableFlowable<TT;>;", "Lio/reactivex/Flowable<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable = { "ReplayCallable", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable_initWithIoReactivexFlowable_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable *self, IoReactivexFlowable *parent) {
  NSObject_init(self);
  JreStrongAssign(&self->parent_, parent);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable_initWithIoReactivexFlowable_(IoReactivexFlowable *parent) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable, initWithIoReactivexFlowable_, parent)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable_initWithIoReactivexFlowable_(IoReactivexFlowable *parent) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable, initWithIoReactivexFlowable_, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayCallable)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)parent
                                    withInt:(jint)bufferSize {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable_initWithIoReactivexFlowable_withInt_(self, parent, bufferSize);
  return self;
}

- (IoReactivexFlowablesConnectableFlowable *)call {
  return [((IoReactivexFlowable *) nil_chk(parent_)) replayWithInt:bufferSize_];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexFlowablesConnectableFlowable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:withInt:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LIoReactivexFlowable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "bufferSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;I", "(Lio/reactivex/Flowable<TT;>;I)V", "()Lio/reactivex/flowables/ConnectableFlowable<TT;>;", "Lio/reactivex/Flowable<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable = { "BufferedReplayCallable", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 2, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable_initWithIoReactivexFlowable_withInt_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable *self, IoReactivexFlowable *parent, jint bufferSize) {
  NSObject_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->bufferSize_ = bufferSize;
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable_initWithIoReactivexFlowable_withInt_(IoReactivexFlowable *parent, jint bufferSize) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable, initWithIoReactivexFlowable_withInt_, parent, bufferSize)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable_initWithIoReactivexFlowable_withInt_(IoReactivexFlowable *parent, jint bufferSize) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable, initWithIoReactivexFlowable_withInt_, parent, bufferSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedReplayCallable)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)parent
                                    withInt:(jint)bufferSize
                                   withLong:(jlong)time
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay_initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(self, parent, bufferSize, time, unit, scheduler);
  return self;
}

- (IoReactivexFlowablesConnectableFlowable *)call {
  return [((IoReactivexFlowable *) nil_chk(parent_)) replayWithInt:bufferSize_ withLong:time_ withJavaUtilConcurrentTimeUnit:unit_ withIoReactivexScheduler:scheduler_];
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexFlowablesConnectableFlowable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LIoReactivexFlowable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "bufferSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "time_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;IJLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "(Lio/reactivex/Flowable<TT;>;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V", "()Lio/reactivex/flowables/ConnectableFlowable<TT;>;", "Lio/reactivex/Flowable<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay = { "BufferedTimedReplay", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 5, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay_initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay *self, IoReactivexFlowable *parent, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->bufferSize_ = bufferSize;
  self->time_ = time;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->scheduler_, scheduler);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay_initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexFlowable *parent, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay, initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, parent, bufferSize, time, unit, scheduler)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay_initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexFlowable *parent, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay, initWithIoReactivexFlowable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, parent, bufferSize, time, unit, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_BufferedTimedReplay)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)parent
                                   withLong:(jlong)time
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(self, parent, time, unit, scheduler);
  return self;
}

- (IoReactivexFlowablesConnectableFlowable *)call {
  return [((IoReactivexFlowable *) nil_chk(parent_)) replayWithLong:time_ withJavaUtilConcurrentTimeUnit:unit_ withIoReactivexScheduler:scheduler_];
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexFlowablesConnectableFlowable;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LIoReactivexFlowable;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "time_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "(Lio/reactivex/Flowable<TT;>;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V", "()Lio/reactivex/flowables/ConnectableFlowable<TT;>;", "Lio/reactivex/Flowable<TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/flowables/ConnectableFlowable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay = { "TimedReplay", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 4, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay *self, IoReactivexFlowable *parent, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->time_ = time;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->scheduler_, scheduler);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexFlowable *parent, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay, initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, parent, time, unit, scheduler)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay_initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexFlowable *parent, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay, initWithIoReactivexFlowable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, parent, time, unit, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_TimedReplay)

@implementation IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)selector
                            withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(self, selector, scheduler);
  return self;
}

- (id<OrgReactivestreamsPublisher>)applyWithId:(IoReactivexFlowable *)t {
  id<OrgReactivestreamsPublisher> p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(selector_)) applyWithId:t], @"The selector returned a null Publisher");
  return [((IoReactivexFlowable *) nil_chk(IoReactivexFlowable_fromPublisherWithOrgReactivestreamsPublisher_(p))) observeOnWithIoReactivexScheduler:scheduler_];
}

- (void)dealloc {
  RELEASE_(selector_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgReactivestreamsPublisher;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:withIoReactivexScheduler:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "selector_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;LIoReactivexScheduler;", "(Lio/reactivex/functions/Function<-Lio/reactivex/Flowable<TT;>;+Lorg/reactivestreams/Publisher<TR;>;>;Lio/reactivex/Scheduler;)V", "apply", "LIoReactivexFlowable;", "LJavaLangException;", "(Lio/reactivex/Flowable<TT;>;)Lorg/reactivestreams/Publisher<TR;>;", "Lio/reactivex/functions/Function<-Lio/reactivex/Flowable<TT;>;+Lorg/reactivestreams/Publisher<TR;>;>;", "LIoReactivexInternalOperatorsFlowableFlowableInternalHelper;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<Lio/reactivex/Flowable<TT;>;Lorg/reactivestreams/Publisher<TR;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction = { "ReplayFunction", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 2, 2, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction *self, id<IoReactivexFunctionsFunction> selector, IoReactivexScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->selector_, selector);
  JreStrongAssign(&self->scheduler_, scheduler);
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction *new_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> selector, IoReactivexScheduler *scheduler) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction, initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_, selector, scheduler)
}

IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction *create_IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> selector, IoReactivexScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction, initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_, selector, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableInternalHelper_ReplayFunction)
