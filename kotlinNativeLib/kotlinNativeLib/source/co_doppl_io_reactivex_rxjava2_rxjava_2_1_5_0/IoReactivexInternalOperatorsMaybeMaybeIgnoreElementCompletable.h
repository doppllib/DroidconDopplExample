//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable

#if !defined (IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable))
#define IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToMaybe 1
#define INCLUDE_IoReactivexInternalFuseableFuseToMaybe 1
#include "IoReactivexInternalFuseableFuseToMaybe.h"

@class IoReactivexMaybe;
@protocol IoReactivexCompletableObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable : IoReactivexCompletable < IoReactivexInternalFuseableFuseToMaybe > {
 @public
  id<IoReactivexMaybeSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source;

- (IoReactivexMaybe *)fuseToMaybe;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable, source_, id<IoReactivexMaybeSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_initWithIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable *self, id<IoReactivexMaybeSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable *new_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_initWithIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable *create_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_initWithIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexCompletableObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexCompletableObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver, actual_, id<IoReactivexCompletableObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver_initWithIoReactivexCompletableObserver_(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver *self, id<IoReactivexCompletableObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver_initWithIoReactivexCompletableObserver_(id<IoReactivexCompletableObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver_initWithIoReactivexCompletableObserver_(id<IoReactivexCompletableObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable_IgnoreMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeIgnoreElementCompletable")
