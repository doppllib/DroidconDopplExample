//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFlatten
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFlatten

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFlatten_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFlatten))
#define IoReactivexInternalOperatorsMaybeMaybeFlatten_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeFlatten : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
              withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFlatten)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatten, mapper_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFlatten_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsMaybeMaybeFlatten *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> mapper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatten *new_IoReactivexInternalOperatorsMaybeMaybeFlatten_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> mapper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatten *create_IoReactivexInternalOperatorsMaybeMaybeFlatten_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> mapper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFlatten)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexFunctionsFunction;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;

@interface IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsFunction> mapper_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> mapper);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> mapper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> mapper);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver))
#define IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

@class IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver;
@class JavaLangThrowable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver : NSObject < IoReactivexMaybeObserver >

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver:(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver_initWithIoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver *self, IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *outer$);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver *new_IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver_initWithIoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver *create_IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver_initWithIoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver *outer$);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFlatten_FlatMapMaybeObserver_InnerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatten")
