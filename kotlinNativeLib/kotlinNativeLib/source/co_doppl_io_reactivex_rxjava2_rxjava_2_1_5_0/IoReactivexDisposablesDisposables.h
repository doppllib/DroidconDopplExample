//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexDisposablesDisposables")
#ifdef RESTRICT_IoReactivexDisposablesDisposables
#define INCLUDE_ALL_IoReactivexDisposablesDisposables 0
#else
#define INCLUDE_ALL_IoReactivexDisposablesDisposables 1
#endif
#undef RESTRICT_IoReactivexDisposablesDisposables

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexDisposablesDisposables_) && (INCLUDE_ALL_IoReactivexDisposablesDisposables || defined(INCLUDE_IoReactivexDisposablesDisposables))
#define IoReactivexDisposablesDisposables_

@protocol IoReactivexDisposablesDisposable;
@protocol IoReactivexFunctionsAction;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentFuture;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexDisposablesDisposables : NSObject

#pragma mark Public

+ (id<IoReactivexDisposablesDisposable> __nonnull)disposed;

+ (id<IoReactivexDisposablesDisposable> __nonnull)empty;

+ (id<IoReactivexDisposablesDisposable> __nonnull)fromActionWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction> __nonnull)run;

+ (id<IoReactivexDisposablesDisposable> __nonnull)fromFutureWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture> __nonnull)future;

+ (id<IoReactivexDisposablesDisposable> __nonnull)fromFutureWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture> __nonnull)future
                                                                             withBoolean:(jboolean)allowInterrupt;

+ (id<IoReactivexDisposablesDisposable> __nonnull)fromRunnableWithJavaLangRunnable:(id<JavaLangRunnable> __nonnull)run;

+ (id<IoReactivexDisposablesDisposable> __nonnull)fromSubscriptionWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription> __nonnull)subscription;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexDisposablesDisposables)

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromRunnableWithJavaLangRunnable_(id<JavaLangRunnable> run);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromActionWithIoReactivexFunctionsAction_(id<IoReactivexFunctionsAction> run);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromFutureWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromFutureWithJavaUtilConcurrentFuture_withBoolean_(id<JavaUtilConcurrentFuture> future, jboolean allowInterrupt);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromSubscriptionWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> subscription);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_empty();

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_disposed();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexDisposablesDisposables)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexDisposablesDisposables")
