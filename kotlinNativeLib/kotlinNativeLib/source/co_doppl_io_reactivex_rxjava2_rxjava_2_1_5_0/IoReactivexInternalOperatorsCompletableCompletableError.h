//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableError")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableError
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableError 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableError 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableError

#if !defined (IoReactivexInternalOperatorsCompletableCompletableError_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableError || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableError))
#define IoReactivexInternalOperatorsCompletableCompletableError_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "IoReactivexCompletable.h"

@class JavaLangThrowable;
@protocol IoReactivexCompletableObserver;

@interface IoReactivexInternalOperatorsCompletableCompletableError : IoReactivexCompletable {
 @public
  JavaLangThrowable *error_;
}

#pragma mark Public

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)error;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableError)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableError, error_, JavaLangThrowable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableError_initWithJavaLangThrowable_(IoReactivexInternalOperatorsCompletableCompletableError *self, JavaLangThrowable *error);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableError *new_IoReactivexInternalOperatorsCompletableCompletableError_initWithJavaLangThrowable_(JavaLangThrowable *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableError *create_IoReactivexInternalOperatorsCompletableCompletableError_initWithJavaLangThrowable_(JavaLangThrowable *error);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableError)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableError")
