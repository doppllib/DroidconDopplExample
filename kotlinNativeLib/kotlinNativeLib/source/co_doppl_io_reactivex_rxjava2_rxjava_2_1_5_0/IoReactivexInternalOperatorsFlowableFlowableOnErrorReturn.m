//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFunctionsFunction.h"
#include "IoReactivexInternalFunctionsObjectHelper.h"
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"
#include "IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn.h"
#include "IoReactivexInternalSubscribersSinglePostCompleteSubscriber.h"
#include "J2ObjC_source.h"
#include "OrgReactivestreamsSubscriber.h"
#include "java/lang/Throwable.h"

inline jlong IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_get_serialVersionUID();
#define IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_serialVersionUID -3740826063558713822LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
           withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier {
  IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(self, source, valueSupplier);
  return self;
}

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s {
  [((IoReactivexFlowable *) nil_chk(source_)) subscribeWithIoReactivexFlowableSubscriber:create_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(s, valueSupplier_)];
}

- (void)dealloc {
  RELEASE_(valueSupplier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFlowable:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(subscribeActualWithOrgReactivestreamsSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valueSupplier_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFlowable;LIoReactivexFunctionsFunction;", "(Lio/reactivex/Flowable<TT;>;Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;)V", "subscribeActual", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TT;>;)V", "Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn = { "FlowableOnErrorReturn", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn *self, IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> valueSupplier) {
  IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream_initWithIoReactivexFlowable_(self, source);
  JreStrongAssign(&self->valueSupplier_, valueSupplier);
}

IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn *new_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn, initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_, source, valueSupplier)
}

IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn *create_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_(IoReactivexFlowable *source, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn, initWithIoReactivexFlowable_withIoReactivexFunctionsFunction_, source, valueSupplier)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn)

@implementation IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier {
  IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(self, actual, valueSupplier);
  return self;
}

- (void)onNextWithId:(id)t {
  produced_++;
  [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onNextWithId:t];
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  id v;
  @try {
    v = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(valueSupplier_)) applyWithId:t], @"The valueSupplier returned a null value");
  }
  @catch (JavaLangThrowable *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(ex);
    [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onErrorWithJavaLangThrowable:create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ t, ex } count:2 type:JavaLangThrowable_class_()])];
    return;
  }
  [self completeWithId:v];
}

- (void)onComplete {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(actual_)) onComplete];
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)dealloc {
  RELEASE_(valueSupplier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(onErrorWithJavaLangThrowable:);
  methods[3].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "valueSupplier_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;LIoReactivexFunctionsFunction;", "(Lorg/reactivestreams/Subscriber<-TT;>;Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/functions/Function<-Ljava/lang/Throwable;+TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableOnErrorReturn;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber = { "OnErrorReturnSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 4, 2, 8, -1, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> valueSupplier) {
  IoReactivexInternalSubscribersSinglePostCompleteSubscriber_initWithOrgReactivestreamsSubscriber_(self, actual);
  JreStrongAssign(&self->valueSupplier_, valueSupplier);
}

IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_, actual, valueSupplier)
}

IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> valueSupplier) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_, actual, valueSupplier)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableOnErrorReturn_OnErrorReturnSubscriber)
