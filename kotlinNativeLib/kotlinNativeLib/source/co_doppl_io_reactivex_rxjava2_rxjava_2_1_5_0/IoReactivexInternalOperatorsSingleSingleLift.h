//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleLift")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleLift
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleLift 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleLift 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleLift

#if !defined (IoReactivexInternalOperatorsSingleSingleLift_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleLift || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleLift))
#define IoReactivexInternalOperatorsSingleSingleLift_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleOperator;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleLift : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexSingleOperator> onLift_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
                  withIoReactivexSingleOperator:(id<IoReactivexSingleOperator>)onLift;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleLift)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleLift, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleLift, onLift_, id<IoReactivexSingleOperator>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(IoReactivexInternalOperatorsSingleSingleLift *self, id<IoReactivexSingleSource> source, id<IoReactivexSingleOperator> onLift);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleLift *new_IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(id<IoReactivexSingleSource> source, id<IoReactivexSingleOperator> onLift) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleLift *create_IoReactivexInternalOperatorsSingleSingleLift_initWithIoReactivexSingleSource_withIoReactivexSingleOperator_(id<IoReactivexSingleSource> source, id<IoReactivexSingleOperator> onLift);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleLift)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleLift")
