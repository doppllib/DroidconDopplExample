//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeToSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeToSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeToSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeToSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeToSingle

#if !defined (IoReactivexInternalOperatorsMaybeMaybeToSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeToSingle || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeToSingle))
#define IoReactivexInternalOperatorsMaybeMaybeToSingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "IoReactivexSingle.h"

#define RESTRICT_IoReactivexInternalFuseableHasUpstreamMaybeSource 1
#define INCLUDE_IoReactivexInternalFuseableHasUpstreamMaybeSource 1
#include "IoReactivexInternalFuseableHasUpstreamMaybeSource.h"

@protocol IoReactivexMaybeSource;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeToSingle : IoReactivexSingle < IoReactivexInternalFuseableHasUpstreamMaybeSource > {
 @public
  id<IoReactivexMaybeSource> source_;
  id defaultValue_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
                                        withId:(id)defaultValue;

- (id<IoReactivexMaybeSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)observer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeToSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeToSingle, source_, id<IoReactivexMaybeSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeToSingle, defaultValue_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeToSingle_initWithIoReactivexMaybeSource_withId_(IoReactivexInternalOperatorsMaybeMaybeToSingle *self, id<IoReactivexMaybeSource> source, id defaultValue);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeToSingle *new_IoReactivexInternalOperatorsMaybeMaybeToSingle_initWithIoReactivexMaybeSource_withId_(id<IoReactivexMaybeSource> source, id defaultValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeToSingle *create_IoReactivexInternalOperatorsMaybeMaybeToSingle_initWithIoReactivexMaybeSource_withId_(id<IoReactivexMaybeSource> source, id defaultValue);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeToSingle)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeToSingle || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber))
#define IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "IoReactivexMaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

@class JavaLangThrowable;
@protocol IoReactivexSingleObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id defaultValue_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                                           withId:(id)defaultValue;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber, defaultValue_, id)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber_initWithIoReactivexSingleObserver_withId_(IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber *self, id<IoReactivexSingleObserver> actual, id defaultValue);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber *new_IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber_initWithIoReactivexSingleObserver_withId_(id<IoReactivexSingleObserver> actual, id defaultValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber *create_IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber_initWithIoReactivexSingleObserver_withId_(id<IoReactivexSingleObserver> actual, id defaultValue);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeToSingle_ToSingleMaybeSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeToSingle")
