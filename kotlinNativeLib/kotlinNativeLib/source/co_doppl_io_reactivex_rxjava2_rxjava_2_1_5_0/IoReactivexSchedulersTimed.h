//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexSchedulersTimed")
#ifdef RESTRICT_IoReactivexSchedulersTimed
#define INCLUDE_ALL_IoReactivexSchedulersTimed 0
#else
#define INCLUDE_ALL_IoReactivexSchedulersTimed 1
#endif
#undef RESTRICT_IoReactivexSchedulersTimed

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexSchedulersTimed_) && (INCLUDE_ALL_IoReactivexSchedulersTimed || defined(INCLUDE_IoReactivexSchedulersTimed))
#define IoReactivexSchedulersTimed_

@class JavaUtilConcurrentTimeUnit;

@interface IoReactivexSchedulersTimed : NSObject {
 @public
  id value_;
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
}

#pragma mark Public

- (instancetype)initWithId:(id __nonnull)value
                  withLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit * __nonnull)unit;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (jlong)time;

- (jlong)timeWithJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit * __nonnull)unit;

- (NSString *)description;

- (JavaUtilConcurrentTimeUnit * __nonnull)unit;

- (id __nonnull)value;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexSchedulersTimed)

J2OBJC_FIELD_SETTER(IoReactivexSchedulersTimed, value_, id)
J2OBJC_FIELD_SETTER(IoReactivexSchedulersTimed, unit_, JavaUtilConcurrentTimeUnit *)

FOUNDATION_EXPORT void IoReactivexSchedulersTimed_initWithId_withLong_withJavaUtilConcurrentTimeUnit_(IoReactivexSchedulersTimed *self, id value, jlong time, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT IoReactivexSchedulersTimed *new_IoReactivexSchedulersTimed_initWithId_withLong_withJavaUtilConcurrentTimeUnit_(id value, jlong time, JavaUtilConcurrentTimeUnit *unit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexSchedulersTimed *create_IoReactivexSchedulersTimed_initWithId_withLong_withJavaUtilConcurrentTimeUnit_(id value, jlong time, JavaUtilConcurrentTimeUnit *unit);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexSchedulersTimed)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexSchedulersTimed")
