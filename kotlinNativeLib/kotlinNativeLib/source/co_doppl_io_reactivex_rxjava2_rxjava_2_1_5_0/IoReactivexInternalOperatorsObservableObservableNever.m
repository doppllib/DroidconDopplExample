//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IoReactivexInternalDisposablesEmptyDisposable.h"
#include "IoReactivexInternalOperatorsObservableObservableNever.h"
#include "IoReactivexObservable.h"
#include "IoReactivexObserver.h"
#include "J2ObjC_source.h"

@interface IoReactivexInternalOperatorsObservableObservableNever ()

- (instancetype)init;

@end

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableNever_init(IoReactivexInternalOperatorsObservableObservableNever *self);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableNever *new_IoReactivexInternalOperatorsObservableObservableNever_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableNever *create_IoReactivexInternalOperatorsObservableObservableNever_init();

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsObservableObservableNever)

IoReactivexObservable *IoReactivexInternalOperatorsObservableObservableNever_INSTANCE;

@implementation IoReactivexInternalOperatorsObservableObservableNever

+ (IoReactivexObservable *)INSTANCE {
  return IoReactivexInternalOperatorsObservableObservableNever_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexInternalOperatorsObservableObservableNever_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)o {
  [((id<IoReactivexObserver>) nil_chk(o)) onSubscribeWithIoReactivexDisposablesDisposable:JreLoadEnum(IoReactivexInternalDisposablesEmptyDisposable, NEVER)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LIoReactivexObservable;", .constantValue.asLong = 0, 0x19, -1, 3, 4, -1 },
  };
  static const void *ptrTable[] = { "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-Ljava/lang/Object;>;)V", &IoReactivexInternalOperatorsObservableObservableNever_INSTANCE, "Lio/reactivex/Observable<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableNever = { "ObservableNever", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, 4, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableNever;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsObservableObservableNever class]) {
    JreStrongAssignAndConsume(&IoReactivexInternalOperatorsObservableObservableNever_INSTANCE, new_IoReactivexInternalOperatorsObservableObservableNever_init());
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsObservableObservableNever)
  }
}

@end

void IoReactivexInternalOperatorsObservableObservableNever_init(IoReactivexInternalOperatorsObservableObservableNever *self) {
  IoReactivexObservable_init(self);
}

IoReactivexInternalOperatorsObservableObservableNever *new_IoReactivexInternalOperatorsObservableObservableNever_init() {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableNever, init)
}

IoReactivexInternalOperatorsObservableObservableNever *create_IoReactivexInternalOperatorsObservableObservableNever_init() {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableNever, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableNever)
