//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeEmpty")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeEmpty
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeEmpty 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeEmpty 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeEmpty

#if !defined (IoReactivexInternalOperatorsMaybeMaybeEmpty_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeEmpty || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeEmpty))
#define IoReactivexInternalOperatorsMaybeMaybeEmpty_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "IoReactivexMaybe.h"

#define RESTRICT_IoReactivexInternalFuseableScalarCallable 1
#define INCLUDE_IoReactivexInternalFuseableScalarCallable 1
#include "IoReactivexInternalFuseableScalarCallable.h"

@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeEmpty : IoReactivexMaybe < IoReactivexInternalFuseableScalarCallable >

+ (IoReactivexInternalOperatorsMaybeMaybeEmpty *)INSTANCE;

#pragma mark Public

- (instancetype)init;

- (id)call;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

@end

J2OBJC_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeEmpty)

inline IoReactivexInternalOperatorsMaybeMaybeEmpty *IoReactivexInternalOperatorsMaybeMaybeEmpty_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeEmpty *IoReactivexInternalOperatorsMaybeMaybeEmpty_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoReactivexInternalOperatorsMaybeMaybeEmpty, INSTANCE, IoReactivexInternalOperatorsMaybeMaybeEmpty *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeEmpty_init(IoReactivexInternalOperatorsMaybeMaybeEmpty *self);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeEmpty *new_IoReactivexInternalOperatorsMaybeMaybeEmpty_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeEmpty *create_IoReactivexInternalOperatorsMaybeMaybeEmpty_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeEmpty)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeEmpty")
