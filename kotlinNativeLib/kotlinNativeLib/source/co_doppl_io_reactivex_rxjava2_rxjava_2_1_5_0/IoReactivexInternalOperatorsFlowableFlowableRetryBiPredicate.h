//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate))
#define IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream.h"

@class IoReactivexFlowable;
@protocol IoReactivexFunctionsBiPredicate;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsBiPredicate> predicate_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)source
        withIoReactivexFunctionsBiPredicate:(id<IoReactivexFunctionsBiPredicate>)predicate;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIoReactivexFlowable:(IoReactivexFlowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate, predicate_, id<IoReactivexFunctionsBiPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_initWithIoReactivexFlowable_withIoReactivexFunctionsBiPredicate_(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate *self, IoReactivexFlowable *source, id<IoReactivexFunctionsBiPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate *new_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_initWithIoReactivexFlowable_withIoReactivexFunctionsBiPredicate_(IoReactivexFlowable *source, id<IoReactivexFunctionsBiPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate *create_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_initWithIoReactivexFlowable_withIoReactivexFunctionsBiPredicate_(IoReactivexFlowable *source, id<IoReactivexFunctionsBiPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

@class IoReactivexInternalSubscriptionsSubscriptionArbiter;
@class JavaLangThrowable;
@protocol IoReactivexFunctionsBiPredicate;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexFlowableSubscriber > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  IoReactivexInternalSubscriptionsSubscriptionArbiter *sa_;
  id<OrgReactivestreamsPublisher> source_;
  id<IoReactivexFunctionsBiPredicate> predicate_;
  jint retries_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                 withIoReactivexFunctionsBiPredicate:(id<IoReactivexFunctionsBiPredicate>)predicate
withIoReactivexInternalSubscriptionsSubscriptionArbiter:(IoReactivexInternalSubscriptionsSubscriptionArbiter *)sa
                     withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source;

- (void)subscribeNext;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber, sa_, IoReactivexInternalSubscriptionsSubscriptionArbiter *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber, source_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber, predicate_, id<IoReactivexFunctionsBiPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiPredicate_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsBiPredicate> predicate, IoReactivexInternalSubscriptionsSubscriptionArbiter *sa, id<OrgReactivestreamsPublisher> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiPredicate_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsBiPredicate> predicate, IoReactivexInternalSubscriptionsSubscriptionArbiter *sa, id<OrgReactivestreamsPublisher> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsBiPredicate_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsBiPredicate> predicate, IoReactivexInternalSubscriptionsSubscriptionArbiter *sa, id<OrgReactivestreamsPublisher> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate_RetryBiSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableRetryBiPredicate")
