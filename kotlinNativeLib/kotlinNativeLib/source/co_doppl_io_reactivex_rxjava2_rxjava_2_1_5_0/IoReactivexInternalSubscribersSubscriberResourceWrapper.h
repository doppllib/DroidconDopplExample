//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscribersSubscriberResourceWrapper")
#ifdef RESTRICT_IoReactivexInternalSubscribersSubscriberResourceWrapper
#define INCLUDE_ALL_IoReactivexInternalSubscribersSubscriberResourceWrapper 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscribersSubscriberResourceWrapper 1
#endif
#undef RESTRICT_IoReactivexInternalSubscribersSubscriberResourceWrapper

#if !defined (IoReactivexInternalSubscribersSubscriberResourceWrapper_) && (INCLUDE_ALL_IoReactivexInternalSubscribersSubscriberResourceWrapper || defined(INCLUDE_IoReactivexInternalSubscribersSubscriberResourceWrapper))
#define IoReactivexInternalSubscribersSubscriberResourceWrapper_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexFlowableSubscriber 1
#define INCLUDE_IoReactivexFlowableSubscriber 1
#include "IoReactivexFlowableSubscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "IoReactivexDisposablesDisposable.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "OrgReactivestreamsSubscription.h"

@class JavaLangThrowable;
@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionUnaryOperator;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalSubscribersSubscriberResourceWrapper : JavaUtilConcurrentAtomicAtomicReference < IoReactivexFlowableSubscriber, IoReactivexDisposablesDisposable, OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  JavaUtilConcurrentAtomicAtomicReference *subscription_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

- (id<IoReactivexDisposablesDisposable>)accumulateAndGetWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (void)cancel;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndAccumulateWithId:(id<IoReactivexDisposablesDisposable>)arg0
                            withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)arg1;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (id<IoReactivexDisposablesDisposable>)getAndUpdateWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (void)setResourceWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)resource;

- (id<IoReactivexDisposablesDisposable>)updateAndGetWithJavaUtilFunctionUnaryOperator:(id<JavaUtilFunctionUnaryOperator>)arg0;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscribersSubscriberResourceWrapper)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersSubscriberResourceWrapper, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersSubscriberResourceWrapper, subscription_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalSubscribersSubscriberResourceWrapper_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalSubscribersSubscriberResourceWrapper *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalSubscribersSubscriberResourceWrapper *new_IoReactivexInternalSubscribersSubscriberResourceWrapper_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscribersSubscriberResourceWrapper *create_IoReactivexInternalSubscribersSubscriberResourceWrapper_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscribersSubscriberResourceWrapper)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscribersSubscriberResourceWrapper")
