//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidOsBuild")
#ifdef RESTRICT_AndroidOsBuild
#define INCLUDE_ALL_AndroidOsBuild 0
#else
#define INCLUDE_ALL_AndroidOsBuild 1
#endif
#undef RESTRICT_AndroidOsBuild

#if !defined (AndroidOsBuild_) && (INCLUDE_ALL_AndroidOsBuild || defined(INCLUDE_AndroidOsBuild))
#define AndroidOsBuild_

@interface AndroidOsBuild : NSObject

+ (NSString *)UNKNOWN;

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidOsBuild)

inline NSString *AndroidOsBuild_get_UNKNOWN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AndroidOsBuild_UNKNOWN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsBuild, UNKNOWN, NSString *)

FOUNDATION_EXPORT void AndroidOsBuild_init(AndroidOsBuild *self);

FOUNDATION_EXPORT AndroidOsBuild *new_AndroidOsBuild_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsBuild *create_AndroidOsBuild_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBuild)

#endif

#if !defined (AndroidOsBuild_VERSION_CODES_) && (INCLUDE_ALL_AndroidOsBuild || defined(INCLUDE_AndroidOsBuild_VERSION_CODES))
#define AndroidOsBuild_VERSION_CODES_

@interface AndroidOsBuild_VERSION_CODES : NSObject

+ (jint)CUR_DEVELOPMENT;

+ (jint)BASE;

+ (jint)BASE_1_1;

+ (jint)CUPCAKE;

+ (jint)DONUT;

+ (jint)ECLAIR;

+ (jint)ECLAIR_0_1;

+ (jint)ECLAIR_MR1;

+ (jint)FROYO;

+ (jint)GINGERBREAD;

+ (jint)GINGERBREAD_MR1;

+ (jint)HONEYCOMB;

+ (jint)HONEYCOMB_MR1;

+ (jint)HONEYCOMB_MR2;

+ (jint)ICE_CREAM_SANDWICH;

+ (jint)ICE_CREAM_SANDWICH_MR1;

+ (jint)JELLY_BEAN;

+ (jint)JELLY_BEAN_MR1;

+ (jint)JELLY_BEAN_MR2;

+ (jint)KITKAT;

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidOsBuild_VERSION_CODES)

inline jint AndroidOsBuild_VERSION_CODES_get_CUR_DEVELOPMENT();
#define AndroidOsBuild_VERSION_CODES_CUR_DEVELOPMENT 10000
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, CUR_DEVELOPMENT, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_BASE();
#define AndroidOsBuild_VERSION_CODES_BASE 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, BASE, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_BASE_1_1();
#define AndroidOsBuild_VERSION_CODES_BASE_1_1 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, BASE_1_1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_CUPCAKE();
#define AndroidOsBuild_VERSION_CODES_CUPCAKE 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, CUPCAKE, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_DONUT();
#define AndroidOsBuild_VERSION_CODES_DONUT 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, DONUT, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_ECLAIR();
#define AndroidOsBuild_VERSION_CODES_ECLAIR 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ECLAIR, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_ECLAIR_0_1();
#define AndroidOsBuild_VERSION_CODES_ECLAIR_0_1 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ECLAIR_0_1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_ECLAIR_MR1();
#define AndroidOsBuild_VERSION_CODES_ECLAIR_MR1 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ECLAIR_MR1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_FROYO();
#define AndroidOsBuild_VERSION_CODES_FROYO 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, FROYO, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_GINGERBREAD();
#define AndroidOsBuild_VERSION_CODES_GINGERBREAD 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, GINGERBREAD, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_GINGERBREAD_MR1();
#define AndroidOsBuild_VERSION_CODES_GINGERBREAD_MR1 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, GINGERBREAD_MR1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_HONEYCOMB();
#define AndroidOsBuild_VERSION_CODES_HONEYCOMB 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, HONEYCOMB, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_HONEYCOMB_MR1();
#define AndroidOsBuild_VERSION_CODES_HONEYCOMB_MR1 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, HONEYCOMB_MR1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_HONEYCOMB_MR2();
#define AndroidOsBuild_VERSION_CODES_HONEYCOMB_MR2 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, HONEYCOMB_MR2, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_ICE_CREAM_SANDWICH();
#define AndroidOsBuild_VERSION_CODES_ICE_CREAM_SANDWICH 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ICE_CREAM_SANDWICH, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_ICE_CREAM_SANDWICH_MR1();
#define AndroidOsBuild_VERSION_CODES_ICE_CREAM_SANDWICH_MR1 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ICE_CREAM_SANDWICH_MR1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_JELLY_BEAN();
#define AndroidOsBuild_VERSION_CODES_JELLY_BEAN 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, JELLY_BEAN, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_JELLY_BEAN_MR1();
#define AndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR1 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, JELLY_BEAN_MR1, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_JELLY_BEAN_MR2();
#define AndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR2 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, JELLY_BEAN_MR2, jint)

inline jint AndroidOsBuild_VERSION_CODES_get_KITKAT();
#define AndroidOsBuild_VERSION_CODES_KITKAT 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, KITKAT, jint)

FOUNDATION_EXPORT void AndroidOsBuild_VERSION_CODES_init(AndroidOsBuild_VERSION_CODES *self);

FOUNDATION_EXPORT AndroidOsBuild_VERSION_CODES *new_AndroidOsBuild_VERSION_CODES_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsBuild_VERSION_CODES *create_AndroidOsBuild_VERSION_CODES_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBuild_VERSION_CODES)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidOsBuild")
