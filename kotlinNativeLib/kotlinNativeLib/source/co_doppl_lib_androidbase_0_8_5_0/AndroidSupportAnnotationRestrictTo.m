//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidSupportAnnotationRestrictTo.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

@interface AndroidSupportAnnotationRestrictTo : NSObject

@end

__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationRestrictTo__Annotations$0();

__attribute__((unused)) static void AndroidSupportAnnotationRestrictTo_Scope_initWithNSString_withInt_(AndroidSupportAnnotationRestrictTo_Scope *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationRestrictTo_Scope__Annotations$0();

@implementation AndroidSupportAnnotationRestrictTo

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LAndroidSupportAnnotationRestrictTo_Scope;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidSupportAnnotationRestrictTo_Scope;", (void *)&AndroidSupportAnnotationRestrictTo__Annotations$0 };
  static const J2ObjcClassInfo _AndroidSupportAnnotationRestrictTo = { "RestrictTo", "android.support.annotation", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, 0, -1, -1, 1 };
  return &_AndroidSupportAnnotationRestrictTo;
}

@end

IOSObjectArray *AndroidSupportAnnotationRestrictTo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE), JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, CONSTRUCTOR), JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, PACKAGE) } count:6 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationRestrictTo)

J2OBJC_INITIALIZED_DEFN(AndroidSupportAnnotationRestrictTo_Scope)

AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_values_[5];

@implementation AndroidSupportAnnotationRestrictTo_Scope

+ (AndroidSupportAnnotationRestrictTo_Scope *)LIBRARY {
  return JreEnum(AndroidSupportAnnotationRestrictTo_Scope, LIBRARY);
}

+ (AndroidSupportAnnotationRestrictTo_Scope *)LIBRARY_GROUP {
  return JreEnum(AndroidSupportAnnotationRestrictTo_Scope, LIBRARY_GROUP);
}

+ (AndroidSupportAnnotationRestrictTo_Scope *)GROUP_ID {
  return JreEnum(AndroidSupportAnnotationRestrictTo_Scope, GROUP_ID);
}

+ (AndroidSupportAnnotationRestrictTo_Scope *)TESTS {
  return JreEnum(AndroidSupportAnnotationRestrictTo_Scope, TESTS);
}

+ (AndroidSupportAnnotationRestrictTo_Scope *)SUBCLASSES {
  return JreEnum(AndroidSupportAnnotationRestrictTo_Scope, SUBCLASSES);
}

+ (IOSObjectArray *)values {
  return AndroidSupportAnnotationRestrictTo_Scope_values();
}

+ (AndroidSupportAnnotationRestrictTo_Scope *)valueOfWithNSString:(NSString *)name {
  return AndroidSupportAnnotationRestrictTo_Scope_valueOfWithNSString_(name);
}

- (AndroidSupportAnnotationRestrictTo_Scope_Enum)toNSEnum {
  return (AndroidSupportAnnotationRestrictTo_Scope_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LAndroidSupportAnnotationRestrictTo_Scope;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidSupportAnnotationRestrictTo_Scope;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LIBRARY", "LAndroidSupportAnnotationRestrictTo_Scope;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "LIBRARY_GROUP", "LAndroidSupportAnnotationRestrictTo_Scope;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "GROUP_ID", "LAndroidSupportAnnotationRestrictTo_Scope;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, 5 },
    { "TESTS", "LAndroidSupportAnnotationRestrictTo_Scope;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "SUBCLASSES", "LAndroidSupportAnnotationRestrictTo_Scope;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidSupportAnnotationRestrictTo_Scope, LIBRARY), &JreEnum(AndroidSupportAnnotationRestrictTo_Scope, LIBRARY_GROUP), &JreEnum(AndroidSupportAnnotationRestrictTo_Scope, GROUP_ID), (void *)&AndroidSupportAnnotationRestrictTo_Scope__Annotations$0, &JreEnum(AndroidSupportAnnotationRestrictTo_Scope, TESTS), &JreEnum(AndroidSupportAnnotationRestrictTo_Scope, SUBCLASSES), "LAndroidSupportAnnotationRestrictTo;", "Ljava/lang/Enum<Landroid/support/annotation/RestrictTo$Scope;>;" };
  static const J2ObjcClassInfo _AndroidSupportAnnotationRestrictTo_Scope = { "Scope", "android.support.annotation", ptrTable, methods, fields, 7, 0x4019, 2, 5, 8, -1, -1, 9, -1 };
  return &_AndroidSupportAnnotationRestrictTo_Scope;
}

+ (void)initialize {
  if (self == [AndroidSupportAnnotationRestrictTo_Scope class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 5; i++) {
      (AndroidSupportAnnotationRestrictTo_Scope_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      AndroidSupportAnnotationRestrictTo_Scope_initWithNSString_withInt_(e, JreEnumConstantName(AndroidSupportAnnotationRestrictTo_Scope_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(AndroidSupportAnnotationRestrictTo_Scope)
  }
}

@end

void AndroidSupportAnnotationRestrictTo_Scope_initWithNSString_withInt_(AndroidSupportAnnotationRestrictTo_Scope *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *AndroidSupportAnnotationRestrictTo_Scope_values() {
  AndroidSupportAnnotationRestrictTo_Scope_initialize();
  return [IOSObjectArray arrayWithObjects:AndroidSupportAnnotationRestrictTo_Scope_values_ count:5 type:AndroidSupportAnnotationRestrictTo_Scope_class_()];
}

AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_valueOfWithNSString_(NSString *name) {
  AndroidSupportAnnotationRestrictTo_Scope_initialize();
  for (int i = 0; i < 5; i++) {
    AndroidSupportAnnotationRestrictTo_Scope *e = AndroidSupportAnnotationRestrictTo_Scope_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_fromOrdinal(NSUInteger ordinal) {
  AndroidSupportAnnotationRestrictTo_Scope_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return AndroidSupportAnnotationRestrictTo_Scope_values_[ordinal];
}

IOSObjectArray *AndroidSupportAnnotationRestrictTo_Scope__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationRestrictTo_Scope)
