//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException")
#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseCorruptException
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException 0
#else
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException 1
#endif
#undef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseCorruptException

#if !defined (AndroidDatabaseSqliteSQLiteDatabaseCorruptException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabaseCorruptException))
#define AndroidDatabaseSqliteSQLiteDatabaseCorruptException_

#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
#include "AndroidDatabaseSqliteSQLiteException.h"

@class JavaLangThrowable;

@interface AndroidDatabaseSqliteSQLiteDatabaseCorruptException : AndroidDatabaseSqliteSQLiteException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)error;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabaseCorruptException)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init(AndroidDatabaseSqliteSQLiteDatabaseCorruptException *self);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *new_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *create_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init();

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabaseCorruptException *self, NSString *error);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *new_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *create_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(NSString *error);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabaseCorruptException)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException")
