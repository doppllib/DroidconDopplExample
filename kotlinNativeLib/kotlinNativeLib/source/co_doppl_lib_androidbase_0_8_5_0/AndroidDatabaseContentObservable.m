//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseContentObservable.h"
#include "AndroidDatabaseContentObserver.h"
#include "AndroidDatabaseObservable.h"
#include "AndroidNetUri.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"

__attribute__((unused)) static IOSObjectArray *AndroidDatabaseContentObservable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *AndroidDatabaseContentObservable__Annotations$1();

@implementation AndroidDatabaseContentObservable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidDatabaseContentObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)registerObserverWithId:(AndroidDatabaseContentObserver *)observer {
  [super registerObserverWithId:observer];
}

- (void)dispatchChangeWithBoolean:(jboolean)selfChange {
  [self dispatchChangeWithBoolean:selfChange withAndroidNetUri:nil];
}

- (void)dispatchChangeWithBoolean:(jboolean)selfChange
                withAndroidNetUri:(AndroidNetUri *)uri {
  @synchronized(mObservers_) {
    for (AndroidDatabaseContentObserver * __strong observer in nil_chk(mObservers_)) {
      if (!selfChange || [((AndroidDatabaseContentObserver *) nil_chk(observer)) deliverSelfNotifications]) {
        [((AndroidDatabaseContentObserver *) nil_chk(observer)) dispatchChangeWithBoolean:selfChange withAndroidNetUri:uri];
      }
    }
  }
}

- (void)notifyChangeWithBoolean:(jboolean)selfChange {
  @synchronized(mObservers_) {
    for (AndroidDatabaseContentObserver * __strong observer in nil_chk(mObservers_)) {
      [((AndroidDatabaseContentObserver *) nil_chk(observer)) onChangeWithBoolean:selfChange withAndroidNetUri:nil];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, 4, -1 },
    { NULL, "V", 0x1, 2, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, 7, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(registerObserverWithId:);
  methods[2].selector = @selector(dispatchChangeWithBoolean:);
  methods[3].selector = @selector(dispatchChangeWithBoolean:withAndroidNetUri:);
  methods[4].selector = @selector(notifyChangeWithBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "registerObserver", "LAndroidDatabaseContentObserver;", "dispatchChange", "Z", (void *)&AndroidDatabaseContentObservable__Annotations$0, "ZLAndroidNetUri;", "notifyChange", (void *)&AndroidDatabaseContentObservable__Annotations$1, "Landroid/database/Observable<Landroid/database/ContentObserver;>;" };
  static const J2ObjcClassInfo _AndroidDatabaseContentObservable = { "ContentObservable", "android.database", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, 8, -1 };
  return &_AndroidDatabaseContentObservable;
}

@end

void AndroidDatabaseContentObservable_init(AndroidDatabaseContentObservable *self) {
  AndroidDatabaseObservable_init(self);
}

AndroidDatabaseContentObservable *new_AndroidDatabaseContentObservable_init() {
  J2OBJC_NEW_IMPL(AndroidDatabaseContentObservable, init)
}

AndroidDatabaseContentObservable *create_AndroidDatabaseContentObservable_init() {
  J2OBJC_CREATE_IMPL(AndroidDatabaseContentObservable, init)
}

IOSObjectArray *AndroidDatabaseContentObservable__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *AndroidDatabaseContentObservable__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseContentObservable)
