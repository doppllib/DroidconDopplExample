//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidAppQueuedWork.h"
#include "AndroidAppSharedPreferencesImpl.h"
#include "AndroidContentContext.h"
#include "AndroidContentSharedPreferences.h"
#include "AndroidInternalUtilXmlUtils.h"
#include "AndroidOsFileUtils.h"
#include "AndroidOsHandler.h"
#include "AndroidOsLooper.h"
#include "J2ObjC_source.h"
#include "android/util/Log.h"
#include "com/google/android/collect/Maps.h"
#include "java/io/File.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Long.h"
#include "java/lang/Runnable.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/WeakHashMap.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/ExecutorService.h"
#include "org/xmlpull/v1/XmlPullParserException.h"

@class AndroidAppSharedPreferencesImpl_MemoryCommitResult;

@interface AndroidAppSharedPreferencesImpl () {
 @public
  JavaIoFile *mFile_;
  AndroidOsHandler *mainHandler_;
  JavaIoFile *mBackupFile_;
  jint mMode_;
  id<JavaUtilMap> mMap_;
  jint mDiskWritesInFlight_;
  jboolean mLoaded_;
  jlong mStatTimestamp_;
  jlong mStatSize_;
  id mWritingToDiskLock_;
  JavaUtilWeakHashMap *mListeners_;
}

+ (JavaIoFile *)makeBackupFileWithJavaIoFile:(JavaIoFile *)prefsFile;

- (void)enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr
                                                          withJavaLangRunnable:(id<JavaLangRunnable>)postWriteRunnable;

+ (JavaIoFileOutputStream *)createFileOutputStreamWithJavaIoFile:(JavaIoFile *)file;

- (void)writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr;

+ (void)setFilePermissionsFromModeWithNSString:(NSString *)name
                                       withInt:(jint)mode
                                       withInt:(jint)extraPermissions;

@end

J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mFile_, JavaIoFile *)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mainHandler_, AndroidOsHandler *)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mBackupFile_, JavaIoFile *)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mWritingToDiskLock_, id)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mListeners_, JavaUtilWeakHashMap *)

inline NSString *AndroidAppSharedPreferencesImpl_get_TAG();
static NSString *AndroidAppSharedPreferencesImpl_TAG = @"ApplicationContext";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidAppSharedPreferencesImpl, TAG, NSString *)

inline jboolean AndroidAppSharedPreferencesImpl_get_DEBUG();
#define AndroidAppSharedPreferencesImpl_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(AndroidAppSharedPreferencesImpl, DEBUG, jboolean)

inline id AndroidAppSharedPreferencesImpl_get_mContent();
static id AndroidAppSharedPreferencesImpl_mContent;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidAppSharedPreferencesImpl, mContent, id)

__attribute__((unused)) static JavaIoFile *AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(JavaIoFile *prefsFile);

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr, id<JavaLangRunnable> postWriteRunnable);

__attribute__((unused)) static JavaIoFileOutputStream *AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(JavaIoFile *file);

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr);

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_(NSString *name, jint mode, jint extraPermissions);

@interface AndroidAppSharedPreferencesImpl_MemoryCommitResult : NSObject {
 @public
  jboolean changesMade_;
  id<JavaUtilList> keysModified_;
  id<JavaUtilSet> listeners_;
  id<JavaUtilMap> mapToWriteToDisk_;
  JavaUtilConcurrentCountDownLatch *writtenToDiskLatch_;
  volatile_jboolean writeToDiskResult_;
}

- (instancetype)init;

- (void)setDiskWriteResultWithBoolean:(jboolean)result;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_MemoryCommitResult)

J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, keysModified_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, listeners_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, mapToWriteToDisk_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, writtenToDiskLatch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_MemoryCommitResult_init(AndroidAppSharedPreferencesImpl_MemoryCommitResult *self);

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_MemoryCommitResult *new_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_MemoryCommitResult *create_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidAppSharedPreferencesImpl_MemoryCommitResult)

@interface AndroidAppSharedPreferencesImpl_EditorImpl () {
 @public
  AndroidAppSharedPreferencesImpl *this$0_;
  id<JavaUtilMap> mModified_;
  jboolean mClear_;
}

- (AndroidAppSharedPreferencesImpl_MemoryCommitResult *)commitToMemory;

- (void)notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr;

@end

J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_EditorImpl, mModified_, id<JavaUtilMap>)

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_MemoryCommitResult *AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(AndroidAppSharedPreferencesImpl_EditorImpl *self);

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr);

@interface AndroidAppSharedPreferencesImpl_EditorImpl_1 : NSObject < JavaLangRunnable > {
 @public
  AndroidAppSharedPreferencesImpl_MemoryCommitResult *val$mcr_;
}

- (instancetype)initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl_1)

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_1 *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_1 *new_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_1 *create_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);

@interface AndroidAppSharedPreferencesImpl_EditorImpl_2 : NSObject < JavaLangRunnable > {
 @public
  id<JavaLangRunnable> val$awaitCommit_;
}

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl_2)

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(AndroidAppSharedPreferencesImpl_EditorImpl_2 *self, id<JavaLangRunnable> capture$0);

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_2 *new_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_2 *create_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0);

@interface AndroidAppSharedPreferencesImpl_EditorImpl_3 : NSObject < JavaLangRunnable > {
 @public
  AndroidAppSharedPreferencesImpl_EditorImpl *this$0_;
  AndroidAppSharedPreferencesImpl_MemoryCommitResult *val$mcr_;
}

- (instancetype)initWithAndroidAppSharedPreferencesImpl_EditorImpl:(AndroidAppSharedPreferencesImpl_EditorImpl *)outer$
            withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl_3)

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_3 *self, AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_3 *new_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_3 *create_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);

@interface AndroidAppSharedPreferencesImpl_1 : NSObject < JavaLangRunnable > {
 @public
  AndroidAppSharedPreferencesImpl *this$0_;
  AndroidAppSharedPreferencesImpl_MemoryCommitResult *val$mcr_;
  id<JavaLangRunnable> val$postWriteRunnable_;
}

- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$
 withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0
                                   withJavaLangRunnable:(id<JavaLangRunnable>)capture$1;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_1)

__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl_1 *self, AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1);

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_1 *new_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidAppSharedPreferencesImpl_1 *create_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1);

J2OBJC_INITIALIZED_DEFN(AndroidAppSharedPreferencesImpl)

@implementation AndroidAppSharedPreferencesImpl

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
                           withInt:(jint)mode
                   withJavaUtilMap:(id<JavaUtilMap>)initialContents
              withAndroidOsHandler:(AndroidOsHandler *)mainHandler {
  AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(self, file, mode, initialContents, mainHandler);
  return self;
}

+ (JavaIoFile *)makeBackupFileWithJavaIoFile:(JavaIoFile *)prefsFile {
  return AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(prefsFile);
}

- (jboolean)isLoaded {
  @synchronized(self) {
    return mLoaded_;
  }
}

- (jboolean)hasFileChangedUnexpectedly {
  @synchronized(self) {
    if (mDiskWritesInFlight_ > 0) {
      return false;
    }
  }
  AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
  if (!AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([((JavaIoFile *) nil_chk(mFile_)) getPath], stat)) {
    return true;
  }
  @synchronized(self) {
    return mStatTimestamp_ != stat->mtime_ || mStatSize_ != stat->size_;
  }
}

- (void)replaceWithJavaUtilMap:(id<JavaUtilMap>)newContents
withAndroidOsFileUtils_FileStatus:(AndroidOsFileUtils_FileStatus *)stat {
  @synchronized(self) {
    mLoaded_ = true;
    if (newContents != nil) {
      JreStrongAssign(&mMap_, newContents);
    }
    if (stat != nil) {
      mStatTimestamp_ = stat->mtime_;
      mStatSize_ = stat->size_;
    }
  }
}

- (void)registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener {
  @synchronized(self) {
    [((JavaUtilWeakHashMap *) nil_chk(mListeners_)) putWithId:listener withId:AndroidAppSharedPreferencesImpl_mContent];
  }
}

- (void)unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener {
  @synchronized(self) {
    [((JavaUtilWeakHashMap *) nil_chk(mListeners_)) removeWithId:listener];
  }
}

- (id<JavaUtilMap>)getAll {
  @synchronized(self) {
    return JreRetainedLocalValue(create_JavaUtilHashMap_initWithJavaUtilMap_(mMap_));
  }
}

- (NSString *)getStringWithNSString:(NSString *)key
                       withNSString:(NSString *)defValue {
  @synchronized(self) {
    NSString *v = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [NSString class]);
    return JreRetainedLocalValue(v != nil ? v : defValue);
  }
}

- (jint)getIntWithNSString:(NSString *)key
                   withInt:(jint)defValue {
  @synchronized(self) {
    JavaLangInteger *v = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangInteger class]);
    return v != nil ? [v intValue] : defValue;
  }
}

- (jlong)getLongWithNSString:(NSString *)key
                    withLong:(jlong)defValue {
  @synchronized(self) {
    JavaLangLong *v = (JavaLangLong *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangLong class]);
    return v != nil ? [v longLongValue] : defValue;
  }
}

- (jfloat)getFloatWithNSString:(NSString *)key
                     withFloat:(jfloat)defValue {
  @synchronized(self) {
    JavaLangFloat *v = (JavaLangFloat *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangFloat class]);
    return v != nil ? [v floatValue] : defValue;
  }
}

- (jboolean)getBooleanWithNSString:(NSString *)key
                       withBoolean:(jboolean)defValue {
  @synchronized(self) {
    JavaLangBoolean *v = (JavaLangBoolean *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangBoolean class]);
    return v != nil ? [v booleanValue] : defValue;
  }
}

- (jboolean)containsWithNSString:(NSString *)key {
  @synchronized(self) {
    return [((id<JavaUtilMap>) nil_chk(mMap_)) containsKeyWithId:key];
  }
}

- (id<AndroidContentSharedPreferences_Editor>)edit {
  return create_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(self);
}

- (void)enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr
                                                          withJavaLangRunnable:(id<JavaLangRunnable>)postWriteRunnable {
  AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(self, mcr, postWriteRunnable);
}

+ (JavaIoFileOutputStream *)createFileOutputStreamWithJavaIoFile:(JavaIoFile *)file {
  return AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(file);
}

- (void)writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr {
  AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
}

+ (void)setFilePermissionsFromModeWithNSString:(NSString *)name
                                       withInt:(jint)mode
                                       withInt:(jint)extraPermissions {
  AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_(name, mode, extraPermissions);
}

- (void)dealloc {
  RELEASE_(mFile_);
  RELEASE_(mainHandler_);
  RELEASE_(mBackupFile_);
  RELEASE_(mMap_);
  RELEASE_(mWritingToDiskLock_);
  RELEASE_(mListeners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0xa, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileOutputStream;", 0xa, 23, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoFile:withInt:withJavaUtilMap:withAndroidOsHandler:);
  methods[1].selector = @selector(makeBackupFileWithJavaIoFile:);
  methods[2].selector = @selector(isLoaded);
  methods[3].selector = @selector(hasFileChangedUnexpectedly);
  methods[4].selector = @selector(replaceWithJavaUtilMap:withAndroidOsFileUtils_FileStatus:);
  methods[5].selector = @selector(registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:);
  methods[6].selector = @selector(unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:);
  methods[7].selector = @selector(getAll);
  methods[8].selector = @selector(getStringWithNSString:withNSString:);
  methods[9].selector = @selector(getIntWithNSString:withInt:);
  methods[10].selector = @selector(getLongWithNSString:withLong:);
  methods[11].selector = @selector(getFloatWithNSString:withFloat:);
  methods[12].selector = @selector(getBooleanWithNSString:withBoolean:);
  methods[13].selector = @selector(containsWithNSString:);
  methods[14].selector = @selector(edit);
  methods[15].selector = @selector(enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:withJavaLangRunnable:);
  methods[16].selector = @selector(createFileOutputStreamWithJavaIoFile:);
  methods[17].selector = @selector(writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
  methods[18].selector = @selector(setFilePermissionsFromModeWithNSString:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "DEBUG", "Z", .constantValue.asBOOL = AndroidAppSharedPreferencesImpl_DEBUG, 0x1a, -1, -1, -1, -1 },
    { "mFile_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mainHandler_", "LAndroidOsHandler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mBackupFile_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mMode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 29, -1 },
    { "mDiskWritesInFlight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mLoaded_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mStatTimestamp_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mStatSize_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mWritingToDiskLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mContent", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "mListeners_", "LJavaUtilWeakHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 31, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoFile;ILJavaUtilMap;LAndroidOsHandler;", "makeBackupFile", "LJavaIoFile;", "replace", "LJavaUtilMap;LAndroidOsFileUtils_FileStatus;", "registerOnSharedPreferenceChangeListener", "LAndroidContentSharedPreferences_OnSharedPreferenceChangeListener;", "unregisterOnSharedPreferenceChangeListener", "()Ljava/util/Map<Ljava/lang/String;*>;", "getString", "LNSString;LNSString;", "getInt", "LNSString;I", "getLong", "LNSString;J", "getFloat", "LNSString;F", "getBoolean", "LNSString;Z", "contains", "LNSString;", "enqueueDiskWrite", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;LJavaLangRunnable;", "createFileOutputStream", "writeToFile", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", "setFilePermissionsFromMode", "LNSString;II", &AndroidAppSharedPreferencesImpl_TAG, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", &AndroidAppSharedPreferencesImpl_mContent, "Ljava/util/WeakHashMap<Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;Ljava/lang/Object;>;", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;LAndroidAppSharedPreferencesImpl_EditorImpl;" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl = { "SharedPreferencesImpl", "android.app", ptrTable, methods, fields, 7, 0x11, 19, 14, -1, 32, -1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl;
}

+ (void)initialize {
  if (self == [AndroidAppSharedPreferencesImpl class]) {
    JreStrongAssignAndConsume(&AndroidAppSharedPreferencesImpl_mContent, new_NSObject_init());
    J2OBJC_SET_INITIALIZED(AndroidAppSharedPreferencesImpl)
  }
}

@end

void AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(AndroidAppSharedPreferencesImpl *self, JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) {
  NSObject_init(self);
  self->mDiskWritesInFlight_ = 0;
  self->mLoaded_ = false;
  JreStrongAssignAndConsume(&self->mWritingToDiskLock_, new_NSObject_init());
  JreStrongAssign(&self->mFile_, file);
  JreStrongAssign(&self->mainHandler_, mainHandler);
  JreStrongAssign(&self->mBackupFile_, AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(file));
  self->mMode_ = mode;
  self->mLoaded_ = (initialContents != nil);
  JreStrongAssign(&self->mMap_, initialContents != nil ? initialContents : create_JavaUtilHashMap_init());
  AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
  if (AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([((JavaIoFile *) nil_chk(file)) getPath], stat)) {
    self->mStatTimestamp_ = stat->mtime_;
  }
  JreStrongAssignAndConsume(&self->mListeners_, new_JavaUtilWeakHashMap_init());
}

AndroidAppSharedPreferencesImpl *new_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl, initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_, file, mode, initialContents, mainHandler)
}

AndroidAppSharedPreferencesImpl *create_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl, initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_, file, mode, initialContents, mainHandler)
}

JavaIoFile *AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(JavaIoFile *prefsFile) {
  AndroidAppSharedPreferencesImpl_initialize();
  return create_JavaIoFile_initWithNSString_(JreStrcat("$$", [((JavaIoFile *) nil_chk(prefsFile)) getPath], @".bak"));
}

void AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr, id<JavaLangRunnable> postWriteRunnable) {
  id<JavaLangRunnable> writeToDiskRunnable = create_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(self, mcr, postWriteRunnable);
  jboolean isFromSyncCommit = postWriteRunnable == nil;
  if (isFromSyncCommit) {
    jboolean wasEmpty = false;
    @synchronized(self) {
      wasEmpty = (self->mDiskWritesInFlight_ == 1);
    }
    if (wasEmpty) {
      [writeToDiskRunnable run];
      return;
    }
  }
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(AndroidAppQueuedWork_singleThreadExecutor())) executeWithJavaLangRunnable:writeToDiskRunnable];
}

JavaIoFileOutputStream *AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(JavaIoFile *file) {
  AndroidAppSharedPreferencesImpl_initialize();
  JavaIoFileOutputStream *str = nil;
  @try {
    str = create_JavaIoFileOutputStream_initWithJavaIoFile_(file);
  }
  @catch (JavaIoFileNotFoundException *e) {
    JavaIoFile *parent = [((JavaIoFile *) nil_chk(file)) getParentFile];
    if (![((JavaIoFile *) nil_chk(parent)) mkdir]) {
      AndroidUtilLog_eWithNSString_withNSString_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@", @"Couldn't create directory for SharedPreferences file ", file));
      return nil;
    }
    AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_([parent getPath], AndroidOsFileUtils_S_IRWXU | AndroidOsFileUtils_S_IRWXG | AndroidOsFileUtils_S_IXOTH, -1, -1);
    @try {
      str = create_JavaIoFileOutputStream_initWithJavaIoFile_(file);
    }
    @catch (JavaIoFileNotFoundException *e2) {
      AndroidUtilLog_eWithNSString_withNSString_withJavaLangThrowable_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@", @"Couldn't create SharedPreferences file ", file), e2);
    }
  }
  return str;
}

void AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr) {
  if ([((JavaIoFile *) nil_chk(self->mFile_)) exists]) {
    if (!((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->changesMade_) {
      [mcr setDiskWriteResultWithBoolean:true];
      return;
    }
    if (![((JavaIoFile *) nil_chk(self->mBackupFile_)) exists]) {
      if (![self->mFile_ renameToWithJavaIoFile:self->mBackupFile_]) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@$@", @"Couldn't rename file ", self->mFile_, @" to backup file ", self->mBackupFile_));
        [mcr setDiskWriteResultWithBoolean:false];
        return;
      }
    }
    else {
      [self->mFile_ delete__];
    }
  }
  @try {
    JavaIoFileOutputStream *str = AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(self->mFile_);
    if (str == nil) {
      [((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr)) setDiskWriteResultWithBoolean:false];
      return;
    }
    AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withJavaIoOutputStream_(((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->mapToWriteToDisk_, str);
    AndroidOsFileUtils_syncWithJavaIoFileOutputStream_(str);
    [str close];
    AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_([self->mFile_ getPath], self->mMode_, 0);
    AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
    if (AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([self->mFile_ getPath], stat)) {
      @synchronized(self) {
        self->mStatTimestamp_ = stat->mtime_;
        self->mStatSize_ = stat->size_;
      }
    }
    [((JavaIoFile *) nil_chk(self->mBackupFile_)) delete__];
    [mcr setDiskWriteResultWithBoolean:true];
    return;
  }
  @catch (OrgXmlpullV1XmlPullParserException *e) {
    AndroidUtilLog_wWithNSString_withNSString_withJavaLangThrowable_(AndroidAppSharedPreferencesImpl_TAG, @"writeToFile: Got exception:", e);
  }
  @catch (JavaIoIOException *e) {
    AndroidUtilLog_wWithNSString_withNSString_withJavaLangThrowable_(AndroidAppSharedPreferencesImpl_TAG, @"writeToFile: Got exception:", e);
  }
  if ([self->mFile_ exists]) {
    if (![self->mFile_ delete__]) {
      AndroidUtilLog_eWithNSString_withNSString_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@", @"Couldn't clean up partially-written file ", self->mFile_));
    }
  }
  [((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr)) setDiskWriteResultWithBoolean:false];
}

void AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_(NSString *name, jint mode, jint extraPermissions) {
  AndroidAppSharedPreferencesImpl_initialize();
  jint perms = AndroidOsFileUtils_S_IRUSR | AndroidOsFileUtils_S_IWUSR | AndroidOsFileUtils_S_IRGRP | AndroidOsFileUtils_S_IWGRP | extraPermissions;
  if ((mode & AndroidContentContext_MODE_WORLD_READABLE) != 0) {
    perms |= AndroidOsFileUtils_S_IROTH;
  }
  if ((mode & AndroidContentContext_MODE_WORLD_WRITEABLE) != 0) {
    perms |= AndroidOsFileUtils_S_IWOTH;
  }
  AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_(name, perms, - 1, - 1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppSharedPreferencesImpl)

@implementation AndroidAppSharedPreferencesImpl_MemoryCommitResult

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidAppSharedPreferencesImpl_MemoryCommitResult_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setDiskWriteResultWithBoolean:(jboolean)result {
  JreAssignVolatileBoolean(&writeToDiskResult_, result);
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(writtenToDiskLatch_)) countDown];
}

- (void)dealloc {
  RELEASE_(keysModified_);
  RELEASE_(listeners_);
  RELEASE_(mapToWriteToDisk_);
  RELEASE_(writtenToDiskLatch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setDiskWriteResultWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "changesMade_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "keysModified_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1, -1, -1, 2, -1 },
    { "listeners_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1, -1, -1, 3, -1 },
    { "mapToWriteToDisk_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1, -1, -1, 4, -1 },
    { "writtenToDiskLatch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "writeToDiskResult_", "Z", .constantValue.asLong = 0, 0x41, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDiskWriteResult", "Z", "Ljava/util/List<Ljava/lang/String;>;", "Ljava/util/Set<Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;>;", "Ljava/util/Map<**>;", "LAndroidAppSharedPreferencesImpl;" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_MemoryCommitResult = { "MemoryCommitResult", "android.app", ptrTable, methods, fields, 7, 0xa, 2, 6, 5, -1, -1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl_MemoryCommitResult;
}

@end

void AndroidAppSharedPreferencesImpl_MemoryCommitResult_init(AndroidAppSharedPreferencesImpl_MemoryCommitResult *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->writtenToDiskLatch_, new_JavaUtilConcurrentCountDownLatch_initWithInt_(1));
  JreAssignVolatileBoolean(&self->writeToDiskResult_, false);
}

AndroidAppSharedPreferencesImpl_MemoryCommitResult *new_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init() {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_MemoryCommitResult, init)
}

AndroidAppSharedPreferencesImpl_MemoryCommitResult *create_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init() {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_MemoryCommitResult, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppSharedPreferencesImpl_MemoryCommitResult)

@implementation AndroidAppSharedPreferencesImpl_EditorImpl

- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$ {
  AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(self, outer$);
  return self;
}

- (id<AndroidContentSharedPreferences_Editor>)putStringWithNSString:(NSString *)key
                                                       withNSString:(NSString *)value {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:value];
    return JreRetainedLocalValue(self);
  }
}

- (id<AndroidContentSharedPreferences_Editor>)putIntWithNSString:(NSString *)key
                                                         withInt:(jint)value {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangInteger_valueOfWithInt_(value)];
    return JreRetainedLocalValue(self);
  }
}

- (id<AndroidContentSharedPreferences_Editor>)putLongWithNSString:(NSString *)key
                                                         withLong:(jlong)value {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangLong_valueOfWithLong_(value)];
    return JreRetainedLocalValue(self);
  }
}

- (id<AndroidContentSharedPreferences_Editor>)putFloatWithNSString:(NSString *)key
                                                         withFloat:(jfloat)value {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangFloat_valueOfWithFloat_(value)];
    return JreRetainedLocalValue(self);
  }
}

- (id<AndroidContentSharedPreferences_Editor>)putBooleanWithNSString:(NSString *)key
                                                         withBoolean:(jboolean)value {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangBoolean_valueOfWithBoolean_(value)];
    return JreRetainedLocalValue(self);
  }
}

- (id<AndroidContentSharedPreferences_Editor>)removeWithNSString:(NSString *)key {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:self];
    return JreRetainedLocalValue(self);
  }
}

- (id<AndroidContentSharedPreferences_Editor>)clear {
  @synchronized(self) {
    mClear_ = true;
    return JreRetainedLocalValue(self);
  }
}

- (void)apply {
  AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr = AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(self);
  id<JavaLangRunnable> awaitCommit = create_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(mcr);
  AndroidAppQueuedWork_addWithJavaLangRunnable_(awaitCommit);
  id<JavaLangRunnable> postWriteRunnable = create_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(awaitCommit);
  AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(this$0_, mcr, postWriteRunnable);
  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
}

- (AndroidAppSharedPreferencesImpl_MemoryCommitResult *)commitToMemory {
  return AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(self);
}

- (jboolean)commit {
  AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr = AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(self);
  AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(this$0_, mcr, nil);
  @try {
    [((JavaUtilConcurrentCountDownLatch *) nil_chk(((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->writtenToDiskLatch_)) await];
  }
  @catch (JavaLangInterruptedException *e) {
    return false;
  }
  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
  return JreLoadVolatileBoolean(&mcr->writeToDiskResult_);
}

- (void)notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr {
  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(mModified_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl:);
  methods[1].selector = @selector(putStringWithNSString:withNSString:);
  methods[2].selector = @selector(putIntWithNSString:withInt:);
  methods[3].selector = @selector(putLongWithNSString:withLong:);
  methods[4].selector = @selector(putFloatWithNSString:withFloat:);
  methods[5].selector = @selector(putBooleanWithNSString:withBoolean:);
  methods[6].selector = @selector(removeWithNSString:);
  methods[7].selector = @selector(clear);
  methods[8].selector = @selector(apply);
  methods[9].selector = @selector(commitToMemory);
  methods[10].selector = @selector(commit);
  methods[11].selector = @selector(notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidAppSharedPreferencesImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "mModified_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
    { "mClear_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "putString", "LNSString;LNSString;", "putInt", "LNSString;I", "putLong", "LNSString;J", "putFloat", "LNSString;F", "putBoolean", "LNSString;Z", "remove", "LNSString;", "notifyListeners", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "LAndroidAppSharedPreferencesImpl;" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl = { "EditorImpl", "android.app", ptrTable, methods, fields, 7, 0x11, 12, 3, 15, -1, -1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl_EditorImpl;
}

@end

void AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->mModified_, ComGoogleAndroidCollectMaps_newHashMap());
  self->mClear_ = false;
}

AndroidAppSharedPreferencesImpl_EditorImpl *new_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl *outer$) {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl, initWithAndroidAppSharedPreferencesImpl_, outer$)
}

AndroidAppSharedPreferencesImpl_EditorImpl *create_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl *outer$) {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl, initWithAndroidAppSharedPreferencesImpl_, outer$)
}

AndroidAppSharedPreferencesImpl_MemoryCommitResult *AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(AndroidAppSharedPreferencesImpl_EditorImpl *self) {
  AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr = create_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init();
  @synchronized(self->this$0_) {
    if (self->this$0_->mDiskWritesInFlight_ > 0) {
      JreStrongAssignAndConsume(&self->this$0_->mMap_, new_JavaUtilHashMap_initWithJavaUtilMap_(self->this$0_->mMap_));
    }
    JreStrongAssign(&mcr->mapToWriteToDisk_, self->this$0_->mMap_);
    self->this$0_->mDiskWritesInFlight_++;
    jboolean hasListeners = [((JavaUtilWeakHashMap *) nil_chk(self->this$0_->mListeners_)) size] > 0;
    if (hasListeners) {
      JreStrongAssignAndConsume(&mcr->keysModified_, new_JavaUtilArrayList_init());
      JreStrongAssignAndConsume(&mcr->listeners_, new_JavaUtilHashSet_initWithJavaUtilCollection_([self->this$0_->mListeners_ keySet]));
    }
    @synchronized(self) {
      if (self->mClear_) {
        if (![((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) isEmpty]) {
          mcr->changesMade_ = true;
          [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) clear];
        }
        self->mClear_ = false;
      }
      for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(self->mModified_)) entrySet])) {
        NSString *k = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
        id v = [e getValue];
        if (v == self) {
          if (![((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) containsKeyWithId:k]) {
            continue;
          }
          [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) removeWithId:k];
        }
        else {
          jboolean isSame = false;
          if ([((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) containsKeyWithId:k]) {
            id existingValue = [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) getWithId:k];
            if (existingValue != nil && [existingValue isEqual:v]) {
              continue;
            }
          }
          [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) putWithId:k withId:v];
        }
        mcr->changesMade_ = true;
        if (hasListeners) {
          [((id<JavaUtilList>) nil_chk(mcr->keysModified_)) addWithId:k];
        }
      }
      [self->mModified_ clear];
    }
  }
  return mcr;
}

void AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr) {
  if (((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->listeners_ == nil || mcr->keysModified_ == nil || [mcr->keysModified_ size] == 0) {
    return;
  }
  if (AndroidOsLooper_myLooper() == AndroidOsLooper_getMainLooper()) {
    for (jint i = [((id<JavaUtilList>) nil_chk(mcr->keysModified_)) size] - 1; i >= 0; i--) {
      NSString *key = [((id<JavaUtilList>) nil_chk(mcr->keysModified_)) getWithInt:i];
      for (id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener> __strong listener in nil_chk(mcr->listeners_)) {
        if (listener != nil) {
          [listener onSharedPreferenceChangedWithAndroidContentSharedPreferences:self->this$0_ withNSString:key];
        }
      }
    }
  }
  else {
    [((AndroidOsHandler *) nil_chk(self->this$0_->mainHandler_)) postWithJavaLangRunnable:create_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppSharedPreferencesImpl_EditorImpl)

@implementation AndroidAppSharedPreferencesImpl_EditorImpl_1

- (instancetype)initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0 {
  AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, capture$0);
  return self;
}

- (void)run {
  @try {
    [((JavaUtilConcurrentCountDownLatch *) nil_chk(((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(val$mcr_))->writtenToDiskLatch_)) await];
  }
  @catch (JavaLangInterruptedException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(val$mcr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$mcr_", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl_EditorImpl;", "apply" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl_1 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl_EditorImpl_1;
}

@end

void AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_1 *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
  JreStrongAssign(&self->val$mcr_, capture$0);
  NSObject_init(self);
}

AndroidAppSharedPreferencesImpl_EditorImpl_1 *new_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_1, initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_, capture$0)
}

AndroidAppSharedPreferencesImpl_EditorImpl_1 *create_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_1, initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_, capture$0)
}

@implementation AndroidAppSharedPreferencesImpl_EditorImpl_2

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(self, capture$0);
  return self;
}

- (void)run {
  [((id<JavaLangRunnable>) nil_chk(val$awaitCommit_)) run];
  AndroidAppQueuedWork_removeWithJavaLangRunnable_(val$awaitCommit_);
}

- (void)dealloc {
  RELEASE_(val$awaitCommit_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangRunnable:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$awaitCommit_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl_EditorImpl;", "apply" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl_2 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl_EditorImpl_2;
}

@end

void AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(AndroidAppSharedPreferencesImpl_EditorImpl_2 *self, id<JavaLangRunnable> capture$0) {
  JreStrongAssign(&self->val$awaitCommit_, capture$0);
  NSObject_init(self);
}

AndroidAppSharedPreferencesImpl_EditorImpl_2 *new_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_2, initWithJavaLangRunnable_, capture$0)
}

AndroidAppSharedPreferencesImpl_EditorImpl_2 *create_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_2, initWithJavaLangRunnable_, capture$0)
}

@implementation AndroidAppSharedPreferencesImpl_EditorImpl_3

- (instancetype)initWithAndroidAppSharedPreferencesImpl_EditorImpl:(AndroidAppSharedPreferencesImpl_EditorImpl *)outer$
            withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0 {
  AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, outer$, capture$0);
  return self;
}

- (void)run {
  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(this$0_, val$mcr_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$mcr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl_EditorImpl:withAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidAppSharedPreferencesImpl_EditorImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$mcr_", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl_EditorImpl;", "notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl_3 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl_EditorImpl_3;
}

@end

void AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_3 *self, AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$mcr_, capture$0);
  NSObject_init(self);
}

AndroidAppSharedPreferencesImpl_EditorImpl_3 *new_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_3, initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_, outer$, capture$0)
}

AndroidAppSharedPreferencesImpl_EditorImpl_3 *create_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_3, initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_, outer$, capture$0)
}

@implementation AndroidAppSharedPreferencesImpl_1

- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$
 withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0
                                   withJavaLangRunnable:(id<JavaLangRunnable>)capture$1 {
  AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)run {
  @synchronized(this$0_->mWritingToDiskLock_) {
    AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(this$0_, val$mcr_);
  }
  @synchronized(this$0_) {
    this$0_->mDiskWritesInFlight_--;
  }
  if (val$postWriteRunnable_ != nil) {
    [val$postWriteRunnable_ run];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$mcr_);
  RELEASE_(val$postWriteRunnable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl:withAndroidAppSharedPreferencesImpl_MemoryCommitResult:withJavaLangRunnable:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidAppSharedPreferencesImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$mcr_", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$postWriteRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl;", "enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:withJavaLangRunnable:" };
  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_1 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 3, 0, -1, 1, -1, -1 };
  return &_AndroidAppSharedPreferencesImpl_1;
}

@end

void AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl_1 *self, AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$mcr_, capture$0);
  JreStrongAssign(&self->val$postWriteRunnable_, capture$1);
  NSObject_init(self);
}

AndroidAppSharedPreferencesImpl_1 *new_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) {
  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_1, initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_, outer$, capture$0, capture$1)
}

AndroidAppSharedPreferencesImpl_1 *create_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) {
  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_1, initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_, outer$, capture$0, capture$1)
}
