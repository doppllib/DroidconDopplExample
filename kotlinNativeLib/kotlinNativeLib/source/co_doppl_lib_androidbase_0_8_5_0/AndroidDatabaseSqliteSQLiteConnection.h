//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection")
#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteConnection
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection 0
#else
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection 1
#endif
#undef RESTRICT_AndroidDatabaseSqliteSQLiteConnection

#if !defined (AndroidDatabaseSqliteSQLiteConnection_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection || defined(INCLUDE_AndroidDatabaseSqliteSQLiteConnection))
#define AndroidDatabaseSqliteSQLiteConnection_

#define RESTRICT_AndroidOsCancellationSignal 1
#define INCLUDE_AndroidOsCancellationSignal_OnCancelListener 1
#include "AndroidOsCancellationSignal.h"

@class AndroidDatabaseCursorWindow;
@class AndroidDatabaseSqliteSQLiteConnectionPool;
@class AndroidDatabaseSqliteSQLiteDatabaseConfiguration;
@class AndroidDatabaseSqliteSQLiteStatementInfo;
@class AndroidOsCancellationSignal;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol AndroidUtilPrinter;

@interface AndroidDatabaseSqliteSQLiteConnection : NSObject < AndroidOsCancellationSignal_OnCancelListener >

#pragma mark Public

- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
                       withBoolean:(jboolean)verbose;

- (void)executeWithNSString:(NSString *)sql
          withNSObjectArray:(IOSObjectArray *)bindArgs
withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignal;

- (jint)executeForChangedRowCountWithNSString:(NSString *)sql
                            withNSObjectArray:(IOSObjectArray *)bindArgs
              withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignal;

- (jint)executeForCursorWindowWithNSString:(NSString *)sql
                         withNSObjectArray:(IOSObjectArray *)bindArgs
           withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
                                   withInt:(jint)startPos
                                   withInt:(jint)requiredPos
                               withBoolean:(jboolean)countAllRows
           withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignal;

- (jlong)executeForLastInsertedRowIdWithNSString:(NSString *)sql
                               withNSObjectArray:(IOSObjectArray *)bindArgs
                 withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignal;

- (jlong)executeForLongWithNSString:(NSString *)sql
                  withNSObjectArray:(IOSObjectArray *)bindArgs
    withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignal;

- (NSString *)executeForStringWithNSString:(NSString *)sql
                         withNSObjectArray:(IOSObjectArray *)bindArgs
           withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignal;

- (jint)getConnectionId;

- (jboolean)isPrimaryConnection;

- (void)onCancel;

- (void)prepareWithNSString:(NSString *)sql
withAndroidDatabaseSqliteSQLiteStatementInfo:(AndroidDatabaseSqliteSQLiteStatementInfo *)outStatementInfo;

- (NSString *)description;

#pragma mark Protected

- (void)java_finalize;

#pragma mark Package-Private

- (void)close;

- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList;

- (void)collectDbStatsUnsafeWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList;

- (NSString *)describeCurrentOperationUnsafe;

- (void)dumpUnsafeWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
                             withBoolean:(jboolean)verbose;

- (jboolean)isPreparedStatementInCacheWithNSString:(NSString *)sql;

+ (AndroidDatabaseSqliteSQLiteConnection *)openWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)pool
                                        withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
                                                                                     withInt:(jint)connectionId
                                                                                 withBoolean:(jboolean)primaryConnection;

- (void)reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration;

- (void)setOnlyAllowReadOnlyOperationsWithBoolean:(jboolean)readOnly;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnection)

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnection_openWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnection)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection")
