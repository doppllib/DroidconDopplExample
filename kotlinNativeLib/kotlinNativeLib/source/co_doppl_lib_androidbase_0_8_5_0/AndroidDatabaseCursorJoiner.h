//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCursorJoiner")
#ifdef RESTRICT_AndroidDatabaseCursorJoiner
#define INCLUDE_ALL_AndroidDatabaseCursorJoiner 0
#else
#define INCLUDE_ALL_AndroidDatabaseCursorJoiner 1
#endif
#undef RESTRICT_AndroidDatabaseCursorJoiner

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidDatabaseCursorJoiner_) && (INCLUDE_ALL_AndroidDatabaseCursorJoiner || defined(INCLUDE_AndroidDatabaseCursorJoiner))
#define AndroidDatabaseCursorJoiner_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@class AndroidDatabaseCursorJoiner_Result;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilSpliterator;

@interface AndroidDatabaseCursorJoiner : NSObject < JavaUtilIterator, JavaLangIterable >

#pragma mark Public

- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursorLeft
                            withNSStringArray:(IOSObjectArray *)columnNamesLeft
                    withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursorRight
                            withNSStringArray:(IOSObjectArray *)columnNamesRight;

- (jboolean)hasNext;

- (id<JavaUtilIterator>)iterator;

- (AndroidDatabaseCursorJoiner_Result *)next;

- (void)remove;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursorJoiner)

FOUNDATION_EXPORT void AndroidDatabaseCursorJoiner_initWithAndroidDatabaseCursor_withNSStringArray_withAndroidDatabaseCursor_withNSStringArray_(AndroidDatabaseCursorJoiner *self, id<AndroidDatabaseCursor> cursorLeft, IOSObjectArray *columnNamesLeft, id<AndroidDatabaseCursor> cursorRight, IOSObjectArray *columnNamesRight);

FOUNDATION_EXPORT AndroidDatabaseCursorJoiner *new_AndroidDatabaseCursorJoiner_initWithAndroidDatabaseCursor_withNSStringArray_withAndroidDatabaseCursor_withNSStringArray_(id<AndroidDatabaseCursor> cursorLeft, IOSObjectArray *columnNamesLeft, id<AndroidDatabaseCursor> cursorRight, IOSObjectArray *columnNamesRight) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseCursorJoiner *create_AndroidDatabaseCursorJoiner_initWithAndroidDatabaseCursor_withNSStringArray_withAndroidDatabaseCursor_withNSStringArray_(id<AndroidDatabaseCursor> cursorLeft, IOSObjectArray *columnNamesLeft, id<AndroidDatabaseCursor> cursorRight, IOSObjectArray *columnNamesRight);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorJoiner)

#endif

#if !defined (AndroidDatabaseCursorJoiner_Result_) && (INCLUDE_ALL_AndroidDatabaseCursorJoiner || defined(INCLUDE_AndroidDatabaseCursorJoiner_Result))
#define AndroidDatabaseCursorJoiner_Result_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, AndroidDatabaseCursorJoiner_Result_Enum) {
  AndroidDatabaseCursorJoiner_Result_Enum_RIGHT = 0,
  AndroidDatabaseCursorJoiner_Result_Enum_LEFT = 1,
  AndroidDatabaseCursorJoiner_Result_Enum_BOTH = 2,
};

@interface AndroidDatabaseCursorJoiner_Result : JavaLangEnum

+ (AndroidDatabaseCursorJoiner_Result * __nonnull)RIGHT;

+ (AndroidDatabaseCursorJoiner_Result * __nonnull)LEFT;

+ (AndroidDatabaseCursorJoiner_Result * __nonnull)BOTH;

#pragma mark Public

+ (AndroidDatabaseCursorJoiner_Result *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (AndroidDatabaseCursorJoiner_Result_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(AndroidDatabaseCursorJoiner_Result)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT AndroidDatabaseCursorJoiner_Result *AndroidDatabaseCursorJoiner_Result_values_[];

inline AndroidDatabaseCursorJoiner_Result *AndroidDatabaseCursorJoiner_Result_get_RIGHT();
J2OBJC_ENUM_CONSTANT(AndroidDatabaseCursorJoiner_Result, RIGHT)

inline AndroidDatabaseCursorJoiner_Result *AndroidDatabaseCursorJoiner_Result_get_LEFT();
J2OBJC_ENUM_CONSTANT(AndroidDatabaseCursorJoiner_Result, LEFT)

inline AndroidDatabaseCursorJoiner_Result *AndroidDatabaseCursorJoiner_Result_get_BOTH();
J2OBJC_ENUM_CONSTANT(AndroidDatabaseCursorJoiner_Result, BOTH)

FOUNDATION_EXPORT IOSObjectArray *AndroidDatabaseCursorJoiner_Result_values();

FOUNDATION_EXPORT AndroidDatabaseCursorJoiner_Result *AndroidDatabaseCursorJoiner_Result_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT AndroidDatabaseCursorJoiner_Result *AndroidDatabaseCursorJoiner_Result_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorJoiner_Result)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCursorJoiner")
