//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidOsBadParcelableException.h"
#include "AndroidOsBundle.h"
#include "AndroidOsIBinder.h"
#include "AndroidOsIInterface.h"
#include "AndroidOsParcel.h"
#include "AndroidOsParcelFileDescriptor.h"
#include "AndroidOsParcelable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/util/Log.h"
#include "android/util/SparseArray.h"
#include "android/util/SparseBooleanArray.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/FileDescriptor.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/Serializable.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/CharSequence.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Field.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface AndroidOsParcel () {
 @public
  jint mObject_;
  jint mOwnObject_;
  JavaLangRuntimeException *mStack_;
}

- (void)writeNativeWithByteArray:(IOSByteArray *)b
                         withInt:(jint)offset
                         withInt:(jint)len;

- (JavaIoFileDescriptor *)internalReadFileDescriptor;

- (instancetype)initWithInt:(jint)obj;

- (void)freeBuffer;

- (void)init__WithInt:(jint)obj OBJC_METHOD_FAMILY_NONE;

- (void)destroy;

- (void)readListInternalWithJavaUtilList:(id<JavaUtilList>)outVal
                                 withInt:(jint)N
                 withJavaLangClassLoader:(JavaLangClassLoader *)loader;

- (void)readArrayInternalWithNSObjectArray:(IOSObjectArray *)outVal
                                   withInt:(jint)N
                   withJavaLangClassLoader:(JavaLangClassLoader *)loader;

- (void)readSparseArrayInternalWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)outVal
                                                  withInt:(jint)N
                                  withJavaLangClassLoader:(JavaLangClassLoader *)loader;

- (void)readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)outVal
                                                                withInt:(jint)N;

@end

J2OBJC_FIELD_SETTER(AndroidOsParcel, mStack_, JavaLangRuntimeException *)

inline jboolean AndroidOsParcel_get_DEBUG_RECYCLE();
#define AndroidOsParcel_DEBUG_RECYCLE false
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, DEBUG_RECYCLE, jboolean)

inline NSString *AndroidOsParcel_get_TAG();
static NSString *AndroidOsParcel_TAG = @"Parcel";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, TAG, NSString *)

inline jint AndroidOsParcel_get_POOL_SIZE();
#define AndroidOsParcel_POOL_SIZE 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, POOL_SIZE, jint)

inline IOSObjectArray *AndroidOsParcel_get_sOwnedPool();
static IOSObjectArray *AndroidOsParcel_sOwnedPool;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, sOwnedPool, IOSObjectArray *)

inline IOSObjectArray *AndroidOsParcel_get_sHolderPool();
static IOSObjectArray *AndroidOsParcel_sHolderPool;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, sHolderPool, IOSObjectArray *)

inline jint AndroidOsParcel_get_VAL_NULL();
#define AndroidOsParcel_VAL_NULL -1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_NULL, jint)

inline jint AndroidOsParcel_get_VAL_STRING();
#define AndroidOsParcel_VAL_STRING 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_STRING, jint)

inline jint AndroidOsParcel_get_VAL_INTEGER();
#define AndroidOsParcel_VAL_INTEGER 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_INTEGER, jint)

inline jint AndroidOsParcel_get_VAL_MAP();
#define AndroidOsParcel_VAL_MAP 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_MAP, jint)

inline jint AndroidOsParcel_get_VAL_BUNDLE();
#define AndroidOsParcel_VAL_BUNDLE 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BUNDLE, jint)

inline jint AndroidOsParcel_get_VAL_PARCELABLE();
#define AndroidOsParcel_VAL_PARCELABLE 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_PARCELABLE, jint)

inline jint AndroidOsParcel_get_VAL_SHORT();
#define AndroidOsParcel_VAL_SHORT 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SHORT, jint)

inline jint AndroidOsParcel_get_VAL_LONG();
#define AndroidOsParcel_VAL_LONG 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_LONG, jint)

inline jint AndroidOsParcel_get_VAL_FLOAT();
#define AndroidOsParcel_VAL_FLOAT 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_FLOAT, jint)

inline jint AndroidOsParcel_get_VAL_DOUBLE();
#define AndroidOsParcel_VAL_DOUBLE 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_DOUBLE, jint)

inline jint AndroidOsParcel_get_VAL_BOOLEAN();
#define AndroidOsParcel_VAL_BOOLEAN 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BOOLEAN, jint)

inline jint AndroidOsParcel_get_VAL_CHARSEQUENCE();
#define AndroidOsParcel_VAL_CHARSEQUENCE 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_CHARSEQUENCE, jint)

inline jint AndroidOsParcel_get_VAL_LIST();
#define AndroidOsParcel_VAL_LIST 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_LIST, jint)

inline jint AndroidOsParcel_get_VAL_SPARSEARRAY();
#define AndroidOsParcel_VAL_SPARSEARRAY 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SPARSEARRAY, jint)

inline jint AndroidOsParcel_get_VAL_BYTEARRAY();
#define AndroidOsParcel_VAL_BYTEARRAY 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BYTEARRAY, jint)

inline jint AndroidOsParcel_get_VAL_STRINGARRAY();
#define AndroidOsParcel_VAL_STRINGARRAY 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_STRINGARRAY, jint)

inline jint AndroidOsParcel_get_VAL_IBINDER();
#define AndroidOsParcel_VAL_IBINDER 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_IBINDER, jint)

inline jint AndroidOsParcel_get_VAL_PARCELABLEARRAY();
#define AndroidOsParcel_VAL_PARCELABLEARRAY 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_PARCELABLEARRAY, jint)

inline jint AndroidOsParcel_get_VAL_OBJECTARRAY();
#define AndroidOsParcel_VAL_OBJECTARRAY 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_OBJECTARRAY, jint)

inline jint AndroidOsParcel_get_VAL_INTARRAY();
#define AndroidOsParcel_VAL_INTARRAY 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_INTARRAY, jint)

inline jint AndroidOsParcel_get_VAL_LONGARRAY();
#define AndroidOsParcel_VAL_LONGARRAY 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_LONGARRAY, jint)

inline jint AndroidOsParcel_get_VAL_BYTE();
#define AndroidOsParcel_VAL_BYTE 20
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BYTE, jint)

inline jint AndroidOsParcel_get_VAL_SERIALIZABLE();
#define AndroidOsParcel_VAL_SERIALIZABLE 21
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SERIALIZABLE, jint)

inline jint AndroidOsParcel_get_VAL_SPARSEBOOLEANARRAY();
#define AndroidOsParcel_VAL_SPARSEBOOLEANARRAY 22
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SPARSEBOOLEANARRAY, jint)

inline jint AndroidOsParcel_get_VAL_BOOLEANARRAY();
#define AndroidOsParcel_VAL_BOOLEANARRAY 23
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BOOLEANARRAY, jint)

inline jint AndroidOsParcel_get_VAL_CHARSEQUENCEARRAY();
#define AndroidOsParcel_VAL_CHARSEQUENCEARRAY 24
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_CHARSEQUENCEARRAY, jint)

inline jint AndroidOsParcel_get_EX_SECURITY();
#define AndroidOsParcel_EX_SECURITY -1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_SECURITY, jint)

inline jint AndroidOsParcel_get_EX_BAD_PARCELABLE();
#define AndroidOsParcel_EX_BAD_PARCELABLE -2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_BAD_PARCELABLE, jint)

inline jint AndroidOsParcel_get_EX_ILLEGAL_ARGUMENT();
#define AndroidOsParcel_EX_ILLEGAL_ARGUMENT -3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_ILLEGAL_ARGUMENT, jint)

inline jint AndroidOsParcel_get_EX_NULL_POINTER();
#define AndroidOsParcel_EX_NULL_POINTER -4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_NULL_POINTER, jint)

inline jint AndroidOsParcel_get_EX_ILLEGAL_STATE();
#define AndroidOsParcel_EX_ILLEGAL_STATE -5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_ILLEGAL_STATE, jint)

inline jint AndroidOsParcel_get_EX_HAS_REPLY_HEADER();
#define AndroidOsParcel_EX_HAS_REPLY_HEADER -128
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_HAS_REPLY_HEADER, jint)

inline JavaUtilHashMap *AndroidOsParcel_get_mCreators();
static JavaUtilHashMap *AndroidOsParcel_mCreators;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, mCreators, JavaUtilHashMap *)

__attribute__((unused)) static jint AndroidOsParcel_dataAvail(AndroidOsParcel *self);

__attribute__((unused)) static jint AndroidOsParcel_dataPosition(AndroidOsParcel *self);

__attribute__((unused)) static void AndroidOsParcel_writeByteArrayWithByteArray_(AndroidOsParcel *self, IOSByteArray *b);

__attribute__((unused)) static void AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(AndroidOsParcel *self, IOSByteArray *b, jint offset, jint len);

__attribute__((unused)) static void AndroidOsParcel_writeNativeWithByteArray_withInt_withInt_(AndroidOsParcel *self, IOSByteArray *b, jint offset, jint len);

__attribute__((unused)) static void AndroidOsParcel_writeIntWithInt_(AndroidOsParcel *self, jint val);

__attribute__((unused)) static void AndroidOsParcel_writeLongWithLong_(AndroidOsParcel *self, jlong val);

__attribute__((unused)) static void AndroidOsParcel_writeFloatWithFloat_(AndroidOsParcel *self, jfloat val);

__attribute__((unused)) static void AndroidOsParcel_writeStringWithNSString_(AndroidOsParcel *self, NSString *val);

__attribute__((unused)) static void AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(AndroidOsParcel *self, id<AndroidOsIBinder> val);

__attribute__((unused)) static void AndroidOsParcel_writeByteWithByte_(AndroidOsParcel *self, jbyte val);

__attribute__((unused)) static IOSBooleanArray *AndroidOsParcel_createBooleanArray(AndroidOsParcel *self);

__attribute__((unused)) static IOSIntArray *AndroidOsParcel_createIntArray(AndroidOsParcel *self);

__attribute__((unused)) static IOSLongArray *AndroidOsParcel_createLongArray(AndroidOsParcel *self);

__attribute__((unused)) static void AndroidOsParcel_writeValueWithId_(AndroidOsParcel *self, id v);

__attribute__((unused)) static void AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(AndroidOsParcel *self, id<AndroidOsParcelable> p, jint parcelableFlags);

__attribute__((unused)) static jint AndroidOsParcel_readExceptionCode(AndroidOsParcel *self);

__attribute__((unused)) static void AndroidOsParcel_readExceptionWithInt_withNSString_(AndroidOsParcel *self, jint code, NSString *msg);

__attribute__((unused)) static jint AndroidOsParcel_readInt(AndroidOsParcel *self);

__attribute__((unused)) static jlong AndroidOsParcel_readLong(AndroidOsParcel *self);

__attribute__((unused)) static jfloat AndroidOsParcel_readFloat(AndroidOsParcel *self);

__attribute__((unused)) static jdouble AndroidOsParcel_readDouble(AndroidOsParcel *self);

__attribute__((unused)) static NSString *AndroidOsParcel_readString(AndroidOsParcel *self);

__attribute__((unused)) static id<JavaLangCharSequence> AndroidOsParcel_readCharSequence(AndroidOsParcel *self);

__attribute__((unused)) static id<AndroidOsIBinder> AndroidOsParcel_readStrongBinder(AndroidOsParcel *self);

__attribute__((unused)) static JavaIoFileDescriptor *AndroidOsParcel_internalReadFileDescriptor(AndroidOsParcel *self);

__attribute__((unused)) static jbyte AndroidOsParcel_readByte(AndroidOsParcel *self);

__attribute__((unused)) static JavaUtilHashMap *AndroidOsParcel_readHashMapWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static AndroidOsBundle *AndroidOsParcel_readBundleWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static IOSByteArray *AndroidOsParcel_createByteArray(AndroidOsParcel *self);

__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readStringArray(AndroidOsParcel *self);

__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readCharSequenceArray(AndroidOsParcel *self);

__attribute__((unused)) static JavaUtilArrayList *AndroidOsParcel_readArrayListWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static AndroidUtilSparseArray *AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static AndroidUtilSparseBooleanArray *AndroidOsParcel_readSparseBooleanArray(AndroidOsParcel *self);

__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(AndroidOsParcel *self, id<AndroidOsParcelable_Creator> c);

__attribute__((unused)) static id AndroidOsParcel_readValueWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static id<AndroidOsParcelable> AndroidOsParcel_readParcelableWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);

__attribute__((unused)) static id<JavaIoSerializable> AndroidOsParcel_readSerializable(AndroidOsParcel *self);

__attribute__((unused)) static void AndroidOsParcel_initWithInt_(AndroidOsParcel *self, jint obj);

__attribute__((unused)) static AndroidOsParcel *new_AndroidOsParcel_initWithInt_(jint obj) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidOsParcel *create_AndroidOsParcel_initWithInt_(jint obj);

__attribute__((unused)) static void AndroidOsParcel_freeBuffer(AndroidOsParcel *self);

__attribute__((unused)) static void AndroidOsParcel_init__WithInt_(AndroidOsParcel *self, jint obj);

__attribute__((unused)) static void AndroidOsParcel_destroy(AndroidOsParcel *self);

__attribute__((unused)) static void AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, id<JavaUtilList> outVal, jint N, JavaLangClassLoader *loader);

__attribute__((unused)) static void AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, IOSObjectArray *outVal, jint N, JavaLangClassLoader *loader);

__attribute__((unused)) static void AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, AndroidUtilSparseArray *outVal, jint N, JavaLangClassLoader *loader);

__attribute__((unused)) static void AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(AndroidOsParcel *self, AndroidUtilSparseBooleanArray *outVal, jint N);

__attribute__((unused)) static IOSObjectArray *AndroidOsParcel__Annotations$0();

@interface AndroidOsParcel_1 : NSObject < AndroidOsParcelable_Creator >

- (instancetype)init;

- (NSString *)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)source;

- (IOSObjectArray *)newArrayWithInt:(jint)size OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcel_1)

__attribute__((unused)) static void AndroidOsParcel_1_init(AndroidOsParcel_1 *self);

__attribute__((unused)) static AndroidOsParcel_1 *new_AndroidOsParcel_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidOsParcel_1 *create_AndroidOsParcel_1_init();

J2OBJC_INITIALIZED_DEFN(AndroidOsParcel)

id<AndroidOsParcelable_Creator> AndroidOsParcel_STRING_CREATOR;

@implementation AndroidOsParcel

+ (id<AndroidOsParcelable_Creator>)STRING_CREATOR {
  return AndroidOsParcel_STRING_CREATOR;
}

+ (AndroidOsParcel *)obtain {
  return AndroidOsParcel_obtain();
}

- (void)recycle {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)dataSize {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)dataAvail {
  return AndroidOsParcel_dataAvail(self);
}

- (jint)dataPosition {
  return AndroidOsParcel_dataPosition(self);
}

- (jint)dataCapacity {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)setDataSizeWithInt:(jint)size {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)setDataPositionWithInt:(jint)pos {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)setDataCapacityWithInt:(jint)size {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (IOSByteArray *)marshall {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)unmarshallWithByteArray:(IOSByteArray *)data
                        withInt:(jint)offest
                        withInt:(jint)length {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)appendFromWithAndroidOsParcel:(AndroidOsParcel *)parcel
                              withInt:(jint)offset
                              withInt:(jint)length {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)hasFileDescriptors {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeInterfaceTokenWithNSString:(NSString *)interfaceName {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)enforceInterfaceWithNSString:(NSString *)interfaceName {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeByteArrayWithByteArray:(IOSByteArray *)b {
  AndroidOsParcel_writeByteArrayWithByteArray_(self, b);
}

- (void)writeByteArrayWithByteArray:(IOSByteArray *)b
                            withInt:(jint)offset
                            withInt:(jint)len {
  AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(self, b, offset, len);
}

- (void)writeNativeWithByteArray:(IOSByteArray *)b
                         withInt:(jint)offset
                         withInt:(jint)len {
  AndroidOsParcel_writeNativeWithByteArray_withInt_withInt_(self, b, offset, len);
}

- (void)writeIntWithInt:(jint)val {
  AndroidOsParcel_writeIntWithInt_(self, val);
}

- (void)writeLongWithLong:(jlong)val {
  AndroidOsParcel_writeLongWithLong_(self, val);
}

- (void)writeFloatWithFloat:(jfloat)val {
  AndroidOsParcel_writeFloatWithFloat_(self, val);
}

- (void)writeDoubleWithDouble:(jdouble)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeStringWithNSString:(NSString *)val {
  AndroidOsParcel_writeStringWithNSString_(self, val);
}

- (void)writeCharSequenceWithJavaLangCharSequence:(id<JavaLangCharSequence>)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeStrongBinderWithAndroidOsIBinder:(id<AndroidOsIBinder>)val {
  AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(self, val);
}

- (void)writeStrongInterfaceWithAndroidOsIInterface:(id<AndroidOsIInterface>)val {
  AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(self, val == nil ? nil : [val asBinder]);
}

- (void)writeFileDescriptorWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeByteWithByte:(jbyte)val {
  AndroidOsParcel_writeByteWithByte_(self, val);
}

- (void)writeMapWithJavaUtilMap:(id<JavaUtilMap>)val {
  [self writeMapInternalWithJavaUtilMap:val];
}

- (void)writeMapInternalWithJavaUtilMap:(id<JavaUtilMap>)val {
  if (val == nil) {
    AndroidOsParcel_writeIntWithInt_(self, -1);
    return;
  }
  id<JavaUtilSet> entries = [val entrySet];
  AndroidOsParcel_writeIntWithInt_(self, [((id<JavaUtilSet>) nil_chk(entries)) size]);
  for (id<JavaUtilMap_Entry> __strong e in entries) {
    AndroidOsParcel_writeValueWithId_(self, [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]);
    AndroidOsParcel_writeValueWithId_(self, [e getValue]);
  }
}

- (void)writeBundleWithAndroidOsBundle:(AndroidOsBundle *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeListWithJavaUtilList:(id<JavaUtilList>)val {
  if (val == nil) {
    AndroidOsParcel_writeIntWithInt_(self, -1);
    return;
  }
  jint N = [val size];
  jint i = 0;
  AndroidOsParcel_writeIntWithInt_(self, N);
  while (i < N) {
    AndroidOsParcel_writeValueWithId_(self, [val getWithInt:i]);
    i++;
  }
}

- (void)writeArrayWithNSObjectArray:(IOSObjectArray *)val {
  if (val == nil) {
    AndroidOsParcel_writeIntWithInt_(self, -1);
    return;
  }
  jint N = val->size_;
  jint i = 0;
  AndroidOsParcel_writeIntWithInt_(self, N);
  while (i < N) {
    AndroidOsParcel_writeValueWithId_(self, IOSObjectArray_Get(val, i));
    i++;
  }
}

- (void)writeSparseArrayWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)val {
  if (val == nil) {
    AndroidOsParcel_writeIntWithInt_(self, -1);
    return;
  }
  jint N = [val size];
  AndroidOsParcel_writeIntWithInt_(self, N);
  jint i = 0;
  while (i < N) {
    AndroidOsParcel_writeIntWithInt_(self, [val keyAtWithInt:i]);
    AndroidOsParcel_writeValueWithId_(self, [val valueAtWithInt:i]);
    i++;
  }
}

- (void)writeSparseBooleanArrayWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)val {
  if (val == nil) {
    AndroidOsParcel_writeIntWithInt_(self, -1);
    return;
  }
  jint N = [val size];
  AndroidOsParcel_writeIntWithInt_(self, N);
  jint i = 0;
  while (i < N) {
    AndroidOsParcel_writeIntWithInt_(self, [val keyAtWithInt:i]);
    AndroidOsParcel_writeByteWithByte_(self, (jbyte) ([val valueAtWithInt:i] ? 1 : 0));
    i++;
  }
}

- (void)writeBooleanArrayWithBooleanArray:(IOSBooleanArray *)val {
  if (val != nil) {
    jint N = val->size_;
    AndroidOsParcel_writeIntWithInt_(self, N);
    for (jint i = 0; i < N; i++) {
      AndroidOsParcel_writeIntWithInt_(self, IOSBooleanArray_Get(val, i) ? 1 : 0);
    }
  }
  else {
    AndroidOsParcel_writeIntWithInt_(self, -1);
  }
}

- (IOSBooleanArray *)createBooleanArray {
  return AndroidOsParcel_createBooleanArray(self);
}

- (void)readBooleanArrayWithBooleanArray:(IOSBooleanArray *)val {
  jint N = AndroidOsParcel_readInt(self);
  if (N == ((IOSBooleanArray *) nil_chk(val))->size_) {
    for (jint i = 0; i < N; i++) {
      *IOSBooleanArray_GetRef(val, i) = (AndroidOsParcel_readInt(self) != 0);
    }
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (void)writeCharArrayWithCharArray:(IOSCharArray *)val {
  if (val != nil) {
    jint N = val->size_;
    AndroidOsParcel_writeIntWithInt_(self, N);
    for (jint i = 0; i < N; i++) {
      AndroidOsParcel_writeIntWithInt_(self, (jint) IOSCharArray_Get(val, i));
    }
  }
  else {
    AndroidOsParcel_writeIntWithInt_(self, -1);
  }
}

- (IOSCharArray *)createCharArray {
  jint N = AndroidOsParcel_readInt(self);
  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
    IOSCharArray *val = [IOSCharArray arrayWithLength:N];
    for (jint i = 0; i < N; i++) {
      *IOSCharArray_GetRef(val, i) = (jchar) AndroidOsParcel_readInt(self);
    }
    return val;
  }
  else {
    return nil;
  }
}

- (void)readCharArrayWithCharArray:(IOSCharArray *)val {
  jint N = AndroidOsParcel_readInt(self);
  if (N == ((IOSCharArray *) nil_chk(val))->size_) {
    for (jint i = 0; i < N; i++) {
      *IOSCharArray_GetRef(val, i) = (jchar) AndroidOsParcel_readInt(self);
    }
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (void)writeIntArrayWithIntArray:(IOSIntArray *)val {
  if (val != nil) {
    jint N = val->size_;
    AndroidOsParcel_writeIntWithInt_(self, N);
    for (jint i = 0; i < N; i++) {
      AndroidOsParcel_writeIntWithInt_(self, IOSIntArray_Get(val, i));
    }
  }
  else {
    AndroidOsParcel_writeIntWithInt_(self, -1);
  }
}

- (IOSIntArray *)createIntArray {
  return AndroidOsParcel_createIntArray(self);
}

- (void)readIntArrayWithIntArray:(IOSIntArray *)val {
  jint N = AndroidOsParcel_readInt(self);
  if (N == ((IOSIntArray *) nil_chk(val))->size_) {
    for (jint i = 0; i < N; i++) {
      *IOSIntArray_GetRef(val, i) = AndroidOsParcel_readInt(self);
    }
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (void)writeLongArrayWithLongArray:(IOSLongArray *)val {
  if (val != nil) {
    jint N = val->size_;
    AndroidOsParcel_writeIntWithInt_(self, N);
    for (jint i = 0; i < N; i++) {
      AndroidOsParcel_writeLongWithLong_(self, IOSLongArray_Get(val, i));
    }
  }
  else {
    AndroidOsParcel_writeIntWithInt_(self, -1);
  }
}

- (IOSLongArray *)createLongArray {
  return AndroidOsParcel_createLongArray(self);
}

- (void)readLongArrayWithLongArray:(IOSLongArray *)val {
  jint N = AndroidOsParcel_readInt(self);
  if (N == ((IOSLongArray *) nil_chk(val))->size_) {
    for (jint i = 0; i < N; i++) {
      *IOSLongArray_GetRef(val, i) = AndroidOsParcel_readLong(self);
    }
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (void)writeFloatArrayWithFloatArray:(IOSFloatArray *)val {
  if (val != nil) {
    jint N = val->size_;
    AndroidOsParcel_writeIntWithInt_(self, N);
    for (jint i = 0; i < N; i++) {
      AndroidOsParcel_writeFloatWithFloat_(self, IOSFloatArray_Get(val, i));
    }
  }
  else {
    AndroidOsParcel_writeIntWithInt_(self, -1);
  }
}

- (IOSFloatArray *)createFloatArray {
  jint N = AndroidOsParcel_readInt(self);
  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
    IOSFloatArray *val = [IOSFloatArray arrayWithLength:N];
    for (jint i = 0; i < N; i++) {
      *IOSFloatArray_GetRef(val, i) = AndroidOsParcel_readFloat(self);
    }
    return val;
  }
  else {
    return nil;
  }
}

- (void)readFloatArrayWithFloatArray:(IOSFloatArray *)val {
  jint N = AndroidOsParcel_readInt(self);
  if (N == ((IOSFloatArray *) nil_chk(val))->size_) {
    for (jint i = 0; i < N; i++) {
      *IOSFloatArray_GetRef(val, i) = AndroidOsParcel_readFloat(self);
    }
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (void)writeDoubleArrayWithDoubleArray:(IOSDoubleArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (IOSDoubleArray *)createDoubleArray {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)readDoubleArrayWithDoubleArray:(IOSDoubleArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeStringArrayWithNSStringArray:(IOSObjectArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (IOSObjectArray *)createStringArray {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)readStringArrayWithNSStringArray:(IOSObjectArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeBinderArrayWithAndroidOsIBinderArray:(IOSObjectArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeCharSequenceArrayWithJavaLangCharSequenceArray:(IOSObjectArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (IOSObjectArray *)createBinderArray {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)readBinderArrayWithAndroidOsIBinderArray:(IOSObjectArray *)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeTypedListWithJavaUtilList:(id<JavaUtilList>)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeStringListWithJavaUtilList:(id<JavaUtilList>)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeBinderListWithJavaUtilList:(id<JavaUtilList>)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeTypedArrayWithAndroidOsParcelableArray:(IOSObjectArray *)val
                                            withInt:(jint)parcelableFlags {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeValueWithId:(id)v {
  AndroidOsParcel_writeValueWithId_(self, v);
}

- (void)writeParcelableWithAndroidOsParcelable:(id<AndroidOsParcelable>)p
                                       withInt:(jint)parcelableFlags {
  AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(self, p, parcelableFlags);
}

- (void)writeSerializableWithJavaIoSerializable:(id<JavaIoSerializable>)s {
  if (s == nil) {
    AndroidOsParcel_writeStringWithNSString_(self, nil);
    return;
  }
  NSString *name = [[s java_getClass] getName];
  AndroidOsParcel_writeStringWithNSString_(self, name);
  JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_init();
  @try {
    JavaIoObjectOutputStream *oos = create_JavaIoObjectOutputStream_initWithJavaIoOutputStream_(baos);
    [oos writeObjectWithId:s];
    [oos close];
    AndroidOsParcel_writeByteArrayWithByteArray_(self, [baos toByteArray]);
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$C", @"Parcelable encountered IOException writing serializable object (name = ", name, ')'), ioe);
  }
}

- (void)writeExceptionWithJavaLangException:(JavaLangException *)e {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)writeNoException {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)readException {
  jint code = AndroidOsParcel_readExceptionCode(self);
  if (code != 0) {
    NSString *msg = AndroidOsParcel_readString(self);
    AndroidOsParcel_readExceptionWithInt_withNSString_(self, code, msg);
  }
}

- (jint)readExceptionCode {
  return AndroidOsParcel_readExceptionCode(self);
}

- (void)readExceptionWithInt:(jint)code
                withNSString:(NSString *)msg {
  AndroidOsParcel_readExceptionWithInt_withNSString_(self, code, msg);
}

- (jint)readInt {
  return AndroidOsParcel_readInt(self);
}

- (jlong)readLong {
  return AndroidOsParcel_readLong(self);
}

- (jfloat)readFloat {
  return AndroidOsParcel_readFloat(self);
}

- (jdouble)readDouble {
  return AndroidOsParcel_readDouble(self);
}

- (NSString *)readString {
  return AndroidOsParcel_readString(self);
}

- (id<JavaLangCharSequence>)readCharSequence {
  return AndroidOsParcel_readCharSequence(self);
}

- (id<AndroidOsIBinder>)readStrongBinder {
  return AndroidOsParcel_readStrongBinder(self);
}

- (AndroidOsParcelFileDescriptor *)readFileDescriptor {
  JavaIoFileDescriptor *fd = AndroidOsParcel_internalReadFileDescriptor(self);
  return fd != nil ? create_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(fd) : nil;
}

- (JavaIoFileDescriptor *)internalReadFileDescriptor {
  return AndroidOsParcel_internalReadFileDescriptor(self);
}

+ (JavaIoFileDescriptor *)openFileDescriptorWithNSString:(NSString *)file
                                                 withInt:(jint)mode {
  return AndroidOsParcel_openFileDescriptorWithNSString_withInt_(file, mode);
}

+ (void)closeFileDescriptorWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)desc {
  AndroidOsParcel_closeFileDescriptorWithJavaIoFileDescriptor_(desc);
}

- (jbyte)readByte {
  return AndroidOsParcel_readByte(self);
}

- (void)readMapWithJavaUtilMap:(id<JavaUtilMap>)outVal
       withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  jint N = AndroidOsParcel_readInt(self);
  [self readMapInternalWithJavaUtilMap:outVal withInt:N withJavaLangClassLoader:loader];
}

- (void)readListWithJavaUtilList:(id<JavaUtilList>)outVal
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  jint N = AndroidOsParcel_readInt(self);
  AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
}

- (JavaUtilHashMap *)readHashMapWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readHashMapWithJavaLangClassLoader_(self, loader);
}

- (AndroidOsBundle *)readBundle {
  return AndroidOsParcel_readBundleWithJavaLangClassLoader_(self, nil);
}

- (AndroidOsBundle *)readBundleWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readBundleWithJavaLangClassLoader_(self, loader);
}

- (IOSByteArray *)createByteArray {
  return AndroidOsParcel_createByteArray(self);
}

- (void)readByteArrayWithByteArray:(IOSByteArray *)val {
  IOSByteArray *ba = AndroidOsParcel_createByteArray(self);
  if (((IOSByteArray *) nil_chk(ba))->size_ == ((IOSByteArray *) nil_chk(val))->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(ba, 0, val, 0, ba->size_);
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (IOSObjectArray *)readStringArray {
  return AndroidOsParcel_readStringArray(self);
}

- (IOSObjectArray *)readCharSequenceArray {
  return AndroidOsParcel_readCharSequenceArray(self);
}

- (JavaUtilArrayList *)readArrayListWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readArrayListWithJavaLangClassLoader_(self, loader);
}

- (IOSObjectArray *)readArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readArrayWithJavaLangClassLoader_(self, loader);
}

- (AndroidUtilSparseArray *)readSparseArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(self, loader);
}

- (AndroidUtilSparseBooleanArray *)readSparseBooleanArray {
  return AndroidOsParcel_readSparseBooleanArray(self);
}

- (JavaUtilArrayList *)createTypedArrayListWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
  while (N > 0) {
    if (AndroidOsParcel_readInt(self) != 0) {
      [l addWithId:[((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]];
    }
    else {
      [l addWithId:nil];
    }
    N--;
  }
  return l;
}

- (void)readTypedListWithJavaUtilList:(id<JavaUtilList>)list
      withAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
  jint M = [((id<JavaUtilList>) nil_chk(list)) size];
  jint N = AndroidOsParcel_readInt(self);
  jint i = 0;
  for (; i < M && i < N; i++) {
    if (AndroidOsParcel_readInt(self) != 0) {
      [list setWithInt:i withId:[((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]];
    }
    else {
      [list setWithInt:i withId:nil];
    }
  }
  for (; i < N; i++) {
    if (AndroidOsParcel_readInt(self) != 0) {
      [list addWithId:[((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]];
    }
    else {
      [list addWithId:nil];
    }
  }
  for (; i < M; i++) {
    [list removeWithInt:N];
  }
}

- (JavaUtilArrayList *)createStringArrayList {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
  while (N > 0) {
    [l addWithId:AndroidOsParcel_readString(self)];
    N--;
  }
  return l;
}

- (JavaUtilArrayList *)createBinderArrayList {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
  while (N > 0) {
    [l addWithId:AndroidOsParcel_readStrongBinder(self)];
    N--;
  }
  return l;
}

- (void)readStringListWithJavaUtilList:(id<JavaUtilList>)list {
  jint M = [((id<JavaUtilList>) nil_chk(list)) size];
  jint N = AndroidOsParcel_readInt(self);
  jint i = 0;
  for (; i < M && i < N; i++) {
    [list setWithInt:i withId:AndroidOsParcel_readString(self)];
  }
  for (; i < N; i++) {
    [list addWithId:AndroidOsParcel_readString(self)];
  }
  for (; i < M; i++) {
    [list removeWithInt:N];
  }
}

- (void)readBinderListWithJavaUtilList:(id<JavaUtilList>)list {
  jint M = [((id<JavaUtilList>) nil_chk(list)) size];
  jint N = AndroidOsParcel_readInt(self);
  jint i = 0;
  for (; i < M && i < N; i++) {
    [list setWithInt:i withId:AndroidOsParcel_readStrongBinder(self)];
  }
  for (; i < N; i++) {
    [list addWithId:AndroidOsParcel_readStrongBinder(self)];
  }
  for (; i < M; i++) {
    [list removeWithInt:N];
  }
}

- (IOSObjectArray *)createTypedArrayWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
  return AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(self, c);
}

- (void)readTypedArrayWithNSObjectArray:(IOSObjectArray *)val
        withAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
  jint N = AndroidOsParcel_readInt(self);
  if (N == ((IOSObjectArray *) nil_chk(val))->size_) {
    for (jint i = 0; i < N; i++) {
      if (AndroidOsParcel_readInt(self) != 0) {
        IOSObjectArray_Set(val, i, [((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]);
      }
      else {
        IOSObjectArray_Set(val, i, nil);
      }
    }
  }
  else {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
  }
}

- (IOSObjectArray *)readTypedArrayWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
  return AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(self, c);
}

- (void)writeParcelableArrayWithAndroidOsParcelableArray:(IOSObjectArray *)value
                                                 withInt:(jint)parcelableFlags {
  if (value != nil) {
    jint N = value->size_;
    AndroidOsParcel_writeIntWithInt_(self, N);
    for (jint i = 0; i < N; i++) {
      AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(self, IOSObjectArray_Get(value, i), parcelableFlags);
    }
  }
  else {
    AndroidOsParcel_writeIntWithInt_(self, -1);
  }
}

- (id)readValueWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
}

- (id<AndroidOsParcelable>)readParcelableWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readParcelableWithJavaLangClassLoader_(self, loader);
}

- (IOSObjectArray *)readParcelableArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(self, loader);
}

- (id<JavaIoSerializable>)readSerializable {
  return AndroidOsParcel_readSerializable(self);
}

+ (AndroidOsParcel *)obtainWithInt:(jint)obj {
  return AndroidOsParcel_obtainWithInt_(obj);
}

- (instancetype)initWithInt:(jint)obj {
  AndroidOsParcel_initWithInt_(self, obj);
  return self;
}

- (void)java_finalize {
  AndroidOsParcel_destroy(self);
}

- (void)freeBuffer {
  AndroidOsParcel_freeBuffer(self);
}

- (void)init__WithInt:(jint)obj {
  AndroidOsParcel_init__WithInt_(self, obj);
}

- (void)destroy {
  AndroidOsParcel_destroy(self);
}

- (void)readMapInternalWithJavaUtilMap:(id<JavaUtilMap>)outVal
                               withInt:(jint)N
               withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  while (N > 0) {
    id key = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
    [((id<JavaUtilMap>) nil_chk(outVal)) putWithId:key withId:value];
    N--;
  }
}

- (void)readListInternalWithJavaUtilList:(id<JavaUtilList>)outVal
                                 withInt:(jint)N
                 withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
}

- (void)readArrayInternalWithNSObjectArray:(IOSObjectArray *)outVal
                                   withInt:(jint)N
                   withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
}

- (void)readSparseArrayInternalWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)outVal
                                                  withInt:(jint)N
                                  withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
}

- (void)readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)outVal
                                                                withInt:(jint)N {
  AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(self, outVal, N);
}

- (void)dealloc {
  JreCheckFinalize(self, [AndroidOsParcel class]);
  RELEASE_(mStack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidOsParcel;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 3, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 10, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 11, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 14, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 21, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 26, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 28, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 30, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 32, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 34, 33, -1, 35, -1, -1 },
    { NULL, "V", 0x11, 36, 37, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 38, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 40, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 42, 43, -1, 44, -1, -1 },
    { NULL, "V", 0x11, 45, 46, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 47, 48, -1, -1, -1, -1 },
    { NULL, "[Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 49, 48, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 50, 51, -1, -1, -1, -1 },
    { NULL, "[C", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 52, 51, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 53, 54, -1, -1, -1, -1 },
    { NULL, "[I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 55, 54, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 56, 57, -1, -1, -1, -1 },
    { NULL, "[J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 58, 57, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 59, 60, -1, -1, -1, -1 },
    { NULL, "[F", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 61, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 62, 63, -1, -1, -1, -1 },
    { NULL, "[D", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 64, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 65, 66, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 67, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 68, 69, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 70, 71, -1, -1, -1, -1 },
    { NULL, "[LAndroidOsIBinder;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 72, 69, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 73, 39, -1, 74, -1, -1 },
    { NULL, "V", 0x11, 75, 39, -1, 76, -1, -1 },
    { NULL, "V", 0x11, 77, 39, -1, 78, -1, -1 },
    { NULL, "V", 0x11, 79, 80, -1, 81, -1, -1 },
    { NULL, "V", 0x11, 82, 83, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 84, 85, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 86, 87, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 88, 89, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 90, 91, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidOsIBinder;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidOsParcelFileDescriptor;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileDescriptor;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileDescriptor;", 0x8, 92, 93, 94, -1, -1, -1 },
    { NULL, "V", 0x8, 95, 29, 96, -1, -1, -1 },
    { NULL, "B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 97, 98, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 99, 100, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x11, 101, 102, -1, -1, -1, -1 },
    { NULL, "LAndroidOsBundle;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidOsBundle;", 0x11, 103, 102, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 104, 12, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangCharSequence;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x11, 105, 102, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x11, 106, 102, -1, -1, -1, -1 },
    { NULL, "LAndroidUtilSparseArray;", 0x11, 107, 102, -1, -1, -1, -1 },
    { NULL, "LAndroidUtilSparseBooleanArray;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x11, 108, 109, -1, 110, -1, -1 },
    { NULL, "V", 0x11, 111, 112, -1, 113, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x11, -1, -1, -1, 114, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x11, -1, -1, -1, 115, -1, -1 },
    { NULL, "V", 0x11, 116, 39, -1, 76, -1, -1 },
    { NULL, "V", 0x11, 117, 39, -1, 78, -1, -1 },
    { NULL, "[LNSObject;", 0x11, 118, 109, -1, 119, -1, -1 },
    { NULL, "V", 0x11, 120, 121, -1, 122, -1, -1 },
    { NULL, "[LNSObject;", 0x11, 120, 109, -1, 119, 123, -1 },
    { NULL, "V", 0x11, 124, 80, -1, 81, -1, -1 },
    { NULL, "LNSObject;", 0x11, 125, 102, -1, -1, -1, -1 },
    { NULL, "LAndroidOsParcelable;", 0x11, 126, 102, -1, 127, -1, -1 },
    { NULL, "[LAndroidOsParcelable;", 0x11, 128, 102, -1, -1, -1, -1 },
    { NULL, "LJavaIoSerializable;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidOsParcel;", 0x1c, 129, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 130, -1, 131, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 132, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 133, 134, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 135, 136, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 137, 138, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 139, 140, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 141, 142, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(obtain);
  methods[1].selector = @selector(recycle);
  methods[2].selector = @selector(dataSize);
  methods[3].selector = @selector(dataAvail);
  methods[4].selector = @selector(dataPosition);
  methods[5].selector = @selector(dataCapacity);
  methods[6].selector = @selector(setDataSizeWithInt:);
  methods[7].selector = @selector(setDataPositionWithInt:);
  methods[8].selector = @selector(setDataCapacityWithInt:);
  methods[9].selector = @selector(marshall);
  methods[10].selector = @selector(unmarshallWithByteArray:withInt:withInt:);
  methods[11].selector = @selector(appendFromWithAndroidOsParcel:withInt:withInt:);
  methods[12].selector = @selector(hasFileDescriptors);
  methods[13].selector = @selector(writeInterfaceTokenWithNSString:);
  methods[14].selector = @selector(enforceInterfaceWithNSString:);
  methods[15].selector = @selector(writeByteArrayWithByteArray:);
  methods[16].selector = @selector(writeByteArrayWithByteArray:withInt:withInt:);
  methods[17].selector = @selector(writeNativeWithByteArray:withInt:withInt:);
  methods[18].selector = @selector(writeIntWithInt:);
  methods[19].selector = @selector(writeLongWithLong:);
  methods[20].selector = @selector(writeFloatWithFloat:);
  methods[21].selector = @selector(writeDoubleWithDouble:);
  methods[22].selector = @selector(writeStringWithNSString:);
  methods[23].selector = @selector(writeCharSequenceWithJavaLangCharSequence:);
  methods[24].selector = @selector(writeStrongBinderWithAndroidOsIBinder:);
  methods[25].selector = @selector(writeStrongInterfaceWithAndroidOsIInterface:);
  methods[26].selector = @selector(writeFileDescriptorWithJavaIoFileDescriptor:);
  methods[27].selector = @selector(writeByteWithByte:);
  methods[28].selector = @selector(writeMapWithJavaUtilMap:);
  methods[29].selector = @selector(writeMapInternalWithJavaUtilMap:);
  methods[30].selector = @selector(writeBundleWithAndroidOsBundle:);
  methods[31].selector = @selector(writeListWithJavaUtilList:);
  methods[32].selector = @selector(writeArrayWithNSObjectArray:);
  methods[33].selector = @selector(writeSparseArrayWithAndroidUtilSparseArray:);
  methods[34].selector = @selector(writeSparseBooleanArrayWithAndroidUtilSparseBooleanArray:);
  methods[35].selector = @selector(writeBooleanArrayWithBooleanArray:);
  methods[36].selector = @selector(createBooleanArray);
  methods[37].selector = @selector(readBooleanArrayWithBooleanArray:);
  methods[38].selector = @selector(writeCharArrayWithCharArray:);
  methods[39].selector = @selector(createCharArray);
  methods[40].selector = @selector(readCharArrayWithCharArray:);
  methods[41].selector = @selector(writeIntArrayWithIntArray:);
  methods[42].selector = @selector(createIntArray);
  methods[43].selector = @selector(readIntArrayWithIntArray:);
  methods[44].selector = @selector(writeLongArrayWithLongArray:);
  methods[45].selector = @selector(createLongArray);
  methods[46].selector = @selector(readLongArrayWithLongArray:);
  methods[47].selector = @selector(writeFloatArrayWithFloatArray:);
  methods[48].selector = @selector(createFloatArray);
  methods[49].selector = @selector(readFloatArrayWithFloatArray:);
  methods[50].selector = @selector(writeDoubleArrayWithDoubleArray:);
  methods[51].selector = @selector(createDoubleArray);
  methods[52].selector = @selector(readDoubleArrayWithDoubleArray:);
  methods[53].selector = @selector(writeStringArrayWithNSStringArray:);
  methods[54].selector = @selector(createStringArray);
  methods[55].selector = @selector(readStringArrayWithNSStringArray:);
  methods[56].selector = @selector(writeBinderArrayWithAndroidOsIBinderArray:);
  methods[57].selector = @selector(writeCharSequenceArrayWithJavaLangCharSequenceArray:);
  methods[58].selector = @selector(createBinderArray);
  methods[59].selector = @selector(readBinderArrayWithAndroidOsIBinderArray:);
  methods[60].selector = @selector(writeTypedListWithJavaUtilList:);
  methods[61].selector = @selector(writeStringListWithJavaUtilList:);
  methods[62].selector = @selector(writeBinderListWithJavaUtilList:);
  methods[63].selector = @selector(writeTypedArrayWithAndroidOsParcelableArray:withInt:);
  methods[64].selector = @selector(writeValueWithId:);
  methods[65].selector = @selector(writeParcelableWithAndroidOsParcelable:withInt:);
  methods[66].selector = @selector(writeSerializableWithJavaIoSerializable:);
  methods[67].selector = @selector(writeExceptionWithJavaLangException:);
  methods[68].selector = @selector(writeNoException);
  methods[69].selector = @selector(readException);
  methods[70].selector = @selector(readExceptionCode);
  methods[71].selector = @selector(readExceptionWithInt:withNSString:);
  methods[72].selector = @selector(readInt);
  methods[73].selector = @selector(readLong);
  methods[74].selector = @selector(readFloat);
  methods[75].selector = @selector(readDouble);
  methods[76].selector = @selector(readString);
  methods[77].selector = @selector(readCharSequence);
  methods[78].selector = @selector(readStrongBinder);
  methods[79].selector = @selector(readFileDescriptor);
  methods[80].selector = @selector(internalReadFileDescriptor);
  methods[81].selector = @selector(openFileDescriptorWithNSString:withInt:);
  methods[82].selector = @selector(closeFileDescriptorWithJavaIoFileDescriptor:);
  methods[83].selector = @selector(readByte);
  methods[84].selector = @selector(readMapWithJavaUtilMap:withJavaLangClassLoader:);
  methods[85].selector = @selector(readListWithJavaUtilList:withJavaLangClassLoader:);
  methods[86].selector = @selector(readHashMapWithJavaLangClassLoader:);
  methods[87].selector = @selector(readBundle);
  methods[88].selector = @selector(readBundleWithJavaLangClassLoader:);
  methods[89].selector = @selector(createByteArray);
  methods[90].selector = @selector(readByteArrayWithByteArray:);
  methods[91].selector = @selector(readStringArray);
  methods[92].selector = @selector(readCharSequenceArray);
  methods[93].selector = @selector(readArrayListWithJavaLangClassLoader:);
  methods[94].selector = @selector(readArrayWithJavaLangClassLoader:);
  methods[95].selector = @selector(readSparseArrayWithJavaLangClassLoader:);
  methods[96].selector = @selector(readSparseBooleanArray);
  methods[97].selector = @selector(createTypedArrayListWithAndroidOsParcelable_Creator:);
  methods[98].selector = @selector(readTypedListWithJavaUtilList:withAndroidOsParcelable_Creator:);
  methods[99].selector = @selector(createStringArrayList);
  methods[100].selector = @selector(createBinderArrayList);
  methods[101].selector = @selector(readStringListWithJavaUtilList:);
  methods[102].selector = @selector(readBinderListWithJavaUtilList:);
  methods[103].selector = @selector(createTypedArrayWithAndroidOsParcelable_Creator:);
  methods[104].selector = @selector(readTypedArrayWithNSObjectArray:withAndroidOsParcelable_Creator:);
  methods[105].selector = @selector(readTypedArrayWithAndroidOsParcelable_Creator:);
  methods[106].selector = @selector(writeParcelableArrayWithAndroidOsParcelableArray:withInt:);
  methods[107].selector = @selector(readValueWithJavaLangClassLoader:);
  methods[108].selector = @selector(readParcelableWithJavaLangClassLoader:);
  methods[109].selector = @selector(readParcelableArrayWithJavaLangClassLoader:);
  methods[110].selector = @selector(readSerializable);
  methods[111].selector = @selector(obtainWithInt:);
  methods[112].selector = @selector(initWithInt:);
  methods[113].selector = @selector(java_finalize);
  methods[114].selector = @selector(freeBuffer);
  methods[115].selector = @selector(init__WithInt:);
  methods[116].selector = @selector(destroy);
  methods[117].selector = @selector(readMapInternalWithJavaUtilMap:withInt:withJavaLangClassLoader:);
  methods[118].selector = @selector(readListInternalWithJavaUtilList:withInt:withJavaLangClassLoader:);
  methods[119].selector = @selector(readArrayInternalWithNSObjectArray:withInt:withJavaLangClassLoader:);
  methods[120].selector = @selector(readSparseArrayInternalWithAndroidUtilSparseArray:withInt:withJavaLangClassLoader:);
  methods[121].selector = @selector(readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG_RECYCLE", "Z", .constantValue.asBOOL = AndroidOsParcel_DEBUG_RECYCLE, 0x1a, -1, -1, -1, -1 },
    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 143, -1, -1 },
    { "mObject_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mOwnObject_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mStack_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "POOL_SIZE", "I", .constantValue.asInt = AndroidOsParcel_POOL_SIZE, 0x1a, -1, -1, -1, -1 },
    { "sOwnedPool", "[LAndroidOsParcel;", .constantValue.asLong = 0, 0x1a, -1, 144, -1, -1 },
    { "sHolderPool", "[LAndroidOsParcel;", .constantValue.asLong = 0, 0x1a, -1, 145, -1, -1 },
    { "VAL_NULL", "I", .constantValue.asInt = AndroidOsParcel_VAL_NULL, 0x1a, -1, -1, -1, -1 },
    { "VAL_STRING", "I", .constantValue.asInt = AndroidOsParcel_VAL_STRING, 0x1a, -1, -1, -1, -1 },
    { "VAL_INTEGER", "I", .constantValue.asInt = AndroidOsParcel_VAL_INTEGER, 0x1a, -1, -1, -1, -1 },
    { "VAL_MAP", "I", .constantValue.asInt = AndroidOsParcel_VAL_MAP, 0x1a, -1, -1, -1, -1 },
    { "VAL_BUNDLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_BUNDLE, 0x1a, -1, -1, -1, -1 },
    { "VAL_PARCELABLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_PARCELABLE, 0x1a, -1, -1, -1, -1 },
    { "VAL_SHORT", "I", .constantValue.asInt = AndroidOsParcel_VAL_SHORT, 0x1a, -1, -1, -1, -1 },
    { "VAL_LONG", "I", .constantValue.asInt = AndroidOsParcel_VAL_LONG, 0x1a, -1, -1, -1, -1 },
    { "VAL_FLOAT", "I", .constantValue.asInt = AndroidOsParcel_VAL_FLOAT, 0x1a, -1, -1, -1, -1 },
    { "VAL_DOUBLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_DOUBLE, 0x1a, -1, -1, -1, -1 },
    { "VAL_BOOLEAN", "I", .constantValue.asInt = AndroidOsParcel_VAL_BOOLEAN, 0x1a, -1, -1, -1, -1 },
    { "VAL_CHARSEQUENCE", "I", .constantValue.asInt = AndroidOsParcel_VAL_CHARSEQUENCE, 0x1a, -1, -1, -1, -1 },
    { "VAL_LIST", "I", .constantValue.asInt = AndroidOsParcel_VAL_LIST, 0x1a, -1, -1, -1, -1 },
    { "VAL_SPARSEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_SPARSEARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_BYTEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_BYTEARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_STRINGARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_STRINGARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_IBINDER", "I", .constantValue.asInt = AndroidOsParcel_VAL_IBINDER, 0x1a, -1, -1, -1, -1 },
    { "VAL_PARCELABLEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_PARCELABLEARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_OBJECTARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_OBJECTARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_INTARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_INTARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_LONGARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_LONGARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_BYTE", "I", .constantValue.asInt = AndroidOsParcel_VAL_BYTE, 0x1a, -1, -1, -1, -1 },
    { "VAL_SERIALIZABLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_SERIALIZABLE, 0x1a, -1, -1, -1, -1 },
    { "VAL_SPARSEBOOLEANARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_SPARSEBOOLEANARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_BOOLEANARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_BOOLEANARRAY, 0x1a, -1, -1, -1, -1 },
    { "VAL_CHARSEQUENCEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_CHARSEQUENCEARRAY, 0x1a, -1, -1, -1, -1 },
    { "EX_SECURITY", "I", .constantValue.asInt = AndroidOsParcel_EX_SECURITY, 0x1a, -1, -1, -1, -1 },
    { "EX_BAD_PARCELABLE", "I", .constantValue.asInt = AndroidOsParcel_EX_BAD_PARCELABLE, 0x1a, -1, -1, -1, -1 },
    { "EX_ILLEGAL_ARGUMENT", "I", .constantValue.asInt = AndroidOsParcel_EX_ILLEGAL_ARGUMENT, 0x1a, -1, -1, -1, -1 },
    { "EX_NULL_POINTER", "I", .constantValue.asInt = AndroidOsParcel_EX_NULL_POINTER, 0x1a, -1, -1, -1, -1 },
    { "EX_ILLEGAL_STATE", "I", .constantValue.asInt = AndroidOsParcel_EX_ILLEGAL_STATE, 0x1a, -1, -1, -1, -1 },
    { "EX_HAS_REPLY_HEADER", "I", .constantValue.asInt = AndroidOsParcel_EX_HAS_REPLY_HEADER, 0x1a, -1, -1, -1, -1 },
    { "STRING_CREATOR", "LAndroidOsParcelable_Creator;", .constantValue.asLong = 0, 0x19, -1, 146, 147, -1 },
    { "mCreators", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 148, 149, -1 },
  };
  static const void *ptrTable[] = { "setDataSize", "I", "setDataPosition", "setDataCapacity", "unmarshall", "[BII", "appendFrom", "LAndroidOsParcel;II", "writeInterfaceToken", "LNSString;", "enforceInterface", "writeByteArray", "[B", "writeNative", "writeInt", "writeLong", "J", "writeFloat", "F", "writeDouble", "D", "writeString", "writeCharSequence", "LJavaLangCharSequence;", "writeStrongBinder", "LAndroidOsIBinder;", "writeStrongInterface", "LAndroidOsIInterface;", "writeFileDescriptor", "LJavaIoFileDescriptor;", "writeByte", "B", "writeMap", "LJavaUtilMap;", "writeMapInternal", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", "writeBundle", "LAndroidOsBundle;", "writeList", "LJavaUtilList;", "writeArray", "[LNSObject;", "writeSparseArray", "LAndroidUtilSparseArray;", "(Landroid/util/SparseArray<Ljava/lang/Object;>;)V", "writeSparseBooleanArray", "LAndroidUtilSparseBooleanArray;", "writeBooleanArray", "[Z", "readBooleanArray", "writeCharArray", "[C", "readCharArray", "writeIntArray", "[I", "readIntArray", "writeLongArray", "[J", "readLongArray", "writeFloatArray", "[F", "readFloatArray", "writeDoubleArray", "[D", "readDoubleArray", "writeStringArray", "[LNSString;", "readStringArray", "writeBinderArray", "[LAndroidOsIBinder;", "writeCharSequenceArray", "[LJavaLangCharSequence;", "readBinderArray", "writeTypedList", "<T::Landroid/os/Parcelable;>(Ljava/util/List<TT;>;)V", "writeStringList", "(Ljava/util/List<Ljava/lang/String;>;)V", "writeBinderList", "(Ljava/util/List<Landroid/os/IBinder;>;)V", "writeTypedArray", "[LAndroidOsParcelable;I", "<T::Landroid/os/Parcelable;>([TT;I)V", "writeValue", "LNSObject;", "writeParcelable", "LAndroidOsParcelable;I", "writeSerializable", "LJavaIoSerializable;", "writeException", "LJavaLangException;", "readException", "ILNSString;", "openFileDescriptor", "LNSString;I", "LJavaIoFileNotFoundException;", "closeFileDescriptor", "LJavaIoIOException;", "readMap", "LJavaUtilMap;LJavaLangClassLoader;", "readList", "LJavaUtilList;LJavaLangClassLoader;", "readHashMap", "LJavaLangClassLoader;", "readBundle", "readByteArray", "readArrayList", "readArray", "readSparseArray", "createTypedArrayList", "LAndroidOsParcelable_Creator;", "<T:Ljava/lang/Object;>(Landroid/os/Parcelable$Creator<TT;>;)Ljava/util/ArrayList<TT;>;", "readTypedList", "LJavaUtilList;LAndroidOsParcelable_Creator;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Landroid/os/Parcelable$Creator<TT;>;)V", "()Ljava/util/ArrayList<Ljava/lang/String;>;", "()Ljava/util/ArrayList<Landroid/os/IBinder;>;", "readStringList", "readBinderList", "createTypedArray", "<T:Ljava/lang/Object;>(Landroid/os/Parcelable$Creator<TT;>;)[TT;", "readTypedArray", "[LNSObject;LAndroidOsParcelable_Creator;", "<T:Ljava/lang/Object;>([TT;Landroid/os/Parcelable$Creator<TT;>;)V", (void *)&AndroidOsParcel__Annotations$0, "writeParcelableArray", "readValue", "readParcelable", "<T::Landroid/os/Parcelable;>(Ljava/lang/ClassLoader;)TT;", "readParcelableArray", "obtain", "finalize", "LJavaLangThrowable;", "init", "readMapInternal", "LJavaUtilMap;ILJavaLangClassLoader;", "readListInternal", "LJavaUtilList;ILJavaLangClassLoader;", "readArrayInternal", "[LNSObject;ILJavaLangClassLoader;", "readSparseArrayInternal", "LAndroidUtilSparseArray;ILJavaLangClassLoader;", "readSparseBooleanArrayInternal", "LAndroidUtilSparseBooleanArray;I", &AndroidOsParcel_TAG, &AndroidOsParcel_sOwnedPool, &AndroidOsParcel_sHolderPool, &AndroidOsParcel_STRING_CREATOR, "Landroid/os/Parcelable$Creator<Ljava/lang/String;>;", &AndroidOsParcel_mCreators, "Ljava/util/HashMap<Ljava/lang/ClassLoader;Ljava/util/HashMap<Ljava/lang/String;Landroid/os/Parcelable$Creator;>;>;" };
  static const J2ObjcClassInfo _AndroidOsParcel = { "Parcel", "android.os", ptrTable, methods, fields, 7, 0x11, 122, 42, -1, -1, -1, -1, -1 };
  return &_AndroidOsParcel;
}

+ (void)initialize {
  if (self == [AndroidOsParcel class]) {
    JreStrongAssignAndConsume(&AndroidOsParcel_sOwnedPool, [IOSObjectArray newArrayWithLength:AndroidOsParcel_POOL_SIZE type:AndroidOsParcel_class_()]);
    JreStrongAssignAndConsume(&AndroidOsParcel_sHolderPool, [IOSObjectArray newArrayWithLength:AndroidOsParcel_POOL_SIZE type:AndroidOsParcel_class_()]);
    JreStrongAssignAndConsume(&AndroidOsParcel_STRING_CREATOR, new_AndroidOsParcel_1_init());
    JreStrongAssignAndConsume(&AndroidOsParcel_mCreators, new_JavaUtilHashMap_init());
    J2OBJC_SET_INITIALIZED(AndroidOsParcel)
  }
}

@end

AndroidOsParcel *AndroidOsParcel_obtain() {
  AndroidOsParcel_initialize();
  @throw create_JavaLangUnsupportedOperationException_init();
}

jint AndroidOsParcel_dataAvail(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

jint AndroidOsParcel_dataPosition(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeByteArrayWithByteArray_(AndroidOsParcel *self, IOSByteArray *b) {
  AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(self, b, 0, (b != nil) ? ((IOSByteArray *) nil_chk(b))->size_ : 0);
}

void AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(AndroidOsParcel *self, IOSByteArray *b, jint offset, jint len) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeNativeWithByteArray_withInt_withInt_(AndroidOsParcel *self, IOSByteArray *b, jint offset, jint len) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeIntWithInt_(AndroidOsParcel *self, jint val) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeLongWithLong_(AndroidOsParcel *self, jlong val) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeFloatWithFloat_(AndroidOsParcel *self, jfloat val) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeStringWithNSString_(AndroidOsParcel *self, NSString *val) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(AndroidOsParcel *self, id<AndroidOsIBinder> val) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeByteWithByte_(AndroidOsParcel *self, jbyte val) {
  AndroidOsParcel_writeIntWithInt_(self, val);
}

IOSBooleanArray *AndroidOsParcel_createBooleanArray(AndroidOsParcel *self) {
  jint N = AndroidOsParcel_readInt(self);
  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
    IOSBooleanArray *val = [IOSBooleanArray arrayWithLength:N];
    for (jint i = 0; i < N; i++) {
      *IOSBooleanArray_GetRef(val, i) = (AndroidOsParcel_readInt(self) != 0);
    }
    return val;
  }
  else {
    return nil;
  }
}

IOSIntArray *AndroidOsParcel_createIntArray(AndroidOsParcel *self) {
  jint N = AndroidOsParcel_readInt(self);
  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
    IOSIntArray *val = [IOSIntArray arrayWithLength:N];
    for (jint i = 0; i < N; i++) {
      *IOSIntArray_GetRef(val, i) = AndroidOsParcel_readInt(self);
    }
    return val;
  }
  else {
    return nil;
  }
}

IOSLongArray *AndroidOsParcel_createLongArray(AndroidOsParcel *self) {
  jint N = AndroidOsParcel_readInt(self);
  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 3))) {
    IOSLongArray *val = [IOSLongArray arrayWithLength:N];
    for (jint i = 0; i < N; i++) {
      *IOSLongArray_GetRef(val, i) = AndroidOsParcel_readLong(self);
    }
    return val;
  }
  else {
    return nil;
  }
}

void AndroidOsParcel_writeValueWithId_(AndroidOsParcel *self, id v) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(AndroidOsParcel *self, id<AndroidOsParcelable> p, jint parcelableFlags) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

jint AndroidOsParcel_readExceptionCode(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_readExceptionWithInt_withNSString_(AndroidOsParcel *self, jint code, NSString *msg) {
  switch (code) {
    case AndroidOsParcel_EX_SECURITY:
    @throw create_JavaLangSecurityException_initWithNSString_(msg);
    case AndroidOsParcel_EX_BAD_PARCELABLE:
    @throw create_AndroidOsBadParcelableException_initWithNSString_(msg);
    case AndroidOsParcel_EX_ILLEGAL_ARGUMENT:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(msg);
    case AndroidOsParcel_EX_NULL_POINTER:
    @throw create_JavaLangNullPointerException_initWithNSString_(msg);
    case AndroidOsParcel_EX_ILLEGAL_STATE:
    @throw create_JavaLangIllegalStateException_initWithNSString_(msg);
  }
  @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I$$", @"Unknown exception code: ", code, @" msg ", msg));
}

jint AndroidOsParcel_readInt(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

jlong AndroidOsParcel_readLong(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

jfloat AndroidOsParcel_readFloat(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

jdouble AndroidOsParcel_readDouble(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

NSString *AndroidOsParcel_readString(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

id<JavaLangCharSequence> AndroidOsParcel_readCharSequence(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

id<AndroidOsIBinder> AndroidOsParcel_readStrongBinder(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

JavaIoFileDescriptor *AndroidOsParcel_internalReadFileDescriptor(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

JavaIoFileDescriptor *AndroidOsParcel_openFileDescriptorWithNSString_withInt_(NSString *file, jint mode) {
  AndroidOsParcel_initialize();
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_closeFileDescriptorWithJavaIoFileDescriptor_(JavaIoFileDescriptor *desc) {
  AndroidOsParcel_initialize();
  @throw create_JavaLangUnsupportedOperationException_init();
}

jbyte AndroidOsParcel_readByte(AndroidOsParcel *self) {
  return (jbyte) (AndroidOsParcel_readInt(self) & (jint) 0xff);
}

JavaUtilHashMap *AndroidOsParcel_readHashMapWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  JavaUtilHashMap *m = create_JavaUtilHashMap_initWithInt_(N);
  [self readMapInternalWithJavaUtilMap:m withInt:N withJavaLangClassLoader:loader];
  return m;
}

AndroidOsBundle *AndroidOsParcel_readBundleWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

IOSByteArray *AndroidOsParcel_createByteArray(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

IOSObjectArray *AndroidOsParcel_readStringArray(AndroidOsParcel *self) {
  IOSObjectArray *array = nil;
  jint length = AndroidOsParcel_readInt(self);
  if (length >= 0) {
    array = [IOSObjectArray arrayWithLength:length type:NSString_class_()];
    for (jint i = 0; i < length; i++) {
      IOSObjectArray_Set(array, i, AndroidOsParcel_readString(self));
    }
  }
  return array;
}

IOSObjectArray *AndroidOsParcel_readCharSequenceArray(AndroidOsParcel *self) {
  IOSObjectArray *array = nil;
  jint length = AndroidOsParcel_readInt(self);
  if (length >= 0) {
    array = [IOSObjectArray arrayWithLength:length type:JavaLangCharSequence_class_()];
    for (jint i = 0; i < length; i++) {
      IOSObjectArray_Set(array, i, AndroidOsParcel_readCharSequence(self));
    }
  }
  return array;
}

JavaUtilArrayList *AndroidOsParcel_readArrayListWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
  AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(self, l, N, loader);
  return l;
}

IOSObjectArray *AndroidOsParcel_readArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  IOSObjectArray *l = [IOSObjectArray arrayWithLength:N type:NSObject_class_()];
  AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(self, l, N, loader);
  return l;
}

AndroidUtilSparseArray *AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  AndroidUtilSparseArray *sa = create_AndroidUtilSparseArray_initWithInt_(N);
  AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(self, sa, N, loader);
  return sa;
}

AndroidUtilSparseBooleanArray *AndroidOsParcel_readSparseBooleanArray(AndroidOsParcel *self) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  AndroidUtilSparseBooleanArray *sa = create_AndroidUtilSparseBooleanArray_initWithInt_(N);
  AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(self, sa, N);
  return sa;
}

IOSObjectArray *AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(AndroidOsParcel *self, id<AndroidOsParcelable_Creator> c) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  IOSObjectArray *l = [((id<AndroidOsParcelable_Creator>) nil_chk(c)) newArrayWithInt:N];
  for (jint i = 0; i < N; i++) {
    if (AndroidOsParcel_readInt(self) != 0) {
      IOSObjectArray_Set(nil_chk(l), i, [c createFromParcelWithAndroidOsParcel:self]);
    }
  }
  return l;
}

id AndroidOsParcel_readValueWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  jint type = AndroidOsParcel_readInt(self);
  {
    jint off;
    switch (type) {
      case AndroidOsParcel_VAL_NULL:
      return nil;
      case AndroidOsParcel_VAL_STRING:
      return AndroidOsParcel_readString(self);
      case AndroidOsParcel_VAL_INTEGER:
      return JavaLangInteger_valueOfWithInt_(AndroidOsParcel_readInt(self));
      case AndroidOsParcel_VAL_MAP:
      return AndroidOsParcel_readHashMapWithJavaLangClassLoader_(self, loader);
      case AndroidOsParcel_VAL_PARCELABLE:
      return AndroidOsParcel_readParcelableWithJavaLangClassLoader_(self, loader);
      case AndroidOsParcel_VAL_SHORT:
      return JavaLangShort_valueOfWithShort_((jshort) AndroidOsParcel_readInt(self));
      case AndroidOsParcel_VAL_LONG:
      return JavaLangLong_valueOfWithLong_(AndroidOsParcel_readLong(self));
      case AndroidOsParcel_VAL_FLOAT:
      return JavaLangFloat_valueOfWithFloat_(AndroidOsParcel_readFloat(self));
      case AndroidOsParcel_VAL_DOUBLE:
      return JavaLangDouble_valueOfWithDouble_(AndroidOsParcel_readDouble(self));
      case AndroidOsParcel_VAL_BOOLEAN:
      return JavaLangBoolean_valueOfWithBoolean_(AndroidOsParcel_readInt(self) == 1);
      case AndroidOsParcel_VAL_CHARSEQUENCE:
      return AndroidOsParcel_readCharSequence(self);
      case AndroidOsParcel_VAL_LIST:
      return AndroidOsParcel_readArrayListWithJavaLangClassLoader_(self, loader);
      case AndroidOsParcel_VAL_BOOLEANARRAY:
      return AndroidOsParcel_createBooleanArray(self);
      case AndroidOsParcel_VAL_BYTEARRAY:
      return AndroidOsParcel_createByteArray(self);
      case AndroidOsParcel_VAL_STRINGARRAY:
      return AndroidOsParcel_readStringArray(self);
      case AndroidOsParcel_VAL_CHARSEQUENCEARRAY:
      return AndroidOsParcel_readCharSequenceArray(self);
      case AndroidOsParcel_VAL_IBINDER:
      return AndroidOsParcel_readStrongBinder(self);
      case AndroidOsParcel_VAL_OBJECTARRAY:
      return AndroidOsParcel_readArrayWithJavaLangClassLoader_(self, loader);
      case AndroidOsParcel_VAL_INTARRAY:
      return AndroidOsParcel_createIntArray(self);
      case AndroidOsParcel_VAL_LONGARRAY:
      return AndroidOsParcel_createLongArray(self);
      case AndroidOsParcel_VAL_BYTE:
      return JavaLangByte_valueOfWithByte_(AndroidOsParcel_readByte(self));
      case AndroidOsParcel_VAL_SERIALIZABLE:
      return AndroidOsParcel_readSerializable(self);
      case AndroidOsParcel_VAL_PARCELABLEARRAY:
      return AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(self, loader);
      case AndroidOsParcel_VAL_SPARSEARRAY:
      return AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(self, loader);
      case AndroidOsParcel_VAL_SPARSEBOOLEANARRAY:
      return AndroidOsParcel_readSparseBooleanArray(self);
      case AndroidOsParcel_VAL_BUNDLE:
      return AndroidOsParcel_readBundleWithJavaLangClassLoader_(self, loader);
      default:
      off = AndroidOsParcel_dataPosition(self) - 4;
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@$I$I", @"Parcel ", self, @": Unmarshalling unknown type code ", type, @" at offset ", off));
    }
  }
}

id<AndroidOsParcelable> AndroidOsParcel_readParcelableWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  NSString *name = AndroidOsParcel_readString(self);
  if (name == nil) {
    return nil;
  }
  id<AndroidOsParcelable_Creator> creator;
  @synchronized(AndroidOsParcel_mCreators) {
    JavaUtilHashMap *map = [((JavaUtilHashMap *) nil_chk(AndroidOsParcel_mCreators)) getWithId:loader];
    if (map == nil) {
      map = create_JavaUtilHashMap_init();
      [AndroidOsParcel_mCreators putWithId:loader withId:map];
    }
    creator = JreRetainedLocalValue([map getWithId:name]);
    if (creator == nil) {
      @try {
        IOSClass *c = loader == nil ? IOSClass_forName_(name) : IOSClass_forName_initialize_classLoader_(name, true, loader);
        JavaLangReflectField *f = [c getField:@"CREATOR"];
        creator = JreRetainedLocalValue((id<AndroidOsParcelable_Creator>) cast_check([((JavaLangReflectField *) nil_chk(f)) getWithId:nil], AndroidOsParcelable_Creator_class_()));
      }
      @catch (JavaLangIllegalAccessException *e) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidOsParcel_TAG, JreStrcat("$$$@", @"Class not found when unmarshalling: ", name, @", e: ", e));
        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"IllegalAccessException when unmarshalling: ", name));
      }
      @catch (JavaLangClassNotFoundException *e) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidOsParcel_TAG, JreStrcat("$$$@", @"Class not found when unmarshalling: ", name, @", e: ", e));
        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"ClassNotFoundException when unmarshalling: ", name));
      }
      @catch (JavaLangClassCastException *e) {
        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ", name));
      }
      @catch (JavaLangNoSuchFieldException *e) {
        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ", name));
      }
      if (creator == nil) {
        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ", name));
      }
      [map putWithId:name withId:creator];
    }
  }
  return [creator createFromParcelWithAndroidOsParcel:self];
}

IOSObjectArray *AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
  jint N = AndroidOsParcel_readInt(self);
  if (N < 0) {
    return nil;
  }
  IOSObjectArray *p = [IOSObjectArray arrayWithLength:N type:AndroidOsParcelable_class_()];
  for (jint i = 0; i < N; i++) {
    IOSObjectArray_Set(p, i, AndroidOsParcel_readParcelableWithJavaLangClassLoader_(self, loader));
  }
  return p;
}

id<JavaIoSerializable> AndroidOsParcel_readSerializable(AndroidOsParcel *self) {
  NSString *name = AndroidOsParcel_readString(self);
  if (name == nil) {
    return nil;
  }
  IOSByteArray *serializedData = AndroidOsParcel_createByteArray(self);
  JavaIoByteArrayInputStream *bais = create_JavaIoByteArrayInputStream_initWithByteArray_(serializedData);
  @try {
    JavaIoObjectInputStream *ois = create_JavaIoObjectInputStream_initWithJavaIoInputStream_(bais);
    return (id<JavaIoSerializable>) cast_check([ois readObject], JavaIoSerializable_class_());
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$C", @"Parcelable encountered IOException reading a Serializable object (name = ", name, ')'), ioe);
  }
  @catch (JavaLangClassNotFoundException *cnfe) {
    @throw create_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$C", @"Parcelable encounteredClassNotFoundException reading a Serializable object (name = ", name, ')'), cnfe);
  }
}

AndroidOsParcel *AndroidOsParcel_obtainWithInt_(jint obj) {
  AndroidOsParcel_initialize();
  IOSObjectArray *pool = AndroidOsParcel_sHolderPool;
  @synchronized(pool) {
    AndroidOsParcel *p;
    for (jint i = 0; i < AndroidOsParcel_POOL_SIZE; i++) {
      p = IOSObjectArray_Get(nil_chk(pool), i);
      if (p != nil) {
        IOSObjectArray_Set(pool, i, nil);
        AndroidOsParcel_init__WithInt_(p, obj);
        return JreRetainedLocalValue(p);
      }
    }
  }
  return create_AndroidOsParcel_initWithInt_(obj);
}

void AndroidOsParcel_initWithInt_(AndroidOsParcel *self, jint obj) {
  NSObject_init(self);
  AndroidOsParcel_init__WithInt_(self, obj);
}

AndroidOsParcel *new_AndroidOsParcel_initWithInt_(jint obj) {
  J2OBJC_NEW_IMPL(AndroidOsParcel, initWithInt_, obj)
}

AndroidOsParcel *create_AndroidOsParcel_initWithInt_(jint obj) {
  J2OBJC_CREATE_IMPL(AndroidOsParcel, initWithInt_, obj)
}

void AndroidOsParcel_freeBuffer(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_init__WithInt_(AndroidOsParcel *self, jint obj) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_destroy(AndroidOsParcel *self) {
  @throw create_JavaLangUnsupportedOperationException_init();
}

void AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, id<JavaUtilList> outVal, jint N, JavaLangClassLoader *loader) {
  while (N > 0) {
    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
    [((id<JavaUtilList>) nil_chk(outVal)) addWithId:value];
    N--;
  }
}

void AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, IOSObjectArray *outVal, jint N, JavaLangClassLoader *loader) {
  for (jint i = 0; i < N; i++) {
    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
    IOSObjectArray_Set(nil_chk(outVal), i, value);
  }
}

void AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, AndroidUtilSparseArray *outVal, jint N, JavaLangClassLoader *loader) {
  while (N > 0) {
    jint key = AndroidOsParcel_readInt(self);
    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
    [((AndroidUtilSparseArray *) nil_chk(outVal)) appendWithInt:key withId:value];
    N--;
  }
}

void AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(AndroidOsParcel *self, AndroidUtilSparseBooleanArray *outVal, jint N) {
  while (N > 0) {
    jint key = AndroidOsParcel_readInt(self);
    jboolean value = AndroidOsParcel_readByte(self) == 1;
    [((AndroidUtilSparseBooleanArray *) nil_chk(outVal)) appendWithInt:key withBoolean:value];
    N--;
  }
}

IOSObjectArray *AndroidOsParcel__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsParcel)

@implementation AndroidOsParcel_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidOsParcel_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)source {
  return AndroidOsParcel_readString(nil_chk(source));
}

- (IOSObjectArray *)newArrayWithInt:(jint)size {
  return [IOSObjectArray arrayWithLength:size type:NSString_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createFromParcelWithAndroidOsParcel:);
  methods[2].selector = @selector(newArrayWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createFromParcel", "LAndroidOsParcel;", "newArray", "I", "Ljava/lang/Object;Landroid/os/Parcelable$Creator<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _AndroidOsParcel_1 = { "", "android.os", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 1, -1, -1, 4, -1 };
  return &_AndroidOsParcel_1;
}

@end

void AndroidOsParcel_1_init(AndroidOsParcel_1 *self) {
  NSObject_init(self);
}

AndroidOsParcel_1 *new_AndroidOsParcel_1_init() {
  J2OBJC_NEW_IMPL(AndroidOsParcel_1, init)
}

AndroidOsParcel_1 *create_AndroidOsParcel_1_init() {
  J2OBJC_CREATE_IMPL(AndroidOsParcel_1, init)
}
