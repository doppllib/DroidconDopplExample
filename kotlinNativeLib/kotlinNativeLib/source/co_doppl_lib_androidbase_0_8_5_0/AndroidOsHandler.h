//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidOsHandler")
#ifdef RESTRICT_AndroidOsHandler
#define INCLUDE_ALL_AndroidOsHandler 0
#else
#define INCLUDE_ALL_AndroidOsHandler 1
#endif
#undef RESTRICT_AndroidOsHandler

#if !defined (AndroidOsHandler_) && (INCLUDE_ALL_AndroidOsHandler || defined(INCLUDE_AndroidOsHandler))
#define AndroidOsHandler_

@class AndroidOsLooper;
@class AndroidOsMessage;
@class AndroidOsMessageQueue;
@protocol AndroidOsHandler_Callback;
@protocol AndroidUtilPrinter;
@protocol JavaLangRunnable;

@interface AndroidOsHandler : NSObject {
 @public
  AndroidOsMessageQueue *mQueue_;
  AndroidOsLooper *mLooper_;
  id<AndroidOsHandler_Callback> mCallback_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback;

- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper;

- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper
          withAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback;

- (void)dispatchMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;

- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)pw
                      withNSString:(NSString *)prefix;

- (AndroidOsLooper *)getLooper;

- (NSString *)getMessageNameWithAndroidOsMessage:(AndroidOsMessage *)message;

- (void)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;

- (jboolean)hasMessagesWithInt:(jint)what;

- (jboolean)hasMessagesWithInt:(jint)what
                        withId:(id)object;

- (AndroidOsMessage *)obtainMessage;

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what;

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
                                   withInt:(jint)arg1
                                   withInt:(jint)arg2;

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
                                   withInt:(jint)arg1
                                   withInt:(jint)arg2
                                    withId:(id)obj;

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
                                    withId:(id)obj;

- (jboolean)postWithJavaLangRunnable:(id<JavaLangRunnable>)r;

- (jboolean)postAtFrontOfQueueWithJavaLangRunnable:(id<JavaLangRunnable>)r;

- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                  withLong:(jlong)uptimeMillis;

- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                    withId:(id)token
                                  withLong:(jlong)uptimeMillis;

- (jboolean)postDelayedWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                   withLong:(jlong)delayMillis;

- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r;

- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                     withId:(id)token;

- (void)removeCallbacksAndMessagesWithId:(id)token;

- (void)removeMessagesWithInt:(jint)what;

- (void)removeMessagesWithInt:(jint)what
                       withId:(id)object;

- (jboolean)sendEmptyMessageWithInt:(jint)what;

- (jboolean)sendEmptyMessageAtTimeWithInt:(jint)what
                                 withLong:(jlong)uptimeMillis;

- (jboolean)sendEmptyMessageDelayedWithInt:(jint)what
                                  withLong:(jlong)delayMillis;

- (jboolean)sendMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;

- (jboolean)sendMessageAtFrontOfQueueWithAndroidOsMessage:(AndroidOsMessage *)msg;

- (jboolean)sendMessageAtTimeWithAndroidOsMessage:(AndroidOsMessage *)msg
                                         withLong:(jlong)uptimeMillis;

- (jboolean)sendMessageDelayedWithAndroidOsMessage:(AndroidOsMessage *)msg
                                          withLong:(jlong)delayMillis;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidOsHandler)

J2OBJC_FIELD_SETTER(AndroidOsHandler, mQueue_, AndroidOsMessageQueue *)
J2OBJC_FIELD_SETTER(AndroidOsHandler, mLooper_, AndroidOsLooper *)
J2OBJC_FIELD_SETTER(AndroidOsHandler, mCallback_, id<AndroidOsHandler_Callback>)

FOUNDATION_EXPORT void AndroidOsHandler_init(AndroidOsHandler *self);

FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_init();

FOUNDATION_EXPORT void AndroidOsHandler_initWithAndroidOsHandler_Callback_(AndroidOsHandler *self, id<AndroidOsHandler_Callback> callback);

FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback);

FOUNDATION_EXPORT void AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsHandler *self, AndroidOsLooper *looper);

FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper);

FOUNDATION_EXPORT void AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsHandler *self, AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback);

FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback);

J2OBJC_TYPE_LITERAL_HEADER(AndroidOsHandler)

#endif

#if !defined (AndroidOsHandler_Callback_) && (INCLUDE_ALL_AndroidOsHandler || defined(INCLUDE_AndroidOsHandler_Callback))
#define AndroidOsHandler_Callback_

@class AndroidOsMessage;

@protocol AndroidOsHandler_Callback < JavaObject >

- (jboolean)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidOsHandler_Callback)

J2OBJC_TYPE_LITERAL_HEADER(AndroidOsHandler_Callback)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidOsHandler")
