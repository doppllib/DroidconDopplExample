//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidOsBadParcelableException")
#ifdef RESTRICT_AndroidOsBadParcelableException
#define INCLUDE_ALL_AndroidOsBadParcelableException 0
#else
#define INCLUDE_ALL_AndroidOsBadParcelableException 1
#endif
#undef RESTRICT_AndroidOsBadParcelableException

#if !defined (AndroidOsBadParcelableException_) && (INCLUDE_ALL_AndroidOsBadParcelableException || defined(INCLUDE_AndroidOsBadParcelableException))
#define AndroidOsBadParcelableException_

#define RESTRICT_AndroidUtilAndroidRuntimeException 1
#define INCLUDE_AndroidUtilAndroidRuntimeException 1
#include "AndroidUtilAndroidRuntimeException.h"

@class JavaLangException;
@class JavaLangThrowable;

@interface AndroidOsBadParcelableException : AndroidUtilAndroidRuntimeException

#pragma mark Public

- (instancetype)initWithJavaLangException:(JavaLangException *)cause;

- (instancetype)initWithNSString:(NSString *)msg;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidOsBadParcelableException)

FOUNDATION_EXPORT void AndroidOsBadParcelableException_initWithNSString_(AndroidOsBadParcelableException *self, NSString *msg);

FOUNDATION_EXPORT AndroidOsBadParcelableException *new_AndroidOsBadParcelableException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsBadParcelableException *create_AndroidOsBadParcelableException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void AndroidOsBadParcelableException_initWithJavaLangException_(AndroidOsBadParcelableException *self, JavaLangException *cause);

FOUNDATION_EXPORT AndroidOsBadParcelableException *new_AndroidOsBadParcelableException_initWithJavaLangException_(JavaLangException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidOsBadParcelableException *create_AndroidOsBadParcelableException_initWithJavaLangException_(JavaLangException *cause);

J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBadParcelableException)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidOsBadParcelableException")
