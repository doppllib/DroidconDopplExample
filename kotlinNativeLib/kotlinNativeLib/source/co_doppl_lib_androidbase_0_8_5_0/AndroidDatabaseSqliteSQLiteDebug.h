//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug")
#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDebug
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug 0
#else
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug 1
#endif
#undef RESTRICT_AndroidDatabaseSqliteSQLiteDebug

#if !defined (AndroidDatabaseSqliteSQLiteDebug_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDebug))
#define AndroidDatabaseSqliteSQLiteDebug_

@class IOSObjectArray;
@protocol AndroidUtilPrinter;

@interface AndroidDatabaseSqliteSQLiteDebug : NSObject

+ (jboolean)DEBUG_SQL_LOG;

+ (jboolean)DEBUG_SQL_STATEMENTS;

+ (jboolean)DEBUG_SQL_TIME;

+ (jboolean)DEBUG_LOG_SLOW_QUERIES;

#pragma mark Public

+ (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
                 withNSStringArray:(IOSObjectArray *)args;

+ (jboolean)shouldLogSlowQueryWithLong:(jlong)elapsedTimeMillis;

@end

J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteDebug)

inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_SQL_LOG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_LOG;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_LOG, jboolean)

inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_SQL_STATEMENTS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_STATEMENTS;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_STATEMENTS, jboolean)

inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_SQL_TIME();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_TIME;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_TIME, jboolean)

inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_LOG_SLOW_QUERIES();
#define AndroidDatabaseSqliteSQLiteDebug_DEBUG_LOG_SLOW_QUERIES false
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDebug, DEBUG_LOG_SLOW_QUERIES, jboolean)

FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_shouldLogSlowQueryWithLong_(jlong elapsedTimeMillis);

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDebug_dumpWithAndroidUtilPrinter_withNSStringArray_(id<AndroidUtilPrinter> printer, IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDebug)

#endif

#if !defined (AndroidDatabaseSqliteSQLiteDebug_DbStats_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDebug_DbStats))
#define AndroidDatabaseSqliteSQLiteDebug_DbStats_

@interface AndroidDatabaseSqliteSQLiteDebug_DbStats : NSObject {
 @public
  NSString *dbName_;
  jlong pageSize_;
  jlong dbSize_;
  jint lookaside_;
  NSString *cache_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)dbName
                        withLong:(jlong)pageCount
                        withLong:(jlong)pageSize
                         withInt:(jint)lookaside
                         withInt:(jint)hits
                         withInt:(jint)misses
                         withInt:(jint)cachesize;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDebug_DbStats)

J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDebug_DbStats, dbName_, NSString *)
J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDebug_DbStats, cache_, NSString *)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(AndroidDatabaseSqliteSQLiteDebug_DbStats *self, NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDebug_DbStats *new_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDebug_DbStats *create_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDebug_DbStats)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug")
