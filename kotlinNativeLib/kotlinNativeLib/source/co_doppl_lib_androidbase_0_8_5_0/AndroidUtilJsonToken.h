//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidUtilJsonToken")
#ifdef RESTRICT_AndroidUtilJsonToken
#define INCLUDE_ALL_AndroidUtilJsonToken 0
#else
#define INCLUDE_ALL_AndroidUtilJsonToken 1
#endif
#undef RESTRICT_AndroidUtilJsonToken

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidUtilJsonToken_) && (INCLUDE_ALL_AndroidUtilJsonToken || defined(INCLUDE_AndroidUtilJsonToken))
#define AndroidUtilJsonToken_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, AndroidUtilJsonToken_Enum) {
  AndroidUtilJsonToken_Enum_BEGIN_ARRAY = 0,
  AndroidUtilJsonToken_Enum_END_ARRAY = 1,
  AndroidUtilJsonToken_Enum_BEGIN_OBJECT = 2,
  AndroidUtilJsonToken_Enum_END_OBJECT = 3,
  AndroidUtilJsonToken_Enum_NAME = 4,
  AndroidUtilJsonToken_Enum_STRING = 5,
  AndroidUtilJsonToken_Enum_NUMBER = 6,
  AndroidUtilJsonToken_Enum_BOOLEAN = 7,
  AndroidUtilJsonToken_Enum_NULL = 8,
  AndroidUtilJsonToken_Enum_END_DOCUMENT = 9,
};

@interface AndroidUtilJsonToken : JavaLangEnum

+ (AndroidUtilJsonToken * __nonnull)BEGIN_ARRAY;

+ (AndroidUtilJsonToken * __nonnull)END_ARRAY;

+ (AndroidUtilJsonToken * __nonnull)BEGIN_OBJECT;

+ (AndroidUtilJsonToken * __nonnull)END_OBJECT;

+ (AndroidUtilJsonToken * __nonnull)NAME;

+ (AndroidUtilJsonToken * __nonnull)STRING;

+ (AndroidUtilJsonToken * __nonnull)NUMBER;

+ (AndroidUtilJsonToken * __nonnull)BOOLEAN;

+ (AndroidUtilJsonToken * __nonnull)NULL_;

+ (AndroidUtilJsonToken * __nonnull)END_DOCUMENT;

#pragma mark Public

+ (AndroidUtilJsonToken *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (AndroidUtilJsonToken_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(AndroidUtilJsonToken)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT AndroidUtilJsonToken *AndroidUtilJsonToken_values_[];

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_BEGIN_ARRAY();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, BEGIN_ARRAY)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_END_ARRAY();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, END_ARRAY)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_BEGIN_OBJECT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, BEGIN_OBJECT)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_END_OBJECT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, END_OBJECT)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_NAME();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, NAME)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_STRING();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, STRING)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_NUMBER();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, NUMBER)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_BOOLEAN();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, BOOLEAN)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_NULL();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, NULL)

inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_END_DOCUMENT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, END_DOCUMENT)

FOUNDATION_EXPORT IOSObjectArray *AndroidUtilJsonToken_values();

FOUNDATION_EXPORT AndroidUtilJsonToken *AndroidUtilJsonToken_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT AndroidUtilJsonToken *AndroidUtilJsonToken_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilJsonToken)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidUtilJsonToken")
