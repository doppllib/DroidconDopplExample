//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor")
#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteCursor
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor 0
#else
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor 1
#endif
#undef RESTRICT_AndroidDatabaseSqliteSQLiteCursor

#if !defined (AndroidDatabaseSqliteSQLiteCursor_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor || defined(INCLUDE_AndroidDatabaseSqliteSQLiteCursor))
#define AndroidDatabaseSqliteSQLiteCursor_

#define RESTRICT_AndroidDatabaseAbstractWindowedCursor 1
#define INCLUDE_AndroidDatabaseAbstractWindowedCursor 1
#include "AndroidDatabaseAbstractWindowedCursor.h"

@class AndroidDatabaseCursorWindow;
@class AndroidDatabaseSqliteSQLiteDatabase;
@class AndroidDatabaseSqliteSQLiteQuery;
@class IOSObjectArray;
@protocol AndroidDatabaseSqliteSQLiteCursorDriver;

@interface AndroidDatabaseSqliteSQLiteCursor : AndroidDatabaseAbstractWindowedCursor

+ (NSString *)TAG;

+ (jint)NO_COUNT;

#pragma mark Public

- (instancetype)initWithAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)driver
                                                   withNSString:(NSString *)editTable
                           withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query;

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                withAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)driver
                                               withNSString:(NSString *)editTable
                       withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query;

- (void)close;

- (void)deactivate;

- (jint)getColumnIndexWithNSString:(NSString *)columnName;

- (IOSObjectArray *)getColumnNames;

- (jint)getCount;

- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabase;

- (jboolean)onMoveWithInt:(jint)oldPosition
                  withInt:(jint)newPosition;

- (jboolean)requery;

- (void)setSelectionArgumentsWithNSStringArray:(IOSObjectArray *)selectionArgs;

- (void)setWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;

#pragma mark Protected

- (void)java_finalize;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteCursor)

inline NSString *AndroidDatabaseSqliteSQLiteCursor_get_TAG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteCursor_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteCursor, TAG, NSString *)

inline jint AndroidDatabaseSqliteSQLiteCursor_get_NO_COUNT();
#define AndroidDatabaseSqliteSQLiteCursor_NO_COUNT -1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteCursor, NO_COUNT, jint)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteCursor *self, AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *new_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteCursor *self, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *new_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteCursor)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor")
