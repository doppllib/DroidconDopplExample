//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidUtilJsonToken.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void AndroidUtilJsonToken_initWithNSString_withInt_(AndroidUtilJsonToken *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(AndroidUtilJsonToken)

AndroidUtilJsonToken *AndroidUtilJsonToken_values_[10];

@implementation AndroidUtilJsonToken

+ (AndroidUtilJsonToken *)BEGIN_ARRAY {
  return JreEnum(AndroidUtilJsonToken, BEGIN_ARRAY);
}

+ (AndroidUtilJsonToken *)END_ARRAY {
  return JreEnum(AndroidUtilJsonToken, END_ARRAY);
}

+ (AndroidUtilJsonToken *)BEGIN_OBJECT {
  return JreEnum(AndroidUtilJsonToken, BEGIN_OBJECT);
}

+ (AndroidUtilJsonToken *)END_OBJECT {
  return JreEnum(AndroidUtilJsonToken, END_OBJECT);
}

+ (AndroidUtilJsonToken *)NAME {
  return JreEnum(AndroidUtilJsonToken, NAME);
}

+ (AndroidUtilJsonToken *)STRING {
  return JreEnum(AndroidUtilJsonToken, STRING);
}

+ (AndroidUtilJsonToken *)NUMBER {
  return JreEnum(AndroidUtilJsonToken, NUMBER);
}

+ (AndroidUtilJsonToken *)BOOLEAN {
  return JreEnum(AndroidUtilJsonToken, BOOLEAN);
}

+ (AndroidUtilJsonToken *)NULL_ {
  return JreEnum(AndroidUtilJsonToken, NULL);
}

+ (AndroidUtilJsonToken *)END_DOCUMENT {
  return JreEnum(AndroidUtilJsonToken, END_DOCUMENT);
}

+ (IOSObjectArray *)values {
  return AndroidUtilJsonToken_values();
}

+ (AndroidUtilJsonToken *)valueOfWithNSString:(NSString *)name {
  return AndroidUtilJsonToken_valueOfWithNSString_(name);
}

- (AndroidUtilJsonToken_Enum)toNSEnum {
  return (AndroidUtilJsonToken_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LAndroidUtilJsonToken;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidUtilJsonToken;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BEGIN_ARRAY", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "END_ARRAY", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BEGIN_OBJECT", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "END_OBJECT", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NAME", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "STRING", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "NUMBER", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "BOOLEAN", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "NULL", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "END_DOCUMENT", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidUtilJsonToken, BEGIN_ARRAY), &JreEnum(AndroidUtilJsonToken, END_ARRAY), &JreEnum(AndroidUtilJsonToken, BEGIN_OBJECT), &JreEnum(AndroidUtilJsonToken, END_OBJECT), &JreEnum(AndroidUtilJsonToken, NAME), &JreEnum(AndroidUtilJsonToken, STRING), &JreEnum(AndroidUtilJsonToken, NUMBER), &JreEnum(AndroidUtilJsonToken, BOOLEAN), &JreEnum(AndroidUtilJsonToken, NULL), &JreEnum(AndroidUtilJsonToken, END_DOCUMENT), "Ljava/lang/Enum<Landroid/util/JsonToken;>;" };
  static const J2ObjcClassInfo _AndroidUtilJsonToken = { "JsonToken", "android.util", ptrTable, methods, fields, 7, 0x4011, 2, 10, -1, -1, -1, 12, -1 };
  return &_AndroidUtilJsonToken;
}

+ (void)initialize {
  if (self == [AndroidUtilJsonToken class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 10 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 10; i++) {
      (AndroidUtilJsonToken_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      AndroidUtilJsonToken_initWithNSString_withInt_(e, JreEnumConstantName(AndroidUtilJsonToken_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(AndroidUtilJsonToken)
  }
}

@end

void AndroidUtilJsonToken_initWithNSString_withInt_(AndroidUtilJsonToken *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *AndroidUtilJsonToken_values() {
  AndroidUtilJsonToken_initialize();
  return [IOSObjectArray arrayWithObjects:AndroidUtilJsonToken_values_ count:10 type:AndroidUtilJsonToken_class_()];
}

AndroidUtilJsonToken *AndroidUtilJsonToken_valueOfWithNSString_(NSString *name) {
  AndroidUtilJsonToken_initialize();
  for (int i = 0; i < 10; i++) {
    AndroidUtilJsonToken *e = AndroidUtilJsonToken_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

AndroidUtilJsonToken *AndroidUtilJsonToken_fromOrdinal(NSUInteger ordinal) {
  AndroidUtilJsonToken_initialize();
  if (ordinal >= 10) {
    return nil;
  }
  return AndroidUtilJsonToken_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilJsonToken)
