//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidUtilJsonScope")
#ifdef RESTRICT_AndroidUtilJsonScope
#define INCLUDE_ALL_AndroidUtilJsonScope 0
#else
#define INCLUDE_ALL_AndroidUtilJsonScope 1
#endif
#undef RESTRICT_AndroidUtilJsonScope

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidUtilJsonScope_) && (INCLUDE_ALL_AndroidUtilJsonScope || defined(INCLUDE_AndroidUtilJsonScope))
#define AndroidUtilJsonScope_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, AndroidUtilJsonScope_Enum) {
  AndroidUtilJsonScope_Enum_EMPTY_ARRAY = 0,
  AndroidUtilJsonScope_Enum_NONEMPTY_ARRAY = 1,
  AndroidUtilJsonScope_Enum_EMPTY_OBJECT = 2,
  AndroidUtilJsonScope_Enum_DANGLING_NAME = 3,
  AndroidUtilJsonScope_Enum_NONEMPTY_OBJECT = 4,
  AndroidUtilJsonScope_Enum_EMPTY_DOCUMENT = 5,
  AndroidUtilJsonScope_Enum_NONEMPTY_DOCUMENT = 6,
  AndroidUtilJsonScope_Enum_CLOSED = 7,
};

@interface AndroidUtilJsonScope : JavaLangEnum

+ (AndroidUtilJsonScope * __nonnull)EMPTY_ARRAY;

+ (AndroidUtilJsonScope * __nonnull)NONEMPTY_ARRAY;

+ (AndroidUtilJsonScope * __nonnull)EMPTY_OBJECT;

+ (AndroidUtilJsonScope * __nonnull)DANGLING_NAME;

+ (AndroidUtilJsonScope * __nonnull)NONEMPTY_OBJECT;

+ (AndroidUtilJsonScope * __nonnull)EMPTY_DOCUMENT;

+ (AndroidUtilJsonScope * __nonnull)NONEMPTY_DOCUMENT;

+ (AndroidUtilJsonScope * __nonnull)CLOSED;

#pragma mark Public

+ (AndroidUtilJsonScope *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (AndroidUtilJsonScope_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(AndroidUtilJsonScope)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT AndroidUtilJsonScope *AndroidUtilJsonScope_values_[];

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_EMPTY_ARRAY();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, EMPTY_ARRAY)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_NONEMPTY_ARRAY();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, NONEMPTY_ARRAY)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_EMPTY_OBJECT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, EMPTY_OBJECT)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_DANGLING_NAME();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, DANGLING_NAME)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_NONEMPTY_OBJECT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, NONEMPTY_OBJECT)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_EMPTY_DOCUMENT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, EMPTY_DOCUMENT)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_NONEMPTY_DOCUMENT();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, NONEMPTY_DOCUMENT)

inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_CLOSED();
J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, CLOSED)

FOUNDATION_EXPORT IOSObjectArray *AndroidUtilJsonScope_values();

FOUNDATION_EXPORT AndroidUtilJsonScope *AndroidUtilJsonScope_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT AndroidUtilJsonScope *AndroidUtilJsonScope_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilJsonScope)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidUtilJsonScope")
