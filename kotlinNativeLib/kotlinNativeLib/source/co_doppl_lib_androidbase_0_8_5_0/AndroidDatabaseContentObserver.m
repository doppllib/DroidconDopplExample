//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseContentObserver.h"
#include "AndroidNetUri.h"
#include "AndroidOsHandler.h"
#include "AndroidOsUserHandle.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Runnable.h"
#include "java/lang/annotation/Annotation.h"

@interface AndroidDatabaseContentObserver () {
 @public
  id mLock_;
}

- (void)dispatchChangeWithBoolean:(jboolean)selfChange
                withAndroidNetUri:(AndroidNetUri *)uri
                          withInt:(jint)userId;

@end

J2OBJC_FIELD_SETTER(AndroidDatabaseContentObserver, mLock_, id)

__attribute__((unused)) static void AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_(AndroidDatabaseContentObserver *self, jboolean selfChange, AndroidNetUri *uri);

__attribute__((unused)) static void AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver *self, jboolean selfChange, AndroidNetUri *uri, jint userId);

__attribute__((unused)) static IOSObjectArray *AndroidDatabaseContentObserver__Annotations$0();

@interface AndroidDatabaseContentObserver_NotificationRunnable : NSObject < JavaLangRunnable > {
 @public
  AndroidDatabaseContentObserver *this$0_;
  jboolean mSelfChange_;
  AndroidNetUri *mUri_;
  jint mUserId_;
}

- (instancetype)initWithAndroidDatabaseContentObserver:(AndroidDatabaseContentObserver *)outer$
                                           withBoolean:(jboolean)selfChange
                                     withAndroidNetUri:(AndroidNetUri *)uri
                                               withInt:(jint)userId;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseContentObserver_NotificationRunnable)

J2OBJC_FIELD_SETTER(AndroidDatabaseContentObserver_NotificationRunnable, mUri_, AndroidNetUri *)

__attribute__((unused)) static void AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver_NotificationRunnable *self, AndroidDatabaseContentObserver *outer$, jboolean selfChange, AndroidNetUri *uri, jint userId);

__attribute__((unused)) static AndroidDatabaseContentObserver_NotificationRunnable *new_AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver *outer$, jboolean selfChange, AndroidNetUri *uri, jint userId) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidDatabaseContentObserver_NotificationRunnable *create_AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver *outer$, jboolean selfChange, AndroidNetUri *uri, jint userId);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseContentObserver_NotificationRunnable)

@implementation AndroidDatabaseContentObserver

- (instancetype)initWithAndroidOsHandler:(AndroidOsHandler *)handler {
  AndroidDatabaseContentObserver_initWithAndroidOsHandler_(self, handler);
  return self;
}

- (jboolean)deliverSelfNotifications {
  return false;
}

- (void)onChangeWithBoolean:(jboolean)selfChange {
}

- (void)onChangeWithBoolean:(jboolean)selfChange
          withAndroidNetUri:(AndroidNetUri *)uri {
  [self onChangeWithBoolean:selfChange];
}

- (void)onChangeWithBoolean:(jboolean)selfChange
          withAndroidNetUri:(AndroidNetUri *)uri
                    withInt:(jint)userId {
  [self onChangeWithBoolean:selfChange withAndroidNetUri:uri];
}

- (void)dispatchChangeWithBoolean:(jboolean)selfChange {
  AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_(self, selfChange, nil);
}

- (void)dispatchChangeWithBoolean:(jboolean)selfChange
                withAndroidNetUri:(AndroidNetUri *)uri {
  AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_(self, selfChange, uri);
}

- (void)dispatchChangeWithBoolean:(jboolean)selfChange
                withAndroidNetUri:(AndroidNetUri *)uri
                          withInt:(jint)userId {
  AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_withInt_(self, selfChange, uri, userId);
}

- (void)dealloc {
  RELEASE_(mLock_);
  RELEASE_(mHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 5, 2, -1, -1, 6, -1 },
    { NULL, "V", 0x11, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidOsHandler:);
  methods[1].selector = @selector(deliverSelfNotifications);
  methods[2].selector = @selector(onChangeWithBoolean:);
  methods[3].selector = @selector(onChangeWithBoolean:withAndroidNetUri:);
  methods[4].selector = @selector(onChangeWithBoolean:withAndroidNetUri:withInt:);
  methods[5].selector = @selector(dispatchChangeWithBoolean:);
  methods[6].selector = @selector(dispatchChangeWithBoolean:withAndroidNetUri:);
  methods[7].selector = @selector(dispatchChangeWithBoolean:withAndroidNetUri:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mHandler_", "LAndroidOsHandler;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidOsHandler;", "onChange", "Z", "ZLAndroidNetUri;", "ZLAndroidNetUri;I", "dispatchChange", (void *)&AndroidDatabaseContentObserver__Annotations$0, "LAndroidDatabaseContentObserver_NotificationRunnable;" };
  static const J2ObjcClassInfo _AndroidDatabaseContentObserver = { "ContentObserver", "android.database", ptrTable, methods, fields, 7, 0x401, 8, 2, -1, 7, -1, -1, -1 };
  return &_AndroidDatabaseContentObserver;
}

@end

void AndroidDatabaseContentObserver_initWithAndroidOsHandler_(AndroidDatabaseContentObserver *self, AndroidOsHandler *handler) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mLock_, new_NSObject_init());
  JreStrongAssign(&self->mHandler_, handler);
}

void AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_(AndroidDatabaseContentObserver *self, jboolean selfChange, AndroidNetUri *uri) {
  AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_withInt_(self, selfChange, uri, AndroidOsUserHandle_getCallingUserId());
}

void AndroidDatabaseContentObserver_dispatchChangeWithBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver *self, jboolean selfChange, AndroidNetUri *uri, jint userId) {
  if (self->mHandler_ == nil) {
    [self onChangeWithBoolean:selfChange withAndroidNetUri:uri withInt:userId];
  }
  else {
    [self->mHandler_ postWithJavaLangRunnable:create_AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(self, selfChange, uri, userId)];
  }
}

IOSObjectArray *AndroidDatabaseContentObserver__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseContentObserver)

@implementation AndroidDatabaseContentObserver_NotificationRunnable

- (instancetype)initWithAndroidDatabaseContentObserver:(AndroidDatabaseContentObserver *)outer$
                                           withBoolean:(jboolean)selfChange
                                     withAndroidNetUri:(AndroidNetUri *)uri
                                               withInt:(jint)userId {
  AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(self, outer$, selfChange, uri, userId);
  return self;
}

- (void)run {
  [this$0_ onChangeWithBoolean:mSelfChange_ withAndroidNetUri:mUri_ withInt:mUserId_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(mUri_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidDatabaseContentObserver:withBoolean:withAndroidNetUri:withInt:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAndroidDatabaseContentObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "mSelfChange_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mUri_", "LAndroidNetUri;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mUserId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLAndroidNetUri;I", "LAndroidDatabaseContentObserver;" };
  static const J2ObjcClassInfo _AndroidDatabaseContentObserver_NotificationRunnable = { "NotificationRunnable", "android.database", ptrTable, methods, fields, 7, 0x12, 2, 4, 1, -1, -1, -1, -1 };
  return &_AndroidDatabaseContentObserver_NotificationRunnable;
}

@end

void AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver_NotificationRunnable *self, AndroidDatabaseContentObserver *outer$, jboolean selfChange, AndroidNetUri *uri, jint userId) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->mSelfChange_ = selfChange;
  JreStrongAssign(&self->mUri_, uri);
  self->mUserId_ = userId;
}

AndroidDatabaseContentObserver_NotificationRunnable *new_AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver *outer$, jboolean selfChange, AndroidNetUri *uri, jint userId) {
  J2OBJC_NEW_IMPL(AndroidDatabaseContentObserver_NotificationRunnable, initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_, outer$, selfChange, uri, userId)
}

AndroidDatabaseContentObserver_NotificationRunnable *create_AndroidDatabaseContentObserver_NotificationRunnable_initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_(AndroidDatabaseContentObserver *outer$, jboolean selfChange, AndroidNetUri *uri, jint userId) {
  J2OBJC_CREATE_IMPL(AndroidDatabaseContentObserver_NotificationRunnable, initWithAndroidDatabaseContentObserver_withBoolean_withAndroidNetUri_withInt_, outer$, selfChange, uri, userId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseContentObserver_NotificationRunnable)
