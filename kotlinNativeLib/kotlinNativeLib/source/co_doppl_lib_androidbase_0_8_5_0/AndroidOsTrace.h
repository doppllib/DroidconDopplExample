//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidOsTrace")
#ifdef RESTRICT_AndroidOsTrace
#define INCLUDE_ALL_AndroidOsTrace 0
#else
#define INCLUDE_ALL_AndroidOsTrace 1
#endif
#undef RESTRICT_AndroidOsTrace

#if !defined (AndroidOsTrace_) && (INCLUDE_ALL_AndroidOsTrace || defined(INCLUDE_AndroidOsTrace))
#define AndroidOsTrace_

@interface AndroidOsTrace : NSObject

+ (jlong)TRACE_TAG_NEVER;

+ (jlong)TRACE_TAG_ALWAYS;

+ (jlong)TRACE_TAG_GRAPHICS;

+ (jlong)TRACE_TAG_INPUT;

+ (jlong)TRACE_TAG_VIEW;

+ (jlong)TRACE_TAG_WEBVIEW;

+ (jlong)TRACE_TAG_WINDOW_MANAGER;

+ (jlong)TRACE_TAG_ACTIVITY_MANAGER;

+ (jlong)TRACE_TAG_SYNC_MANAGER;

+ (jlong)TRACE_TAG_AUDIO;

+ (jlong)TRACE_TAG_VIDEO;

+ (jlong)TRACE_TAG_CAMERA;

+ (jlong)TRACE_TAG_HAL;

+ (jlong)TRACE_TAG_APP;

+ (jlong)TRACE_TAG_RESOURCES;

+ (jlong)TRACE_TAG_DALVIK;

+ (jlong)TRACE_TAG_RS;

+ (jlong)TRACE_TAG_BIONIC;

+ (jlong)TRACE_TAG_POWER;

+ (jlong)TRACE_TAG_PACKAGE_MANAGER;

+ (jlong)TRACE_TAG_SYSTEM_SERVER;

+ (jlong)TRACE_TAG_DATABASE;

#pragma mark Public

+ (void)asyncTraceBeginWithLong:(jlong)traceTag
                   withNSString:(NSString *)methodName
                        withInt:(jint)cookie;

+ (void)asyncTraceEndWithLong:(jlong)traceTag
                 withNSString:(NSString *)methodName
                      withInt:(jint)cookie;

+ (void)beginSectionWithNSString:(NSString *)sectionName;

+ (void)endSection;

+ (jboolean)isTagEnabledWithLong:(jlong)traceTag;

+ (void)setAppTracingAllowedWithBoolean:(jboolean)allowed;

+ (void)setTracingEnabledWithBoolean:(jboolean)enabled;

+ (void)traceBeginWithLong:(jlong)traceTag
              withNSString:(NSString *)methodName;

+ (void)traceCounterWithLong:(jlong)traceTag
                withNSString:(NSString *)counterName
                     withInt:(jint)counterValue;

+ (void)traceEndWithLong:(jlong)traceTag;

@end

J2OBJC_STATIC_INIT(AndroidOsTrace)

inline jlong AndroidOsTrace_get_TRACE_TAG_NEVER();
#define AndroidOsTrace_TRACE_TAG_NEVER 0LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_NEVER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_ALWAYS();
#define AndroidOsTrace_TRACE_TAG_ALWAYS 1LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_ALWAYS, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_GRAPHICS();
#define AndroidOsTrace_TRACE_TAG_GRAPHICS 2LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_GRAPHICS, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_INPUT();
#define AndroidOsTrace_TRACE_TAG_INPUT 4LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_INPUT, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_VIEW();
#define AndroidOsTrace_TRACE_TAG_VIEW 8LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_VIEW, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_WEBVIEW();
#define AndroidOsTrace_TRACE_TAG_WEBVIEW 16LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_WEBVIEW, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_WINDOW_MANAGER();
#define AndroidOsTrace_TRACE_TAG_WINDOW_MANAGER 32LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_WINDOW_MANAGER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_ACTIVITY_MANAGER();
#define AndroidOsTrace_TRACE_TAG_ACTIVITY_MANAGER 64LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_ACTIVITY_MANAGER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_SYNC_MANAGER();
#define AndroidOsTrace_TRACE_TAG_SYNC_MANAGER 128LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_SYNC_MANAGER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_AUDIO();
#define AndroidOsTrace_TRACE_TAG_AUDIO 256LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_AUDIO, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_VIDEO();
#define AndroidOsTrace_TRACE_TAG_VIDEO 512LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_VIDEO, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_CAMERA();
#define AndroidOsTrace_TRACE_TAG_CAMERA 1024LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_CAMERA, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_HAL();
#define AndroidOsTrace_TRACE_TAG_HAL 2048LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_HAL, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_APP();
#define AndroidOsTrace_TRACE_TAG_APP 4096LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_APP, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_RESOURCES();
#define AndroidOsTrace_TRACE_TAG_RESOURCES 8192LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_RESOURCES, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_DALVIK();
#define AndroidOsTrace_TRACE_TAG_DALVIK 16384LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_DALVIK, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_RS();
#define AndroidOsTrace_TRACE_TAG_RS 32768LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_RS, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_BIONIC();
#define AndroidOsTrace_TRACE_TAG_BIONIC 65536LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_BIONIC, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_POWER();
#define AndroidOsTrace_TRACE_TAG_POWER 131072LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_POWER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_PACKAGE_MANAGER();
#define AndroidOsTrace_TRACE_TAG_PACKAGE_MANAGER 262144LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_PACKAGE_MANAGER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_SYSTEM_SERVER();
#define AndroidOsTrace_TRACE_TAG_SYSTEM_SERVER 524288LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_SYSTEM_SERVER, jlong)

inline jlong AndroidOsTrace_get_TRACE_TAG_DATABASE();
#define AndroidOsTrace_TRACE_TAG_DATABASE 1048576LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_DATABASE, jlong)

FOUNDATION_EXPORT jboolean AndroidOsTrace_isTagEnabledWithLong_(jlong traceTag);

FOUNDATION_EXPORT void AndroidOsTrace_traceCounterWithLong_withNSString_withInt_(jlong traceTag, NSString *counterName, jint counterValue);

FOUNDATION_EXPORT void AndroidOsTrace_setAppTracingAllowedWithBoolean_(jboolean allowed);

FOUNDATION_EXPORT void AndroidOsTrace_setTracingEnabledWithBoolean_(jboolean enabled);

FOUNDATION_EXPORT void AndroidOsTrace_traceBeginWithLong_withNSString_(jlong traceTag, NSString *methodName);

FOUNDATION_EXPORT void AndroidOsTrace_traceEndWithLong_(jlong traceTag);

FOUNDATION_EXPORT void AndroidOsTrace_asyncTraceBeginWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie);

FOUNDATION_EXPORT void AndroidOsTrace_asyncTraceEndWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie);

FOUNDATION_EXPORT void AndroidOsTrace_beginSectionWithNSString_(NSString *sectionName);

FOUNDATION_EXPORT void AndroidOsTrace_endSection();

J2OBJC_TYPE_LITERAL_HEADER(AndroidOsTrace)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidOsTrace")
