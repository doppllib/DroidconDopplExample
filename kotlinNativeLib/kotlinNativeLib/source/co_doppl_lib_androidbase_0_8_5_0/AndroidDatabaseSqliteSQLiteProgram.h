//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram")
#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteProgram
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram 0
#else
#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram 1
#endif
#undef RESTRICT_AndroidDatabaseSqliteSQLiteProgram

#if !defined (AndroidDatabaseSqliteSQLiteProgram_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram || defined(INCLUDE_AndroidDatabaseSqliteSQLiteProgram))
#define AndroidDatabaseSqliteSQLiteProgram_

#define RESTRICT_AndroidDatabaseSqliteSQLiteClosable 1
#define INCLUDE_AndroidDatabaseSqliteSQLiteClosable 1
#include "AndroidDatabaseSqliteSQLiteClosable.h"

@class AndroidDatabaseSqliteSQLiteDatabase;
@class AndroidDatabaseSqliteSQLiteSession;
@class AndroidOsCancellationSignal;
@class IOSByteArray;
@class IOSObjectArray;

@interface AndroidDatabaseSqliteSQLiteProgram : AndroidDatabaseSqliteSQLiteClosable

#pragma mark Public

- (void)bindAllArgsAsStringsWithNSStringArray:(IOSObjectArray *)bindArgs;

- (void)bindBlobWithInt:(jint)index
          withByteArray:(IOSByteArray *)value;

- (void)bindDoubleWithInt:(jint)index
               withDouble:(jdouble)value;

- (void)bindLongWithInt:(jint)index
               withLong:(jlong)value;

- (void)bindNullWithInt:(jint)index;

- (void)bindStringWithInt:(jint)index
             withNSString:(NSString *)value;

- (void)clearBindings;

- (jint)getUniqueId;

#pragma mark Protected

- (jint)getConnectionFlags;

- (AndroidDatabaseSqliteSQLiteSession *)getSession;

- (void)onAllReferencesReleased;

- (void)onCorruption;

#pragma mark Package-Private

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                               withNSString:(NSString *)sql
                                          withNSObjectArray:(IOSObjectArray *)bindArgs
                            withAndroidOsCancellationSignal:(AndroidOsCancellationSignal *)cancellationSignalForPrepare;

- (IOSObjectArray *)getBindArgs;

- (IOSObjectArray *)getColumnNames;

- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabase;

- (NSString *)getSql;

@end

J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteProgram)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteProgram_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_withAndroidOsCancellationSignal_(AndroidDatabaseSqliteSQLiteProgram *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs, AndroidOsCancellationSignal *cancellationSignalForPrepare);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteProgram)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram")
