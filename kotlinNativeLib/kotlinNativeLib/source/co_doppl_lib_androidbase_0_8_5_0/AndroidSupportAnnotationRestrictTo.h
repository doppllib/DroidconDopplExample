//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidSupportAnnotationRestrictTo")
#ifdef RESTRICT_AndroidSupportAnnotationRestrictTo
#define INCLUDE_ALL_AndroidSupportAnnotationRestrictTo 0
#else
#define INCLUDE_ALL_AndroidSupportAnnotationRestrictTo 1
#endif
#undef RESTRICT_AndroidSupportAnnotationRestrictTo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidSupportAnnotationRestrictTo_) && (INCLUDE_ALL_AndroidSupportAnnotationRestrictTo || defined(INCLUDE_AndroidSupportAnnotationRestrictTo))
#define AndroidSupportAnnotationRestrictTo_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@protocol AndroidSupportAnnotationRestrictTo < JavaLangAnnotationAnnotation >

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidSupportAnnotationRestrictTo)

J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationRestrictTo)

#endif

#if !defined (AndroidSupportAnnotationRestrictTo_Scope_) && (INCLUDE_ALL_AndroidSupportAnnotationRestrictTo || defined(INCLUDE_AndroidSupportAnnotationRestrictTo_Scope))
#define AndroidSupportAnnotationRestrictTo_Scope_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, AndroidSupportAnnotationRestrictTo_Scope_Enum) {
  AndroidSupportAnnotationRestrictTo_Scope_Enum_LIBRARY = 0,
  AndroidSupportAnnotationRestrictTo_Scope_Enum_LIBRARY_GROUP = 1,
  AndroidSupportAnnotationRestrictTo_Scope_Enum_GROUP_ID = 2,
  AndroidSupportAnnotationRestrictTo_Scope_Enum_TESTS = 3,
  AndroidSupportAnnotationRestrictTo_Scope_Enum_SUBCLASSES = 4,
};

@interface AndroidSupportAnnotationRestrictTo_Scope : JavaLangEnum

+ (AndroidSupportAnnotationRestrictTo_Scope * __nonnull)LIBRARY;

+ (AndroidSupportAnnotationRestrictTo_Scope * __nonnull)LIBRARY_GROUP;

+ (AndroidSupportAnnotationRestrictTo_Scope * __nonnull)GROUP_ID;

+ (AndroidSupportAnnotationRestrictTo_Scope * __nonnull)TESTS;

+ (AndroidSupportAnnotationRestrictTo_Scope * __nonnull)SUBCLASSES;

#pragma mark Public

+ (AndroidSupportAnnotationRestrictTo_Scope *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (AndroidSupportAnnotationRestrictTo_Scope_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(AndroidSupportAnnotationRestrictTo_Scope)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_values_[];

inline AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_get_LIBRARY();
J2OBJC_ENUM_CONSTANT(AndroidSupportAnnotationRestrictTo_Scope, LIBRARY)

inline AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_get_LIBRARY_GROUP();
J2OBJC_ENUM_CONSTANT(AndroidSupportAnnotationRestrictTo_Scope, LIBRARY_GROUP)

inline AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_get_GROUP_ID();
J2OBJC_ENUM_CONSTANT(AndroidSupportAnnotationRestrictTo_Scope, GROUP_ID)

inline AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_get_TESTS();
J2OBJC_ENUM_CONSTANT(AndroidSupportAnnotationRestrictTo_Scope, TESTS)

inline AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_get_SUBCLASSES();
J2OBJC_ENUM_CONSTANT(AndroidSupportAnnotationRestrictTo_Scope, SUBCLASSES)

FOUNDATION_EXPORT IOSObjectArray *AndroidSupportAnnotationRestrictTo_Scope_values();

FOUNDATION_EXPORT AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT AndroidSupportAnnotationRestrictTo_Scope *AndroidSupportAnnotationRestrictTo_Scope_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationRestrictTo_Scope)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidSupportAnnotationRestrictTo")
