//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2AdapterRxjava2ResultObservable")
#ifdef RESTRICT_Retrofit2AdapterRxjava2ResultObservable
#define INCLUDE_ALL_Retrofit2AdapterRxjava2ResultObservable 0
#else
#define INCLUDE_ALL_Retrofit2AdapterRxjava2ResultObservable 1
#endif
#undef RESTRICT_Retrofit2AdapterRxjava2ResultObservable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (Retrofit2AdapterRxjava2ResultObservable_) && (INCLUDE_ALL_Retrofit2AdapterRxjava2ResultObservable || defined(INCLUDE_Retrofit2AdapterRxjava2ResultObservable))
#define Retrofit2AdapterRxjava2ResultObservable_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "IoReactivexObservable.h"

@class Retrofit2AdapterRxjava2Result;
@protocol IoReactivexObserver;

@interface Retrofit2AdapterRxjava2ResultObservable : IoReactivexObservable

#pragma mark Public

- (Retrofit2AdapterRxjava2Result *)blockingFirst;

- (Retrofit2AdapterRxjava2Result *)blockingFirstWithId:(Retrofit2AdapterRxjava2Result * __nonnull)arg0;

- (Retrofit2AdapterRxjava2Result *)blockingLast;

- (Retrofit2AdapterRxjava2Result *)blockingLastWithId:(Retrofit2AdapterRxjava2Result * __nonnull)arg0;

- (Retrofit2AdapterRxjava2Result *)blockingSingle;

- (Retrofit2AdapterRxjava2Result *)blockingSingleWithId:(Retrofit2AdapterRxjava2Result * __nonnull)arg0;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)observer;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable * __nonnull)upstream;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2AdapterRxjava2ResultObservable)

FOUNDATION_EXPORT void Retrofit2AdapterRxjava2ResultObservable_initWithIoReactivexObservable_(Retrofit2AdapterRxjava2ResultObservable *self, IoReactivexObservable *upstream);

FOUNDATION_EXPORT Retrofit2AdapterRxjava2ResultObservable *new_Retrofit2AdapterRxjava2ResultObservable_initWithIoReactivexObservable_(IoReactivexObservable *upstream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Retrofit2AdapterRxjava2ResultObservable *create_Retrofit2AdapterRxjava2ResultObservable_initWithIoReactivexObservable_(IoReactivexObservable *upstream);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2AdapterRxjava2ResultObservable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Retrofit2AdapterRxjava2ResultObservable")
