//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexObservable.h"
#include "IoReactivexObserver.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "Retrofit2AdapterRxjava2CallExecuteObservable.h"
#include "Retrofit2Call.h"
#include "Retrofit2Response.h"
#include "java/lang/Throwable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface Retrofit2AdapterRxjava2CallExecuteObservable () {
 @public
  id<Retrofit2Call> originalCall_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjava2CallExecuteObservable, originalCall_, id<Retrofit2Call>)

@interface Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable : NSObject < IoReactivexDisposablesDisposable > {
 @public
  id<Retrofit2Call> call_;
}

- (instancetype)initWithRetrofit2Call:(id<Retrofit2Call> __nonnull)call;

- (void)dispose;

- (jboolean)isDisposed;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable)

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable, call_, id<Retrofit2Call>)

__attribute__((unused)) static void Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable *self, id<Retrofit2Call> call);

__attribute__((unused)) static Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable *new_Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(id<Retrofit2Call> call) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable *create_Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(id<Retrofit2Call> call);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable)

@implementation Retrofit2AdapterRxjava2CallExecuteObservable

- (instancetype)initWithRetrofit2Call:(id<Retrofit2Call> __nonnull)originalCall {
  Retrofit2AdapterRxjava2CallExecuteObservable_initWithRetrofit2Call_(self, originalCall);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)observer {
  id<Retrofit2Call> call = [((id<Retrofit2Call>) nil_chk(originalCall_)) clone];
  [((id<IoReactivexObserver>) nil_chk(observer)) onSubscribeWithIoReactivexDisposablesDisposable:create_Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(call)];
  jboolean terminated = false;
  @try {
    Retrofit2Response *response = [((id<Retrofit2Call>) nil_chk(call)) execute];
    if (![call isCanceled]) {
      [observer onNextWithId:response];
    }
    if (![call isCanceled]) {
      terminated = true;
      [observer onComplete];
    }
  }
  @catch (JavaLangThrowable *t) {
    IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(t);
    if (terminated) {
      IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(t);
    }
    else if (![call isCanceled]) {
      @try {
        [observer onErrorWithJavaLangThrowable:t];
      }
      @catch (JavaLangThrowable *inner) {
        IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(inner);
        IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ t, inner } count:2 type:JavaLangThrowable_class_()]));
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(originalCall_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Call:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "originalCall_", "LRetrofit2Call;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Call;", "(Lretrofit2/Call<TT;>;)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-Lretrofit2/Response<TT;>;>;)V", "Lretrofit2/Call<TT;>;", "LRetrofit2AdapterRxjava2CallExecuteObservable_CallDisposable;", "<T:Ljava/lang/Object;>Lio/reactivex/Observable<Lretrofit2/Response<TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjava2CallExecuteObservable = { "CallExecuteObservable", "retrofit2.adapter.rxjava2", ptrTable, methods, fields, 7, 0x10, 2, 1, -1, 6, -1, 7, -1 };
  return &_Retrofit2AdapterRxjava2CallExecuteObservable;
}

@end

void Retrofit2AdapterRxjava2CallExecuteObservable_initWithRetrofit2Call_(Retrofit2AdapterRxjava2CallExecuteObservable *self, id<Retrofit2Call> originalCall) {
  IoReactivexObservable_init(self);
  JreStrongAssign(&self->originalCall_, originalCall);
}

Retrofit2AdapterRxjava2CallExecuteObservable *new_Retrofit2AdapterRxjava2CallExecuteObservable_initWithRetrofit2Call_(id<Retrofit2Call> originalCall) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjava2CallExecuteObservable, initWithRetrofit2Call_, originalCall)
}

Retrofit2AdapterRxjava2CallExecuteObservable *create_Retrofit2AdapterRxjava2CallExecuteObservable_initWithRetrofit2Call_(id<Retrofit2Call> originalCall) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjava2CallExecuteObservable, initWithRetrofit2Call_, originalCall)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjava2CallExecuteObservable)

@implementation Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable

- (instancetype)initWithRetrofit2Call:(id<Retrofit2Call> __nonnull)call {
  Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(self, call);
  return self;
}

- (void)dispose {
  [((id<Retrofit2Call>) nil_chk(call_)) cancel];
}

- (jboolean)isDisposed {
  return [((id<Retrofit2Call>) nil_chk(call_)) isCanceled];
}

- (void)dealloc {
  RELEASE_(call_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofit2Call:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "call_", "LRetrofit2Call;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Call;", "(Lretrofit2/Call<*>;)V", "Lretrofit2/Call<*>;", "LRetrofit2AdapterRxjava2CallExecuteObservable;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable = { "CallDisposable", "retrofit2.adapter.rxjava2", ptrTable, methods, fields, 7, 0x1a, 3, 1, 3, -1, -1, -1, -1 };
  return &_Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable;
}

@end

void Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable *self, id<Retrofit2Call> call) {
  NSObject_init(self);
  JreStrongAssign(&self->call_, call);
}

Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable *new_Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(id<Retrofit2Call> call) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable, initWithRetrofit2Call_, call)
}

Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable *create_Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable_initWithRetrofit2Call_(id<Retrofit2Call> call) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable, initWithRetrofit2Call_, call)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjava2CallExecuteObservable_CallDisposable)
