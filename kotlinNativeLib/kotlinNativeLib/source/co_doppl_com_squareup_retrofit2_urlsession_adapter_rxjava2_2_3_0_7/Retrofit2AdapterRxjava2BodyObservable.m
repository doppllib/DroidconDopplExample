//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexDisposablesDisposable.h"
#include "IoReactivexExceptionsCompositeException.h"
#include "IoReactivexExceptionsExceptions.h"
#include "IoReactivexObservable.h"
#include "IoReactivexObserver.h"
#include "IoReactivexPluginsRxJavaPlugins.h"
#include "J2ObjC_source.h"
#include "Retrofit2AdapterRxjava2BodyObservable.h"
#include "Retrofit2AdapterRxjava2HttpException.h"
#include "Retrofit2Response.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Throwable.h"

@interface Retrofit2AdapterRxjava2BodyObservable () {
 @public
  IoReactivexObservable *upstream_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjava2BodyObservable, upstream_, IoReactivexObservable *)

@interface Retrofit2AdapterRxjava2BodyObservable_BodyObserver : NSObject < IoReactivexObserver > {
 @public
  id<IoReactivexObserver> observer_;
  jboolean terminated_;
}

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)observer;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable> __nonnull)disposable;

- (void)onNextWithId:(Retrofit2Response * __nonnull)response;

- (void)onComplete;

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable * __nonnull)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2AdapterRxjava2BodyObservable_BodyObserver)

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjava2BodyObservable_BodyObserver, observer_, id<IoReactivexObserver>)

__attribute__((unused)) static void Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(Retrofit2AdapterRxjava2BodyObservable_BodyObserver *self, id<IoReactivexObserver> observer);

__attribute__((unused)) static Retrofit2AdapterRxjava2BodyObservable_BodyObserver *new_Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2AdapterRxjava2BodyObservable_BodyObserver *create_Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> observer);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2AdapterRxjava2BodyObservable_BodyObserver)

@implementation Retrofit2AdapterRxjava2BodyObservable

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable * __nonnull)upstream {
  Retrofit2AdapterRxjava2BodyObservable_initWithIoReactivexObservable_(self, upstream);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)observer {
  [((IoReactivexObservable *) nil_chk(upstream_)) subscribeWithIoReactivexObserver:create_Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(observer)];
}

- (void)dealloc {
  RELEASE_(upstream_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservable:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "upstream_", "LIoReactivexObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservable;", "(Lio/reactivex/Observable<Lretrofit2/Response<TT;>;>;)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TT;>;)V", "Lio/reactivex/Observable<Lretrofit2/Response<TT;>;>;", "LRetrofit2AdapterRxjava2BodyObservable_BodyObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/Observable<TT;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjava2BodyObservable = { "BodyObservable", "retrofit2.adapter.rxjava2", ptrTable, methods, fields, 7, 0x10, 2, 1, -1, 6, -1, 7, -1 };
  return &_Retrofit2AdapterRxjava2BodyObservable;
}

@end

void Retrofit2AdapterRxjava2BodyObservable_initWithIoReactivexObservable_(Retrofit2AdapterRxjava2BodyObservable *self, IoReactivexObservable *upstream) {
  IoReactivexObservable_init(self);
  JreStrongAssign(&self->upstream_, upstream);
}

Retrofit2AdapterRxjava2BodyObservable *new_Retrofit2AdapterRxjava2BodyObservable_initWithIoReactivexObservable_(IoReactivexObservable *upstream) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjava2BodyObservable, initWithIoReactivexObservable_, upstream)
}

Retrofit2AdapterRxjava2BodyObservable *create_Retrofit2AdapterRxjava2BodyObservable_initWithIoReactivexObservable_(IoReactivexObservable *upstream) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjava2BodyObservable, initWithIoReactivexObservable_, upstream)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjava2BodyObservable)

@implementation Retrofit2AdapterRxjava2BodyObservable_BodyObserver

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver> __nonnull)observer {
  Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(self, observer);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable> __nonnull)disposable {
  [((id<IoReactivexObserver>) nil_chk(observer_)) onSubscribeWithIoReactivexDisposablesDisposable:disposable];
}

- (void)onNextWithId:(Retrofit2Response * __nonnull)response {
  if ([((Retrofit2Response *) nil_chk(response)) isSuccessful]) {
    [((id<IoReactivexObserver>) nil_chk(observer_)) onNextWithId:[response body]];
  }
  else {
    terminated_ = true;
    JavaLangThrowable *t = create_Retrofit2AdapterRxjava2HttpException_initWithRetrofit2Response_(response);
    @try {
      [((id<IoReactivexObserver>) nil_chk(observer_)) onErrorWithJavaLangThrowable:t];
    }
    @catch (JavaLangThrowable *inner) {
      IoReactivexExceptionsExceptions_throwIfFatalWithJavaLangThrowable_(inner);
      IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(create_IoReactivexExceptionsCompositeException_initWithJavaLangThrowableArray_([IOSObjectArray arrayWithObjects:(id[]){ t, inner } count:2 type:JavaLangThrowable_class_()]));
    }
  }
}

- (void)onComplete {
  if (!terminated_) {
    [((id<IoReactivexObserver>) nil_chk(observer_)) onComplete];
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable * __nonnull)throwable {
  if (!terminated_) {
    [((id<IoReactivexObserver>) nil_chk(observer_)) onErrorWithJavaLangThrowable:throwable];
  }
  else {
    JavaLangThrowable *broken = create_JavaLangAssertionError_initWithId_(@"This should never happen! Report as a bug with the full stacktrace.");
    [broken initCauseWithJavaLangThrowable:throwable];
    IoReactivexPluginsRxJavaPlugins_onErrorWithJavaLangThrowable_(broken);
  }
}

- (void)dealloc {
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onComplete);
  methods[4].selector = @selector(onErrorWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "terminated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TR;>;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LRetrofit2Response;", "(Lretrofit2/Response<TR;>;)V", "onError", "LJavaLangThrowable;", "Lio/reactivex/Observer<-TR;>;", "LRetrofit2AdapterRxjava2BodyObservable;", "<R:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/Observer<Lretrofit2/Response<TR;>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjava2BodyObservable_BodyObserver = { "BodyObserver", "retrofit2.adapter.rxjava2", ptrTable, methods, fields, 7, 0xa, 5, 2, 10, -1, -1, 11, -1 };
  return &_Retrofit2AdapterRxjava2BodyObservable_BodyObserver;
}

@end

void Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(Retrofit2AdapterRxjava2BodyObservable_BodyObserver *self, id<IoReactivexObserver> observer) {
  NSObject_init(self);
  JreStrongAssign(&self->observer_, observer);
}

Retrofit2AdapterRxjava2BodyObservable_BodyObserver *new_Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjava2BodyObservable_BodyObserver, initWithIoReactivexObserver_, observer)
}

Retrofit2AdapterRxjava2BodyObservable_BodyObserver *create_Retrofit2AdapterRxjava2BodyObservable_BodyObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjava2BodyObservable_BodyObserver, initWithIoReactivexObserver_, observer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjava2BodyObservable_BodyObserver)
