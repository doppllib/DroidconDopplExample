//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DaggerInternalSingleCheck")
#ifdef RESTRICT_DaggerInternalSingleCheck
#define INCLUDE_ALL_DaggerInternalSingleCheck 0
#else
#define INCLUDE_ALL_DaggerInternalSingleCheck 1
#endif
#undef RESTRICT_DaggerInternalSingleCheck

#if !defined (DaggerInternalSingleCheck_) && (INCLUDE_ALL_DaggerInternalSingleCheck || defined(INCLUDE_DaggerInternalSingleCheck))
#define DaggerInternalSingleCheck_

#define RESTRICT_JavaxInjectProvider 1
#define INCLUDE_JavaxInjectProvider 1
#include "javax/inject/Provider.h"

#define RESTRICT_DaggerLazy 1
#define INCLUDE_DaggerLazy 1
#include "DaggerLazy.h"

@protocol DaggerInternalFactory;

@interface DaggerInternalSingleCheck : NSObject < JavaxInjectProvider, DaggerLazy >

#pragma mark Public

- (id)get;

+ (id<JavaxInjectProvider>)providerWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(DaggerInternalSingleCheck)

FOUNDATION_EXPORT id<JavaxInjectProvider> DaggerInternalSingleCheck_providerWithDaggerInternalFactory_(id<DaggerInternalFactory> factory);

J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSingleCheck)

#endif

#pragma pop_macro("INCLUDE_ALL_DaggerInternalSingleCheck")
