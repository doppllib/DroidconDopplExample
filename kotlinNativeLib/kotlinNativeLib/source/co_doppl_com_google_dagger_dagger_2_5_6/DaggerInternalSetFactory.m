//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DaggerInternalDaggerCollections.h"
#include "DaggerInternalFactory.h"
#include "DaggerInternalPreconditions.h"
#include "DaggerInternalSetFactory.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "javax/inject/Provider.h"

@interface DaggerInternalSetFactory () {
 @public
  id<JavaUtilList> individualProviders_;
  id<JavaUtilList> collectionProviders_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)individualProviders
                    withJavaUtilList:(id<JavaUtilList>)collectionProviders;

@end

J2OBJC_FIELD_SETTER(DaggerInternalSetFactory, individualProviders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(DaggerInternalSetFactory, collectionProviders_, id<JavaUtilList>)

inline id<DaggerInternalFactory> DaggerInternalSetFactory_get_EMPTY_FACTORY();
static id<DaggerInternalFactory> DaggerInternalSetFactory_EMPTY_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalSetFactory, EMPTY_FACTORY, id<DaggerInternalFactory>)

__attribute__((unused)) static void DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(DaggerInternalSetFactory *self, id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders);

__attribute__((unused)) static DaggerInternalSetFactory *new_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) NS_RETURNS_RETAINED;

__attribute__((unused)) static DaggerInternalSetFactory *create_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders);

@interface DaggerInternalSetFactory_1 : NSObject < DaggerInternalFactory >

- (instancetype)init;

- (id<JavaUtilSet>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactory_1)

__attribute__((unused)) static void DaggerInternalSetFactory_1_init(DaggerInternalSetFactory_1 *self);

__attribute__((unused)) static DaggerInternalSetFactory_1 *new_DaggerInternalSetFactory_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DaggerInternalSetFactory_1 *create_DaggerInternalSetFactory_1_init();

@interface DaggerInternalSetFactory_Builder () {
 @public
  id<JavaUtilList> individualProviders_;
  id<JavaUtilList> collectionProviders_;
}

- (instancetype)initWithInt:(jint)individualProviderSize
                    withInt:(jint)collectionProviderSize;

@end

J2OBJC_FIELD_SETTER(DaggerInternalSetFactory_Builder, individualProviders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(DaggerInternalSetFactory_Builder, collectionProviders_, id<JavaUtilList>)

__attribute__((unused)) static void DaggerInternalSetFactory_Builder_initWithInt_withInt_(DaggerInternalSetFactory_Builder *self, jint individualProviderSize, jint collectionProviderSize);

__attribute__((unused)) static DaggerInternalSetFactory_Builder *new_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) NS_RETURNS_RETAINED;

__attribute__((unused)) static DaggerInternalSetFactory_Builder *create_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize);

J2OBJC_INITIALIZED_DEFN(DaggerInternalSetFactory)

@implementation DaggerInternalSetFactory

+ (id<DaggerInternalFactory>)empty {
  return DaggerInternalSetFactory_empty();
}

+ (DaggerInternalSetFactory_Builder *)builderWithInt:(jint)individualProviderSize
                                             withInt:(jint)collectionProviderSize {
  return DaggerInternalSetFactory_builderWithInt_withInt_(individualProviderSize, collectionProviderSize);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)individualProviders
                    withJavaUtilList:(id<JavaUtilList>)collectionProviders {
  DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(self, individualProviders, collectionProviders);
  return self;
}

- (id<JavaUtilSet>)get {
  jint size = [((id<JavaUtilList>) nil_chk(individualProviders_)) size];
  id<JavaUtilList> providedCollections = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(collectionProviders_)) size]);
  for (jint i = 0, c = [collectionProviders_ size]; i < c; i++) {
    id<JavaUtilCollection> providedCollection = [((id<JavaxInjectProvider>) nil_chk([collectionProviders_ getWithInt:i])) get];
    size += [((id<JavaUtilCollection>) nil_chk(providedCollection)) size];
    [providedCollections addWithId:providedCollection];
  }
  id<JavaUtilSet> providedValues = DaggerInternalDaggerCollections_newHashSetWithExpectedSizeWithInt_(size);
  for (jint i = 0, c = [individualProviders_ size]; i < c; i++) {
    [((id<JavaUtilSet>) nil_chk(providedValues)) addWithId:DaggerInternalPreconditions_checkNotNullWithId_([((id<JavaxInjectProvider>) nil_chk([individualProviders_ getWithInt:i])) get])];
  }
  for (jint i = 0, c = [providedCollections size]; i < c; i++) {
    for (id __strong element in nil_chk([providedCollections getWithInt:i])) {
      [((id<JavaUtilSet>) nil_chk(providedValues)) addWithId:DaggerInternalPreconditions_checkNotNullWithId_(element)];
    }
  }
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(providedValues);
}

- (void)dealloc {
  RELEASE_(individualProviders_);
  RELEASE_(collectionProviders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LDaggerInternalFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LDaggerInternalSetFactory_Builder;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(empty);
  methods[1].selector = @selector(builderWithInt:withInt:);
  methods[2].selector = @selector(initWithJavaUtilList:withJavaUtilList:);
  methods[3].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_FACTORY", "LDaggerInternalFactory;", .constantValue.asLong = 0, 0x1a, -1, 7, 8, -1 },
    { "individualProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "collectionProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>()Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;", "builder", "II", "<T:Ljava/lang/Object;>(II)Ldagger/internal/SetFactory$Builder<TT;>;", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<Ljavax/inject/Provider<TT;>;>;Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Collection<TT;>;>;>;)V", "()Ljava/util/Set<TT;>;", &DaggerInternalSetFactory_EMPTY_FACTORY, "Ldagger/internal/Factory<Ljava/util/Set<Ljava/lang/Object;>;>;", "Ljava/util/List<Ljavax/inject/Provider<TT;>;>;", "Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Collection<TT;>;>;>;", "LDaggerInternalSetFactory_Builder;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;" };
  static const J2ObjcClassInfo _DaggerInternalSetFactory = { "SetFactory", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 4, 3, -1, 11, -1, 12, -1 };
  return &_DaggerInternalSetFactory;
}

+ (void)initialize {
  if (self == [DaggerInternalSetFactory class]) {
    JreStrongAssignAndConsume(&DaggerInternalSetFactory_EMPTY_FACTORY, new_DaggerInternalSetFactory_1_init());
    J2OBJC_SET_INITIALIZED(DaggerInternalSetFactory)
  }
}

@end

id<DaggerInternalFactory> DaggerInternalSetFactory_empty() {
  DaggerInternalSetFactory_initialize();
  return DaggerInternalSetFactory_EMPTY_FACTORY;
}

DaggerInternalSetFactory_Builder *DaggerInternalSetFactory_builderWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) {
  DaggerInternalSetFactory_initialize();
  return create_DaggerInternalSetFactory_Builder_initWithInt_withInt_(individualProviderSize, collectionProviderSize);
}

void DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(DaggerInternalSetFactory *self, id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) {
  NSObject_init(self);
  JreStrongAssign(&self->individualProviders_, individualProviders);
  JreStrongAssign(&self->collectionProviders_, collectionProviders);
}

DaggerInternalSetFactory *new_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) {
  J2OBJC_NEW_IMPL(DaggerInternalSetFactory, initWithJavaUtilList_withJavaUtilList_, individualProviders, collectionProviders)
}

DaggerInternalSetFactory *create_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) {
  J2OBJC_CREATE_IMPL(DaggerInternalSetFactory, initWithJavaUtilList_withJavaUtilList_, individualProviders, collectionProviders)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactory)

@implementation DaggerInternalSetFactory_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DaggerInternalSetFactory_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilSet>)get {
  return JavaUtilCollections_emptySet();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Set<Ljava/lang/Object;>;", "LDaggerInternalSetFactory;", "Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Set<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _DaggerInternalSetFactory_1 = { "", "dagger.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, -1, 2, -1 };
  return &_DaggerInternalSetFactory_1;
}

@end

void DaggerInternalSetFactory_1_init(DaggerInternalSetFactory_1 *self) {
  NSObject_init(self);
}

DaggerInternalSetFactory_1 *new_DaggerInternalSetFactory_1_init() {
  J2OBJC_NEW_IMPL(DaggerInternalSetFactory_1, init)
}

DaggerInternalSetFactory_1 *create_DaggerInternalSetFactory_1_init() {
  J2OBJC_CREATE_IMPL(DaggerInternalSetFactory_1, init)
}

@implementation DaggerInternalSetFactory_Builder

- (instancetype)initWithInt:(jint)individualProviderSize
                    withInt:(jint)collectionProviderSize {
  DaggerInternalSetFactory_Builder_initWithInt_withInt_(self, individualProviderSize, collectionProviderSize);
  return self;
}

- (DaggerInternalSetFactory_Builder *)addProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)individualProvider {
  JreAssert(individualProvider != nil, @"Codegen error? Null provider");
  [((id<JavaUtilList>) nil_chk(individualProviders_)) addWithId:individualProvider];
  return self;
}

- (DaggerInternalSetFactory_Builder *)addCollectionProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)collectionProvider {
  JreAssert(collectionProvider != nil, @"Codegen error? Null provider");
  [((id<JavaUtilList>) nil_chk(collectionProviders_)) addWithId:collectionProvider];
  return self;
}

- (DaggerInternalSetFactory *)build {
  JreAssert(!DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(individualProviders_), @"Codegen error?  Duplicates in the provider list");
  JreAssert(!DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(collectionProviders_), @"Codegen error?  Duplicates in the provider list");
  return create_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(individualProviders_, collectionProviders_);
}

- (void)dealloc {
  RELEASE_(individualProviders_);
  RELEASE_(collectionProviders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LDaggerInternalSetFactory_Builder;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LDaggerInternalSetFactory_Builder;", 0x1, 4, 2, -1, 5, -1, -1 },
    { NULL, "LDaggerInternalSetFactory;", 0x1, -1, -1, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(addProviderWithJavaxInjectProvider:);
  methods[2].selector = @selector(addCollectionProviderWithJavaxInjectProvider:);
  methods[3].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "individualProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "collectionProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "II", "addProvider", "LJavaxInjectProvider;", "(Ljavax/inject/Provider<+TT;>;)Ldagger/internal/SetFactory$Builder<TT;>;", "addCollectionProvider", "(Ljavax/inject/Provider<+Ljava/util/Collection<+TT;>;>;)Ldagger/internal/SetFactory$Builder<TT;>;", "()Ldagger/internal/SetFactory<TT;>;", "Ljava/util/List<Ljavax/inject/Provider<TT;>;>;", "Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Collection<TT;>;>;>;", "LDaggerInternalSetFactory;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _DaggerInternalSetFactory_Builder = { "Builder", "dagger.internal", ptrTable, methods, fields, 7, 0x19, 4, 2, 9, -1, -1, 10, -1 };
  return &_DaggerInternalSetFactory_Builder;
}

@end

void DaggerInternalSetFactory_Builder_initWithInt_withInt_(DaggerInternalSetFactory_Builder *self, jint individualProviderSize, jint collectionProviderSize) {
  NSObject_init(self);
  JreStrongAssign(&self->individualProviders_, DaggerInternalDaggerCollections_presizedListWithInt_(individualProviderSize));
  JreStrongAssign(&self->collectionProviders_, DaggerInternalDaggerCollections_presizedListWithInt_(collectionProviderSize));
}

DaggerInternalSetFactory_Builder *new_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) {
  J2OBJC_NEW_IMPL(DaggerInternalSetFactory_Builder, initWithInt_withInt_, individualProviderSize, collectionProviderSize)
}

DaggerInternalSetFactory_Builder *create_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) {
  J2OBJC_CREATE_IMPL(DaggerInternalSetFactory_Builder, initWithInt_withInt_, individualProviderSize, collectionProviderSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactory_Builder)
