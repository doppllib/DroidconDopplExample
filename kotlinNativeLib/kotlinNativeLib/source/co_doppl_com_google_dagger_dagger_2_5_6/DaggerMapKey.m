//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DaggerMapKey.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/Documented.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *DaggerMapKey__Annotations$0();

@implementation DaggerMapKey

@synthesize unwrapValue = unwrapValue_;

+ (jboolean)unwrapValueDefault {
  return true;
}

- (IOSClass *)annotationType {
  return DaggerMapKey_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@dagger.MapKey(unwrapValue=%d)", unwrapValue_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(unwrapValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "unwrapValue_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&DaggerMapKey__Annotations$0 };
  static const J2ObjcClassInfo _DaggerMapKey = { "MapKey", "dagger", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, -1, -1, -1, 0 };
  return &_DaggerMapKey;
}

@end

id<DaggerMapKey> create_DaggerMapKey(jboolean unwrapValue) {
  DaggerMapKey *self = AUTORELEASE([[DaggerMapKey alloc] init]);
  self->unwrapValue_ = unwrapValue;
  return self;
}

IOSObjectArray *DaggerMapKey__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMapKey)
