//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DVMSponsorsViewModel_Factory_MembersInjector")
#ifdef RESTRICT_DVMSponsorsViewModel_Factory_MembersInjector
#define INCLUDE_ALL_DVMSponsorsViewModel_Factory_MembersInjector 0
#else
#define INCLUDE_ALL_DVMSponsorsViewModel_Factory_MembersInjector 1
#endif
#undef RESTRICT_DVMSponsorsViewModel_Factory_MembersInjector

#if !defined (DVMSponsorsViewModel_Factory_MembersInjector_) && (INCLUDE_ALL_DVMSponsorsViewModel_Factory_MembersInjector || defined(INCLUDE_DVMSponsorsViewModel_Factory_MembersInjector))
#define DVMSponsorsViewModel_Factory_MembersInjector_

#define RESTRICT_DaggerMembersInjector 1
#define INCLUDE_DaggerMembersInjector 1
#include "DaggerMembersInjector.h"

@class DVMSponsorsViewModel_Factory;
@protocol JavaxInjectProvider;

@interface DVMSponsorsViewModel_Factory_MembersInjector : NSObject < DaggerMembersInjector >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider;

+ (id<DaggerMembersInjector>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider;

- (void)injectMembersWithId:(DVMSponsorsViewModel_Factory *)instance;

+ (void)injectTaskWithDVMSponsorsViewModel_Factory:(DVMSponsorsViewModel_Factory *)instance
                           withJavaxInjectProvider:(id<JavaxInjectProvider>)taskProvider;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DVMSponsorsViewModel_Factory_MembersInjector)

FOUNDATION_EXPORT void DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(DVMSponsorsViewModel_Factory_MembersInjector *self, id<JavaxInjectProvider> taskProvider);

FOUNDATION_EXPORT DVMSponsorsViewModel_Factory_MembersInjector *new_DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DVMSponsorsViewModel_Factory_MembersInjector *create_DVMSponsorsViewModel_Factory_MembersInjector_initWithJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider);

FOUNDATION_EXPORT id<DaggerMembersInjector> DVMSponsorsViewModel_Factory_MembersInjector_createWithJavaxInjectProvider_(id<JavaxInjectProvider> taskProvider);

FOUNDATION_EXPORT void DVMSponsorsViewModel_Factory_MembersInjector_injectTaskWithDVMSponsorsViewModel_Factory_withJavaxInjectProvider_(DVMSponsorsViewModel_Factory *instance, id<JavaxInjectProvider> taskProvider);

J2OBJC_TYPE_LITERAL_HEADER(DVMSponsorsViewModel_Factory_MembersInjector)

@compatibility_alias CoTouchlabDroidconandroidSharedViewmodelSponsorsViewModel_Factory_MembersInjector DVMSponsorsViewModel_Factory_MembersInjector;

#endif

#pragma pop_macro("INCLUDE_ALL_DVMSponsorsViewModel_Factory_MembersInjector")
