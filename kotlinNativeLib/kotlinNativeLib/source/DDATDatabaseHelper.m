//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DDAOBlockDao.h"
#include "DDAOEventDao.h"
#include "DDAOEventSpeakerDao.h"
#include "DDAOUserAccountDao.h"
#include "DDATBlock.h"
#include "DDATDatabaseHelper.h"
#include "DDATDroidconDatabase.h"
#include "DDATEvent.h"
#include "DDATEventSpeaker.h"
#include "DDATUserAccount.h"
#include "DNETDNetworkUserAccount.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexCompletable.h"
#include "IoReactivexFlowable.h"
#include "IoReactivexFunctionsAction.h"
#include "IoReactivexObservable.h"
#include "IoReactivexSingle.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Long.h"
#include "java/lang/Runnable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/concurrent/Callable.h"
#include "javax/inject/Inject.h"
#include "javax/inject/Singleton.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface DDATDatabaseHelper () {
 @public
  DDATDroidconDatabase *db_;
}

- (id<JavaUtilList>)combineEventsWithSpeakersWithJavaUtilList:(id<JavaUtilList>)events;

@end

J2OBJC_FIELD_SETTER(DDATDatabaseHelper, db_, DDATDroidconDatabase *)

__attribute__((unused)) static id<JavaUtilList> DDATDatabaseHelper_combineEventsWithSpeakersWithJavaUtilList_(DDATDatabaseHelper *self, id<JavaUtilList> events);

__attribute__((unused)) static IOSObjectArray *DDATDatabaseHelper__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DDATDatabaseHelper__Annotations$1();

@interface DDATDatabaseHelper_$Lambda$1 : NSObject < JavaUtilConcurrentCallable > {
 @public
  DDATDatabaseHelper *this$0_;
  jlong val$eventId_;
}

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$1)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper_$Lambda$1 *self, DDATDatabaseHelper *outer$, jlong capture$0);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$1 *new_DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$1 *create_DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0);

@interface DDATDatabaseHelper_$Lambda$2 : NSObject < JavaUtilConcurrentCallable > {
 @public
  DDATDatabaseHelper *target$_;
}

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$2)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(DDATDatabaseHelper_$Lambda$2 *self, DDATDatabaseHelper *outer$);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$2 *new_DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(DDATDatabaseHelper *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$2 *create_DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(DDATDatabaseHelper *outer$);

@interface DDATDatabaseHelper_$Lambda$3 : NSObject < IoReactivexFunctionsAction > {
 @public
  DDATDatabaseHelper *this$0_;
  DDATEvent *val$event_;
}

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$3)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(DDATDatabaseHelper_$Lambda$3 *self, DDATDatabaseHelper *outer$, DDATEvent *capture$0);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$3 *new_DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(DDATDatabaseHelper *outer$, DDATEvent *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$3 *create_DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(DDATDatabaseHelper *outer$, DDATEvent *capture$0);

@interface DDATDatabaseHelper_$Lambda$4 : NSObject < IoReactivexFunctionsAction > {
 @public
  DDATDatabaseHelper *this$0_;
  id<JavaUtilList> val$blocks_;
}

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$4)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(DDATDatabaseHelper_$Lambda$4 *self, DDATDatabaseHelper *outer$, id<JavaUtilList> capture$0);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$4 *new_DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(DDATDatabaseHelper *outer$, id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$4 *create_DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(DDATDatabaseHelper *outer$, id<JavaUtilList> capture$0);

@interface DDATDatabaseHelper_$Lambda$5 : NSObject < JavaUtilConcurrentCallable > {
 @public
  DDATDatabaseHelper *this$0_;
  jlong val$eventId_;
}

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$5)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper_$Lambda$5 *self, DDATDatabaseHelper *outer$, jlong capture$0);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$5 *new_DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$5 *create_DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0);

@interface DDATDatabaseHelper_$Lambda$6 : NSObject < JavaUtilConcurrentCallable > {
 @public
  DDATDatabaseHelper *this$0_;
  jlong val$userId_;
}

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$6)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper_$Lambda$6 *self, DDATDatabaseHelper *outer$, jlong capture$0);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$6 *new_DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$6 *create_DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0);

@interface DDATDatabaseHelper_$Lambda$7 : NSObject < IoReactivexFunctionsAction > {
 @public
  id<DDAOUserAccountDao> val$dao_;
  DDATUserAccount *val$userAccount_;
}

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDatabaseHelper_$Lambda$7)

__attribute__((unused)) static void DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(DDATDatabaseHelper_$Lambda$7 *self, id<DDAOUserAccountDao> capture$0, DDATUserAccount *capture$1);

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$7 *new_DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(id<DDAOUserAccountDao> capture$0, DDATUserAccount *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDatabaseHelper_$Lambda$7 *create_DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(id<DDAOUserAccountDao> capture$0, DDATUserAccount *capture$1);

@implementation DDATDatabaseHelper

- (instancetype)initWithDDATDroidconDatabase:(DDATDroidconDatabase *)droidconDatabase {
  DDATDatabaseHelper_initWithDDATDroidconDatabase_(self, droidconDatabase);
  return self;
}

- (void)runInTransactionWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  [((DDATDroidconDatabase *) nil_chk(db_)) runInTransactionWithJavaLangRunnable:r];
}

- (void)deleteEventsNotInWithJavaUtilSet:(id<JavaUtilSet>)goodStuff {
  id<DDAOEventDao> dao = [((DDATDroidconDatabase *) nil_chk(db_)) eventDao];
  id<JavaUtilList> allEvents = [((id<DDAOEventDao>) nil_chk(dao)) getEvents];
  id<JavaUtilIterator> iterator = [((id<JavaUtilList>) nil_chk(allEvents)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    DDATEvent *event = [iterator next];
    if ([((id<JavaUtilSet>) nil_chk(goodStuff)) containsWithId:JavaLangLong_valueOfWithLong_(((DDATEvent *) nil_chk(event))->id__)]) {
      [iterator remove];
    }
  }
  if ([allEvents size] > 0) {
    [dao deleteAllWithJavaUtilList:allEvents];
  }
}

- (IoReactivexSingle *)getEventForIdWithLong:(jlong)eventId {
  return IoReactivexSingle_fromCallableWithJavaUtilConcurrentCallable_(create_DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(self, eventId));
}

- (NSString *)getRsvpUuidForEventWithIdWithLong:(jlong)eventId {
  return [((id<DDAOEventDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) eventDao])) getRsvpUuidForEventWithIdWithLong:eventId];
}

- (IoReactivexSingle *)getEvents {
  return IoReactivexSingle_fromCallableWithJavaUtilConcurrentCallable_(create_DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(self));
}

- (id<JavaUtilList>)getEventsList {
  return [((id<DDAOEventDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) eventDao])) getEvents];
}

- (id<JavaUtilList>)getEventsWithSpeakersList {
  return DDATDatabaseHelper_combineEventsWithSpeakersWithJavaUtilList_(self, [self getEventsList]);
}

- (id<JavaUtilList>)combineEventsWithSpeakersWithJavaUtilList:(id<JavaUtilList>)events {
  return DDATDatabaseHelper_combineEventsWithSpeakersWithJavaUtilList_(self, events);
}

- (void)createEventWithDDATEvent:(DDATEvent *)event {
  [((id<DDAOEventDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) eventDao])) createOrUpdateWithDDATEvent:event];
}

- (IoReactivexCompletable *)updateEventWithDDATEvent:(DDATEvent *)event {
  return IoReactivexCompletable_fromActionWithIoReactivexFunctionsAction_(create_DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(self, event));
}

- (id<JavaUtilList>)getBlocksList {
  return [((id<DDAOBlockDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) blockDao])) getBlocks];
}

- (void)updateBlockWithDDATBlock:(DDATBlock *)block {
  [((id<DDAOBlockDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) blockDao])) createOrUpdateWithDDATBlock:block];
}

- (IoReactivexCompletable *)deleteBlocksWithJavaUtilList:(id<JavaUtilList>)blocks {
  return IoReactivexCompletable_fromActionWithIoReactivexFunctionsAction_(create_DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(self, blocks));
}

- (DDATEventSpeaker *)getSpeakerForEventWithIdWithLong:(jlong)eventId
                                              withLong:(jlong)userId {
  return [((id<DDAOEventSpeakerDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) eventSpeakerDao])) getSpeakerForEventWithIdWithLong:eventId withLong:userId];
}

- (void)updateSpeakerWithDDATEventSpeaker:(DDATEventSpeaker *)speaker {
  [((id<DDAOEventSpeakerDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) eventSpeakerDao])) createOrUpdateWithDDATEventSpeaker:speaker];
}

- (IoReactivexSingle *)getEventSpeakersWithLong:(jlong)eventId {
  return IoReactivexSingle_fromCallableWithJavaUtilConcurrentCallable_(create_DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(self, eventId));
}

- (IoReactivexObservable *)getUserAccountForIdWithLong:(jlong)userId {
  return IoReactivexObservable_fromCallableWithJavaUtilConcurrentCallable_(create_DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(self, userId));
}

- (DDATUserAccount *)getUserAccountWithLong:(jlong)userId {
  return [((id<DDAOUserAccountDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) userAccountDao])) getUserAccountWithLong:userId];
}

- (IoReactivexFlowable *)flowUserAccountWithLong:(jlong)userId {
  return [((id<DDAOUserAccountDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(db_)) userAccountDao])) flowUserAccountWithLong:userId];
}

- (IoReactivexCompletable *)saveUserAccountWithDDATUserAccount:(DDATUserAccount *)userAccount {
  id<DDAOUserAccountDao> dao = [((DDATDroidconDatabase *) nil_chk(db_)) userAccountDao];
  return IoReactivexCompletable_fromActionWithIoReactivexFunctionsAction_(create_DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(dao, userAccount));
}

- (void)convertAndSaveUserAccountWithDNETDNetworkUserAccount:(DNETDNetworkUserAccount *)ua
                                         withDDATUserAccount:(DDATUserAccount *)userAccount {
  DDATUserAccount *dbUa = [self userAccountToDbWithDNETDNetworkUserAccount:ua withDDATUserAccount:userAccount];
  id<DDAOUserAccountDao> dao = [((DDATDroidconDatabase *) nil_chk(db_)) userAccountDao];
  [((id<DDAOUserAccountDao>) nil_chk(dao)) createOrUpdateWithDDATUserAccount:dbUa];
}

- (DDATUserAccount * __nonnull)userAccountToDbWithDNETDNetworkUserAccount:(DNETDNetworkUserAccount *)ua
                                                      withDDATUserAccount:(DDATUserAccount *)dbUa {
  JreStrongAssign(&((DDATUserAccount *) nil_chk(dbUa))->id__, ((DNETDNetworkUserAccount *) nil_chk(ua))->id__);
  JreStrongAssign(&dbUa->name_, ua->name_);
  JreStrongAssign(&dbUa->profile_, ua->profile_);
  JreStrongAssign(&dbUa->avatarKey_, ua->avatarKey_);
  JreStrongAssign(&dbUa->userCode_, ua->userCode_);
  JreStrongAssign(&dbUa->company_, ua->company_);
  JreStrongAssign(&dbUa->twitter_, ua->twitter_);
  JreStrongAssign(&dbUa->linkedIn_, ua->linkedIn_);
  JreStrongAssign(&dbUa->website_, ua->website_);
  dbUa->following_ = [((JavaLangBoolean *) nil_chk(ua->following_)) booleanValue];
  JreStrongAssign(&dbUa->gPlus_, ua->gPlus_);
  JreStrongAssign(&dbUa->phone_, ua->phone_);
  JreStrongAssign(&dbUa->email_, ua->email_);
  JreStrongAssign(&dbUa->coverKey_, ua->coverKey_);
  JreStrongAssign(&dbUa->facebook_, ua->facebook_);
  JreStrongAssign(&dbUa->emailPublic_, ua->emailPublic_);
  return dbUa;
}

- (void)dealloc {
  RELEASE_(db_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LIoReactivexSingle;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LIoReactivexSingle;", 0x1, -1, -1, -1, 11, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 13, 14, -1, 15, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LIoReactivexCompletable;", 0x1, 18, 17, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 19, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LIoReactivexCompletable;", 0x1, 22, 14, -1, 23, -1, -1 },
    { NULL, "LDDATEventSpeaker;", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "LIoReactivexSingle;", 0x1, 28, 8, -1, 29, -1, -1 },
    { NULL, "LIoReactivexObservable;", 0x1, 30, 8, -1, 31, -1, -1 },
    { NULL, "LDDATUserAccount;", 0x1, 32, 8, -1, -1, -1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, 33, 8, -1, 34, -1, -1 },
    { NULL, "LIoReactivexCompletable;", 0x1, 35, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, -1, -1, -1, -1 },
    { NULL, "LDDATUserAccount;", 0x1, 39, 38, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDDATDroidconDatabase:);
  methods[1].selector = @selector(runInTransactionWithJavaLangRunnable:);
  methods[2].selector = @selector(deleteEventsNotInWithJavaUtilSet:);
  methods[3].selector = @selector(getEventForIdWithLong:);
  methods[4].selector = @selector(getRsvpUuidForEventWithIdWithLong:);
  methods[5].selector = @selector(getEvents);
  methods[6].selector = @selector(getEventsList);
  methods[7].selector = @selector(getEventsWithSpeakersList);
  methods[8].selector = @selector(combineEventsWithSpeakersWithJavaUtilList:);
  methods[9].selector = @selector(createEventWithDDATEvent:);
  methods[10].selector = @selector(updateEventWithDDATEvent:);
  methods[11].selector = @selector(getBlocksList);
  methods[12].selector = @selector(updateBlockWithDDATBlock:);
  methods[13].selector = @selector(deleteBlocksWithJavaUtilList:);
  methods[14].selector = @selector(getSpeakerForEventWithIdWithLong:withLong:);
  methods[15].selector = @selector(updateSpeakerWithDDATEventSpeaker:);
  methods[16].selector = @selector(getEventSpeakersWithLong:);
  methods[17].selector = @selector(getUserAccountForIdWithLong:);
  methods[18].selector = @selector(getUserAccountWithLong:);
  methods[19].selector = @selector(flowUserAccountWithLong:);
  methods[20].selector = @selector(saveUserAccountWithDDATUserAccount:);
  methods[21].selector = @selector(convertAndSaveUserAccountWithDNETDNetworkUserAccount:withDDATUserAccount:);
  methods[22].selector = @selector(userAccountToDbWithDNETDNetworkUserAccount:withDDATUserAccount:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "db_", "LDDATDroidconDatabase;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDDATDroidconDatabase;", (void *)&DDATDatabaseHelper__Annotations$0, "runInTransaction", "LJavaLangRunnable;", "deleteEventsNotIn", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/Long;>;)V", "getEventForId", "J", "(J)Lio/reactivex/Single<Lco/touchlab/droidconandroid/shared/data/Event;>;", "getRsvpUuidForEventWithId", "()Lio/reactivex/Single<Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Event;>;>;", "()Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Event;>;", "combineEventsWithSpeakers", "LJavaUtilList;", "(Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Event;>;)Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Event;>;", "createEvent", "LDDATEvent;", "updateEvent", "()Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Block;>;", "updateBlock", "LDDATBlock;", "deleteBlocks", "(Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/Block;>;)Lio/reactivex/Completable;", "getSpeakerForEventWithId", "JJ", "updateSpeaker", "LDDATEventSpeaker;", "getEventSpeakers", "(J)Lio/reactivex/Single<Ljava/util/List<Lco/touchlab/droidconandroid/shared/data/EventSpeaker;>;>;", "getUserAccountForId", "(J)Lio/reactivex/Observable<Lco/touchlab/droidconandroid/shared/data/UserAccount;>;", "getUserAccount", "flowUserAccount", "(J)Lio/reactivex/Flowable<Lco/touchlab/droidconandroid/shared/data/UserAccount;>;", "saveUserAccount", "LDDATUserAccount;", "convertAndSaveUserAccount", "LDNETDNetworkUserAccount;LDDATUserAccount;", "userAccountToDb", (void *)&DDATDatabaseHelper__Annotations$1 };
  static const J2ObjcClassInfo _DDATDatabaseHelper = { "DatabaseHelper", "co.touchlab.droidconandroid.shared.data", ptrTable, methods, fields, 7, 0x1, 23, 1, -1, -1, -1, -1, 40 };
  return &_DDATDatabaseHelper;
}

@end

void DDATDatabaseHelper_initWithDDATDroidconDatabase_(DDATDatabaseHelper *self, DDATDroidconDatabase *droidconDatabase) {
  NSObject_init(self);
  JreStrongAssign(&self->db_, droidconDatabase);
}

DDATDatabaseHelper *new_DDATDatabaseHelper_initWithDDATDroidconDatabase_(DDATDroidconDatabase *droidconDatabase) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper, initWithDDATDroidconDatabase_, droidconDatabase)
}

DDATDatabaseHelper *create_DDATDatabaseHelper_initWithDDATDroidconDatabase_(DDATDroidconDatabase *droidconDatabase) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper, initWithDDATDroidconDatabase_, droidconDatabase)
}

id<JavaUtilList> DDATDatabaseHelper_combineEventsWithSpeakersWithJavaUtilList_(DDATDatabaseHelper *self, id<JavaUtilList> events) {
  for (DDATEvent * __strong event in nil_chk(events)) {
    JreStrongAssign(&((DDATEvent *) nil_chk(event))->speakerList_, [((id<DDAOEventSpeakerDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(self->db_)) eventSpeakerDao])) getEventSpeakersWithLong:event->id__]);
  }
  return events;
}

IOSObjectArray *DDATDatabaseHelper__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectInject() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DDATDatabaseHelper__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxInjectSingleton() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDATDatabaseHelper)

@implementation DDATDatabaseHelper_$Lambda$1

- (id)call {
  return [((id<DDAOEventDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(this$0_->db_)) eventDao])) getEventForIdWithLong:val$eventId_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper_$Lambda$1 *self, DDATDatabaseHelper *outer$, jlong capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$eventId_ = capture$0;
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$1 *new_DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$1, initWithDDATDatabaseHelper_withLong_, outer$, capture$0)
}

DDATDatabaseHelper_$Lambda$1 *create_DDATDatabaseHelper_$Lambda$1_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$1, initWithDDATDatabaseHelper_withLong_, outer$, capture$0)
}

@implementation DDATDatabaseHelper_$Lambda$2

- (id)call {
  return [target$_ getEventsList];
}

- (void)dealloc {
  RELEASE_(target$_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(DDATDatabaseHelper_$Lambda$2 *self, DDATDatabaseHelper *outer$) {
  JreStrongAssign(&self->target$_, outer$);
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$2 *new_DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(DDATDatabaseHelper *outer$) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$2, initWithDDATDatabaseHelper_, outer$)
}

DDATDatabaseHelper_$Lambda$2 *create_DDATDatabaseHelper_$Lambda$2_initWithDDATDatabaseHelper_(DDATDatabaseHelper *outer$) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$2, initWithDDATDatabaseHelper_, outer$)
}

@implementation DDATDatabaseHelper_$Lambda$3

- (void)run {
  [((id<DDAOEventDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(this$0_->db_)) eventDao])) updateEventWithDDATEvent:val$event_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$event_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(DDATDatabaseHelper_$Lambda$3 *self, DDATDatabaseHelper *outer$, DDATEvent *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$event_, capture$0);
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$3 *new_DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(DDATDatabaseHelper *outer$, DDATEvent *capture$0) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$3, initWithDDATDatabaseHelper_withDDATEvent_, outer$, capture$0)
}

DDATDatabaseHelper_$Lambda$3 *create_DDATDatabaseHelper_$Lambda$3_initWithDDATDatabaseHelper_withDDATEvent_(DDATDatabaseHelper *outer$, DDATEvent *capture$0) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$3, initWithDDATDatabaseHelper_withDDATEvent_, outer$, capture$0)
}

@implementation DDATDatabaseHelper_$Lambda$4

- (void)run {
  [((id<DDAOBlockDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(this$0_->db_)) blockDao])) deleteAllWithJavaUtilList:val$blocks_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$blocks_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(DDATDatabaseHelper_$Lambda$4 *self, DDATDatabaseHelper *outer$, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$blocks_, capture$0);
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$4 *new_DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(DDATDatabaseHelper *outer$, id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$4, initWithDDATDatabaseHelper_withJavaUtilList_, outer$, capture$0)
}

DDATDatabaseHelper_$Lambda$4 *create_DDATDatabaseHelper_$Lambda$4_initWithDDATDatabaseHelper_withJavaUtilList_(DDATDatabaseHelper *outer$, id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$4, initWithDDATDatabaseHelper_withJavaUtilList_, outer$, capture$0)
}

@implementation DDATDatabaseHelper_$Lambda$5

- (id)call {
  return [((id<DDAOEventSpeakerDao>) nil_chk([((DDATDroidconDatabase *) nil_chk(this$0_->db_)) eventSpeakerDao])) getEventSpeakersWithLong:val$eventId_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper_$Lambda$5 *self, DDATDatabaseHelper *outer$, jlong capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$eventId_ = capture$0;
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$5 *new_DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$5, initWithDDATDatabaseHelper_withLong_, outer$, capture$0)
}

DDATDatabaseHelper_$Lambda$5 *create_DDATDatabaseHelper_$Lambda$5_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$5, initWithDDATDatabaseHelper_withLong_, outer$, capture$0)
}

@implementation DDATDatabaseHelper_$Lambda$6

- (id)call {
  return [this$0_ getUserAccountWithLong:val$userId_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper_$Lambda$6 *self, DDATDatabaseHelper *outer$, jlong capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$userId_ = capture$0;
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$6 *new_DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$6, initWithDDATDatabaseHelper_withLong_, outer$, capture$0)
}

DDATDatabaseHelper_$Lambda$6 *create_DDATDatabaseHelper_$Lambda$6_initWithDDATDatabaseHelper_withLong_(DDATDatabaseHelper *outer$, jlong capture$0) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$6, initWithDDATDatabaseHelper_withLong_, outer$, capture$0)
}

@implementation DDATDatabaseHelper_$Lambda$7

- (void)run {
  [((id<DDAOUserAccountDao>) nil_chk(val$dao_)) createOrUpdateWithDDATUserAccount:val$userAccount_];
}

- (void)dealloc {
  RELEASE_(val$dao_);
  RELEASE_(val$userAccount_);
  [super dealloc];
}

@end

void DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(DDATDatabaseHelper_$Lambda$7 *self, id<DDAOUserAccountDao> capture$0, DDATUserAccount *capture$1) {
  JreStrongAssign(&self->val$dao_, capture$0);
  JreStrongAssign(&self->val$userAccount_, capture$1);
  NSObject_init(self);
}

DDATDatabaseHelper_$Lambda$7 *new_DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(id<DDAOUserAccountDao> capture$0, DDATUserAccount *capture$1) {
  J2OBJC_NEW_IMPL(DDATDatabaseHelper_$Lambda$7, initWithDDAOUserAccountDao_withDDATUserAccount_, capture$0, capture$1)
}

DDATDatabaseHelper_$Lambda$7 *create_DDATDatabaseHelper_$Lambda$7_initWithDDAOUserAccountDao_withDDATUserAccount_(id<DDAOUserAccountDao> capture$0, DDATUserAccount *capture$1) {
  J2OBJC_CREATE_IMPL(DDATDatabaseHelper_$Lambda$7, initWithDDAOUserAccountDao_withDDATUserAccount_, capture$0, capture$1)
}
