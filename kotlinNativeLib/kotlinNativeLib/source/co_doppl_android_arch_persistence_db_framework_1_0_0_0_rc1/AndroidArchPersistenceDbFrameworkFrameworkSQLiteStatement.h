//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement")
#ifdef RESTRICT_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement
#define INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement 0
#else
#define INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement 1
#endif
#undef RESTRICT_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement

#if !defined (AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement_) && (INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement || defined(INCLUDE_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement))
#define AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement_

#define RESTRICT_AndroidArchPersistenceDbSupportSQLiteStatement 1
#define INCLUDE_AndroidArchPersistenceDbSupportSQLiteStatement 1
#include "AndroidArchPersistenceDbSupportSQLiteStatement.h"

@class AndroidDatabaseSqliteSQLiteStatement;
@class IOSByteArray;

@interface AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement : NSObject < AndroidArchPersistenceDbSupportSQLiteStatement >

#pragma mark Public

- (void)bindBlobWithInt:(jint)index
          withByteArray:(IOSByteArray *)value;

- (void)bindDoubleWithInt:(jint)index
               withDouble:(jdouble)value;

- (void)bindLongWithInt:(jint)index
               withLong:(jlong)value;

- (void)bindNullWithInt:(jint)index;

- (void)bindStringWithInt:(jint)index
             withNSString:(NSString *)value;

- (void)clearBindings;

- (void)close;

- (void)execute;

- (jlong)executeInsert;

- (jint)executeUpdateDelete;

- (jlong)simpleQueryForLong;

- (NSString *)simpleQueryForString;

#pragma mark Package-Private

- (instancetype)initWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)delegate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement)

FOUNDATION_EXPORT void AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteStatement_(AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement *self, AndroidDatabaseSqliteSQLiteStatement *delegate);

FOUNDATION_EXPORT AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement *new_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteStatement_(AndroidDatabaseSqliteSQLiteStatement *delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement *create_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteStatement_(AndroidDatabaseSqliteSQLiteStatement *delegate);

J2OBJC_TYPE_LITERAL_HEADER(AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidArchPersistenceDbFrameworkFrameworkSQLiteStatement")
