//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DDATBlock.h"
#include "DUTTimeUtils.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/lang/ThreadLocal.h"
#include "java/text/DateFormat.h"
#include "java/util/Date.h"

@implementation DDATBlock

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DDATBlock_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isBlock {
  return true;
}

- (JavaLangLong *)getStartLong {
  return startDateLong_;
}

- (JavaLangLong *)getEndLong {
  return endDateLong_;
}

- (NSString *)getStartFormatted {
  return [((JavaTextDateFormat *) nil_chk([((JavaLangThreadLocal *) nil_chk(JreLoadStatic(DUTTimeUtils, LOCAL_DATE_FORMAT))) get])) formatWithJavaUtilDate:create_JavaUtilDate_initWithLong_([((JavaLangLong *) nil_chk(startDateLong_)) longLongValue])];
}

- (NSString *)getEndFormatted {
  return [((JavaTextDateFormat *) nil_chk([((JavaLangThreadLocal *) nil_chk(JreLoadStatic(DUTTimeUtils, LOCAL_DATE_FORMAT))) get])) formatWithJavaUtilDate:create_JavaUtilDate_initWithLong_([((JavaLangLong *) nil_chk(endDateLong_)) longLongValue])];
}

- (NSString *)getName {
  return name_;
}

- (NSString *)getSpeakers {
  return @"";
}

- (jlong)eventId {
  return -1;
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(description__);
  RELEASE_(startDateLong_);
  RELEASE_(endDateLong_);
  RELEASE_(startDate_);
  RELEASE_(endDate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isBlock);
  methods[2].selector = @selector(getStartLong);
  methods[3].selector = @selector(getEndLong);
  methods[4].selector = @selector(getStartFormatted);
  methods[5].selector = @selector(getEndFormatted);
  methods[6].selector = @selector(getName);
  methods[7].selector = @selector(getSpeakers);
  methods[8].selector = @selector(eventId);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "J", .constantValue.asLong = 0, 0x1, 0, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "description__", "LNSString;", .constantValue.asLong = 0, 0x1, 1, -1, -1, -1 },
    { "startDateLong_", "LJavaLangLong;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "endDateLong_", "LJavaLangLong;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "startDate_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "endDate_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "id", "description" };
  static const J2ObjcClassInfo _DDATBlock = { "Block", "co.touchlab.droidconandroid.shared.data", ptrTable, methods, fields, 7, 0x1, 9, 7, -1, -1, -1, -1, -1 };
  return &_DDATBlock;
}

@end

void DDATBlock_init(DDATBlock *self) {
  NSObject_init(self);
}

DDATBlock *new_DDATBlock_init() {
  J2OBJC_NEW_IMPL(DDATBlock, init)
}

DDATBlock *create_DDATBlock_init() {
  J2OBJC_CREATE_IMPL(DDATBlock, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDATBlock)
