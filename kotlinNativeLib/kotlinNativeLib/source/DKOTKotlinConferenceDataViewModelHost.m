//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DKOTKotlinConferenceDataViewModelHost.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/util/List.h"

@implementation DKOTKotlinConferenceDataViewModelHost

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DKOTKotlinConferenceDataViewModelHost_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)updateConferenceDatesWithJavaUtilList:(id<JavaUtilList>)dates {
  IOSObjectArray *longDates = [((id<JavaUtilList>) nil_chk(dates)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[dates size] type:JavaLangLong_class_()]];
  IOSLongArray *ld = [IOSLongArray arrayWithLength:((IOSObjectArray *) nil_chk(longDates))->size_];
  jint index = 0;
  {
    IOSObjectArray *a__ = longDates;
    JavaLangLong * const *b__ = a__->buffer_;
    JavaLangLong * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangLong *longDate = *b__++;
      *IOSLongArray_GetRef(ld, index++) = [((JavaLangLong *) nil_chk(longDate)) longLongValue];
    }
  }
  [self updateConferenceDatesWithLongArray:ld];
}

- (void)updateConferenceDatesWithLongArray:(IOSLongArray *)dates {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x401, 0, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(updateConferenceDatesWithJavaUtilList:);
  methods[2].selector = @selector(updateConferenceDatesWithLongArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "updateConferenceDates", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Long;>;)V", "[J" };
  static const J2ObjcClassInfo _DKOTKotlinConferenceDataViewModelHost = { "KotlinConferenceDataViewModelHost", "co.touchlab.droidconandroid.shared.kotlinnative", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
  return &_DKOTKotlinConferenceDataViewModelHost;
}

@end

void DKOTKotlinConferenceDataViewModelHost_init(DKOTKotlinConferenceDataViewModelHost *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKOTKotlinConferenceDataViewModelHost)
