//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3Credentials.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/AssertionError.h"
#include "okio/ByteString.h"

@interface Okhttp3Credentials ()

- (instancetype)init;

@end

__attribute__((unused)) static void Okhttp3Credentials_init(Okhttp3Credentials *self);

__attribute__((unused)) static Okhttp3Credentials *new_Okhttp3Credentials_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3Credentials *create_Okhttp3Credentials_init();

@implementation Okhttp3Credentials

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Okhttp3Credentials_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)basicWithNSString:(NSString *)userName
                   withNSString:(NSString *)password {
  return Okhttp3Credentials_basicWithNSString_withNSString_(userName, password);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(basicWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "basic", "LNSString;LNSString;" };
  static const J2ObjcClassInfo _Okhttp3Credentials = { "Credentials", "okhttp3", ptrTable, methods, NULL, 7, 0x11, 2, 0, -1, -1, -1, -1, -1 };
  return &_Okhttp3Credentials;
}

@end

void Okhttp3Credentials_init(Okhttp3Credentials *self) {
  NSObject_init(self);
}

Okhttp3Credentials *new_Okhttp3Credentials_init() {
  J2OBJC_NEW_IMPL(Okhttp3Credentials, init)
}

Okhttp3Credentials *create_Okhttp3Credentials_init() {
  J2OBJC_CREATE_IMPL(Okhttp3Credentials, init)
}

NSString *Okhttp3Credentials_basicWithNSString_withNSString_(NSString *userName, NSString *password) {
  Okhttp3Credentials_initialize();
  @try {
    NSString *usernameAndPassword = JreStrcat("$C$", userName, ':', password);
    IOSByteArray *bytes = [usernameAndPassword java_getBytesWithCharsetName:@"ISO-8859-1"];
    NSString *encoded = [((OkioByteString *) nil_chk(OkioByteString_ofWithByteArray_(bytes))) base64];
    return JreStrcat("$$", @"Basic ", encoded);
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw create_JavaLangAssertionError_init();
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3Credentials)
