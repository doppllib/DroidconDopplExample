//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalIoFileSystem")
#ifdef RESTRICT_Okhttp3InternalIoFileSystem
#define INCLUDE_ALL_Okhttp3InternalIoFileSystem 0
#else
#define INCLUDE_ALL_Okhttp3InternalIoFileSystem 1
#endif
#undef RESTRICT_Okhttp3InternalIoFileSystem

#if !defined (Okhttp3InternalIoFileSystem_) && (INCLUDE_ALL_Okhttp3InternalIoFileSystem || defined(INCLUDE_Okhttp3InternalIoFileSystem))
#define Okhttp3InternalIoFileSystem_

@class JavaIoFile;
@protocol OkioSink;
@protocol OkioSource;

@protocol Okhttp3InternalIoFileSystem < JavaObject >

- (id<OkioSource>)sourceWithJavaIoFile:(JavaIoFile *)file;

- (id<OkioSink>)sinkWithJavaIoFile:(JavaIoFile *)file;

- (id<OkioSink>)appendingSinkWithJavaIoFile:(JavaIoFile *)file;

- (void)delete__WithJavaIoFile:(JavaIoFile *)file;

- (jboolean)existsWithJavaIoFile:(JavaIoFile *)file;

- (jlong)sizeWithJavaIoFile:(JavaIoFile *)file;

- (void)renameWithJavaIoFile:(JavaIoFile *)from
              withJavaIoFile:(JavaIoFile *)to;

- (void)deleteContentsWithJavaIoFile:(JavaIoFile *)directory;

@end

@interface Okhttp3InternalIoFileSystem : NSObject

+ (id<Okhttp3InternalIoFileSystem>)SYSTEM;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalIoFileSystem)

inline id<Okhttp3InternalIoFileSystem> Okhttp3InternalIoFileSystem_get_SYSTEM();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<Okhttp3InternalIoFileSystem> Okhttp3InternalIoFileSystem_SYSTEM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalIoFileSystem, SYSTEM, id<Okhttp3InternalIoFileSystem>)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalIoFileSystem)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalIoFileSystem")
