//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3CookieJar")
#ifdef RESTRICT_Okhttp3CookieJar
#define INCLUDE_ALL_Okhttp3CookieJar 0
#else
#define INCLUDE_ALL_Okhttp3CookieJar 1
#endif
#undef RESTRICT_Okhttp3CookieJar

#if !defined (Okhttp3CookieJar_) && (INCLUDE_ALL_Okhttp3CookieJar || defined(INCLUDE_Okhttp3CookieJar))
#define Okhttp3CookieJar_

@class Okhttp3HttpUrl;
@protocol JavaUtilList;

@protocol Okhttp3CookieJar < JavaObject >

- (void)saveFromResponseWithOkhttp3HttpUrl:(Okhttp3HttpUrl *)url
                          withJavaUtilList:(id<JavaUtilList>)cookies;

- (id<JavaUtilList>)loadForRequestWithOkhttp3HttpUrl:(Okhttp3HttpUrl *)url;

@end

@interface Okhttp3CookieJar : NSObject

+ (id<Okhttp3CookieJar>)NO_COOKIES;

@end

J2OBJC_STATIC_INIT(Okhttp3CookieJar)

inline id<Okhttp3CookieJar> Okhttp3CookieJar_get_NO_COOKIES();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<Okhttp3CookieJar> Okhttp3CookieJar_NO_COOKIES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3CookieJar, NO_COOKIES, id<Okhttp3CookieJar>)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3CookieJar)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3CookieJar")
