//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttpStatusLine")
#ifdef RESTRICT_Okhttp3InternalHttpStatusLine
#define INCLUDE_ALL_Okhttp3InternalHttpStatusLine 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttpStatusLine 1
#endif
#undef RESTRICT_Okhttp3InternalHttpStatusLine

#if !defined (Okhttp3InternalHttpStatusLine_) && (INCLUDE_ALL_Okhttp3InternalHttpStatusLine || defined(INCLUDE_Okhttp3InternalHttpStatusLine))
#define Okhttp3InternalHttpStatusLine_

@class Okhttp3Protocol;
@class Okhttp3Response;

@interface Okhttp3InternalHttpStatusLine : NSObject {
 @public
  Okhttp3Protocol *protocol_;
  jint code_;
  NSString *message_;
}

+ (jint)HTTP_TEMP_REDIRECT;

+ (jint)HTTP_PERM_REDIRECT;

+ (jint)HTTP_CONTINUE;

#pragma mark Public

- (instancetype)initWithOkhttp3Protocol:(Okhttp3Protocol *)protocol
                                withInt:(jint)code
                           withNSString:(NSString *)message;

+ (Okhttp3InternalHttpStatusLine *)getWithOkhttp3Response:(Okhttp3Response *)response;

+ (Okhttp3InternalHttpStatusLine *)parseWithNSString:(NSString *)statusLine;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttpStatusLine)

J2OBJC_FIELD_SETTER(Okhttp3InternalHttpStatusLine, protocol_, Okhttp3Protocol *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttpStatusLine, message_, NSString *)

inline jint Okhttp3InternalHttpStatusLine_get_HTTP_TEMP_REDIRECT();
#define Okhttp3InternalHttpStatusLine_HTTP_TEMP_REDIRECT 307
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttpStatusLine, HTTP_TEMP_REDIRECT, jint)

inline jint Okhttp3InternalHttpStatusLine_get_HTTP_PERM_REDIRECT();
#define Okhttp3InternalHttpStatusLine_HTTP_PERM_REDIRECT 308
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttpStatusLine, HTTP_PERM_REDIRECT, jint)

inline jint Okhttp3InternalHttpStatusLine_get_HTTP_CONTINUE();
#define Okhttp3InternalHttpStatusLine_HTTP_CONTINUE 100
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttpStatusLine, HTTP_CONTINUE, jint)

FOUNDATION_EXPORT void Okhttp3InternalHttpStatusLine_initWithOkhttp3Protocol_withInt_withNSString_(Okhttp3InternalHttpStatusLine *self, Okhttp3Protocol *protocol, jint code, NSString *message);

FOUNDATION_EXPORT Okhttp3InternalHttpStatusLine *new_Okhttp3InternalHttpStatusLine_initWithOkhttp3Protocol_withInt_withNSString_(Okhttp3Protocol *protocol, jint code, NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttpStatusLine *create_Okhttp3InternalHttpStatusLine_initWithOkhttp3Protocol_withInt_withNSString_(Okhttp3Protocol *protocol, jint code, NSString *message);

FOUNDATION_EXPORT Okhttp3InternalHttpStatusLine *Okhttp3InternalHttpStatusLine_getWithOkhttp3Response_(Okhttp3Response *response);

FOUNDATION_EXPORT Okhttp3InternalHttpStatusLine *Okhttp3InternalHttpStatusLine_parseWithNSString_(NSString *statusLine);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttpStatusLine)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttpStatusLine")
