//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3InternalFramedErrorCode.h"
#include "Okhttp3InternalFramedFrameReader.h"
#include "Okhttp3InternalFramedFrameWriter.h"
#include "Okhttp3InternalFramedFramedConnection.h"
#include "Okhttp3InternalFramedFramedStream.h"
#include "Okhttp3InternalFramedHeadersMode.h"
#include "Okhttp3InternalFramedHttp2.h"
#include "Okhttp3InternalFramedPing.h"
#include "Okhttp3InternalFramedPushObserver.h"
#include "Okhttp3InternalFramedSettings.h"
#include "Okhttp3InternalFramedSpdy3.h"
#include "Okhttp3InternalFramedVariant.h"
#include "Okhttp3InternalNamedRunnable.h"
#include "Okhttp3InternalPlatformPlatform.h"
#include "Okhttp3InternalUtil.h"
#include "Okhttp3Protocol.h"
#include "java/io/IOException.h"
#include "java/io/InterruptedIOException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Math.h"
#include "java/lang/Thread.h"
#include "java/net/InetSocketAddress.h"
#include "java/net/Socket.h"
#include "java/net/SocketAddress.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/LinkedBlockingQueue.h"
#include "java/util/concurrent/SynchronousQueue.h"
#include "java/util/concurrent/ThreadFactory.h"
#include "java/util/concurrent/ThreadPoolExecutor.h"
#include "java/util/concurrent/TimeUnit.h"
#include "okio/Buffer.h"
#include "okio/BufferedSink.h"
#include "okio/BufferedSource.h"
#include "okio/ByteString.h"
#include "okio/Okio.h"
#include "okio/Sink.h"
#include "okio/Source.h"

@interface Okhttp3InternalFramedFramedConnection () {
 @public
  Okhttp3InternalFramedFramedConnection_Listener *listener_;
  id<JavaUtilMap> streams_;
  NSString *hostname_;
  jint lastGoodStreamId_;
  jint nextStreamId_;
  jboolean shutdown_;
  id<JavaUtilConcurrentExecutorService> pushExecutor_;
  id<JavaUtilMap> pings_;
  id<Okhttp3InternalFramedPushObserver> pushObserver_;
  jint nextPingId_;
  jboolean receivedInitialPeerSettings_;
  id<JavaUtilSet> currentPushRequests_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Builder:(Okhttp3InternalFramedFramedConnection_Builder *)builder;

- (Okhttp3InternalFramedFramedStream *)newStreamWithInt:(jint)associatedStreamId
                                       withJavaUtilList:(id<JavaUtilList>)requestHeaders
                                            withBoolean:(jboolean)outArg
                                            withBoolean:(jboolean)inArg OBJC_METHOD_FAMILY_NONE;

- (void)writePingLaterWithBoolean:(jboolean)reply
                          withInt:(jint)payload1
                          withInt:(jint)payload2
    withOkhttp3InternalFramedPing:(Okhttp3InternalFramedPing *)ping;

- (void)writePingWithBoolean:(jboolean)reply
                     withInt:(jint)payload1
                     withInt:(jint)payload2
withOkhttp3InternalFramedPing:(Okhttp3InternalFramedPing *)ping;

- (Okhttp3InternalFramedPing *)removePingWithInt:(jint)id_;

- (void)closeWithOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)connectionCode
             withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)streamCode;

- (jboolean)pushedStreamWithInt:(jint)streamId;

- (void)pushRequestLaterWithInt:(jint)streamId
               withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (void)pushHeadersLaterWithInt:(jint)streamId
               withJavaUtilList:(id<JavaUtilList>)requestHeaders
                    withBoolean:(jboolean)inFinished;

- (void)pushDataLaterWithInt:(jint)streamId
      withOkioBufferedSource:(id<OkioBufferedSource>)source
                     withInt:(jint)byteCount
                 withBoolean:(jboolean)inFinished;

- (void)pushResetLaterWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode;

@end

J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, listener_, Okhttp3InternalFramedFramedConnection_Listener *)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, streams_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, hostname_, NSString *)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, pushExecutor_, id<JavaUtilConcurrentExecutorService>)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, pings_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, pushObserver_, id<Okhttp3InternalFramedPushObserver>)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection, currentPushRequests_, id<JavaUtilSet>)

inline id<JavaUtilConcurrentExecutorService> Okhttp3InternalFramedFramedConnection_get_executor();
static id<JavaUtilConcurrentExecutorService> Okhttp3InternalFramedFramedConnection_executor;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalFramedFramedConnection, executor, id<JavaUtilConcurrentExecutorService>)

inline jint Okhttp3InternalFramedFramedConnection_get_OKHTTP_CLIENT_WINDOW_SIZE();
#define Okhttp3InternalFramedFramedConnection_OKHTTP_CLIENT_WINDOW_SIZE 16777216
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedFramedConnection, OKHTTP_CLIENT_WINDOW_SIZE, jint)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(Okhttp3InternalFramedFramedConnection *self, Okhttp3InternalFramedFramedConnection_Builder *builder);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection *new_Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(Okhttp3InternalFramedFramedConnection_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection *create_Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(Okhttp3InternalFramedFramedConnection_Builder *builder);

__attribute__((unused)) static Okhttp3InternalFramedFramedStream *Okhttp3InternalFramedFramedConnection_newStreamWithInt_withJavaUtilList_withBoolean_withBoolean_(Okhttp3InternalFramedFramedConnection *self, jint associatedStreamId, id<JavaUtilList> requestHeaders, jboolean outArg, jboolean inArg);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_writePingLaterWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(Okhttp3InternalFramedFramedConnection *self, jboolean reply, jint payload1, jint payload2, Okhttp3InternalFramedPing *ping);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_writePingWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(Okhttp3InternalFramedFramedConnection *self, jboolean reply, jint payload1, jint payload2, Okhttp3InternalFramedPing *ping);

__attribute__((unused)) static Okhttp3InternalFramedPing *Okhttp3InternalFramedFramedConnection_removePingWithInt_(Okhttp3InternalFramedFramedConnection *self, jint id_);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_closeWithOkhttp3InternalFramedErrorCode_withOkhttp3InternalFramedErrorCode_(Okhttp3InternalFramedFramedConnection *self, Okhttp3InternalFramedErrorCode *connectionCode, Okhttp3InternalFramedErrorCode *streamCode);

__attribute__((unused)) static jboolean Okhttp3InternalFramedFramedConnection_pushedStreamWithInt_(Okhttp3InternalFramedFramedConnection *self, jint streamId);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_pushRequestLaterWithInt_withJavaUtilList_(Okhttp3InternalFramedFramedConnection *self, jint streamId, id<JavaUtilList> requestHeaders);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_pushHeadersLaterWithInt_withJavaUtilList_withBoolean_(Okhttp3InternalFramedFramedConnection *self, jint streamId, id<JavaUtilList> requestHeaders, jboolean inFinished);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_pushDataLaterWithInt_withOkioBufferedSource_withInt_withBoolean_(Okhttp3InternalFramedFramedConnection *self, jint streamId, id<OkioBufferedSource> source, jint byteCount, jboolean inFinished);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_pushResetLaterWithInt_withOkhttp3InternalFramedErrorCode_(Okhttp3InternalFramedFramedConnection *self, jint streamId, Okhttp3InternalFramedErrorCode *errorCode);

@interface Okhttp3InternalFramedFramedConnection_1 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jint val$streamId_;
  Okhttp3InternalFramedErrorCode *val$errorCode_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                           withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_1)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_1 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_1 *new_Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_1 *create_Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_2 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jint val$streamId_;
  jlong val$unacknowledgedBytesRead_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                                     withLong:(jlong)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_2)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_2 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, jlong capture$1, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_2 *new_Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, jlong capture$1, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_2 *create_Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, jlong capture$1, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_3 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jboolean val$reply_;
  jint val$payload1_;
  jint val$payload2_;
  Okhttp3InternalFramedPing *val$ping_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                  withBoolean:(jboolean)capture$0
                                                      withInt:(jint)capture$1
                                                      withInt:(jint)capture$2
                                withOkhttp3InternalFramedPing:(Okhttp3InternalFramedPing *)capture$3
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_3)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_3 *self, Okhttp3InternalFramedFramedConnection *outer$, jboolean capture$0, jint capture$1, jint capture$2, Okhttp3InternalFramedPing *capture$3, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_3 *new_Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jboolean capture$0, jint capture$1, jint capture$2, Okhttp3InternalFramedPing *capture$3, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_3 *create_Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jboolean capture$0, jint capture$1, jint capture$2, Okhttp3InternalFramedPing *capture$3, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_Builder () {
 @public
  JavaNetSocket *socket_;
  NSString *hostname_;
  id<OkioBufferedSource> source_;
  id<OkioBufferedSink> sink_;
  Okhttp3InternalFramedFramedConnection_Listener *listener_;
  Okhttp3Protocol *protocol_;
  id<Okhttp3InternalFramedPushObserver> pushObserver_;
  jboolean client_;
}

@end

J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, socket_, JavaNetSocket *)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, hostname_, NSString *)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, source_, id<OkioBufferedSource>)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, sink_, id<OkioBufferedSink>)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, listener_, Okhttp3InternalFramedFramedConnection_Listener *)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, protocol_, Okhttp3Protocol *)
J2OBJC_FIELD_SETTER(Okhttp3InternalFramedFramedConnection_Builder, pushObserver_, id<Okhttp3InternalFramedPushObserver>)

@interface Okhttp3InternalFramedFramedConnection_Reader () {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                         withOkhttp3InternalFramedFrameReader:(id<Okhttp3InternalFramedFrameReader>)frameReader;

- (void)applyAndAckSettingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)peerSettings;

@end

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(Okhttp3InternalFramedFramedConnection_Reader *self, Okhttp3InternalFramedFramedConnection *outer$, id<Okhttp3InternalFramedFrameReader> frameReader);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader *new_Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(Okhttp3InternalFramedFramedConnection *outer$, id<Okhttp3InternalFramedFrameReader> frameReader) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader *create_Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(Okhttp3InternalFramedFramedConnection *outer$, id<Okhttp3InternalFramedFrameReader> frameReader);

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_Reader_applyAndAckSettingsWithOkhttp3InternalFramedSettings_(Okhttp3InternalFramedFramedConnection_Reader *self, Okhttp3InternalFramedSettings *peerSettings);

@interface Okhttp3InternalFramedFramedConnection_Reader_1 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection_Reader *this$0_;
  Okhttp3InternalFramedFramedStream *val$newStream_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Reader:(Okhttp3InternalFramedFramedConnection_Reader *)outer$
                               withOkhttp3InternalFramedFramedStream:(Okhttp3InternalFramedFramedStream *)capture$0
                                                        withNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_Reader_1)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader_1 *self, Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedFramedStream *capture$0, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader_1 *new_Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedFramedStream *capture$0, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader_1 *create_Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedFramedStream *capture$0, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_Reader_2 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection_Reader *this$0_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Reader:(Okhttp3InternalFramedFramedConnection_Reader *)outer$
                                                        withNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_Reader_2)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader_2 *self, Okhttp3InternalFramedFramedConnection_Reader *outer$, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader_2 *new_Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader_2 *create_Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_Reader_3 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection_Reader *this$0_;
  Okhttp3InternalFramedSettings *val$peerSettings_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Reader:(Okhttp3InternalFramedFramedConnection_Reader *)outer$
                                   withOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)capture$0
                                                        withNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_Reader_3)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader_3 *self, Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedSettings *capture$0, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader_3 *new_Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedSettings *capture$0, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Reader_3 *create_Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedSettings *capture$0, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_4 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jint val$streamId_;
  id<JavaUtilList> val$requestHeaders_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                             withJavaUtilList:(id<JavaUtilList>)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_4)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_4 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_4 *new_Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_4 *create_Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_5 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jint val$streamId_;
  id<JavaUtilList> val$requestHeaders_;
  jboolean val$inFinished_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                             withJavaUtilList:(id<JavaUtilList>)capture$1
                                                  withBoolean:(jboolean)capture$2
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_5)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_5 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, jboolean capture$2, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_5 *new_Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, jboolean capture$2, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_5 *create_Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, jboolean capture$2, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_6 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jint val$streamId_;
  OkioBuffer *val$buffer_;
  jint val$byteCount_;
  jboolean val$inFinished_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                               withOkioBuffer:(OkioBuffer *)capture$1
                                                      withInt:(jint)capture$2
                                                  withBoolean:(jboolean)capture$3
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_6)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_6 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, OkioBuffer *capture$1, jint capture$2, jboolean capture$3, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_6 *new_Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, OkioBuffer *capture$1, jint capture$2, jboolean capture$3, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_6 *create_Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, OkioBuffer *capture$1, jint capture$2, jboolean capture$3, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_7 : Okhttp3InternalNamedRunnable {
 @public
  Okhttp3InternalFramedFramedConnection *this$0_;
  jint val$streamId_;
  Okhttp3InternalFramedErrorCode *val$errorCode_;
}

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                           withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_7)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_7 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_7 *new_Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_7 *create_Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args);

@interface Okhttp3InternalFramedFramedConnection_Listener_1 : Okhttp3InternalFramedFramedConnection_Listener

- (instancetype)init;

- (void)onStreamWithOkhttp3InternalFramedFramedStream:(Okhttp3InternalFramedFramedStream *)stream;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedFramedConnection_Listener_1)

__attribute__((unused)) static void Okhttp3InternalFramedFramedConnection_Listener_1_init(Okhttp3InternalFramedFramedConnection_Listener_1 *self);

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Listener_1 *new_Okhttp3InternalFramedFramedConnection_Listener_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedFramedConnection_Listener_1 *create_Okhttp3InternalFramedFramedConnection_Listener_1_init();

J2OBJC_INITIALIZED_DEFN(Okhttp3InternalFramedFramedConnection)

@implementation Okhttp3InternalFramedFramedConnection

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Builder:(Okhttp3InternalFramedFramedConnection_Builder *)builder {
  Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(self, builder);
  return self;
}

- (Okhttp3Protocol *)getProtocol {
  return protocol_;
}

- (jint)openStreamCount {
  @synchronized(self) {
    return [((id<JavaUtilMap>) nil_chk(streams_)) size];
  }
}

- (Okhttp3InternalFramedFramedStream *)getStreamWithInt:(jint)id_ {
  @synchronized(self) {
    return JreRetainedLocalValue([((id<JavaUtilMap>) nil_chk(streams_)) getWithId:JavaLangInteger_valueOfWithInt_(id_)]);
  }
}

- (Okhttp3InternalFramedFramedStream *)removeStreamWithInt:(jint)streamId {
  @synchronized(self) {
    Okhttp3InternalFramedFramedStream *stream = [((id<JavaUtilMap>) nil_chk(streams_)) removeWithId:JavaLangInteger_valueOfWithInt_(streamId)];
    [self java_notifyAll];
    return JreRetainedLocalValue(stream);
  }
}

- (jint)maxConcurrentStreams {
  @synchronized(self) {
    return [((Okhttp3InternalFramedSettings *) nil_chk(peerSettings_)) getMaxConcurrentStreamsWithInt:JavaLangInteger_MAX_VALUE];
  }
}

- (Okhttp3InternalFramedFramedStream *)pushStreamWithInt:(jint)associatedStreamId
                                        withJavaUtilList:(id<JavaUtilList>)requestHeaders
                                             withBoolean:(jboolean)outArg {
  if (client_) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Client cannot push requests.");
  if (protocol_ != JreLoadEnum(Okhttp3Protocol, HTTP_2)) @throw create_JavaLangIllegalStateException_initWithNSString_(@"protocol != HTTP_2");
  return Okhttp3InternalFramedFramedConnection_newStreamWithInt_withJavaUtilList_withBoolean_withBoolean_(self, associatedStreamId, requestHeaders, outArg, false);
}

- (Okhttp3InternalFramedFramedStream *)newStreamWithJavaUtilList:(id<JavaUtilList>)requestHeaders
                                                     withBoolean:(jboolean)outArg
                                                     withBoolean:(jboolean)inArg {
  return Okhttp3InternalFramedFramedConnection_newStreamWithInt_withJavaUtilList_withBoolean_withBoolean_(self, 0, requestHeaders, outArg, inArg);
}

- (Okhttp3InternalFramedFramedStream *)newStreamWithInt:(jint)associatedStreamId
                                       withJavaUtilList:(id<JavaUtilList>)requestHeaders
                                            withBoolean:(jboolean)outArg
                                            withBoolean:(jboolean)inArg {
  return Okhttp3InternalFramedFramedConnection_newStreamWithInt_withJavaUtilList_withBoolean_withBoolean_(self, associatedStreamId, requestHeaders, outArg, inArg);
}

- (void)writeSynReplyWithInt:(jint)streamId
                 withBoolean:(jboolean)outFinished
            withJavaUtilList:(id<JavaUtilList>)alternating {
  [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) synReplyWithBoolean:outFinished withInt:streamId withJavaUtilList:alternating];
}

- (void)writeDataWithInt:(jint)streamId
             withBoolean:(jboolean)outFinished
          withOkioBuffer:(OkioBuffer *)buffer
                withLong:(jlong)byteCount {
  if (byteCount == 0) {
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) dataWithBoolean:outFinished withInt:streamId withOkioBuffer:buffer withInt:0];
    return;
  }
  while (byteCount > 0) {
    jint toWrite;
    @synchronized(self) {
      @try {
        while (bytesLeftInWriteWindow_ <= 0) {
          if (![((id<JavaUtilMap>) nil_chk(streams_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(streamId)]) {
            @throw create_JavaIoIOException_initWithNSString_(@"stream closed");
          }
          [self java_wait];
        }
      }
      @catch (JavaLangInterruptedException *e) {
        @throw create_JavaIoInterruptedIOException_init();
      }
      toWrite = (jint) JavaLangMath_minWithLong_withLong_(byteCount, bytesLeftInWriteWindow_);
      toWrite = JavaLangMath_minWithInt_withInt_(toWrite, [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) maxDataLength]);
      bytesLeftInWriteWindow_ -= toWrite;
    }
    byteCount -= toWrite;
    [frameWriter_ dataWithBoolean:outFinished && byteCount == 0 withInt:streamId withOkioBuffer:buffer withInt:toWrite];
  }
}

- (void)addBytesToWriteWindowWithLong:(jlong)delta {
  bytesLeftInWriteWindow_ += delta;
  if (delta > 0) [self java_notifyAll];
}

- (void)writeSynResetLaterWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(Okhttp3InternalFramedFramedConnection_executor)) submitWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(self, streamId, errorCode, @"OkHttp %s stream %d", [IOSObjectArray arrayWithObjects:(id[]){ hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
}

- (void)writeSynResetWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)statusCode {
  [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) rstStreamWithInt:streamId withOkhttp3InternalFramedErrorCode:statusCode];
}

- (void)writeWindowUpdateLaterWithInt:(jint)streamId
                             withLong:(jlong)unacknowledgedBytesRead {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(Okhttp3InternalFramedFramedConnection_executor)) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(self, streamId, unacknowledgedBytesRead, @"OkHttp Window Update %s stream %d", [IOSObjectArray arrayWithObjects:(id[]){ hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
}

- (Okhttp3InternalFramedPing *)ping {
  Okhttp3InternalFramedPing *ping = create_Okhttp3InternalFramedPing_init();
  jint pingId;
  @synchronized(self) {
    if (shutdown_) {
      @throw create_JavaIoIOException_initWithNSString_(@"shutdown");
    }
    pingId = nextPingId_;
    nextPingId_ += 2;
    if (pings_ == nil) JreStrongAssignAndConsume(&pings_, new_JavaUtilHashMap_init());
    [pings_ putWithId:JavaLangInteger_valueOfWithInt_(pingId) withId:ping];
  }
  Okhttp3InternalFramedFramedConnection_writePingWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(self, false, pingId, (jint) 0x4f4b6f6b, ping);
  return ping;
}

- (void)writePingLaterWithBoolean:(jboolean)reply
                          withInt:(jint)payload1
                          withInt:(jint)payload2
    withOkhttp3InternalFramedPing:(Okhttp3InternalFramedPing *)ping {
  Okhttp3InternalFramedFramedConnection_writePingLaterWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(self, reply, payload1, payload2, ping);
}

- (void)writePingWithBoolean:(jboolean)reply
                     withInt:(jint)payload1
                     withInt:(jint)payload2
withOkhttp3InternalFramedPing:(Okhttp3InternalFramedPing *)ping {
  Okhttp3InternalFramedFramedConnection_writePingWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(self, reply, payload1, payload2, ping);
}

- (Okhttp3InternalFramedPing *)removePingWithInt:(jint)id_ {
  return Okhttp3InternalFramedFramedConnection_removePingWithInt_(self, id_);
}

- (void)flush {
  [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) flush];
}

- (void)shutdownWithOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)statusCode {
  @synchronized(frameWriter_) {
    jint lastGoodStreamId;
    @synchronized(self) {
      if (shutdown_) {
        return;
      }
      shutdown_ = true;
      lastGoodStreamId = self->lastGoodStreamId_;
    }
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) goAwayWithInt:lastGoodStreamId withOkhttp3InternalFramedErrorCode:statusCode withByteArray:JreLoadStatic(Okhttp3InternalUtil, EMPTY_BYTE_ARRAY)];
  }
}

- (void)close {
  Okhttp3InternalFramedFramedConnection_closeWithOkhttp3InternalFramedErrorCode_withOkhttp3InternalFramedErrorCode_(self, JreLoadEnum(Okhttp3InternalFramedErrorCode, NO_ERROR), JreLoadEnum(Okhttp3InternalFramedErrorCode, CANCEL));
}

- (void)closeWithOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)connectionCode
             withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)streamCode {
  Okhttp3InternalFramedFramedConnection_closeWithOkhttp3InternalFramedErrorCode_withOkhttp3InternalFramedErrorCode_(self, connectionCode, streamCode);
}

- (void)start {
  [self startWithBoolean:true];
}

- (void)startWithBoolean:(jboolean)sendConnectionPreface {
  if (sendConnectionPreface) {
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) connectionPreface];
    [frameWriter_ settingsWithOkhttp3InternalFramedSettings:okHttpSettings_];
    jint windowSize = [((Okhttp3InternalFramedSettings *) nil_chk(okHttpSettings_)) getInitialWindowSizeWithInt:Okhttp3InternalFramedSettings_DEFAULT_INITIAL_WINDOW_SIZE];
    if (windowSize != Okhttp3InternalFramedSettings_DEFAULT_INITIAL_WINDOW_SIZE) {
      [frameWriter_ windowUpdateWithInt:0 withLong:windowSize - Okhttp3InternalFramedSettings_DEFAULT_INITIAL_WINDOW_SIZE];
    }
  }
  [create_JavaLangThread_initWithJavaLangRunnable_(readerRunnable_) start];
}

- (void)setSettingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)settings {
  @synchronized(frameWriter_) {
    @synchronized(self) {
      if (shutdown_) {
        @throw create_JavaIoIOException_initWithNSString_(@"shutdown");
      }
      [((Okhttp3InternalFramedSettings *) nil_chk(okHttpSettings_)) mergeWithOkhttp3InternalFramedSettings:settings];
      [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(frameWriter_)) settingsWithOkhttp3InternalFramedSettings:settings];
    }
  }
}

- (jboolean)isShutdown {
  @synchronized(self) {
    return shutdown_;
  }
}

- (jboolean)pushedStreamWithInt:(jint)streamId {
  return Okhttp3InternalFramedFramedConnection_pushedStreamWithInt_(self, streamId);
}

- (void)pushRequestLaterWithInt:(jint)streamId
               withJavaUtilList:(id<JavaUtilList>)requestHeaders {
  Okhttp3InternalFramedFramedConnection_pushRequestLaterWithInt_withJavaUtilList_(self, streamId, requestHeaders);
}

- (void)pushHeadersLaterWithInt:(jint)streamId
               withJavaUtilList:(id<JavaUtilList>)requestHeaders
                    withBoolean:(jboolean)inFinished {
  Okhttp3InternalFramedFramedConnection_pushHeadersLaterWithInt_withJavaUtilList_withBoolean_(self, streamId, requestHeaders, inFinished);
}

- (void)pushDataLaterWithInt:(jint)streamId
      withOkioBufferedSource:(id<OkioBufferedSource>)source
                     withInt:(jint)byteCount
                 withBoolean:(jboolean)inFinished {
  Okhttp3InternalFramedFramedConnection_pushDataLaterWithInt_withOkioBufferedSource_withInt_withBoolean_(self, streamId, source, byteCount, inFinished);
}

- (void)pushResetLaterWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode {
  Okhttp3InternalFramedFramedConnection_pushResetLaterWithInt_withOkhttp3InternalFramedErrorCode_(self, streamId, errorCode);
}

- (void)dealloc {
  RELEASE_(protocol_);
  RELEASE_(listener_);
  RELEASE_(streams_);
  RELEASE_(hostname_);
  RELEASE_(pushExecutor_);
  RELEASE_(pings_);
  RELEASE_(pushObserver_);
  RELEASE_(okHttpSettings_);
  RELEASE_(peerSettings_);
  RELEASE_(variant_);
  RELEASE_(socket_);
  RELEASE_(frameWriter_);
  RELEASE_(readerRunnable_);
  RELEASE_(currentPushRequests_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOkhttp3Protocol;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedStream;", 0x20, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedStream;", 0x20, 3, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedStream;", 0x1, 4, 5, 6, 7, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedStream;", 0x1, 8, 9, 6, 10, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedStream;", 0x2, 8, 11, 6, 12, -1, -1 },
    { NULL, "V", 0x0, 13, 14, 6, 15, -1, -1 },
    { NULL, "V", 0x1, 16, 17, 6, -1, -1, -1 },
    { NULL, "V", 0x0, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 22, 21, 6, -1, -1, -1 },
    { NULL, "V", 0x0, 23, 24, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedPing;", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 25, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 27, 26, 6, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedPing;", 0x22, 28, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 30, 6, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 31, 32, 6, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x0, 33, 34, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 36, 6, -1, -1, -1 },
    { NULL, "Z", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 37, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 38, 39, -1, 40, -1, -1 },
    { NULL, "V", 0x2, 41, 5, -1, 42, -1, -1 },
    { NULL, "V", 0x2, 43, 44, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 45, 21, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection_Builder:);
  methods[1].selector = @selector(getProtocol);
  methods[2].selector = @selector(openStreamCount);
  methods[3].selector = @selector(getStreamWithInt:);
  methods[4].selector = @selector(removeStreamWithInt:);
  methods[5].selector = @selector(maxConcurrentStreams);
  methods[6].selector = @selector(pushStreamWithInt:withJavaUtilList:withBoolean:);
  methods[7].selector = @selector(newStreamWithJavaUtilList:withBoolean:withBoolean:);
  methods[8].selector = @selector(newStreamWithInt:withJavaUtilList:withBoolean:withBoolean:);
  methods[9].selector = @selector(writeSynReplyWithInt:withBoolean:withJavaUtilList:);
  methods[10].selector = @selector(writeDataWithInt:withBoolean:withOkioBuffer:withLong:);
  methods[11].selector = @selector(addBytesToWriteWindowWithLong:);
  methods[12].selector = @selector(writeSynResetLaterWithInt:withOkhttp3InternalFramedErrorCode:);
  methods[13].selector = @selector(writeSynResetWithInt:withOkhttp3InternalFramedErrorCode:);
  methods[14].selector = @selector(writeWindowUpdateLaterWithInt:withLong:);
  methods[15].selector = @selector(ping);
  methods[16].selector = @selector(writePingLaterWithBoolean:withInt:withInt:withOkhttp3InternalFramedPing:);
  methods[17].selector = @selector(writePingWithBoolean:withInt:withInt:withOkhttp3InternalFramedPing:);
  methods[18].selector = @selector(removePingWithInt:);
  methods[19].selector = @selector(flush);
  methods[20].selector = @selector(shutdownWithOkhttp3InternalFramedErrorCode:);
  methods[21].selector = @selector(close);
  methods[22].selector = @selector(closeWithOkhttp3InternalFramedErrorCode:withOkhttp3InternalFramedErrorCode:);
  methods[23].selector = @selector(start);
  methods[24].selector = @selector(startWithBoolean:);
  methods[25].selector = @selector(setSettingsWithOkhttp3InternalFramedSettings:);
  methods[26].selector = @selector(isShutdown);
  methods[27].selector = @selector(pushedStreamWithInt:);
  methods[28].selector = @selector(pushRequestLaterWithInt:withJavaUtilList:);
  methods[29].selector = @selector(pushHeadersLaterWithInt:withJavaUtilList:withBoolean:);
  methods[30].selector = @selector(pushDataLaterWithInt:withOkioBufferedSource:withInt:withBoolean:);
  methods[31].selector = @selector(pushResetLaterWithInt:withOkhttp3InternalFramedErrorCode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "executor", "LJavaUtilConcurrentExecutorService;", .constantValue.asLong = 0, 0x1a, -1, 46, -1, -1 },
    { "protocol_", "LOkhttp3Protocol;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "client_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "listener_", "LOkhttp3InternalFramedFramedConnection_Listener;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "streams_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 47, -1 },
    { "hostname_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lastGoodStreamId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextStreamId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "shutdown_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pushExecutor_", "LJavaUtilConcurrentExecutorService;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pings_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 48, -1 },
    { "pushObserver_", "LOkhttp3InternalFramedPushObserver;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nextPingId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "unacknowledgedBytesRead_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bytesLeftInWriteWindow_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "okHttpSettings_", "LOkhttp3InternalFramedSettings;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "OKHTTP_CLIENT_WINDOW_SIZE", "I", .constantValue.asInt = Okhttp3InternalFramedFramedConnection_OKHTTP_CLIENT_WINDOW_SIZE, 0x1a, -1, -1, -1, -1 },
    { "peerSettings_", "LOkhttp3InternalFramedSettings;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "receivedInitialPeerSettings_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "variant_", "LOkhttp3InternalFramedVariant;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "socket_", "LJavaNetSocket;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "frameWriter_", "LOkhttp3InternalFramedFrameWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "readerRunnable_", "LOkhttp3InternalFramedFramedConnection_Reader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "currentPushRequests_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 49, -1 },
  };
  static const void *ptrTable[] = { "LOkhttp3InternalFramedFramedConnection_Builder;", "getStream", "I", "removeStream", "pushStream", "ILJavaUtilList;Z", "LJavaIoIOException;", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;Z)Lokhttp3/internal/framed/FramedStream;", "newStream", "LJavaUtilList;ZZ", "(Ljava/util/List<Lokhttp3/internal/framed/Header;>;ZZ)Lokhttp3/internal/framed/FramedStream;", "ILJavaUtilList;ZZ", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;ZZ)Lokhttp3/internal/framed/FramedStream;", "writeSynReply", "IZLJavaUtilList;", "(IZLjava/util/List<Lokhttp3/internal/framed/Header;>;)V", "writeData", "IZLOkioBuffer;J", "addBytesToWriteWindow", "J", "writeSynResetLater", "ILOkhttp3InternalFramedErrorCode;", "writeSynReset", "writeWindowUpdateLater", "IJ", "writePingLater", "ZIILOkhttp3InternalFramedPing;", "writePing", "removePing", "shutdown", "LOkhttp3InternalFramedErrorCode;", "close", "LOkhttp3InternalFramedErrorCode;LOkhttp3InternalFramedErrorCode;", "start", "Z", "setSettings", "LOkhttp3InternalFramedSettings;", "pushedStream", "pushRequestLater", "ILJavaUtilList;", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;)V", "pushHeadersLater", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;Z)V", "pushDataLater", "ILOkioBufferedSource;IZ", "pushResetLater", &Okhttp3InternalFramedFramedConnection_executor, "Ljava/util/Map<Ljava/lang/Integer;Lokhttp3/internal/framed/FramedStream;>;", "Ljava/util/Map<Ljava/lang/Integer;Lokhttp3/internal/framed/Ping;>;", "Ljava/util/Set<Ljava/lang/Integer;>;", "LOkhttp3InternalFramedFramedConnection_Builder;LOkhttp3InternalFramedFramedConnection_Reader;LOkhttp3InternalFramedFramedConnection_Listener;" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection = { "FramedConnection", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x11, 32, 24, -1, 50, -1, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection;
}

+ (void)initialize {
  if (self == [Okhttp3InternalFramedFramedConnection class]) {
    JreStrongAssignAndConsume(&Okhttp3InternalFramedFramedConnection_executor, new_JavaUtilConcurrentThreadPoolExecutor_initWithInt_withInt_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentBlockingQueue_withJavaUtilConcurrentThreadFactory_(0, JavaLangInteger_MAX_VALUE, 60, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), create_JavaUtilConcurrentSynchronousQueue_init(), Okhttp3InternalUtil_threadFactoryWithNSString_withBoolean_(@"OkHttp FramedConnection", true)));
    J2OBJC_SET_INITIALIZED(Okhttp3InternalFramedFramedConnection)
  }
}

@end

void Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(Okhttp3InternalFramedFramedConnection *self, Okhttp3InternalFramedFramedConnection_Builder *builder) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->streams_, new_JavaUtilHashMap_init());
  self->unacknowledgedBytesRead_ = 0;
  JreStrongAssignAndConsume(&self->okHttpSettings_, new_Okhttp3InternalFramedSettings_init());
  JreStrongAssignAndConsume(&self->peerSettings_, new_Okhttp3InternalFramedSettings_init());
  self->receivedInitialPeerSettings_ = false;
  JreStrongAssignAndConsume(&self->currentPushRequests_, new_JavaUtilLinkedHashSet_init());
  JreStrongAssign(&self->protocol_, ((Okhttp3InternalFramedFramedConnection_Builder *) nil_chk(builder))->protocol_);
  JreStrongAssign(&self->pushObserver_, builder->pushObserver_);
  self->client_ = builder->client_;
  JreStrongAssign(&self->listener_, builder->listener_);
  self->nextStreamId_ = builder->client_ ? 1 : 2;
  if (builder->client_ && self->protocol_ == JreLoadEnum(Okhttp3Protocol, HTTP_2)) {
    self->nextStreamId_ += 2;
  }
  self->nextPingId_ = builder->client_ ? 1 : 2;
  if (builder->client_) {
    [((Okhttp3InternalFramedSettings *) nil_chk(self->okHttpSettings_)) setWithInt:Okhttp3InternalFramedSettings_INITIAL_WINDOW_SIZE withInt:0 withInt:Okhttp3InternalFramedFramedConnection_OKHTTP_CLIENT_WINDOW_SIZE];
  }
  JreStrongAssign(&self->hostname_, builder->hostname_);
  if (self->protocol_ == JreLoadEnum(Okhttp3Protocol, HTTP_2)) {
    JreStrongAssignAndConsume(&self->variant_, new_Okhttp3InternalFramedHttp2_init());
    JreStrongAssignAndConsume(&self->pushExecutor_, new_JavaUtilConcurrentThreadPoolExecutor_initWithInt_withInt_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentBlockingQueue_withJavaUtilConcurrentThreadFactory_(0, 1, 60, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), create_JavaUtilConcurrentLinkedBlockingQueue_init(), Okhttp3InternalUtil_threadFactoryWithNSString_withBoolean_(Okhttp3InternalUtil_formatWithNSString_withNSObjectArray_(@"OkHttp %s Push Observer", [IOSObjectArray arrayWithObjects:(id[]){ self->hostname_ } count:1 type:NSObject_class_()]), true)));
    [self->peerSettings_ setWithInt:Okhttp3InternalFramedSettings_INITIAL_WINDOW_SIZE withInt:0 withInt:65535];
    [self->peerSettings_ setWithInt:Okhttp3InternalFramedSettings_MAX_FRAME_SIZE withInt:0 withInt:Okhttp3InternalFramedHttp2_INITIAL_MAX_FRAME_SIZE];
  }
  else if (self->protocol_ == JreLoadEnum(Okhttp3Protocol, SPDY_3)) {
    JreStrongAssignAndConsume(&self->variant_, new_Okhttp3InternalFramedSpdy3_init());
    JreStrongAssign(&self->pushExecutor_, nil);
  }
  else {
    @throw create_JavaLangAssertionError_initWithId_(self->protocol_);
  }
  self->bytesLeftInWriteWindow_ = [self->peerSettings_ getInitialWindowSizeWithInt:Okhttp3InternalFramedSettings_DEFAULT_INITIAL_WINDOW_SIZE];
  JreStrongAssign(&self->socket_, builder->socket_);
  JreStrongAssign(&self->frameWriter_, [self->variant_ newWriterWithOkioBufferedSink:builder->sink_ withBoolean:self->client_]);
  JreStrongAssignAndConsume(&self->readerRunnable_, new_Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(self, [self->variant_ newReaderWithOkioBufferedSource:builder->source_ withBoolean:self->client_]));
}

Okhttp3InternalFramedFramedConnection *new_Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(Okhttp3InternalFramedFramedConnection_Builder *builder) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection, initWithOkhttp3InternalFramedFramedConnection_Builder_, builder)
}

Okhttp3InternalFramedFramedConnection *create_Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(Okhttp3InternalFramedFramedConnection_Builder *builder) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection, initWithOkhttp3InternalFramedFramedConnection_Builder_, builder)
}

Okhttp3InternalFramedFramedStream *Okhttp3InternalFramedFramedConnection_newStreamWithInt_withJavaUtilList_withBoolean_withBoolean_(Okhttp3InternalFramedFramedConnection *self, jint associatedStreamId, id<JavaUtilList> requestHeaders, jboolean outArg, jboolean inArg) {
  jboolean outFinished = !outArg;
  jboolean inFinished = !inArg;
  jboolean flushHeaders;
  Okhttp3InternalFramedFramedStream *stream;
  jint streamId;
  @synchronized(self->frameWriter_) {
    @synchronized(self) {
      if (self->shutdown_) {
        @throw create_JavaIoIOException_initWithNSString_(@"shutdown");
      }
      streamId = self->nextStreamId_;
      self->nextStreamId_ += 2;
      stream = JreRetainedLocalValue(create_Okhttp3InternalFramedFramedStream_initWithInt_withOkhttp3InternalFramedFramedConnection_withBoolean_withBoolean_withJavaUtilList_(streamId, self, outFinished, inFinished, requestHeaders));
      flushHeaders = (!outArg || self->bytesLeftInWriteWindow_ == 0LL || stream->bytesLeftInWriteWindow_ == 0LL);
      if ([stream isOpen]) {
        [((id<JavaUtilMap>) nil_chk(self->streams_)) putWithId:JavaLangInteger_valueOfWithInt_(streamId) withId:stream];
      }
    }
    if (associatedStreamId == 0) {
      [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(self->frameWriter_)) synStreamWithBoolean:outFinished withBoolean:inFinished withInt:streamId withInt:associatedStreamId withJavaUtilList:requestHeaders];
    }
    else if (self->client_) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"client streams shouldn't have associated stream IDs");
    }
    else {
      [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(self->frameWriter_)) pushPromiseWithInt:associatedStreamId withInt:streamId withJavaUtilList:requestHeaders];
    }
  }
  if (flushHeaders) {
    [self->frameWriter_ flush];
  }
  return stream;
}

void Okhttp3InternalFramedFramedConnection_writePingLaterWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(Okhttp3InternalFramedFramedConnection *self, jboolean reply, jint payload1, jint payload2, Okhttp3InternalFramedPing *ping) {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(Okhttp3InternalFramedFramedConnection_executor)) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(self, reply, payload1, payload2, ping, @"OkHttp %s ping %08x%08x", [IOSObjectArray arrayWithObjects:(id[]){ self->hostname_, JavaLangInteger_valueOfWithInt_(payload1), JavaLangInteger_valueOfWithInt_(payload2) } count:3 type:NSObject_class_()])];
}

void Okhttp3InternalFramedFramedConnection_writePingWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(Okhttp3InternalFramedFramedConnection *self, jboolean reply, jint payload1, jint payload2, Okhttp3InternalFramedPing *ping) {
  @synchronized(self->frameWriter_) {
    if (ping != nil) [ping send];
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(self->frameWriter_)) pingWithBoolean:reply withInt:payload1 withInt:payload2];
  }
}

Okhttp3InternalFramedPing *Okhttp3InternalFramedFramedConnection_removePingWithInt_(Okhttp3InternalFramedFramedConnection *self, jint id_) {
  @synchronized(self) {
    return JreRetainedLocalValue(self->pings_ != nil ? [self->pings_ removeWithId:JavaLangInteger_valueOfWithInt_(id_)] : nil);
  }
}

void Okhttp3InternalFramedFramedConnection_closeWithOkhttp3InternalFramedErrorCode_withOkhttp3InternalFramedErrorCode_(Okhttp3InternalFramedFramedConnection *self, Okhttp3InternalFramedErrorCode *connectionCode, Okhttp3InternalFramedErrorCode *streamCode) {
  JreAssert((!JavaLangThread_holdsLockWithId_(self)), @"okhttp3/internal/framed/FramedConnection.java:428 condition failed: assert (!Thread.holdsLock(this));");
  JavaIoIOException *thrown = nil;
  @try {
    [self shutdownWithOkhttp3InternalFramedErrorCode:connectionCode];
  }
  @catch (JavaIoIOException *e) {
    thrown = e;
  }
  IOSObjectArray *streamsToClose = nil;
  IOSObjectArray *pingsToCancel = nil;
  @synchronized(self) {
    if (![((id<JavaUtilMap>) nil_chk(self->streams_)) isEmpty]) {
      streamsToClose = JreRetainedLocalValue([((id<JavaUtilCollection>) nil_chk([self->streams_ values])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[self->streams_ size] type:Okhttp3InternalFramedFramedStream_class_()]]);
      [self->streams_ clear];
    }
    if (self->pings_ != nil) {
      pingsToCancel = JreRetainedLocalValue([((id<JavaUtilCollection>) nil_chk([self->pings_ values])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilMap>) nil_chk(self->pings_)) size] type:Okhttp3InternalFramedPing_class_()]]);
      JreStrongAssign(&self->pings_, nil);
    }
  }
  if (streamsToClose != nil) {
    {
      IOSObjectArray *a__ = streamsToClose;
      Okhttp3InternalFramedFramedStream * const *b__ = a__->buffer_;
      Okhttp3InternalFramedFramedStream * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        Okhttp3InternalFramedFramedStream *stream = *b__++;
        @try {
          [((Okhttp3InternalFramedFramedStream *) nil_chk(stream)) closeWithOkhttp3InternalFramedErrorCode:streamCode];
        }
        @catch (JavaIoIOException *e) {
          if (thrown != nil) thrown = e;
        }
      }
    }
  }
  if (pingsToCancel != nil) {
    {
      IOSObjectArray *a__ = pingsToCancel;
      Okhttp3InternalFramedPing * const *b__ = a__->buffer_;
      Okhttp3InternalFramedPing * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        Okhttp3InternalFramedPing *ping = *b__++;
        [((Okhttp3InternalFramedPing *) nil_chk(ping)) cancel];
      }
    }
  }
  @try {
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(self->frameWriter_)) close];
  }
  @catch (JavaIoIOException *e) {
    if (thrown == nil) thrown = e;
  }
  @try {
    [((JavaNetSocket *) nil_chk(self->socket_)) close];
  }
  @catch (JavaIoIOException *e) {
    thrown = e;
  }
  if (thrown != nil) @throw thrown;
}

jboolean Okhttp3InternalFramedFramedConnection_pushedStreamWithInt_(Okhttp3InternalFramedFramedConnection *self, jint streamId) {
  return self->protocol_ == JreLoadEnum(Okhttp3Protocol, HTTP_2) && streamId != 0 && (streamId & 1) == 0;
}

void Okhttp3InternalFramedFramedConnection_pushRequestLaterWithInt_withJavaUtilList_(Okhttp3InternalFramedFramedConnection *self, jint streamId, id<JavaUtilList> requestHeaders) {
  @synchronized(self) {
    if ([((id<JavaUtilSet>) nil_chk(self->currentPushRequests_)) containsWithId:JavaLangInteger_valueOfWithInt_(streamId)]) {
      [self writeSynResetLaterWithInt:streamId withOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, PROTOCOL_ERROR)];
      return;
    }
    [self->currentPushRequests_ addWithId:JavaLangInteger_valueOfWithInt_(streamId)];
  }
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(self->pushExecutor_)) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(self, streamId, requestHeaders, @"OkHttp %s Push Request[%s]", [IOSObjectArray arrayWithObjects:(id[]){ self->hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
}

void Okhttp3InternalFramedFramedConnection_pushHeadersLaterWithInt_withJavaUtilList_withBoolean_(Okhttp3InternalFramedFramedConnection *self, jint streamId, id<JavaUtilList> requestHeaders, jboolean inFinished) {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(self->pushExecutor_)) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(self, streamId, requestHeaders, inFinished, @"OkHttp %s Push Headers[%s]", [IOSObjectArray arrayWithObjects:(id[]){ self->hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
}

void Okhttp3InternalFramedFramedConnection_pushDataLaterWithInt_withOkioBufferedSource_withInt_withBoolean_(Okhttp3InternalFramedFramedConnection *self, jint streamId, id<OkioBufferedSource> source, jint byteCount, jboolean inFinished) {
  OkioBuffer *buffer = create_OkioBuffer_init();
  [((id<OkioBufferedSource>) nil_chk(source)) requireWithLong:byteCount];
  [source readWithOkioBuffer:buffer withLong:byteCount];
  if ([buffer size] != byteCount) @throw create_JavaIoIOException_initWithNSString_(JreStrcat("J$I", [buffer size], @" != ", byteCount));
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(self->pushExecutor_)) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(self, streamId, buffer, byteCount, inFinished, @"OkHttp %s Push Data[%s]", [IOSObjectArray arrayWithObjects:(id[]){ self->hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
}

void Okhttp3InternalFramedFramedConnection_pushResetLaterWithInt_withOkhttp3InternalFramedErrorCode_(Okhttp3InternalFramedFramedConnection *self, jint streamId, Okhttp3InternalFramedErrorCode *errorCode) {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(self->pushExecutor_)) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(self, streamId, errorCode, @"OkHttp %s Push Reset[%s]", [IOSObjectArray arrayWithObjects:(id[]){ self->hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3InternalFramedFramedConnection)

@implementation Okhttp3InternalFramedFramedConnection_1

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                           withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, format, args);
  return self;
}

- (void)execute {
  @try {
    [this$0_ writeSynResetWithInt:val$streamId_ withOkhttp3InternalFramedErrorCode:val$errorCode_];
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$errorCode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withInt:withOkhttp3InternalFramedErrorCode:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$streamId_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$errorCode_", "LOkhttp3InternalFramedErrorCode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection;", "writeSynResetLaterWithInt:withOkhttp3InternalFramedErrorCode:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_1 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_1;
}

@end

void Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_1 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$streamId_ = capture$0;
  JreStrongAssign(&self->val$errorCode_, capture$1);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_1 *new_Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_1, initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

Okhttp3InternalFramedFramedConnection_1 *create_Okhttp3InternalFramedFramedConnection_1_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_1, initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_2

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                                     withLong:(jlong)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, format, args);
  return self;
}

- (void)execute {
  @try {
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(this$0_->frameWriter_)) windowUpdateWithInt:val$streamId_ withLong:val$unacknowledgedBytesRead_];
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withInt:withLong:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$streamId_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$unacknowledgedBytesRead_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection;", "writeWindowUpdateLaterWithInt:withLong:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_2 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_2;
}

@end

void Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_2 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, jlong capture$1, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$streamId_ = capture$0;
  self->val$unacknowledgedBytesRead_ = capture$1;
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_2 *new_Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, jlong capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_2, initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

Okhttp3InternalFramedFramedConnection_2 *create_Okhttp3InternalFramedFramedConnection_2_initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, jlong capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_2, initWithOkhttp3InternalFramedFramedConnection_withInt_withLong_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_3

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                  withBoolean:(jboolean)capture$0
                                                      withInt:(jint)capture$1
                                                      withInt:(jint)capture$2
                                withOkhttp3InternalFramedPing:(Okhttp3InternalFramedPing *)capture$3
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, capture$2, capture$3, format, args);
  return self;
}

- (void)execute {
  @try {
    Okhttp3InternalFramedFramedConnection_writePingWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(this$0_, val$reply_, val$payload1_, val$payload2_, val$ping_);
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$ping_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withBoolean:withInt:withInt:withOkhttp3InternalFramedPing:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$reply_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$payload1_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$payload2_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$ping_", "LOkhttp3InternalFramedPing;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection;", "writePingLaterWithBoolean:withInt:withInt:withOkhttp3InternalFramedPing:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_3 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 5, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_3;
}

@end

void Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_3 *self, Okhttp3InternalFramedFramedConnection *outer$, jboolean capture$0, jint capture$1, jint capture$2, Okhttp3InternalFramedPing *capture$3, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$reply_ = capture$0;
  self->val$payload1_ = capture$1;
  self->val$payload2_ = capture$2;
  JreStrongAssign(&self->val$ping_, capture$3);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_3 *new_Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jboolean capture$0, jint capture$1, jint capture$2, Okhttp3InternalFramedPing *capture$3, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_3, initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, capture$2, capture$3, format, args)
}

Okhttp3InternalFramedFramedConnection_3 *create_Okhttp3InternalFramedFramedConnection_3_initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jboolean capture$0, jint capture$1, jint capture$2, Okhttp3InternalFramedPing *capture$3, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_3, initWithOkhttp3InternalFramedFramedConnection_withBoolean_withInt_withInt_withOkhttp3InternalFramedPing_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, capture$2, capture$3, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_Builder

- (instancetype)initWithBoolean:(jboolean)client {
  Okhttp3InternalFramedFramedConnection_Builder_initWithBoolean_(self, client);
  return self;
}

- (Okhttp3InternalFramedFramedConnection_Builder *)socketWithJavaNetSocket:(JavaNetSocket *)socket {
  return [self socketWithJavaNetSocket:socket withNSString:[((JavaNetInetSocketAddress *) nil_chk(((JavaNetInetSocketAddress *) cast_chk([((JavaNetSocket *) nil_chk(socket)) getRemoteSocketAddress], [JavaNetInetSocketAddress class])))) getHostName] withOkioBufferedSource:OkioOkio_bufferWithOkioSource_(OkioOkio_sourceWithJavaNetSocket_(socket)) withOkioBufferedSink:OkioOkio_bufferWithOkioSink_(OkioOkio_sinkWithJavaNetSocket_(socket))];
}

- (Okhttp3InternalFramedFramedConnection_Builder *)socketWithJavaNetSocket:(JavaNetSocket *)socket
                                                              withNSString:(NSString *)hostname
                                                    withOkioBufferedSource:(id<OkioBufferedSource>)source
                                                      withOkioBufferedSink:(id<OkioBufferedSink>)sink {
  JreStrongAssign(&self->socket_, socket);
  JreStrongAssign(&self->hostname_, hostname);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->sink_, sink);
  return self;
}

- (Okhttp3InternalFramedFramedConnection_Builder *)listenerWithOkhttp3InternalFramedFramedConnection_Listener:(Okhttp3InternalFramedFramedConnection_Listener *)listener {
  JreStrongAssign(&self->listener_, listener);
  return self;
}

- (Okhttp3InternalFramedFramedConnection_Builder *)protocolWithOkhttp3Protocol:(Okhttp3Protocol *)protocol {
  JreStrongAssign(&self->protocol_, protocol);
  return self;
}

- (Okhttp3InternalFramedFramedConnection_Builder *)pushObserverWithOkhttp3InternalFramedPushObserver:(id<Okhttp3InternalFramedPushObserver>)pushObserver {
  JreStrongAssign(&self->pushObserver_, pushObserver);
  return self;
}

- (Okhttp3InternalFramedFramedConnection *)build {
  return create_Okhttp3InternalFramedFramedConnection_initWithOkhttp3InternalFramedFramedConnection_Builder_(self);
}

- (void)dealloc {
  RELEASE_(socket_);
  RELEASE_(hostname_);
  RELEASE_(source_);
  RELEASE_(sink_);
  RELEASE_(listener_);
  RELEASE_(protocol_);
  RELEASE_(pushObserver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedConnection_Builder;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedConnection_Builder;", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedConnection_Builder;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedConnection_Builder;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedConnection_Builder;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOkhttp3InternalFramedFramedConnection;", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(socketWithJavaNetSocket:);
  methods[2].selector = @selector(socketWithJavaNetSocket:withNSString:withOkioBufferedSource:withOkioBufferedSink:);
  methods[3].selector = @selector(listenerWithOkhttp3InternalFramedFramedConnection_Listener:);
  methods[4].selector = @selector(protocolWithOkhttp3Protocol:);
  methods[5].selector = @selector(pushObserverWithOkhttp3InternalFramedPushObserver:);
  methods[6].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "socket_", "LJavaNetSocket;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hostname_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "source_", "LOkioBufferedSource;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sink_", "LOkioBufferedSink;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "listener_", "LOkhttp3InternalFramedFramedConnection_Listener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "protocol_", "LOkhttp3Protocol;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pushObserver_", "LOkhttp3InternalFramedPushObserver;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "client_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "socket", "LJavaNetSocket;", "LJavaIoIOException;", "LJavaNetSocket;LNSString;LOkioBufferedSource;LOkioBufferedSink;", "listener", "LOkhttp3InternalFramedFramedConnection_Listener;", "protocol", "LOkhttp3Protocol;", "pushObserver", "LOkhttp3InternalFramedPushObserver;", "LOkhttp3InternalFramedFramedConnection;" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Builder = { "Builder", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x9, 7, 8, 11, -1, -1, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Builder;
}

@end

void Okhttp3InternalFramedFramedConnection_Builder_initWithBoolean_(Okhttp3InternalFramedFramedConnection_Builder *self, jboolean client) {
  NSObject_init(self);
  JreStrongAssign(&self->listener_, JreLoadStatic(Okhttp3InternalFramedFramedConnection_Listener, REFUSE_INCOMING_STREAMS));
  JreStrongAssign(&self->protocol_, JreLoadEnum(Okhttp3Protocol, SPDY_3));
  JreStrongAssign(&self->pushObserver_, JreLoadStatic(Okhttp3InternalFramedPushObserver, CANCEL));
  self->client_ = client;
}

Okhttp3InternalFramedFramedConnection_Builder *new_Okhttp3InternalFramedFramedConnection_Builder_initWithBoolean_(jboolean client) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_Builder, initWithBoolean_, client)
}

Okhttp3InternalFramedFramedConnection_Builder *create_Okhttp3InternalFramedFramedConnection_Builder_initWithBoolean_(jboolean client) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_Builder, initWithBoolean_, client)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3InternalFramedFramedConnection_Builder)

@implementation Okhttp3InternalFramedFramedConnection_Reader

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                         withOkhttp3InternalFramedFrameReader:(id<Okhttp3InternalFramedFrameReader>)frameReader {
  Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(self, outer$, frameReader);
  return self;
}

- (void)execute {
  Okhttp3InternalFramedErrorCode *connectionErrorCode = JreLoadEnum(Okhttp3InternalFramedErrorCode, INTERNAL_ERROR);
  Okhttp3InternalFramedErrorCode *streamErrorCode = JreLoadEnum(Okhttp3InternalFramedErrorCode, INTERNAL_ERROR);
  @try {
    if (!this$0_->client_) {
      [((id<Okhttp3InternalFramedFrameReader>) nil_chk(frameReader_)) readConnectionPreface];
    }
    while ([((id<Okhttp3InternalFramedFrameReader>) nil_chk(frameReader_)) nextFrameWithOkhttp3InternalFramedFrameReader_Handler:self]) {
    }
    connectionErrorCode = JreLoadEnum(Okhttp3InternalFramedErrorCode, NO_ERROR);
    streamErrorCode = JreLoadEnum(Okhttp3InternalFramedErrorCode, CANCEL);
  }
  @catch (JavaIoIOException *e) {
    connectionErrorCode = JreLoadEnum(Okhttp3InternalFramedErrorCode, PROTOCOL_ERROR);
    streamErrorCode = JreLoadEnum(Okhttp3InternalFramedErrorCode, PROTOCOL_ERROR);
  }
  @finally {
    @try {
      Okhttp3InternalFramedFramedConnection_closeWithOkhttp3InternalFramedErrorCode_withOkhttp3InternalFramedErrorCode_(this$0_, connectionErrorCode, streamErrorCode);
    }
    @catch (JavaIoIOException *ignored) {
    }
    Okhttp3InternalUtil_closeQuietlyWithJavaIoCloseable_(frameReader_);
  }
}

- (void)dataWithBoolean:(jboolean)inFinished
                withInt:(jint)streamId
 withOkioBufferedSource:(id<OkioBufferedSource>)source
                withInt:(jint)length {
  if (Okhttp3InternalFramedFramedConnection_pushedStreamWithInt_(this$0_, streamId)) {
    Okhttp3InternalFramedFramedConnection_pushDataLaterWithInt_withOkioBufferedSource_withInt_withBoolean_(this$0_, streamId, source, length, inFinished);
    return;
  }
  Okhttp3InternalFramedFramedStream *dataStream = [this$0_ getStreamWithInt:streamId];
  if (dataStream == nil) {
    [this$0_ writeSynResetLaterWithInt:streamId withOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, INVALID_STREAM)];
    [((id<OkioBufferedSource>) nil_chk(source)) skipWithLong:length];
    return;
  }
  [dataStream receiveDataWithOkioBufferedSource:source withInt:length];
  if (inFinished) {
    [dataStream receiveFin];
  }
}

- (void)headersWithBoolean:(jboolean)outFinished
               withBoolean:(jboolean)inFinished
                   withInt:(jint)streamId
                   withInt:(jint)associatedStreamId
          withJavaUtilList:(id<JavaUtilList>)headerBlock
withOkhttp3InternalFramedHeadersMode:(Okhttp3InternalFramedHeadersMode *)headersMode {
  if (Okhttp3InternalFramedFramedConnection_pushedStreamWithInt_(this$0_, streamId)) {
    Okhttp3InternalFramedFramedConnection_pushHeadersLaterWithInt_withJavaUtilList_withBoolean_(this$0_, streamId, headerBlock, inFinished);
    return;
  }
  Okhttp3InternalFramedFramedStream *stream;
  @synchronized(this$0_) {
    if (this$0_->shutdown_) return;
    stream = JreRetainedLocalValue([this$0_ getStreamWithInt:streamId]);
    if (stream == nil) {
      if ([((Okhttp3InternalFramedHeadersMode *) nil_chk(headersMode)) failIfStreamAbsent]) {
        [this$0_ writeSynResetLaterWithInt:streamId withOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, INVALID_STREAM)];
        return;
      }
      if (streamId <= this$0_->lastGoodStreamId_) return;
      if (streamId % 2 == this$0_->nextStreamId_ % 2) return;
      Okhttp3InternalFramedFramedStream *newStream = create_Okhttp3InternalFramedFramedStream_initWithInt_withOkhttp3InternalFramedFramedConnection_withBoolean_withBoolean_withJavaUtilList_(streamId, this$0_, outFinished, inFinished, headerBlock);
      this$0_->lastGoodStreamId_ = streamId;
      [((id<JavaUtilMap>) nil_chk(this$0_->streams_)) putWithId:JavaLangInteger_valueOfWithInt_(streamId) withId:newStream];
      [((id<JavaUtilConcurrentExecutorService>) nil_chk(JreLoadStatic(Okhttp3InternalFramedFramedConnection, executor))) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(self, newStream, @"OkHttp %s stream %d", [IOSObjectArray arrayWithObjects:(id[]){ this$0_->hostname_, JavaLangInteger_valueOfWithInt_(streamId) } count:2 type:NSObject_class_()])];
      return;
    }
  }
  if ([((Okhttp3InternalFramedHeadersMode *) nil_chk(headersMode)) failIfStreamPresent]) {
    [stream closeLaterWithOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, PROTOCOL_ERROR)];
    [this$0_ removeStreamWithInt:streamId];
    return;
  }
  [stream receiveHeadersWithJavaUtilList:headerBlock withOkhttp3InternalFramedHeadersMode:headersMode];
  if (inFinished) [stream receiveFin];
}

- (void)rstStreamWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode {
  if (Okhttp3InternalFramedFramedConnection_pushedStreamWithInt_(this$0_, streamId)) {
    Okhttp3InternalFramedFramedConnection_pushResetLaterWithInt_withOkhttp3InternalFramedErrorCode_(this$0_, streamId, errorCode);
    return;
  }
  Okhttp3InternalFramedFramedStream *rstStream = [this$0_ removeStreamWithInt:streamId];
  if (rstStream != nil) {
    [rstStream receiveRstStreamWithOkhttp3InternalFramedErrorCode:errorCode];
  }
}

- (void)settingsWithBoolean:(jboolean)clearPrevious
withOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)newSettings {
  jlong delta = 0;
  IOSObjectArray *streamsToNotify = nil;
  @synchronized(this$0_) {
    jint priorWriteWindowSize = [((Okhttp3InternalFramedSettings *) nil_chk(this$0_->peerSettings_)) getInitialWindowSizeWithInt:Okhttp3InternalFramedSettings_DEFAULT_INITIAL_WINDOW_SIZE];
    if (clearPrevious) [this$0_->peerSettings_ clear];
    [this$0_->peerSettings_ mergeWithOkhttp3InternalFramedSettings:newSettings];
    if ([this$0_ getProtocol] == JreLoadEnum(Okhttp3Protocol, HTTP_2)) {
      Okhttp3InternalFramedFramedConnection_Reader_applyAndAckSettingsWithOkhttp3InternalFramedSettings_(self, newSettings);
    }
    jint peerInitialWindowSize = [this$0_->peerSettings_ getInitialWindowSizeWithInt:Okhttp3InternalFramedSettings_DEFAULT_INITIAL_WINDOW_SIZE];
    if (peerInitialWindowSize != -1 && peerInitialWindowSize != priorWriteWindowSize) {
      delta = peerInitialWindowSize - priorWriteWindowSize;
      if (!this$0_->receivedInitialPeerSettings_) {
        [this$0_ addBytesToWriteWindowWithLong:delta];
        this$0_->receivedInitialPeerSettings_ = true;
      }
      if (![((id<JavaUtilMap>) nil_chk(this$0_->streams_)) isEmpty]) {
        streamsToNotify = JreRetainedLocalValue([((id<JavaUtilCollection>) nil_chk([this$0_->streams_ values])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[this$0_->streams_ size] type:Okhttp3InternalFramedFramedStream_class_()]]);
      }
    }
    [((id<JavaUtilConcurrentExecutorService>) nil_chk(JreLoadStatic(Okhttp3InternalFramedFramedConnection, executor))) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(self, @"OkHttp %s settings", [IOSObjectArray arrayWithObjects:(id[]){ this$0_->hostname_ } count:1 type:NSObject_class_()])];
  }
  if (streamsToNotify != nil && delta != 0) {
    {
      IOSObjectArray *a__ = streamsToNotify;
      Okhttp3InternalFramedFramedStream * const *b__ = a__->buffer_;
      Okhttp3InternalFramedFramedStream * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        Okhttp3InternalFramedFramedStream *stream = *b__++;
        @synchronized(stream) {
          [((Okhttp3InternalFramedFramedStream *) nil_chk(stream)) addBytesToWriteWindowWithLong:delta];
        }
      }
    }
  }
}

- (void)applyAndAckSettingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)peerSettings {
  Okhttp3InternalFramedFramedConnection_Reader_applyAndAckSettingsWithOkhttp3InternalFramedSettings_(self, peerSettings);
}

- (void)ackSettings {
}

- (void)pingWithBoolean:(jboolean)reply
                withInt:(jint)payload1
                withInt:(jint)payload2 {
  if (reply) {
    Okhttp3InternalFramedPing *ping = Okhttp3InternalFramedFramedConnection_removePingWithInt_(this$0_, payload1);
    if (ping != nil) {
      [ping receive];
    }
  }
  else {
    Okhttp3InternalFramedFramedConnection_writePingLaterWithBoolean_withInt_withInt_withOkhttp3InternalFramedPing_(this$0_, true, payload1, payload2, nil);
  }
}

- (void)goAwayWithInt:(jint)lastGoodStreamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode
   withOkioByteString:(OkioByteString *)debugData {
  if ([((OkioByteString *) nil_chk(debugData)) size] > 0) {
  }
  IOSObjectArray *streamsCopy;
  @synchronized(this$0_) {
    streamsCopy = JreRetainedLocalValue([((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) nil_chk(this$0_->streams_)) values])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[this$0_->streams_ size] type:Okhttp3InternalFramedFramedStream_class_()]]);
    this$0_->shutdown_ = true;
  }
  {
    IOSObjectArray *a__ = streamsCopy;
    Okhttp3InternalFramedFramedStream * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    Okhttp3InternalFramedFramedStream * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      Okhttp3InternalFramedFramedStream *framedStream = *b__++;
      if ([((Okhttp3InternalFramedFramedStream *) nil_chk(framedStream)) getId] > lastGoodStreamId && [framedStream isLocallyInitiated]) {
        [framedStream receiveRstStreamWithOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, REFUSED_STREAM)];
        [this$0_ removeStreamWithInt:[framedStream getId]];
      }
    }
  }
}

- (void)windowUpdateWithInt:(jint)streamId
                   withLong:(jlong)windowSizeIncrement {
  if (streamId == 0) {
    @synchronized(this$0_) {
      this$0_->bytesLeftInWriteWindow_ += windowSizeIncrement;
      [this$0_ java_notifyAll];
    }
  }
  else {
    Okhttp3InternalFramedFramedStream *stream = [this$0_ getStreamWithInt:streamId];
    if (stream != nil) {
      @synchronized(stream) {
        [stream addBytesToWriteWindowWithLong:windowSizeIncrement];
      }
    }
  }
}

- (void)priorityWithInt:(jint)streamId
                withInt:(jint)streamDependency
                withInt:(jint)weight
            withBoolean:(jboolean)exclusive {
}

- (void)pushPromiseWithInt:(jint)streamId
                   withInt:(jint)promisedStreamId
          withJavaUtilList:(id<JavaUtilList>)requestHeaders {
  Okhttp3InternalFramedFramedConnection_pushRequestLaterWithInt_withJavaUtilList_(this$0_, promisedStreamId, requestHeaders);
}

- (void)alternateServiceWithInt:(jint)streamId
                   withNSString:(NSString *)origin
             withOkioByteString:(OkioByteString *)protocol
                   withNSString:(NSString *)host
                        withInt:(jint)port
                       withLong:(jlong)maxAge {
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(frameReader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, 23, -1, -1 },
    { NULL, "V", 0x1, 24, 25, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withOkhttp3InternalFramedFrameReader:);
  methods[1].selector = @selector(execute);
  methods[2].selector = @selector(dataWithBoolean:withInt:withOkioBufferedSource:withInt:);
  methods[3].selector = @selector(headersWithBoolean:withBoolean:withInt:withInt:withJavaUtilList:withOkhttp3InternalFramedHeadersMode:);
  methods[4].selector = @selector(rstStreamWithInt:withOkhttp3InternalFramedErrorCode:);
  methods[5].selector = @selector(settingsWithBoolean:withOkhttp3InternalFramedSettings:);
  methods[6].selector = @selector(applyAndAckSettingsWithOkhttp3InternalFramedSettings:);
  methods[7].selector = @selector(ackSettings);
  methods[8].selector = @selector(pingWithBoolean:withInt:withInt:);
  methods[9].selector = @selector(goAwayWithInt:withOkhttp3InternalFramedErrorCode:withOkioByteString:);
  methods[10].selector = @selector(windowUpdateWithInt:withLong:);
  methods[11].selector = @selector(priorityWithInt:withInt:withInt:withBoolean:);
  methods[12].selector = @selector(pushPromiseWithInt:withInt:withJavaUtilList:);
  methods[13].selector = @selector(alternateServiceWithInt:withNSString:withOkioByteString:withNSString:withInt:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "frameReader_", "LOkhttp3InternalFramedFrameReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOkhttp3InternalFramedFrameReader;", "data", "ZILOkioBufferedSource;I", "LJavaIoIOException;", "headers", "ZZIILJavaUtilList;LOkhttp3InternalFramedHeadersMode;", "(ZZIILjava/util/List<Lokhttp3/internal/framed/Header;>;Lokhttp3/internal/framed/HeadersMode;)V", "rstStream", "ILOkhttp3InternalFramedErrorCode;", "settings", "ZLOkhttp3InternalFramedSettings;", "applyAndAckSettings", "LOkhttp3InternalFramedSettings;", "ping", "ZII", "goAway", "ILOkhttp3InternalFramedErrorCode;LOkioByteString;", "windowUpdate", "IJ", "priority", "IIIZ", "pushPromise", "IILJavaUtilList;", "(IILjava/util/List<Lokhttp3/internal/framed/Header;>;)V", "alternateService", "ILNSString;LOkioByteString;LNSString;IJ", "LOkhttp3InternalFramedFramedConnection;" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Reader = { "Reader", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x0, 14, 2, 26, -1, -1, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Reader;
}

@end

void Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(Okhttp3InternalFramedFramedConnection_Reader *self, Okhttp3InternalFramedFramedConnection *outer$, id<Okhttp3InternalFramedFrameReader> frameReader) {
  JreStrongAssign(&self->this$0_, outer$);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, @"OkHttp %s", [IOSObjectArray arrayWithObjects:(id[]){ outer$->hostname_ } count:1 type:NSObject_class_()]);
  JreStrongAssign(&self->frameReader_, frameReader);
}

Okhttp3InternalFramedFramedConnection_Reader *new_Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(Okhttp3InternalFramedFramedConnection *outer$, id<Okhttp3InternalFramedFrameReader> frameReader) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_Reader, initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_, outer$, frameReader)
}

Okhttp3InternalFramedFramedConnection_Reader *create_Okhttp3InternalFramedFramedConnection_Reader_initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_(Okhttp3InternalFramedFramedConnection *outer$, id<Okhttp3InternalFramedFrameReader> frameReader) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_Reader, initWithOkhttp3InternalFramedFramedConnection_withOkhttp3InternalFramedFrameReader_, outer$, frameReader)
}

void Okhttp3InternalFramedFramedConnection_Reader_applyAndAckSettingsWithOkhttp3InternalFramedSettings_(Okhttp3InternalFramedFramedConnection_Reader *self, Okhttp3InternalFramedSettings *peerSettings) {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(JreLoadStatic(Okhttp3InternalFramedFramedConnection, executor))) executeWithJavaLangRunnable:create_Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(self, peerSettings, @"OkHttp %s ACK Settings", [IOSObjectArray arrayWithObjects:(id[]){ self->this$0_->hostname_ } count:1 type:NSObject_class_()])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3InternalFramedFramedConnection_Reader)

@implementation Okhttp3InternalFramedFramedConnection_Reader_1

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Reader:(Okhttp3InternalFramedFramedConnection_Reader *)outer$
                               withOkhttp3InternalFramedFramedStream:(Okhttp3InternalFramedFramedStream *)capture$0
                                                        withNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(self, outer$, capture$0, format, args);
  return self;
}

- (void)execute {
  @try {
    [((Okhttp3InternalFramedFramedConnection_Listener *) nil_chk(this$0_->this$0_->listener_)) onStreamWithOkhttp3InternalFramedFramedStream:val$newStream_];
  }
  @catch (JavaIoIOException *e) {
    [((Okhttp3InternalPlatformPlatform *) nil_chk(Okhttp3InternalPlatformPlatform_get())) logWithInt:Okhttp3InternalPlatformPlatform_INFO withNSString:JreStrcat("$$", @"FramedConnection.Listener failure for ", this$0_->this$0_->hostname_) withJavaLangThrowable:e];
    @try {
      [((Okhttp3InternalFramedFramedStream *) nil_chk(val$newStream_)) closeWithOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, PROTOCOL_ERROR)];
    }
    @catch (JavaIoIOException *ignored) {
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$newStream_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection_Reader:withOkhttp3InternalFramedFramedStream:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection_Reader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$newStream_", "LOkhttp3InternalFramedFramedStream;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection_Reader;", "headersWithBoolean:withBoolean:withInt:withInt:withJavaUtilList:withOkhttp3InternalFramedHeadersMode:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Reader_1 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Reader_1;
}

@end

void Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader_1 *self, Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedFramedStream *capture$0, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$newStream_, capture$0);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_Reader_1 *new_Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedFramedStream *capture$0, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_Reader_1, initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_, outer$, capture$0, format, args)
}

Okhttp3InternalFramedFramedConnection_Reader_1 *create_Okhttp3InternalFramedFramedConnection_Reader_1_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedFramedStream *capture$0, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_Reader_1, initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedFramedStream_withNSString_withNSObjectArray_, outer$, capture$0, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_Reader_2

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Reader:(Okhttp3InternalFramedFramedConnection_Reader *)outer$
                                                        withNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(self, outer$, format, args);
  return self;
}

- (void)execute {
  [((Okhttp3InternalFramedFramedConnection_Listener *) nil_chk(this$0_->this$0_->listener_)) onSettingsWithOkhttp3InternalFramedFramedConnection:this$0_->this$0_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection_Reader:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection_Reader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection_Reader;", "settingsWithBoolean:withOkhttp3InternalFramedSettings:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Reader_2 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Reader_2;
}

@end

void Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader_2 *self, Okhttp3InternalFramedFramedConnection_Reader *outer$, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_Reader_2 *new_Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_Reader_2, initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_, outer$, format, args)
}

Okhttp3InternalFramedFramedConnection_Reader_2 *create_Okhttp3InternalFramedFramedConnection_Reader_2_initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_Reader_2, initWithOkhttp3InternalFramedFramedConnection_Reader_withNSString_withNSObjectArray_, outer$, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_Reader_3

- (instancetype)initWithOkhttp3InternalFramedFramedConnection_Reader:(Okhttp3InternalFramedFramedConnection_Reader *)outer$
                                   withOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)capture$0
                                                        withNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(self, outer$, capture$0, format, args);
  return self;
}

- (void)execute {
  @try {
    [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(this$0_->this$0_->frameWriter_)) applyAndAckSettingsWithOkhttp3InternalFramedSettings:val$peerSettings_];
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$peerSettings_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection_Reader:withOkhttp3InternalFramedSettings:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection_Reader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$peerSettings_", "LOkhttp3InternalFramedSettings;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection_Reader;", "applyAndAckSettingsWithOkhttp3InternalFramedSettings:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Reader_3 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Reader_3;
}

@end

void Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader_3 *self, Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedSettings *capture$0, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$peerSettings_, capture$0);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_Reader_3 *new_Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedSettings *capture$0, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_Reader_3, initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_, outer$, capture$0, format, args)
}

Okhttp3InternalFramedFramedConnection_Reader_3 *create_Okhttp3InternalFramedFramedConnection_Reader_3_initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_Reader *outer$, Okhttp3InternalFramedSettings *capture$0, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_Reader_3, initWithOkhttp3InternalFramedFramedConnection_Reader_withOkhttp3InternalFramedSettings_withNSString_withNSObjectArray_, outer$, capture$0, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_4

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                             withJavaUtilList:(id<JavaUtilList>)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, format, args);
  return self;
}

- (void)execute {
  jboolean cancel = [((id<Okhttp3InternalFramedPushObserver>) nil_chk(this$0_->pushObserver_)) onRequestWithInt:val$streamId_ withJavaUtilList:val$requestHeaders_];
  @try {
    if (cancel) {
      [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(this$0_->frameWriter_)) rstStreamWithInt:val$streamId_ withOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, CANCEL)];
      @synchronized(this$0_) {
        [((id<JavaUtilSet>) nil_chk(this$0_->currentPushRequests_)) removeWithId:JavaLangInteger_valueOfWithInt_(val$streamId_)];
      }
    }
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$requestHeaders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withInt:withJavaUtilList:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$streamId_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$requestHeaders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "Ljava/util/List<Lokhttp3/internal/framed/Header;>;", "LOkhttp3InternalFramedFramedConnection;", "pushRequestLaterWithInt:withJavaUtilList:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_4 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 3, 2, -1, 3, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_4;
}

@end

void Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_4 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$streamId_ = capture$0;
  JreStrongAssign(&self->val$requestHeaders_, capture$1);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_4 *new_Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_4, initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

Okhttp3InternalFramedFramedConnection_4 *create_Okhttp3InternalFramedFramedConnection_4_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_4, initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_5

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                             withJavaUtilList:(id<JavaUtilList>)capture$1
                                                  withBoolean:(jboolean)capture$2
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, capture$2, format, args);
  return self;
}

- (void)execute {
  jboolean cancel = [((id<Okhttp3InternalFramedPushObserver>) nil_chk(this$0_->pushObserver_)) onHeadersWithInt:val$streamId_ withJavaUtilList:val$requestHeaders_ withBoolean:val$inFinished_];
  @try {
    if (cancel) [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(this$0_->frameWriter_)) rstStreamWithInt:val$streamId_ withOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, CANCEL)];
    if (cancel || val$inFinished_) {
      @synchronized(this$0_) {
        [((id<JavaUtilSet>) nil_chk(this$0_->currentPushRequests_)) removeWithId:JavaLangInteger_valueOfWithInt_(val$streamId_)];
      }
    }
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$requestHeaders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withInt:withJavaUtilList:withBoolean:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$streamId_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$requestHeaders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$inFinished_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "Ljava/util/List<Lokhttp3/internal/framed/Header;>;", "LOkhttp3InternalFramedFramedConnection;", "pushHeadersLaterWithInt:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_5 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 4, 2, -1, 3, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_5;
}

@end

void Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_5 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, jboolean capture$2, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$streamId_ = capture$0;
  JreStrongAssign(&self->val$requestHeaders_, capture$1);
  self->val$inFinished_ = capture$2;
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_5 *new_Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, jboolean capture$2, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_5, initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, capture$2, format, args)
}

Okhttp3InternalFramedFramedConnection_5 *create_Okhttp3InternalFramedFramedConnection_5_initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, id<JavaUtilList> capture$1, jboolean capture$2, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_5, initWithOkhttp3InternalFramedFramedConnection_withInt_withJavaUtilList_withBoolean_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, capture$2, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_6

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                                               withOkioBuffer:(OkioBuffer *)capture$1
                                                      withInt:(jint)capture$2
                                                  withBoolean:(jboolean)capture$3
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, capture$2, capture$3, format, args);
  return self;
}

- (void)execute {
  @try {
    jboolean cancel = [((id<Okhttp3InternalFramedPushObserver>) nil_chk(this$0_->pushObserver_)) onDataWithInt:val$streamId_ withOkioBufferedSource:val$buffer_ withInt:val$byteCount_ withBoolean:val$inFinished_];
    if (cancel) [((id<Okhttp3InternalFramedFrameWriter>) nil_chk(this$0_->frameWriter_)) rstStreamWithInt:val$streamId_ withOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, CANCEL)];
    if (cancel || val$inFinished_) {
      @synchronized(this$0_) {
        [((id<JavaUtilSet>) nil_chk(this$0_->currentPushRequests_)) removeWithId:JavaLangInteger_valueOfWithInt_(val$streamId_)];
      }
    }
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withInt:withOkioBuffer:withInt:withBoolean:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$streamId_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$buffer_", "LOkioBuffer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$byteCount_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$inFinished_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection;", "pushDataLaterWithInt:withOkioBufferedSource:withInt:withBoolean:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_6 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 5, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_6;
}

@end

void Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_6 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, OkioBuffer *capture$1, jint capture$2, jboolean capture$3, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$streamId_ = capture$0;
  JreStrongAssign(&self->val$buffer_, capture$1);
  self->val$byteCount_ = capture$2;
  self->val$inFinished_ = capture$3;
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_6 *new_Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, OkioBuffer *capture$1, jint capture$2, jboolean capture$3, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_6, initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, capture$2, capture$3, format, args)
}

Okhttp3InternalFramedFramedConnection_6 *create_Okhttp3InternalFramedFramedConnection_6_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, OkioBuffer *capture$1, jint capture$2, jboolean capture$3, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_6, initWithOkhttp3InternalFramedFramedConnection_withInt_withOkioBuffer_withInt_withBoolean_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, capture$2, capture$3, format, args)
}

@implementation Okhttp3InternalFramedFramedConnection_7

- (instancetype)initWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)outer$
                                                      withInt:(jint)capture$0
                           withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)capture$1
                                                 withNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(self, outer$, capture$0, capture$1, format, args);
  return self;
}

- (void)execute {
  [((id<Okhttp3InternalFramedPushObserver>) nil_chk(this$0_->pushObserver_)) onResetWithInt:val$streamId_ withOkhttp3InternalFramedErrorCode:val$errorCode_];
  @synchronized(this$0_) {
    [((id<JavaUtilSet>) nil_chk(this$0_->currentPushRequests_)) removeWithId:JavaLangInteger_valueOfWithInt_(val$streamId_)];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$errorCode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOkhttp3InternalFramedFramedConnection:withInt:withOkhttp3InternalFramedErrorCode:withNSString:withNSObjectArray:);
  methods[1].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOkhttp3InternalFramedFramedConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$streamId_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$errorCode_", "LOkhttp3InternalFramedErrorCode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOkhttp3InternalFramedFramedConnection;", "pushResetLaterWithInt:withOkhttp3InternalFramedErrorCode:" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_7 = { "", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_7;
}

@end

void Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection_7 *self, Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$streamId_ = capture$0;
  JreStrongAssign(&self->val$errorCode_, capture$1);
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
}

Okhttp3InternalFramedFramedConnection_7 *new_Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_7, initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

Okhttp3InternalFramedFramedConnection_7 *create_Okhttp3InternalFramedFramedConnection_7_initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_(Okhttp3InternalFramedFramedConnection *outer$, jint capture$0, Okhttp3InternalFramedErrorCode *capture$1, NSString *format, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_7, initWithOkhttp3InternalFramedFramedConnection_withInt_withOkhttp3InternalFramedErrorCode_withNSString_withNSObjectArray_, outer$, capture$0, capture$1, format, args)
}

J2OBJC_INITIALIZED_DEFN(Okhttp3InternalFramedFramedConnection_Listener)

Okhttp3InternalFramedFramedConnection_Listener *Okhttp3InternalFramedFramedConnection_Listener_REFUSE_INCOMING_STREAMS;

@implementation Okhttp3InternalFramedFramedConnection_Listener

+ (Okhttp3InternalFramedFramedConnection_Listener *)REFUSE_INCOMING_STREAMS {
  return Okhttp3InternalFramedFramedConnection_Listener_REFUSE_INCOMING_STREAMS;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Okhttp3InternalFramedFramedConnection_Listener_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onStreamWithOkhttp3InternalFramedFramedStream:(Okhttp3InternalFramedFramedStream *)stream {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)onSettingsWithOkhttp3InternalFramedFramedConnection:(Okhttp3InternalFramedFramedConnection *)connection {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onStreamWithOkhttp3InternalFramedFramedStream:);
  methods[2].selector = @selector(onSettingsWithOkhttp3InternalFramedFramedConnection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "REFUSE_INCOMING_STREAMS", "LOkhttp3InternalFramedFramedConnection_Listener;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "onStream", "LOkhttp3InternalFramedFramedStream;", "LJavaIoIOException;", "onSettings", "LOkhttp3InternalFramedFramedConnection;", &Okhttp3InternalFramedFramedConnection_Listener_REFUSE_INCOMING_STREAMS };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Listener = { "Listener", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x409, 3, 1, 4, -1, -1, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Listener;
}

+ (void)initialize {
  if (self == [Okhttp3InternalFramedFramedConnection_Listener class]) {
    JreStrongAssignAndConsume(&Okhttp3InternalFramedFramedConnection_Listener_REFUSE_INCOMING_STREAMS, new_Okhttp3InternalFramedFramedConnection_Listener_1_init());
    J2OBJC_SET_INITIALIZED(Okhttp3InternalFramedFramedConnection_Listener)
  }
}

@end

void Okhttp3InternalFramedFramedConnection_Listener_init(Okhttp3InternalFramedFramedConnection_Listener *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3InternalFramedFramedConnection_Listener)

@implementation Okhttp3InternalFramedFramedConnection_Listener_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Okhttp3InternalFramedFramedConnection_Listener_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onStreamWithOkhttp3InternalFramedFramedStream:(Okhttp3InternalFramedFramedStream *)stream {
  [((Okhttp3InternalFramedFramedStream *) nil_chk(stream)) closeWithOkhttp3InternalFramedErrorCode:JreLoadEnum(Okhttp3InternalFramedErrorCode, REFUSED_STREAM)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onStreamWithOkhttp3InternalFramedFramedStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onStream", "LOkhttp3InternalFramedFramedStream;", "LJavaIoIOException;", "LOkhttp3InternalFramedFramedConnection_Listener;" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedFramedConnection_Listener_1 = { "", "okhttp3.internal.framed", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, -1, -1 };
  return &_Okhttp3InternalFramedFramedConnection_Listener_1;
}

@end

void Okhttp3InternalFramedFramedConnection_Listener_1_init(Okhttp3InternalFramedFramedConnection_Listener_1 *self) {
  Okhttp3InternalFramedFramedConnection_Listener_init(self);
}

Okhttp3InternalFramedFramedConnection_Listener_1 *new_Okhttp3InternalFramedFramedConnection_Listener_1_init() {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedFramedConnection_Listener_1, init)
}

Okhttp3InternalFramedFramedConnection_Listener_1 *create_Okhttp3InternalFramedFramedConnection_Listener_1_init() {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedFramedConnection_Listener_1, init)
}
