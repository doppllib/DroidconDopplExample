//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalFramedErrorCode")
#ifdef RESTRICT_Okhttp3InternalFramedErrorCode
#define INCLUDE_ALL_Okhttp3InternalFramedErrorCode 0
#else
#define INCLUDE_ALL_Okhttp3InternalFramedErrorCode 1
#endif
#undef RESTRICT_Okhttp3InternalFramedErrorCode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (Okhttp3InternalFramedErrorCode_) && (INCLUDE_ALL_Okhttp3InternalFramedErrorCode || defined(INCLUDE_Okhttp3InternalFramedErrorCode))
#define Okhttp3InternalFramedErrorCode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, Okhttp3InternalFramedErrorCode_Enum) {
  Okhttp3InternalFramedErrorCode_Enum_NO_ERROR = 0,
  Okhttp3InternalFramedErrorCode_Enum_PROTOCOL_ERROR = 1,
  Okhttp3InternalFramedErrorCode_Enum_INVALID_STREAM = 2,
  Okhttp3InternalFramedErrorCode_Enum_UNSUPPORTED_VERSION = 3,
  Okhttp3InternalFramedErrorCode_Enum_STREAM_IN_USE = 4,
  Okhttp3InternalFramedErrorCode_Enum_STREAM_ALREADY_CLOSED = 5,
  Okhttp3InternalFramedErrorCode_Enum_INTERNAL_ERROR = 6,
  Okhttp3InternalFramedErrorCode_Enum_FLOW_CONTROL_ERROR = 7,
  Okhttp3InternalFramedErrorCode_Enum_STREAM_CLOSED = 8,
  Okhttp3InternalFramedErrorCode_Enum_FRAME_TOO_LARGE = 9,
  Okhttp3InternalFramedErrorCode_Enum_REFUSED_STREAM = 10,
  Okhttp3InternalFramedErrorCode_Enum_CANCEL = 11,
  Okhttp3InternalFramedErrorCode_Enum_COMPRESSION_ERROR = 12,
  Okhttp3InternalFramedErrorCode_Enum_CONNECT_ERROR = 13,
  Okhttp3InternalFramedErrorCode_Enum_ENHANCE_YOUR_CALM = 14,
  Okhttp3InternalFramedErrorCode_Enum_INADEQUATE_SECURITY = 15,
  Okhttp3InternalFramedErrorCode_Enum_HTTP_1_1_REQUIRED = 16,
  Okhttp3InternalFramedErrorCode_Enum_INVALID_CREDENTIALS = 17,
};

@interface Okhttp3InternalFramedErrorCode : JavaLangEnum {
 @public
  jint httpCode_;
  jint spdyRstCode_;
  jint spdyGoAwayCode_;
}

+ (Okhttp3InternalFramedErrorCode * __nonnull)NO_ERROR;

+ (Okhttp3InternalFramedErrorCode * __nonnull)PROTOCOL_ERROR;

+ (Okhttp3InternalFramedErrorCode * __nonnull)INVALID_STREAM;

+ (Okhttp3InternalFramedErrorCode * __nonnull)UNSUPPORTED_VERSION;

+ (Okhttp3InternalFramedErrorCode * __nonnull)STREAM_IN_USE;

+ (Okhttp3InternalFramedErrorCode * __nonnull)STREAM_ALREADY_CLOSED;

+ (Okhttp3InternalFramedErrorCode * __nonnull)INTERNAL_ERROR;

+ (Okhttp3InternalFramedErrorCode * __nonnull)FLOW_CONTROL_ERROR;

+ (Okhttp3InternalFramedErrorCode * __nonnull)STREAM_CLOSED;

+ (Okhttp3InternalFramedErrorCode * __nonnull)FRAME_TOO_LARGE;

+ (Okhttp3InternalFramedErrorCode * __nonnull)REFUSED_STREAM;

+ (Okhttp3InternalFramedErrorCode * __nonnull)CANCEL;

+ (Okhttp3InternalFramedErrorCode * __nonnull)COMPRESSION_ERROR;

+ (Okhttp3InternalFramedErrorCode * __nonnull)CONNECT_ERROR;

+ (Okhttp3InternalFramedErrorCode * __nonnull)ENHANCE_YOUR_CALM;

+ (Okhttp3InternalFramedErrorCode * __nonnull)INADEQUATE_SECURITY;

+ (Okhttp3InternalFramedErrorCode * __nonnull)HTTP_1_1_REQUIRED;

+ (Okhttp3InternalFramedErrorCode * __nonnull)INVALID_CREDENTIALS;

#pragma mark Public

+ (Okhttp3InternalFramedErrorCode *)fromHttp2WithInt:(jint)code;

+ (Okhttp3InternalFramedErrorCode *)fromSpdy3RstWithInt:(jint)code;

+ (Okhttp3InternalFramedErrorCode *)fromSpdyGoAwayWithInt:(jint)code;

+ (Okhttp3InternalFramedErrorCode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (Okhttp3InternalFramedErrorCode_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalFramedErrorCode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_values_[];

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_NO_ERROR();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, NO_ERROR)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_PROTOCOL_ERROR();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, PROTOCOL_ERROR)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_INVALID_STREAM();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, INVALID_STREAM)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_UNSUPPORTED_VERSION();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, UNSUPPORTED_VERSION)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_STREAM_IN_USE();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, STREAM_IN_USE)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_STREAM_ALREADY_CLOSED();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, STREAM_ALREADY_CLOSED)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_INTERNAL_ERROR();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, INTERNAL_ERROR)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_FLOW_CONTROL_ERROR();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, FLOW_CONTROL_ERROR)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_STREAM_CLOSED();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, STREAM_CLOSED)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_FRAME_TOO_LARGE();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, FRAME_TOO_LARGE)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_REFUSED_STREAM();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, REFUSED_STREAM)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_CANCEL();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, CANCEL)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_COMPRESSION_ERROR();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, COMPRESSION_ERROR)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_CONNECT_ERROR();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, CONNECT_ERROR)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_ENHANCE_YOUR_CALM();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, ENHANCE_YOUR_CALM)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_INADEQUATE_SECURITY();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, INADEQUATE_SECURITY)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_HTTP_1_1_REQUIRED();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, HTTP_1_1_REQUIRED)

inline Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_get_INVALID_CREDENTIALS();
J2OBJC_ENUM_CONSTANT(Okhttp3InternalFramedErrorCode, INVALID_CREDENTIALS)

FOUNDATION_EXPORT Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_fromSpdy3RstWithInt_(jint code);

FOUNDATION_EXPORT Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_fromHttp2WithInt_(jint code);

FOUNDATION_EXPORT Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_fromSpdyGoAwayWithInt_(jint code);

FOUNDATION_EXPORT IOSObjectArray *Okhttp3InternalFramedErrorCode_values();

FOUNDATION_EXPORT Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT Okhttp3InternalFramedErrorCode *Okhttp3InternalFramedErrorCode_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedErrorCode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalFramedErrorCode")
