//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttpHttpStream")
#ifdef RESTRICT_Okhttp3InternalHttpHttpStream
#define INCLUDE_ALL_Okhttp3InternalHttpHttpStream 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttpHttpStream 1
#endif
#undef RESTRICT_Okhttp3InternalHttpHttpStream

#if !defined (Okhttp3InternalHttpHttpStream_) && (INCLUDE_ALL_Okhttp3InternalHttpHttpStream || defined(INCLUDE_Okhttp3InternalHttpHttpStream))
#define Okhttp3InternalHttpHttpStream_

@class Okhttp3Request;
@class Okhttp3Response;
@class Okhttp3ResponseBody;
@class Okhttp3Response_Builder;
@protocol OkioSink;

@protocol Okhttp3InternalHttpHttpStream < JavaObject >

- (id<OkioSink>)createRequestBodyWithOkhttp3Request:(Okhttp3Request *)request
                                           withLong:(jlong)contentLength;

- (void)writeRequestHeadersWithOkhttp3Request:(Okhttp3Request *)request;

- (void)finishRequest;

- (Okhttp3Response_Builder *)readResponseHeaders;

- (Okhttp3ResponseBody *)openResponseBodyWithOkhttp3Response:(Okhttp3Response *)response;

- (void)cancel;

@end

@interface Okhttp3InternalHttpHttpStream : NSObject

+ (jint)DISCARD_STREAM_TIMEOUT_MILLIS;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttpHttpStream)

inline jint Okhttp3InternalHttpHttpStream_get_DISCARD_STREAM_TIMEOUT_MILLIS();
#define Okhttp3InternalHttpHttpStream_DISCARD_STREAM_TIMEOUT_MILLIS 100
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttpHttpStream, DISCARD_STREAM_TIMEOUT_MILLIS, jint)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttpHttpStream)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttpHttpStream")
