//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "Okhttp3InternalFramedErrorCode.h"
#include "Okhttp3InternalFramedPushObserver.h"
#include "java/util/List.h"
#include "okio/BufferedSource.h"

@interface Okhttp3InternalFramedPushObserver_1 : NSObject < Okhttp3InternalFramedPushObserver >

- (instancetype)init;

- (jboolean)onRequestWithInt:(jint)streamId
            withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (jboolean)onHeadersWithInt:(jint)streamId
            withJavaUtilList:(id<JavaUtilList>)responseHeaders
                 withBoolean:(jboolean)last;

- (jboolean)onDataWithInt:(jint)streamId
   withOkioBufferedSource:(id<OkioBufferedSource>)source
                  withInt:(jint)byteCount
              withBoolean:(jboolean)last;

- (void)onResetWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedPushObserver_1)

__attribute__((unused)) static void Okhttp3InternalFramedPushObserver_1_init(Okhttp3InternalFramedPushObserver_1 *self);

__attribute__((unused)) static Okhttp3InternalFramedPushObserver_1 *new_Okhttp3InternalFramedPushObserver_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalFramedPushObserver_1 *create_Okhttp3InternalFramedPushObserver_1_init();

J2OBJC_INITIALIZED_DEFN(Okhttp3InternalFramedPushObserver)

id<Okhttp3InternalFramedPushObserver> Okhttp3InternalFramedPushObserver_CANCEL;

@implementation Okhttp3InternalFramedPushObserver

+ (id<Okhttp3InternalFramedPushObserver>)CANCEL {
  return Okhttp3InternalFramedPushObserver_CANCEL;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0x401, 6, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onRequestWithInt:withJavaUtilList:);
  methods[1].selector = @selector(onHeadersWithInt:withJavaUtilList:withBoolean:);
  methods[2].selector = @selector(onDataWithInt:withOkioBufferedSource:withInt:withBoolean:);
  methods[3].selector = @selector(onResetWithInt:withOkhttp3InternalFramedErrorCode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CANCEL", "LOkhttp3InternalFramedPushObserver;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "onRequest", "ILJavaUtilList;", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;)Z", "onHeaders", "ILJavaUtilList;Z", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;Z)Z", "onData", "ILOkioBufferedSource;IZ", "LJavaIoIOException;", "onReset", "ILOkhttp3InternalFramedErrorCode;", &Okhttp3InternalFramedPushObserver_CANCEL };
  static const J2ObjcClassInfo _Okhttp3InternalFramedPushObserver = { "PushObserver", "okhttp3.internal.framed", ptrTable, methods, fields, 7, 0x609, 4, 1, -1, -1, -1, -1, -1 };
  return &_Okhttp3InternalFramedPushObserver;
}

+ (void)initialize {
  if (self == [Okhttp3InternalFramedPushObserver class]) {
    JreStrongAssignAndConsume(&Okhttp3InternalFramedPushObserver_CANCEL, new_Okhttp3InternalFramedPushObserver_1_init());
    J2OBJC_SET_INITIALIZED(Okhttp3InternalFramedPushObserver)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(Okhttp3InternalFramedPushObserver)

@implementation Okhttp3InternalFramedPushObserver_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Okhttp3InternalFramedPushObserver_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)onRequestWithInt:(jint)streamId
            withJavaUtilList:(id<JavaUtilList>)requestHeaders {
  return true;
}

- (jboolean)onHeadersWithInt:(jint)streamId
            withJavaUtilList:(id<JavaUtilList>)responseHeaders
                 withBoolean:(jboolean)last {
  return true;
}

- (jboolean)onDataWithInt:(jint)streamId
   withOkioBufferedSource:(id<OkioBufferedSource>)source
                  withInt:(jint)byteCount
              withBoolean:(jboolean)last {
  [((id<OkioBufferedSource>) nil_chk(source)) skipWithLong:byteCount];
  return true;
}

- (void)onResetWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onRequestWithInt:withJavaUtilList:);
  methods[2].selector = @selector(onHeadersWithInt:withJavaUtilList:withBoolean:);
  methods[3].selector = @selector(onDataWithInt:withOkioBufferedSource:withInt:withBoolean:);
  methods[4].selector = @selector(onResetWithInt:withOkhttp3InternalFramedErrorCode:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onRequest", "ILJavaUtilList;", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;)Z", "onHeaders", "ILJavaUtilList;Z", "(ILjava/util/List<Lokhttp3/internal/framed/Header;>;Z)Z", "onData", "ILOkioBufferedSource;IZ", "LJavaIoIOException;", "onReset", "ILOkhttp3InternalFramedErrorCode;", "LOkhttp3InternalFramedPushObserver;" };
  static const J2ObjcClassInfo _Okhttp3InternalFramedPushObserver_1 = { "", "okhttp3.internal.framed", ptrTable, methods, NULL, 7, 0x8018, 5, 0, 11, -1, -1, -1, -1 };
  return &_Okhttp3InternalFramedPushObserver_1;
}

@end

void Okhttp3InternalFramedPushObserver_1_init(Okhttp3InternalFramedPushObserver_1 *self) {
  NSObject_init(self);
}

Okhttp3InternalFramedPushObserver_1 *new_Okhttp3InternalFramedPushObserver_1_init() {
  J2OBJC_NEW_IMPL(Okhttp3InternalFramedPushObserver_1, init)
}

Okhttp3InternalFramedPushObserver_1 *create_Okhttp3InternalFramedPushObserver_1_init() {
  J2OBJC_CREATE_IMPL(Okhttp3InternalFramedPushObserver_1, init)
}
