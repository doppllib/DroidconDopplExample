//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalFramedHpack")
#ifdef RESTRICT_Okhttp3InternalFramedHpack
#define INCLUDE_ALL_Okhttp3InternalFramedHpack 0
#else
#define INCLUDE_ALL_Okhttp3InternalFramedHpack 1
#endif
#undef RESTRICT_Okhttp3InternalFramedHpack

#if !defined (Okhttp3InternalFramedHpack_) && (INCLUDE_ALL_Okhttp3InternalFramedHpack || defined(INCLUDE_Okhttp3InternalFramedHpack))
#define Okhttp3InternalFramedHpack_

@interface Okhttp3InternalFramedHpack : NSObject

@end

J2OBJC_STATIC_INIT(Okhttp3InternalFramedHpack)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHpack)

#endif

#if !defined (Okhttp3InternalFramedHpack_Reader_) && (INCLUDE_ALL_Okhttp3InternalFramedHpack || defined(INCLUDE_Okhttp3InternalFramedHpack_Reader))
#define Okhttp3InternalFramedHpack_Reader_

@class IOSObjectArray;
@class OkioByteString;
@protocol JavaUtilList;
@protocol OkioSource;

@interface Okhttp3InternalFramedHpack_Reader : NSObject {
 @public
  IOSObjectArray *dynamicTable_;
  jint nextHeaderIndex_;
  jint headerCount_;
  jint dynamicTableByteCount_;
}

#pragma mark Public

- (id<JavaUtilList>)getAndResetHeaderList;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)headerTableSizeSetting
                    withInt:(jint)maxDynamicTableByteCount
             withOkioSource:(id<OkioSource>)source;

- (instancetype)initWithInt:(jint)headerTableSizeSetting
             withOkioSource:(id<OkioSource>)source;

- (jint)maxDynamicTableByteCount;

- (OkioByteString *)readByteString;

- (void)readHeaders;

- (jint)readIntWithInt:(jint)firstByte
               withInt:(jint)prefixMask;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedHpack_Reader)

J2OBJC_FIELD_SETTER(Okhttp3InternalFramedHpack_Reader, dynamicTable_, IOSObjectArray *)

FOUNDATION_EXPORT void Okhttp3InternalFramedHpack_Reader_initWithInt_withOkioSource_(Okhttp3InternalFramedHpack_Reader *self, jint headerTableSizeSetting, id<OkioSource> source);

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Reader *new_Okhttp3InternalFramedHpack_Reader_initWithInt_withOkioSource_(jint headerTableSizeSetting, id<OkioSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Reader *create_Okhttp3InternalFramedHpack_Reader_initWithInt_withOkioSource_(jint headerTableSizeSetting, id<OkioSource> source);

FOUNDATION_EXPORT void Okhttp3InternalFramedHpack_Reader_initWithInt_withInt_withOkioSource_(Okhttp3InternalFramedHpack_Reader *self, jint headerTableSizeSetting, jint maxDynamicTableByteCount, id<OkioSource> source);

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Reader *new_Okhttp3InternalFramedHpack_Reader_initWithInt_withInt_withOkioSource_(jint headerTableSizeSetting, jint maxDynamicTableByteCount, id<OkioSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Reader *create_Okhttp3InternalFramedHpack_Reader_initWithInt_withInt_withOkioSource_(jint headerTableSizeSetting, jint maxDynamicTableByteCount, id<OkioSource> source);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHpack_Reader)

#endif

#if !defined (Okhttp3InternalFramedHpack_Writer_) && (INCLUDE_ALL_Okhttp3InternalFramedHpack || defined(INCLUDE_Okhttp3InternalFramedHpack_Writer))
#define Okhttp3InternalFramedHpack_Writer_

@class IOSObjectArray;
@class OkioBuffer;
@class OkioByteString;
@protocol JavaUtilList;

@interface Okhttp3InternalFramedHpack_Writer : NSObject {
 @public
  jint headerTableSizeSetting_;
  jint maxDynamicTableByteCount_;
  IOSObjectArray *dynamicTable_;
  jint nextHeaderIndex_;
  jint headerCount_;
  jint dynamicTableByteCount_;
}

#pragma mark Package-Private

- (instancetype)initWithOkioBuffer:(OkioBuffer *)outArg;

- (instancetype)initWithInt:(jint)headerTableSizeSetting
             withOkioBuffer:(OkioBuffer *)outArg;

- (void)setHeaderTableSizeSettingWithInt:(jint)headerTableSizeSetting;

- (void)writeByteStringWithOkioByteString:(OkioByteString *)data;

- (void)writeHeadersWithJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)writeIntWithInt:(jint)value
                withInt:(jint)prefixMask
                withInt:(jint)bits;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedHpack_Writer)

J2OBJC_FIELD_SETTER(Okhttp3InternalFramedHpack_Writer, dynamicTable_, IOSObjectArray *)

FOUNDATION_EXPORT void Okhttp3InternalFramedHpack_Writer_initWithOkioBuffer_(Okhttp3InternalFramedHpack_Writer *self, OkioBuffer *outArg);

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Writer *new_Okhttp3InternalFramedHpack_Writer_initWithOkioBuffer_(OkioBuffer *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Writer *create_Okhttp3InternalFramedHpack_Writer_initWithOkioBuffer_(OkioBuffer *outArg);

FOUNDATION_EXPORT void Okhttp3InternalFramedHpack_Writer_initWithInt_withOkioBuffer_(Okhttp3InternalFramedHpack_Writer *self, jint headerTableSizeSetting, OkioBuffer *outArg);

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Writer *new_Okhttp3InternalFramedHpack_Writer_initWithInt_withOkioBuffer_(jint headerTableSizeSetting, OkioBuffer *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHpack_Writer *create_Okhttp3InternalFramedHpack_Writer_initWithInt_withOkioBuffer_(jint headerTableSizeSetting, OkioBuffer *outArg);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHpack_Writer)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalFramedHpack")
