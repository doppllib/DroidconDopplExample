//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3Protocol")
#ifdef RESTRICT_Okhttp3Protocol
#define INCLUDE_ALL_Okhttp3Protocol 0
#else
#define INCLUDE_ALL_Okhttp3Protocol 1
#endif
#undef RESTRICT_Okhttp3Protocol

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (Okhttp3Protocol_) && (INCLUDE_ALL_Okhttp3Protocol || defined(INCLUDE_Okhttp3Protocol))
#define Okhttp3Protocol_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, Okhttp3Protocol_Enum) {
  Okhttp3Protocol_Enum_HTTP_1_0 = 0,
  Okhttp3Protocol_Enum_HTTP_1_1 = 1,
  Okhttp3Protocol_Enum_SPDY_3 = 2,
  Okhttp3Protocol_Enum_HTTP_2 = 3,
};

@interface Okhttp3Protocol : JavaLangEnum

+ (Okhttp3Protocol * __nonnull)HTTP_1_0;

+ (Okhttp3Protocol * __nonnull)HTTP_1_1;

+ (Okhttp3Protocol * __nonnull)SPDY_3;

+ (Okhttp3Protocol * __nonnull)HTTP_2;

#pragma mark Public

+ (Okhttp3Protocol *)getWithNSString:(NSString *)protocol;

- (NSString *)description;

+ (Okhttp3Protocol *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (Okhttp3Protocol_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(Okhttp3Protocol)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT Okhttp3Protocol *Okhttp3Protocol_values_[];

inline Okhttp3Protocol *Okhttp3Protocol_get_HTTP_1_0();
J2OBJC_ENUM_CONSTANT(Okhttp3Protocol, HTTP_1_0)

inline Okhttp3Protocol *Okhttp3Protocol_get_HTTP_1_1();
J2OBJC_ENUM_CONSTANT(Okhttp3Protocol, HTTP_1_1)

inline Okhttp3Protocol *Okhttp3Protocol_get_SPDY_3();
J2OBJC_ENUM_CONSTANT(Okhttp3Protocol, SPDY_3)

inline Okhttp3Protocol *Okhttp3Protocol_get_HTTP_2();
J2OBJC_ENUM_CONSTANT(Okhttp3Protocol, HTTP_2)

FOUNDATION_EXPORT Okhttp3Protocol *Okhttp3Protocol_getWithNSString_(NSString *protocol);

FOUNDATION_EXPORT IOSObjectArray *Okhttp3Protocol_values();

FOUNDATION_EXPORT Okhttp3Protocol *Okhttp3Protocol_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT Okhttp3Protocol *Okhttp3Protocol_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3Protocol)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Okhttp3Protocol")
