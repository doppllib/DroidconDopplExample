//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3CacheControl")
#ifdef RESTRICT_Okhttp3CacheControl
#define INCLUDE_ALL_Okhttp3CacheControl 0
#else
#define INCLUDE_ALL_Okhttp3CacheControl 1
#endif
#undef RESTRICT_Okhttp3CacheControl

#if !defined (Okhttp3CacheControl_) && (INCLUDE_ALL_Okhttp3CacheControl || defined(INCLUDE_Okhttp3CacheControl))
#define Okhttp3CacheControl_

@class Okhttp3Headers;

@interface Okhttp3CacheControl : NSObject {
 @public
  NSString *headerValue_;
}

+ (Okhttp3CacheControl *)FORCE_NETWORK;

+ (Okhttp3CacheControl *)FORCE_CACHE;

#pragma mark Public

- (jboolean)isPrivate;

- (jboolean)isPublic;

- (jint)maxAgeSeconds;

- (jint)maxStaleSeconds;

- (jint)minFreshSeconds;

- (jboolean)mustRevalidate;

- (jboolean)noCache;

- (jboolean)noStore;

- (jboolean)noTransform;

- (jboolean)onlyIfCached;

+ (Okhttp3CacheControl *)parseWithOkhttp3Headers:(Okhttp3Headers *)headers;

- (jint)sMaxAgeSeconds;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(Okhttp3CacheControl)

J2OBJC_FIELD_SETTER(Okhttp3CacheControl, headerValue_, NSString *)

inline Okhttp3CacheControl *Okhttp3CacheControl_get_FORCE_NETWORK();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3CacheControl *Okhttp3CacheControl_FORCE_NETWORK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3CacheControl, FORCE_NETWORK, Okhttp3CacheControl *)

inline Okhttp3CacheControl *Okhttp3CacheControl_get_FORCE_CACHE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3CacheControl *Okhttp3CacheControl_FORCE_CACHE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3CacheControl, FORCE_CACHE, Okhttp3CacheControl *)

FOUNDATION_EXPORT Okhttp3CacheControl *Okhttp3CacheControl_parseWithOkhttp3Headers_(Okhttp3Headers *headers);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3CacheControl)

#endif

#if !defined (Okhttp3CacheControl_Builder_) && (INCLUDE_ALL_Okhttp3CacheControl || defined(INCLUDE_Okhttp3CacheControl_Builder))
#define Okhttp3CacheControl_Builder_

@class JavaUtilConcurrentTimeUnit;
@class Okhttp3CacheControl;

@interface Okhttp3CacheControl_Builder : NSObject {
 @public
  jboolean noCache_;
  jboolean noStore_;
  jint maxAgeSeconds_;
  jint maxStaleSeconds_;
  jint minFreshSeconds_;
  jboolean onlyIfCached_;
  jboolean noTransform_;
}

#pragma mark Public

- (instancetype)init;

- (Okhttp3CacheControl *)build;

- (Okhttp3CacheControl_Builder *)maxAgeWithInt:(jint)maxAge
                withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (Okhttp3CacheControl_Builder *)maxStaleWithInt:(jint)maxStale
                  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (Okhttp3CacheControl_Builder *)minFreshWithInt:(jint)minFresh
                  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (Okhttp3CacheControl_Builder *)noCache;

- (Okhttp3CacheControl_Builder *)noStore;

- (Okhttp3CacheControl_Builder *)noTransform;

- (Okhttp3CacheControl_Builder *)onlyIfCached;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3CacheControl_Builder)

FOUNDATION_EXPORT void Okhttp3CacheControl_Builder_init(Okhttp3CacheControl_Builder *self);

FOUNDATION_EXPORT Okhttp3CacheControl_Builder *new_Okhttp3CacheControl_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3CacheControl_Builder *create_Okhttp3CacheControl_Builder_init();

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3CacheControl_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3CacheControl")
