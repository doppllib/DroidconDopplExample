//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3InternalNamedRunnable.h"
#include "Okhttp3InternalUtil.h"
#include "java/lang/Thread.h"

@implementation Okhttp3InternalNamedRunnable

- (instancetype)initWithNSString:(NSString *)format
               withNSObjectArray:(IOSObjectArray *)args {
  Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(self, format, args);
  return self;
}

- (void)run {
  NSString *oldName = [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getName];
  [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) setNameWithNSString:name_];
  @try {
    [self execute];
  }
  @finally {
    [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) setNameWithNSString:oldName];
  }
}

- (void)execute {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSObjectArray:);
  methods[1].selector = @selector(run);
  methods[2].selector = @selector(execute);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;" };
  static const J2ObjcClassInfo _Okhttp3InternalNamedRunnable = { "NamedRunnable", "okhttp3.internal", ptrTable, methods, fields, 7, 0x401, 3, 1, -1, -1, -1, -1, -1 };
  return &_Okhttp3InternalNamedRunnable;
}

@end

void Okhttp3InternalNamedRunnable_initWithNSString_withNSObjectArray_(Okhttp3InternalNamedRunnable *self, NSString *format, IOSObjectArray *args) {
  NSObject_init(self);
  JreStrongAssign(&self->name_, Okhttp3InternalUtil_formatWithNSString_withNSObjectArray_(format, args));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3InternalNamedRunnable)
