//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttpRealInterceptorChain")
#ifdef RESTRICT_Okhttp3InternalHttpRealInterceptorChain
#define INCLUDE_ALL_Okhttp3InternalHttpRealInterceptorChain 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttpRealInterceptorChain 1
#endif
#undef RESTRICT_Okhttp3InternalHttpRealInterceptorChain

#if !defined (Okhttp3InternalHttpRealInterceptorChain_) && (INCLUDE_ALL_Okhttp3InternalHttpRealInterceptorChain || defined(INCLUDE_Okhttp3InternalHttpRealInterceptorChain))
#define Okhttp3InternalHttpRealInterceptorChain_

#define RESTRICT_Okhttp3Interceptor 1
#define INCLUDE_Okhttp3Interceptor_Chain 1
#include "Okhttp3Interceptor.h"

@class Okhttp3InternalConnectionStreamAllocation;
@class Okhttp3Request;
@class Okhttp3Response;
@protocol JavaUtilList;
@protocol Okhttp3Connection;
@protocol Okhttp3InternalHttpHttpStream;

@interface Okhttp3InternalHttpRealInterceptorChain : NSObject < Okhttp3Interceptor_Chain >

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)interceptors
withOkhttp3InternalConnectionStreamAllocation:(Okhttp3InternalConnectionStreamAllocation *)streamAllocation
   withOkhttp3InternalHttpHttpStream:(id<Okhttp3InternalHttpHttpStream>)httpStream
               withOkhttp3Connection:(id<Okhttp3Connection>)connection
                             withInt:(jint)index
                  withOkhttp3Request:(Okhttp3Request *)request;

- (id<Okhttp3Connection>)connection;

- (id<Okhttp3InternalHttpHttpStream>)httpStream;

- (Okhttp3Response *)proceedWithOkhttp3Request:(Okhttp3Request *)request;

- (Okhttp3Response *)proceedWithOkhttp3Request:(Okhttp3Request *)request
 withOkhttp3InternalConnectionStreamAllocation:(Okhttp3InternalConnectionStreamAllocation *)streamAllocation
             withOkhttp3InternalHttpHttpStream:(id<Okhttp3InternalHttpHttpStream>)httpStream
                         withOkhttp3Connection:(id<Okhttp3Connection>)connection;

- (Okhttp3Request *)request;

- (Okhttp3InternalConnectionStreamAllocation *)streamAllocation;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttpRealInterceptorChain)

FOUNDATION_EXPORT void Okhttp3InternalHttpRealInterceptorChain_initWithJavaUtilList_withOkhttp3InternalConnectionStreamAllocation_withOkhttp3InternalHttpHttpStream_withOkhttp3Connection_withInt_withOkhttp3Request_(Okhttp3InternalHttpRealInterceptorChain *self, id<JavaUtilList> interceptors, Okhttp3InternalConnectionStreamAllocation *streamAllocation, id<Okhttp3InternalHttpHttpStream> httpStream, id<Okhttp3Connection> connection, jint index, Okhttp3Request *request);

FOUNDATION_EXPORT Okhttp3InternalHttpRealInterceptorChain *new_Okhttp3InternalHttpRealInterceptorChain_initWithJavaUtilList_withOkhttp3InternalConnectionStreamAllocation_withOkhttp3InternalHttpHttpStream_withOkhttp3Connection_withInt_withOkhttp3Request_(id<JavaUtilList> interceptors, Okhttp3InternalConnectionStreamAllocation *streamAllocation, id<Okhttp3InternalHttpHttpStream> httpStream, id<Okhttp3Connection> connection, jint index, Okhttp3Request *request) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttpRealInterceptorChain *create_Okhttp3InternalHttpRealInterceptorChain_initWithJavaUtilList_withOkhttp3InternalConnectionStreamAllocation_withOkhttp3InternalHttpHttpStream_withOkhttp3Connection_withInt_withOkhttp3Request_(id<JavaUtilList> interceptors, Okhttp3InternalConnectionStreamAllocation *streamAllocation, id<Okhttp3InternalHttpHttpStream> httpStream, id<Okhttp3Connection> connection, jint index, Okhttp3Request *request);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttpRealInterceptorChain)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttpRealInterceptorChain")
