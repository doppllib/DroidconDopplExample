//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalFramedSpdy3")
#ifdef RESTRICT_Okhttp3InternalFramedSpdy3
#define INCLUDE_ALL_Okhttp3InternalFramedSpdy3 0
#else
#define INCLUDE_ALL_Okhttp3InternalFramedSpdy3 1
#endif
#undef RESTRICT_Okhttp3InternalFramedSpdy3

#if !defined (Okhttp3InternalFramedSpdy3_) && (INCLUDE_ALL_Okhttp3InternalFramedSpdy3 || defined(INCLUDE_Okhttp3InternalFramedSpdy3))
#define Okhttp3InternalFramedSpdy3_

#define RESTRICT_Okhttp3InternalFramedVariant 1
#define INCLUDE_Okhttp3InternalFramedVariant 1
#include "Okhttp3InternalFramedVariant.h"

@class IOSByteArray;
@class Okhttp3Protocol;
@protocol Okhttp3InternalFramedFrameReader;
@protocol Okhttp3InternalFramedFrameWriter;
@protocol OkioBufferedSink;
@protocol OkioBufferedSource;

@interface Okhttp3InternalFramedSpdy3 : NSObject < Okhttp3InternalFramedVariant >

+ (jint)TYPE_DATA;

+ (jint)TYPE_SYN_STREAM;

+ (jint)TYPE_SYN_REPLY;

+ (jint)TYPE_RST_STREAM;

+ (jint)TYPE_SETTINGS;

+ (jint)TYPE_PING;

+ (jint)TYPE_GOAWAY;

+ (jint)TYPE_HEADERS;

+ (jint)TYPE_WINDOW_UPDATE;

+ (jint)FLAG_FIN;

+ (jint)FLAG_UNIDIRECTIONAL;

+ (jint)VERSION;

+ (IOSByteArray *)DICTIONARY;

#pragma mark Public

- (instancetype)init;

- (Okhttp3Protocol *)getProtocol;

- (id<Okhttp3InternalFramedFrameReader>)newReaderWithOkioBufferedSource:(id<OkioBufferedSource>)source
                                                            withBoolean:(jboolean)client OBJC_METHOD_FAMILY_NONE;

- (id<Okhttp3InternalFramedFrameWriter>)newWriterWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                                                          withBoolean:(jboolean)client OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalFramedSpdy3)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_DATA();
#define Okhttp3InternalFramedSpdy3_TYPE_DATA 0
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_DATA, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_SYN_STREAM();
#define Okhttp3InternalFramedSpdy3_TYPE_SYN_STREAM 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_SYN_STREAM, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_SYN_REPLY();
#define Okhttp3InternalFramedSpdy3_TYPE_SYN_REPLY 2
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_SYN_REPLY, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_RST_STREAM();
#define Okhttp3InternalFramedSpdy3_TYPE_RST_STREAM 3
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_RST_STREAM, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_SETTINGS();
#define Okhttp3InternalFramedSpdy3_TYPE_SETTINGS 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_SETTINGS, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_PING();
#define Okhttp3InternalFramedSpdy3_TYPE_PING 6
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_PING, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_GOAWAY();
#define Okhttp3InternalFramedSpdy3_TYPE_GOAWAY 7
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_GOAWAY, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_HEADERS();
#define Okhttp3InternalFramedSpdy3_TYPE_HEADERS 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_HEADERS, jint)

inline jint Okhttp3InternalFramedSpdy3_get_TYPE_WINDOW_UPDATE();
#define Okhttp3InternalFramedSpdy3_TYPE_WINDOW_UPDATE 9
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, TYPE_WINDOW_UPDATE, jint)

inline jint Okhttp3InternalFramedSpdy3_get_FLAG_FIN();
#define Okhttp3InternalFramedSpdy3_FLAG_FIN 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, FLAG_FIN, jint)

inline jint Okhttp3InternalFramedSpdy3_get_FLAG_UNIDIRECTIONAL();
#define Okhttp3InternalFramedSpdy3_FLAG_UNIDIRECTIONAL 2
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, FLAG_UNIDIRECTIONAL, jint)

inline jint Okhttp3InternalFramedSpdy3_get_VERSION();
#define Okhttp3InternalFramedSpdy3_VERSION 3
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedSpdy3, VERSION, jint)

inline IOSByteArray *Okhttp3InternalFramedSpdy3_get_DICTIONARY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *Okhttp3InternalFramedSpdy3_DICTIONARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalFramedSpdy3, DICTIONARY, IOSByteArray *)

FOUNDATION_EXPORT void Okhttp3InternalFramedSpdy3_init(Okhttp3InternalFramedSpdy3 *self);

FOUNDATION_EXPORT Okhttp3InternalFramedSpdy3 *new_Okhttp3InternalFramedSpdy3_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedSpdy3 *create_Okhttp3InternalFramedSpdy3_init();

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedSpdy3)

#endif

#if !defined (Okhttp3InternalFramedSpdy3_Reader_) && (INCLUDE_ALL_Okhttp3InternalFramedSpdy3 || defined(INCLUDE_Okhttp3InternalFramedSpdy3_Reader))
#define Okhttp3InternalFramedSpdy3_Reader_

#define RESTRICT_Okhttp3InternalFramedFrameReader 1
#define INCLUDE_Okhttp3InternalFramedFrameReader 1
#include "Okhttp3InternalFramedFrameReader.h"

@protocol Okhttp3InternalFramedFrameReader_Handler;
@protocol OkioBufferedSource;

@interface Okhttp3InternalFramedSpdy3_Reader : NSObject < Okhttp3InternalFramedFrameReader >

#pragma mark Public

- (void)close;

- (jboolean)nextFrameWithOkhttp3InternalFramedFrameReader_Handler:(id<Okhttp3InternalFramedFrameReader_Handler>)handler;

- (void)readConnectionPreface;

#pragma mark Package-Private

- (instancetype)initWithOkioBufferedSource:(id<OkioBufferedSource>)source
                               withBoolean:(jboolean)client;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedSpdy3_Reader)

FOUNDATION_EXPORT void Okhttp3InternalFramedSpdy3_Reader_initWithOkioBufferedSource_withBoolean_(Okhttp3InternalFramedSpdy3_Reader *self, id<OkioBufferedSource> source, jboolean client);

FOUNDATION_EXPORT Okhttp3InternalFramedSpdy3_Reader *new_Okhttp3InternalFramedSpdy3_Reader_initWithOkioBufferedSource_withBoolean_(id<OkioBufferedSource> source, jboolean client) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedSpdy3_Reader *create_Okhttp3InternalFramedSpdy3_Reader_initWithOkioBufferedSource_withBoolean_(id<OkioBufferedSource> source, jboolean client);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedSpdy3_Reader)

#endif

#if !defined (Okhttp3InternalFramedSpdy3_Writer_) && (INCLUDE_ALL_Okhttp3InternalFramedSpdy3 || defined(INCLUDE_Okhttp3InternalFramedSpdy3_Writer))
#define Okhttp3InternalFramedSpdy3_Writer_

#define RESTRICT_Okhttp3InternalFramedFrameWriter 1
#define INCLUDE_Okhttp3InternalFramedFrameWriter 1
#include "Okhttp3InternalFramedFrameWriter.h"

@class IOSByteArray;
@class Okhttp3InternalFramedErrorCode;
@class Okhttp3InternalFramedSettings;
@class OkioBuffer;
@protocol JavaUtilList;
@protocol OkioBufferedSink;

@interface Okhttp3InternalFramedSpdy3_Writer : NSObject < Okhttp3InternalFramedFrameWriter >

#pragma mark Public

- (void)applyAndAckSettingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)peerSettings;

- (void)close;

- (void)connectionPreface;

- (void)dataWithBoolean:(jboolean)outFinished
                withInt:(jint)streamId
         withOkioBuffer:(OkioBuffer *)source
                withInt:(jint)byteCount;

- (void)flush;

- (void)goAwayWithInt:(jint)lastGoodStreamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode
        withByteArray:(IOSByteArray *)ignored;

- (void)headersWithInt:(jint)streamId
      withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (jint)maxDataLength;

- (void)pingWithBoolean:(jboolean)reply
                withInt:(jint)payload1
                withInt:(jint)payload2;

- (void)pushPromiseWithInt:(jint)streamId
                   withInt:(jint)promisedStreamId
          withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (void)rstStreamWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode;

- (void)settingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)settings;

- (void)synReplyWithBoolean:(jboolean)outFinished
                    withInt:(jint)streamId
           withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)synStreamWithBoolean:(jboolean)outFinished
                 withBoolean:(jboolean)inFinished
                     withInt:(jint)streamId
                     withInt:(jint)associatedStreamId
            withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)windowUpdateWithInt:(jint)streamId
                   withLong:(jlong)increment;

#pragma mark Package-Private

- (instancetype)initWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                             withBoolean:(jboolean)client;

- (void)sendDataFrameWithInt:(jint)streamId
                     withInt:(jint)flags
              withOkioBuffer:(OkioBuffer *)buffer
                     withInt:(jint)byteCount;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedSpdy3_Writer)

FOUNDATION_EXPORT void Okhttp3InternalFramedSpdy3_Writer_initWithOkioBufferedSink_withBoolean_(Okhttp3InternalFramedSpdy3_Writer *self, id<OkioBufferedSink> sink, jboolean client);

FOUNDATION_EXPORT Okhttp3InternalFramedSpdy3_Writer *new_Okhttp3InternalFramedSpdy3_Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedSpdy3_Writer *create_Okhttp3InternalFramedSpdy3_Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedSpdy3_Writer)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalFramedSpdy3")
