//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttpBridgeInterceptor")
#ifdef RESTRICT_Okhttp3InternalHttpBridgeInterceptor
#define INCLUDE_ALL_Okhttp3InternalHttpBridgeInterceptor 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttpBridgeInterceptor 1
#endif
#undef RESTRICT_Okhttp3InternalHttpBridgeInterceptor

#if !defined (Okhttp3InternalHttpBridgeInterceptor_) && (INCLUDE_ALL_Okhttp3InternalHttpBridgeInterceptor || defined(INCLUDE_Okhttp3InternalHttpBridgeInterceptor))
#define Okhttp3InternalHttpBridgeInterceptor_

#define RESTRICT_Okhttp3Interceptor 1
#define INCLUDE_Okhttp3Interceptor 1
#include "Okhttp3Interceptor.h"

@class Okhttp3Response;
@protocol Okhttp3CookieJar;
@protocol Okhttp3Interceptor_Chain;

@interface Okhttp3InternalHttpBridgeInterceptor : NSObject < Okhttp3Interceptor >

#pragma mark Public

- (instancetype)initWithOkhttp3CookieJar:(id<Okhttp3CookieJar>)cookieJar;

- (Okhttp3Response *)interceptWithOkhttp3Interceptor_Chain:(id<Okhttp3Interceptor_Chain>)chain;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttpBridgeInterceptor)

FOUNDATION_EXPORT void Okhttp3InternalHttpBridgeInterceptor_initWithOkhttp3CookieJar_(Okhttp3InternalHttpBridgeInterceptor *self, id<Okhttp3CookieJar> cookieJar);

FOUNDATION_EXPORT Okhttp3InternalHttpBridgeInterceptor *new_Okhttp3InternalHttpBridgeInterceptor_initWithOkhttp3CookieJar_(id<Okhttp3CookieJar> cookieJar) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttpBridgeInterceptor *create_Okhttp3InternalHttpBridgeInterceptor_initWithOkhttp3CookieJar_(id<Okhttp3CookieJar> cookieJar);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttpBridgeInterceptor)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttpBridgeInterceptor")
