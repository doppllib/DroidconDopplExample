//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3Challenge")
#ifdef RESTRICT_Okhttp3Challenge
#define INCLUDE_ALL_Okhttp3Challenge 0
#else
#define INCLUDE_ALL_Okhttp3Challenge 1
#endif
#undef RESTRICT_Okhttp3Challenge

#if !defined (Okhttp3Challenge_) && (INCLUDE_ALL_Okhttp3Challenge || defined(INCLUDE_Okhttp3Challenge))
#define Okhttp3Challenge_

@interface Okhttp3Challenge : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)scheme
                    withNSString:(NSString *)realm;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)realm;

- (NSString *)scheme;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3Challenge)

FOUNDATION_EXPORT void Okhttp3Challenge_initWithNSString_withNSString_(Okhttp3Challenge *self, NSString *scheme, NSString *realm);

FOUNDATION_EXPORT Okhttp3Challenge *new_Okhttp3Challenge_initWithNSString_withNSString_(NSString *scheme, NSString *realm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3Challenge *create_Okhttp3Challenge_initWithNSString_withNSString_(NSString *scheme, NSString *realm);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3Challenge)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3Challenge")
