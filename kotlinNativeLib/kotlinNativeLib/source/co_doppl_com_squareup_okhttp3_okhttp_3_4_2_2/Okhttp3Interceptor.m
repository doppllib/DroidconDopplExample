//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "Okhttp3Interceptor.h"

@interface Okhttp3Interceptor : NSObject

@end

@interface Okhttp3Interceptor_Chain : NSObject

@end

@implementation Okhttp3Interceptor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOkhttp3Response;", 0x401, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(interceptWithOkhttp3Interceptor_Chain:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "intercept", "LOkhttp3Interceptor_Chain;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _Okhttp3Interceptor = { "Interceptor", "okhttp3", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, 1, -1, -1, -1 };
  return &_Okhttp3Interceptor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(Okhttp3Interceptor)

@implementation Okhttp3Interceptor_Chain

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOkhttp3Request;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOkhttp3Response;", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOkhttp3Connection;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(request);
  methods[1].selector = @selector(proceedWithOkhttp3Request:);
  methods[2].selector = @selector(connection);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "proceed", "LOkhttp3Request;", "LJavaIoIOException;", "LOkhttp3Interceptor;" };
  static const J2ObjcClassInfo _Okhttp3Interceptor_Chain = { "Chain", "okhttp3", ptrTable, methods, NULL, 7, 0x609, 3, 0, 3, -1, -1, -1, -1 };
  return &_Okhttp3Interceptor_Chain;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(Okhttp3Interceptor_Chain)
