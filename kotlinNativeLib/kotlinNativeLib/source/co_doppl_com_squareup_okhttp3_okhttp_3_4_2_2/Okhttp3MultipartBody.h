//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3MultipartBody")
#ifdef RESTRICT_Okhttp3MultipartBody
#define INCLUDE_ALL_Okhttp3MultipartBody 0
#else
#define INCLUDE_ALL_Okhttp3MultipartBody 1
#endif
#undef RESTRICT_Okhttp3MultipartBody

#if !defined (Okhttp3MultipartBody_) && (INCLUDE_ALL_Okhttp3MultipartBody || defined(INCLUDE_Okhttp3MultipartBody))
#define Okhttp3MultipartBody_

#define RESTRICT_Okhttp3RequestBody 1
#define INCLUDE_Okhttp3RequestBody 1
#include "Okhttp3RequestBody.h"

@class JavaLangStringBuilder;
@class Okhttp3MediaType;
@class Okhttp3MultipartBody_Part;
@class OkioByteString;
@protocol JavaUtilList;
@protocol OkioBufferedSink;

@interface Okhttp3MultipartBody : Okhttp3RequestBody

+ (Okhttp3MediaType *)MIXED;

+ (Okhttp3MediaType *)ALTERNATIVE;

+ (Okhttp3MediaType *)DIGEST;

+ (Okhttp3MediaType *)PARALLEL;

+ (Okhttp3MediaType *)FORM;

#pragma mark Public

- (NSString *)boundary;

- (jlong)contentLength;

- (Okhttp3MediaType *)contentType;

- (Okhttp3MultipartBody_Part *)partWithInt:(jint)index;

- (id<JavaUtilList>)parts;

- (jint)size;

- (Okhttp3MediaType *)type;

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink;

#pragma mark Package-Private

- (instancetype)initWithOkioByteString:(OkioByteString *)boundary
                  withOkhttp3MediaType:(Okhttp3MediaType *)type
                      withJavaUtilList:(id<JavaUtilList>)parts;

+ (JavaLangStringBuilder *)appendQuotedStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)target
                                                          withNSString:(NSString *)key;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(Okhttp3MultipartBody)

inline Okhttp3MediaType *Okhttp3MultipartBody_get_MIXED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3MediaType *Okhttp3MultipartBody_MIXED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3MultipartBody, MIXED, Okhttp3MediaType *)

inline Okhttp3MediaType *Okhttp3MultipartBody_get_ALTERNATIVE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3MediaType *Okhttp3MultipartBody_ALTERNATIVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3MultipartBody, ALTERNATIVE, Okhttp3MediaType *)

inline Okhttp3MediaType *Okhttp3MultipartBody_get_DIGEST();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3MediaType *Okhttp3MultipartBody_DIGEST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3MultipartBody, DIGEST, Okhttp3MediaType *)

inline Okhttp3MediaType *Okhttp3MultipartBody_get_PARALLEL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3MediaType *Okhttp3MultipartBody_PARALLEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3MultipartBody, PARALLEL, Okhttp3MediaType *)

inline Okhttp3MediaType *Okhttp3MultipartBody_get_FORM();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3MediaType *Okhttp3MultipartBody_FORM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3MultipartBody, FORM, Okhttp3MediaType *)

FOUNDATION_EXPORT void Okhttp3MultipartBody_initWithOkioByteString_withOkhttp3MediaType_withJavaUtilList_(Okhttp3MultipartBody *self, OkioByteString *boundary, Okhttp3MediaType *type, id<JavaUtilList> parts);

FOUNDATION_EXPORT Okhttp3MultipartBody *new_Okhttp3MultipartBody_initWithOkioByteString_withOkhttp3MediaType_withJavaUtilList_(OkioByteString *boundary, Okhttp3MediaType *type, id<JavaUtilList> parts) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3MultipartBody *create_Okhttp3MultipartBody_initWithOkioByteString_withOkhttp3MediaType_withJavaUtilList_(OkioByteString *boundary, Okhttp3MediaType *type, id<JavaUtilList> parts);

FOUNDATION_EXPORT JavaLangStringBuilder *Okhttp3MultipartBody_appendQuotedStringWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *target, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3MultipartBody)

#endif

#if !defined (Okhttp3MultipartBody_Part_) && (INCLUDE_ALL_Okhttp3MultipartBody || defined(INCLUDE_Okhttp3MultipartBody_Part))
#define Okhttp3MultipartBody_Part_

@class Okhttp3Headers;
@class Okhttp3RequestBody;

@interface Okhttp3MultipartBody_Part : NSObject

#pragma mark Public

+ (Okhttp3MultipartBody_Part *)createWithOkhttp3Headers:(Okhttp3Headers *)headers
                                 withOkhttp3RequestBody:(Okhttp3RequestBody *)body;

+ (Okhttp3MultipartBody_Part *)createWithOkhttp3RequestBody:(Okhttp3RequestBody *)body;

+ (Okhttp3MultipartBody_Part *)createFormDataWithNSString:(NSString *)name
                                             withNSString:(NSString *)value;

+ (Okhttp3MultipartBody_Part *)createFormDataWithNSString:(NSString *)name
                                             withNSString:(NSString *)filename
                                   withOkhttp3RequestBody:(Okhttp3RequestBody *)body;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3MultipartBody_Part)

FOUNDATION_EXPORT Okhttp3MultipartBody_Part *Okhttp3MultipartBody_Part_createWithOkhttp3RequestBody_(Okhttp3RequestBody *body);

FOUNDATION_EXPORT Okhttp3MultipartBody_Part *Okhttp3MultipartBody_Part_createWithOkhttp3Headers_withOkhttp3RequestBody_(Okhttp3Headers *headers, Okhttp3RequestBody *body);

FOUNDATION_EXPORT Okhttp3MultipartBody_Part *Okhttp3MultipartBody_Part_createFormDataWithNSString_withNSString_(NSString *name, NSString *value);

FOUNDATION_EXPORT Okhttp3MultipartBody_Part *Okhttp3MultipartBody_Part_createFormDataWithNSString_withNSString_withOkhttp3RequestBody_(NSString *name, NSString *filename, Okhttp3RequestBody *body);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3MultipartBody_Part)

#endif

#if !defined (Okhttp3MultipartBody_Builder_) && (INCLUDE_ALL_Okhttp3MultipartBody || defined(INCLUDE_Okhttp3MultipartBody_Builder))
#define Okhttp3MultipartBody_Builder_

@class Okhttp3Headers;
@class Okhttp3MediaType;
@class Okhttp3MultipartBody;
@class Okhttp3MultipartBody_Part;
@class Okhttp3RequestBody;

@interface Okhttp3MultipartBody_Builder : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)boundary;

- (Okhttp3MultipartBody_Builder *)addFormDataPartWithNSString:(NSString *)name
                                                 withNSString:(NSString *)value;

- (Okhttp3MultipartBody_Builder *)addFormDataPartWithNSString:(NSString *)name
                                                 withNSString:(NSString *)filename
                                       withOkhttp3RequestBody:(Okhttp3RequestBody *)body;

- (Okhttp3MultipartBody_Builder *)addPartWithOkhttp3Headers:(Okhttp3Headers *)headers
                                     withOkhttp3RequestBody:(Okhttp3RequestBody *)body;

- (Okhttp3MultipartBody_Builder *)addPartWithOkhttp3MultipartBody_Part:(Okhttp3MultipartBody_Part *)part;

- (Okhttp3MultipartBody_Builder *)addPartWithOkhttp3RequestBody:(Okhttp3RequestBody *)body;

- (Okhttp3MultipartBody *)build;

- (Okhttp3MultipartBody_Builder *)setTypeWithOkhttp3MediaType:(Okhttp3MediaType *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3MultipartBody_Builder)

FOUNDATION_EXPORT void Okhttp3MultipartBody_Builder_init(Okhttp3MultipartBody_Builder *self);

FOUNDATION_EXPORT Okhttp3MultipartBody_Builder *new_Okhttp3MultipartBody_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3MultipartBody_Builder *create_Okhttp3MultipartBody_Builder_init();

FOUNDATION_EXPORT void Okhttp3MultipartBody_Builder_initWithNSString_(Okhttp3MultipartBody_Builder *self, NSString *boundary);

FOUNDATION_EXPORT Okhttp3MultipartBody_Builder *new_Okhttp3MultipartBody_Builder_initWithNSString_(NSString *boundary) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3MultipartBody_Builder *create_Okhttp3MultipartBody_Builder_initWithNSString_(NSString *boundary);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3MultipartBody_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3MultipartBody")
