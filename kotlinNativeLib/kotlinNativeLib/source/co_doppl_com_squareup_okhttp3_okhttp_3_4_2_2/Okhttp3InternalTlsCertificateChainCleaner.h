//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalTlsCertificateChainCleaner")
#ifdef RESTRICT_Okhttp3InternalTlsCertificateChainCleaner
#define INCLUDE_ALL_Okhttp3InternalTlsCertificateChainCleaner 0
#else
#define INCLUDE_ALL_Okhttp3InternalTlsCertificateChainCleaner 1
#endif
#undef RESTRICT_Okhttp3InternalTlsCertificateChainCleaner

#if !defined (Okhttp3InternalTlsCertificateChainCleaner_) && (INCLUDE_ALL_Okhttp3InternalTlsCertificateChainCleaner || defined(INCLUDE_Okhttp3InternalTlsCertificateChainCleaner))
#define Okhttp3InternalTlsCertificateChainCleaner_

@class IOSObjectArray;
@protocol JavaUtilList;
@protocol JavaxNetSslX509TrustManager;

@interface Okhttp3InternalTlsCertificateChainCleaner : NSObject

#pragma mark Public

- (instancetype)init;

- (id<JavaUtilList>)cleanWithJavaUtilList:(id<JavaUtilList>)chain
                             withNSString:(NSString *)hostname;

+ (Okhttp3InternalTlsCertificateChainCleaner *)getWithJavaSecurityCertX509CertificateArray:(IOSObjectArray *)caCerts;

+ (Okhttp3InternalTlsCertificateChainCleaner *)getWithJavaxNetSslX509TrustManager:(id<JavaxNetSslX509TrustManager>)trustManager;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalTlsCertificateChainCleaner)

FOUNDATION_EXPORT void Okhttp3InternalTlsCertificateChainCleaner_init(Okhttp3InternalTlsCertificateChainCleaner *self);

FOUNDATION_EXPORT Okhttp3InternalTlsCertificateChainCleaner *Okhttp3InternalTlsCertificateChainCleaner_getWithJavaxNetSslX509TrustManager_(id<JavaxNetSslX509TrustManager> trustManager);

FOUNDATION_EXPORT Okhttp3InternalTlsCertificateChainCleaner *Okhttp3InternalTlsCertificateChainCleaner_getWithJavaSecurityCertX509CertificateArray_(IOSObjectArray *caCerts);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalTlsCertificateChainCleaner)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalTlsCertificateChainCleaner")
