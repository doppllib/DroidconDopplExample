//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalPlatformJdkWithJettyBootPlatform")
#ifdef RESTRICT_Okhttp3InternalPlatformJdkWithJettyBootPlatform
#define INCLUDE_ALL_Okhttp3InternalPlatformJdkWithJettyBootPlatform 0
#else
#define INCLUDE_ALL_Okhttp3InternalPlatformJdkWithJettyBootPlatform 1
#endif
#undef RESTRICT_Okhttp3InternalPlatformJdkWithJettyBootPlatform

#if !defined (Okhttp3InternalPlatformJdkWithJettyBootPlatform_) && (INCLUDE_ALL_Okhttp3InternalPlatformJdkWithJettyBootPlatform || defined(INCLUDE_Okhttp3InternalPlatformJdkWithJettyBootPlatform))
#define Okhttp3InternalPlatformJdkWithJettyBootPlatform_

#define RESTRICT_Okhttp3InternalPlatformPlatform 1
#define INCLUDE_Okhttp3InternalPlatformPlatform 1
#include "Okhttp3InternalPlatformPlatform.h"

@class IOSClass;
@class JavaLangReflectMethod;
@class JavaxNetSslSSLSocket;
@protocol JavaUtilList;

@interface Okhttp3InternalPlatformJdkWithJettyBootPlatform : Okhttp3InternalPlatformPlatform

#pragma mark Public

- (instancetype)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)putMethod
                    withJavaLangReflectMethod:(JavaLangReflectMethod *)getMethod
                    withJavaLangReflectMethod:(JavaLangReflectMethod *)removeMethod
                                 withIOSClass:(IOSClass *)clientProviderClass
                                 withIOSClass:(IOSClass *)serverProviderClass;

- (void)afterHandshakeWithJavaxNetSslSSLSocket:(JavaxNetSslSSLSocket *)sslSocket;

+ (Okhttp3InternalPlatformPlatform *)buildIfSupported;

- (void)configureTlsExtensionsWithJavaxNetSslSSLSocket:(JavaxNetSslSSLSocket *)sslSocket
                                          withNSString:(NSString *)hostname
                                      withJavaUtilList:(id<JavaUtilList>)protocols;

- (NSString *)getSelectedProtocolWithJavaxNetSslSSLSocket:(JavaxNetSslSSLSocket *)socket;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalPlatformJdkWithJettyBootPlatform)

FOUNDATION_EXPORT void Okhttp3InternalPlatformJdkWithJettyBootPlatform_initWithJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_withIOSClass_withIOSClass_(Okhttp3InternalPlatformJdkWithJettyBootPlatform *self, JavaLangReflectMethod *putMethod, JavaLangReflectMethod *getMethod, JavaLangReflectMethod *removeMethod, IOSClass *clientProviderClass, IOSClass *serverProviderClass);

FOUNDATION_EXPORT Okhttp3InternalPlatformJdkWithJettyBootPlatform *new_Okhttp3InternalPlatformJdkWithJettyBootPlatform_initWithJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_withIOSClass_withIOSClass_(JavaLangReflectMethod *putMethod, JavaLangReflectMethod *getMethod, JavaLangReflectMethod *removeMethod, IOSClass *clientProviderClass, IOSClass *serverProviderClass) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalPlatformJdkWithJettyBootPlatform *create_Okhttp3InternalPlatformJdkWithJettyBootPlatform_initWithJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_withIOSClass_withIOSClass_(JavaLangReflectMethod *putMethod, JavaLangReflectMethod *getMethod, JavaLangReflectMethod *removeMethod, IOSClass *clientProviderClass, IOSClass *serverProviderClass);

FOUNDATION_EXPORT Okhttp3InternalPlatformPlatform *Okhttp3InternalPlatformJdkWithJettyBootPlatform_buildIfSupported();

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalPlatformJdkWithJettyBootPlatform)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalPlatformJdkWithJettyBootPlatform")
