//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache")
#ifdef RESTRICT_Okhttp3InternalCacheDiskLruCache
#define INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache 0
#else
#define INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache 1
#endif
#undef RESTRICT_Okhttp3InternalCacheDiskLruCache

#if !defined (Okhttp3InternalCacheDiskLruCache_) && (INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache || defined(INCLUDE_Okhttp3InternalCacheDiskLruCache))
#define Okhttp3InternalCacheDiskLruCache_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

#define RESTRICT_JavaIoFlushable 1
#define INCLUDE_JavaIoFlushable 1
#include "java/io/Flushable.h"

@class JavaIoFile;
@class JavaUtilRegexPattern;
@class Okhttp3InternalCacheDiskLruCache_Editor;
@class Okhttp3InternalCacheDiskLruCache_Snapshot;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilIterator;
@protocol Okhttp3InternalIoFileSystem;

@interface Okhttp3InternalCacheDiskLruCache : NSObject < JavaIoCloseable, JavaIoFlushable >

+ (NSString *)JOURNAL_FILE;

+ (NSString *)JOURNAL_FILE_TEMP;

+ (NSString *)JOURNAL_FILE_BACKUP;

+ (NSString *)MAGIC;

+ (NSString *)VERSION_1;

+ (jlong)ANY_SEQUENCE_NUMBER;

+ (JavaUtilRegexPattern *)LEGAL_KEY_PATTERN;

#pragma mark Public

- (void)close;

+ (Okhttp3InternalCacheDiskLruCache *)createWithOkhttp3InternalIoFileSystem:(id<Okhttp3InternalIoFileSystem>)fileSystem
                                                             withJavaIoFile:(JavaIoFile *)directory
                                                                    withInt:(jint)appVersion
                                                                    withInt:(jint)valueCount
                                                                   withLong:(jlong)maxSize;

- (void)delete__;

- (Okhttp3InternalCacheDiskLruCache_Editor *)editWithNSString:(NSString *)key;

- (void)evictAll;

- (void)flush;

- (Okhttp3InternalCacheDiskLruCache_Snapshot *)getWithNSString:(NSString *)key;

- (JavaIoFile *)getDirectory;

- (jlong)getMaxSize;

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)isClosed;

- (jboolean)removeWithNSString:(NSString *)key;

- (void)setMaxSizeWithLong:(jlong)maxSize;

- (jlong)size;

- (id<JavaUtilIterator>)snapshots;

#pragma mark Package-Private

- (instancetype)initWithOkhttp3InternalIoFileSystem:(id<Okhttp3InternalIoFileSystem>)fileSystem
                                     withJavaIoFile:(JavaIoFile *)directory
                                            withInt:(jint)appVersion
                                            withInt:(jint)valueCount
                                           withLong:(jlong)maxSize
                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalCacheDiskLruCache)

inline NSString *Okhttp3InternalCacheDiskLruCache_get_JOURNAL_FILE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Okhttp3InternalCacheDiskLruCache_JOURNAL_FILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalCacheDiskLruCache, JOURNAL_FILE, NSString *)

inline NSString *Okhttp3InternalCacheDiskLruCache_get_JOURNAL_FILE_TEMP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Okhttp3InternalCacheDiskLruCache_JOURNAL_FILE_TEMP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalCacheDiskLruCache, JOURNAL_FILE_TEMP, NSString *)

inline NSString *Okhttp3InternalCacheDiskLruCache_get_JOURNAL_FILE_BACKUP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Okhttp3InternalCacheDiskLruCache_JOURNAL_FILE_BACKUP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalCacheDiskLruCache, JOURNAL_FILE_BACKUP, NSString *)

inline NSString *Okhttp3InternalCacheDiskLruCache_get_MAGIC();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Okhttp3InternalCacheDiskLruCache_MAGIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalCacheDiskLruCache, MAGIC, NSString *)

inline NSString *Okhttp3InternalCacheDiskLruCache_get_VERSION_1();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Okhttp3InternalCacheDiskLruCache_VERSION_1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalCacheDiskLruCache, VERSION_1, NSString *)

inline jlong Okhttp3InternalCacheDiskLruCache_get_ANY_SEQUENCE_NUMBER();
#define Okhttp3InternalCacheDiskLruCache_ANY_SEQUENCE_NUMBER -1LL
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalCacheDiskLruCache, ANY_SEQUENCE_NUMBER, jlong)

inline JavaUtilRegexPattern *Okhttp3InternalCacheDiskLruCache_get_LEGAL_KEY_PATTERN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *Okhttp3InternalCacheDiskLruCache_LEGAL_KEY_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalCacheDiskLruCache, LEGAL_KEY_PATTERN, JavaUtilRegexPattern *)

FOUNDATION_EXPORT void Okhttp3InternalCacheDiskLruCache_initWithOkhttp3InternalIoFileSystem_withJavaIoFile_withInt_withInt_withLong_withJavaUtilConcurrentExecutor_(Okhttp3InternalCacheDiskLruCache *self, id<Okhttp3InternalIoFileSystem> fileSystem, JavaIoFile *directory, jint appVersion, jint valueCount, jlong maxSize, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT Okhttp3InternalCacheDiskLruCache *new_Okhttp3InternalCacheDiskLruCache_initWithOkhttp3InternalIoFileSystem_withJavaIoFile_withInt_withInt_withLong_withJavaUtilConcurrentExecutor_(id<Okhttp3InternalIoFileSystem> fileSystem, JavaIoFile *directory, jint appVersion, jint valueCount, jlong maxSize, id<JavaUtilConcurrentExecutor> executor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalCacheDiskLruCache *create_Okhttp3InternalCacheDiskLruCache_initWithOkhttp3InternalIoFileSystem_withJavaIoFile_withInt_withInt_withLong_withJavaUtilConcurrentExecutor_(id<Okhttp3InternalIoFileSystem> fileSystem, JavaIoFile *directory, jint appVersion, jint valueCount, jlong maxSize, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT Okhttp3InternalCacheDiskLruCache *Okhttp3InternalCacheDiskLruCache_createWithOkhttp3InternalIoFileSystem_withJavaIoFile_withInt_withInt_withLong_(id<Okhttp3InternalIoFileSystem> fileSystem, JavaIoFile *directory, jint appVersion, jint valueCount, jlong maxSize);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalCacheDiskLruCache)

#endif

#if !defined (Okhttp3InternalCacheDiskLruCache_Snapshot_) && (INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache || defined(INCLUDE_Okhttp3InternalCacheDiskLruCache_Snapshot))
#define Okhttp3InternalCacheDiskLruCache_Snapshot_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class Okhttp3InternalCacheDiskLruCache_Editor;
@protocol OkioSource;

@interface Okhttp3InternalCacheDiskLruCache_Snapshot : NSObject < JavaIoCloseable >

#pragma mark Public

- (void)close;

- (Okhttp3InternalCacheDiskLruCache_Editor *)edit;

- (jlong)getLengthWithInt:(jint)index;

- (id<OkioSource>)getSourceWithInt:(jint)index;

- (NSString *)key;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalCacheDiskLruCache_Snapshot)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalCacheDiskLruCache_Snapshot)

#endif

#if !defined (Okhttp3InternalCacheDiskLruCache_Editor_) && (INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache || defined(INCLUDE_Okhttp3InternalCacheDiskLruCache_Editor))
#define Okhttp3InternalCacheDiskLruCache_Editor_

@protocol OkioSink;
@protocol OkioSource;

@interface Okhttp3InternalCacheDiskLruCache_Editor : NSObject

#pragma mark Public

- (void)abort;

- (void)abortUnlessCommitted;

- (void)commit;

- (id<OkioSink>)newSinkWithInt:(jint)index OBJC_METHOD_FAMILY_NONE;

- (id<OkioSource>)newSourceWithInt:(jint)index OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (void)detach;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalCacheDiskLruCache_Editor)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalCacheDiskLruCache_Editor)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalCacheDiskLruCache")
