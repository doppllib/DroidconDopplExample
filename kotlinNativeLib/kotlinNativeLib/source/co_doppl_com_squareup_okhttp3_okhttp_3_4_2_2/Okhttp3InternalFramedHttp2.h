//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalFramedHttp2")
#ifdef RESTRICT_Okhttp3InternalFramedHttp2
#define INCLUDE_ALL_Okhttp3InternalFramedHttp2 0
#else
#define INCLUDE_ALL_Okhttp3InternalFramedHttp2 1
#endif
#undef RESTRICT_Okhttp3InternalFramedHttp2

#if !defined (Okhttp3InternalFramedHttp2_) && (INCLUDE_ALL_Okhttp3InternalFramedHttp2 || defined(INCLUDE_Okhttp3InternalFramedHttp2))
#define Okhttp3InternalFramedHttp2_

#define RESTRICT_Okhttp3InternalFramedVariant 1
#define INCLUDE_Okhttp3InternalFramedVariant 1
#include "Okhttp3InternalFramedVariant.h"

@class Okhttp3Protocol;
@protocol Okhttp3InternalFramedFrameReader;
@protocol Okhttp3InternalFramedFrameWriter;
@protocol OkioBufferedSink;
@protocol OkioBufferedSource;

@interface Okhttp3InternalFramedHttp2 : NSObject < Okhttp3InternalFramedVariant >

+ (jint)INITIAL_MAX_FRAME_SIZE;

+ (jbyte)TYPE_DATA;

+ (jbyte)TYPE_HEADERS;

+ (jbyte)TYPE_PRIORITY;

+ (jbyte)TYPE_RST_STREAM;

+ (jbyte)TYPE_SETTINGS;

+ (jbyte)TYPE_PUSH_PROMISE;

+ (jbyte)TYPE_PING;

+ (jbyte)TYPE_GOAWAY;

+ (jbyte)TYPE_WINDOW_UPDATE;

+ (jbyte)TYPE_CONTINUATION;

+ (jbyte)FLAG_NONE;

+ (jbyte)FLAG_ACK;

+ (jbyte)FLAG_END_STREAM;

+ (jbyte)FLAG_END_HEADERS;

+ (jbyte)FLAG_END_PUSH_PROMISE;

+ (jbyte)FLAG_PADDED;

+ (jbyte)FLAG_PRIORITY;

+ (jbyte)FLAG_COMPRESSED;

#pragma mark Public

- (instancetype)init;

- (Okhttp3Protocol *)getProtocol;

- (id<Okhttp3InternalFramedFrameReader>)newReaderWithOkioBufferedSource:(id<OkioBufferedSource>)source
                                                            withBoolean:(jboolean)client OBJC_METHOD_FAMILY_NONE;

- (id<Okhttp3InternalFramedFrameWriter>)newWriterWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                                                          withBoolean:(jboolean)client OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalFramedHttp2)

inline jint Okhttp3InternalFramedHttp2_get_INITIAL_MAX_FRAME_SIZE();
#define Okhttp3InternalFramedHttp2_INITIAL_MAX_FRAME_SIZE 16384
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, INITIAL_MAX_FRAME_SIZE, jint)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_DATA();
#define Okhttp3InternalFramedHttp2_TYPE_DATA 0
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_DATA, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_HEADERS();
#define Okhttp3InternalFramedHttp2_TYPE_HEADERS 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_HEADERS, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_PRIORITY();
#define Okhttp3InternalFramedHttp2_TYPE_PRIORITY 2
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_PRIORITY, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_RST_STREAM();
#define Okhttp3InternalFramedHttp2_TYPE_RST_STREAM 3
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_RST_STREAM, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_SETTINGS();
#define Okhttp3InternalFramedHttp2_TYPE_SETTINGS 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_SETTINGS, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_PUSH_PROMISE();
#define Okhttp3InternalFramedHttp2_TYPE_PUSH_PROMISE 5
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_PUSH_PROMISE, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_PING();
#define Okhttp3InternalFramedHttp2_TYPE_PING 6
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_PING, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_GOAWAY();
#define Okhttp3InternalFramedHttp2_TYPE_GOAWAY 7
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_GOAWAY, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_WINDOW_UPDATE();
#define Okhttp3InternalFramedHttp2_TYPE_WINDOW_UPDATE 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_WINDOW_UPDATE, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_TYPE_CONTINUATION();
#define Okhttp3InternalFramedHttp2_TYPE_CONTINUATION 9
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, TYPE_CONTINUATION, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_NONE();
#define Okhttp3InternalFramedHttp2_FLAG_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_NONE, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_ACK();
#define Okhttp3InternalFramedHttp2_FLAG_ACK 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_ACK, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_END_STREAM();
#define Okhttp3InternalFramedHttp2_FLAG_END_STREAM 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_END_STREAM, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_END_HEADERS();
#define Okhttp3InternalFramedHttp2_FLAG_END_HEADERS 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_END_HEADERS, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_END_PUSH_PROMISE();
#define Okhttp3InternalFramedHttp2_FLAG_END_PUSH_PROMISE 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_END_PUSH_PROMISE, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_PADDED();
#define Okhttp3InternalFramedHttp2_FLAG_PADDED 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_PADDED, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_PRIORITY();
#define Okhttp3InternalFramedHttp2_FLAG_PRIORITY 32
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_PRIORITY, jbyte)

inline jbyte Okhttp3InternalFramedHttp2_get_FLAG_COMPRESSED();
#define Okhttp3InternalFramedHttp2_FLAG_COMPRESSED 32
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalFramedHttp2, FLAG_COMPRESSED, jbyte)

FOUNDATION_EXPORT void Okhttp3InternalFramedHttp2_init(Okhttp3InternalFramedHttp2 *self);

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2 *new_Okhttp3InternalFramedHttp2_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2 *create_Okhttp3InternalFramedHttp2_init();

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHttp2)

#endif

#if !defined (Okhttp3InternalFramedHttp2_Reader_) && (INCLUDE_ALL_Okhttp3InternalFramedHttp2 || defined(INCLUDE_Okhttp3InternalFramedHttp2_Reader))
#define Okhttp3InternalFramedHttp2_Reader_

#define RESTRICT_Okhttp3InternalFramedFrameReader 1
#define INCLUDE_Okhttp3InternalFramedFrameReader 1
#include "Okhttp3InternalFramedFrameReader.h"

@class Okhttp3InternalFramedHpack_Reader;
@protocol Okhttp3InternalFramedFrameReader_Handler;
@protocol OkioBufferedSource;

@interface Okhttp3InternalFramedHttp2_Reader : NSObject < Okhttp3InternalFramedFrameReader > {
 @public
  Okhttp3InternalFramedHpack_Reader *hpackReader_;
}

#pragma mark Public

- (void)close;

- (jboolean)nextFrameWithOkhttp3InternalFramedFrameReader_Handler:(id<Okhttp3InternalFramedFrameReader_Handler>)handler;

- (void)readConnectionPreface;

#pragma mark Package-Private

- (instancetype)initWithOkioBufferedSource:(id<OkioBufferedSource>)source
                                   withInt:(jint)headerTableSize
                               withBoolean:(jboolean)client;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedHttp2_Reader)

J2OBJC_FIELD_SETTER(Okhttp3InternalFramedHttp2_Reader, hpackReader_, Okhttp3InternalFramedHpack_Reader *)

FOUNDATION_EXPORT void Okhttp3InternalFramedHttp2_Reader_initWithOkioBufferedSource_withInt_withBoolean_(Okhttp3InternalFramedHttp2_Reader *self, id<OkioBufferedSource> source, jint headerTableSize, jboolean client);

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_Reader *new_Okhttp3InternalFramedHttp2_Reader_initWithOkioBufferedSource_withInt_withBoolean_(id<OkioBufferedSource> source, jint headerTableSize, jboolean client) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_Reader *create_Okhttp3InternalFramedHttp2_Reader_initWithOkioBufferedSource_withInt_withBoolean_(id<OkioBufferedSource> source, jint headerTableSize, jboolean client);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHttp2_Reader)

#endif

#if !defined (Okhttp3InternalFramedHttp2_Writer_) && (INCLUDE_ALL_Okhttp3InternalFramedHttp2 || defined(INCLUDE_Okhttp3InternalFramedHttp2_Writer))
#define Okhttp3InternalFramedHttp2_Writer_

#define RESTRICT_Okhttp3InternalFramedFrameWriter 1
#define INCLUDE_Okhttp3InternalFramedFrameWriter 1
#include "Okhttp3InternalFramedFrameWriter.h"

@class IOSByteArray;
@class Okhttp3InternalFramedErrorCode;
@class Okhttp3InternalFramedHpack_Writer;
@class Okhttp3InternalFramedSettings;
@class OkioBuffer;
@protocol JavaUtilList;
@protocol OkioBufferedSink;

@interface Okhttp3InternalFramedHttp2_Writer : NSObject < Okhttp3InternalFramedFrameWriter > {
 @public
  Okhttp3InternalFramedHpack_Writer *hpackWriter_;
}

#pragma mark Public

- (void)applyAndAckSettingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)peerSettings;

- (void)close;

- (void)connectionPreface;

- (void)dataWithBoolean:(jboolean)outFinished
                withInt:(jint)streamId
         withOkioBuffer:(OkioBuffer *)source
                withInt:(jint)byteCount;

- (void)flush;

- (void)goAwayWithInt:(jint)lastGoodStreamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode
        withByteArray:(IOSByteArray *)debugData;

- (void)headersWithInt:(jint)streamId
      withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (jint)maxDataLength;

- (void)pingWithBoolean:(jboolean)ack
                withInt:(jint)payload1
                withInt:(jint)payload2;

- (void)pushPromiseWithInt:(jint)streamId
                   withInt:(jint)promisedStreamId
          withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (void)rstStreamWithInt:(jint)streamId
withOkhttp3InternalFramedErrorCode:(Okhttp3InternalFramedErrorCode *)errorCode;

- (void)settingsWithOkhttp3InternalFramedSettings:(Okhttp3InternalFramedSettings *)settings;

- (void)synReplyWithBoolean:(jboolean)outFinished
                    withInt:(jint)streamId
           withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)synStreamWithBoolean:(jboolean)outFinished
                 withBoolean:(jboolean)inFinished
                     withInt:(jint)streamId
                     withInt:(jint)associatedStreamId
            withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)windowUpdateWithInt:(jint)streamId
                   withLong:(jlong)windowSizeIncrement;

#pragma mark Package-Private

- (instancetype)initWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                             withBoolean:(jboolean)client;

- (void)dataFrameWithInt:(jint)streamId
                withByte:(jbyte)flags
          withOkioBuffer:(OkioBuffer *)buffer
                 withInt:(jint)byteCount;

- (void)frameHeaderWithInt:(jint)streamId
                   withInt:(jint)length
                  withByte:(jbyte)type
                  withByte:(jbyte)flags;

- (void)headersWithBoolean:(jboolean)outFinished
                   withInt:(jint)streamId
          withJavaUtilList:(id<JavaUtilList>)headerBlock;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedHttp2_Writer)

J2OBJC_FIELD_SETTER(Okhttp3InternalFramedHttp2_Writer, hpackWriter_, Okhttp3InternalFramedHpack_Writer *)

FOUNDATION_EXPORT void Okhttp3InternalFramedHttp2_Writer_initWithOkioBufferedSink_withBoolean_(Okhttp3InternalFramedHttp2_Writer *self, id<OkioBufferedSink> sink, jboolean client);

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_Writer *new_Okhttp3InternalFramedHttp2_Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_Writer *create_Okhttp3InternalFramedHttp2_Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHttp2_Writer)

#endif

#if !defined (Okhttp3InternalFramedHttp2_ContinuationSource_) && (INCLUDE_ALL_Okhttp3InternalFramedHttp2 || defined(INCLUDE_Okhttp3InternalFramedHttp2_ContinuationSource))
#define Okhttp3InternalFramedHttp2_ContinuationSource_

#define RESTRICT_OkioSource 1
#define INCLUDE_OkioSource 1
#include "okio/Source.h"

@class OkioBuffer;
@class OkioTimeout;
@protocol OkioBufferedSource;

@interface Okhttp3InternalFramedHttp2_ContinuationSource : NSObject < OkioSource > {
 @public
  jint length_;
  jbyte flags_;
  jint streamId_;
  jint left_;
  jshort padding_;
}

#pragma mark Public

- (instancetype)initWithOkioBufferedSource:(id<OkioBufferedSource>)source;

- (void)close;

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount;

- (OkioTimeout *)timeout;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalFramedHttp2_ContinuationSource)

FOUNDATION_EXPORT void Okhttp3InternalFramedHttp2_ContinuationSource_initWithOkioBufferedSource_(Okhttp3InternalFramedHttp2_ContinuationSource *self, id<OkioBufferedSource> source);

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_ContinuationSource *new_Okhttp3InternalFramedHttp2_ContinuationSource_initWithOkioBufferedSource_(id<OkioBufferedSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_ContinuationSource *create_Okhttp3InternalFramedHttp2_ContinuationSource_initWithOkioBufferedSource_(id<OkioBufferedSource> source);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHttp2_ContinuationSource)

#endif

#if !defined (Okhttp3InternalFramedHttp2_FrameLogger_) && (INCLUDE_ALL_Okhttp3InternalFramedHttp2 || defined(INCLUDE_Okhttp3InternalFramedHttp2_FrameLogger))
#define Okhttp3InternalFramedHttp2_FrameLogger_

@interface Okhttp3InternalFramedHttp2_FrameLogger : NSObject

#pragma mark Package-Private

- (instancetype)init;

+ (NSString *)formatFlagsWithByte:(jbyte)type
                         withByte:(jbyte)flags;

+ (NSString *)formatHeaderWithBoolean:(jboolean)inbound
                              withInt:(jint)streamId
                              withInt:(jint)length
                             withByte:(jbyte)type
                             withByte:(jbyte)flags;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalFramedHttp2_FrameLogger)

FOUNDATION_EXPORT void Okhttp3InternalFramedHttp2_FrameLogger_init(Okhttp3InternalFramedHttp2_FrameLogger *self);

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_FrameLogger *new_Okhttp3InternalFramedHttp2_FrameLogger_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalFramedHttp2_FrameLogger *create_Okhttp3InternalFramedHttp2_FrameLogger_init();

FOUNDATION_EXPORT NSString *Okhttp3InternalFramedHttp2_FrameLogger_formatHeaderWithBoolean_withInt_withInt_withByte_withByte_(jboolean inbound, jint streamId, jint length, jbyte type, jbyte flags);

FOUNDATION_EXPORT NSString *Okhttp3InternalFramedHttp2_FrameLogger_formatFlagsWithByte_withByte_(jbyte type, jbyte flags);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalFramedHttp2_FrameLogger)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalFramedHttp2")
