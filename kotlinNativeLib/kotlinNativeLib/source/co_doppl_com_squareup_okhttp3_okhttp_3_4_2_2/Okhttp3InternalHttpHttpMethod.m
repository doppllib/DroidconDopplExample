//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "Okhttp3InternalHttpHttpMethod.h"

@interface Okhttp3InternalHttpHttpMethod ()

- (instancetype)init;

@end

__attribute__((unused)) static void Okhttp3InternalHttpHttpMethod_init(Okhttp3InternalHttpHttpMethod *self);

__attribute__((unused)) static Okhttp3InternalHttpHttpMethod *new_Okhttp3InternalHttpHttpMethod_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Okhttp3InternalHttpHttpMethod *create_Okhttp3InternalHttpHttpMethod_init();

@implementation Okhttp3InternalHttpHttpMethod

+ (jboolean)invalidatesCacheWithNSString:(NSString *)method {
  return Okhttp3InternalHttpHttpMethod_invalidatesCacheWithNSString_(method);
}

+ (jboolean)requiresRequestBodyWithNSString:(NSString *)method {
  return Okhttp3InternalHttpHttpMethod_requiresRequestBodyWithNSString_(method);
}

+ (jboolean)permitsRequestBodyWithNSString:(NSString *)method {
  return Okhttp3InternalHttpHttpMethod_permitsRequestBodyWithNSString_(method);
}

+ (jboolean)redirectsToGetWithNSString:(NSString *)method {
  return Okhttp3InternalHttpHttpMethod_redirectsToGetWithNSString_(method);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Okhttp3InternalHttpHttpMethod_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(invalidatesCacheWithNSString:);
  methods[1].selector = @selector(requiresRequestBodyWithNSString:);
  methods[2].selector = @selector(permitsRequestBodyWithNSString:);
  methods[3].selector = @selector(redirectsToGetWithNSString:);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "invalidatesCache", "LNSString;", "requiresRequestBody", "permitsRequestBody", "redirectsToGet" };
  static const J2ObjcClassInfo _Okhttp3InternalHttpHttpMethod = { "HttpMethod", "okhttp3.internal.http", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, -1, -1, -1, -1 };
  return &_Okhttp3InternalHttpHttpMethod;
}

@end

jboolean Okhttp3InternalHttpHttpMethod_invalidatesCacheWithNSString_(NSString *method) {
  Okhttp3InternalHttpHttpMethod_initialize();
  return [((NSString *) nil_chk(method)) isEqual:@"POST"] || [method isEqual:@"PATCH"] || [method isEqual:@"PUT"] || [method isEqual:@"DELETE"] || [method isEqual:@"MOVE"];
}

jboolean Okhttp3InternalHttpHttpMethod_requiresRequestBodyWithNSString_(NSString *method) {
  Okhttp3InternalHttpHttpMethod_initialize();
  return [((NSString *) nil_chk(method)) isEqual:@"POST"] || [method isEqual:@"PUT"] || [method isEqual:@"PATCH"] || [method isEqual:@"PROPPATCH"] || [method isEqual:@"REPORT"];
}

jboolean Okhttp3InternalHttpHttpMethod_permitsRequestBodyWithNSString_(NSString *method) {
  Okhttp3InternalHttpHttpMethod_initialize();
  return Okhttp3InternalHttpHttpMethod_requiresRequestBodyWithNSString_(method) || [((NSString *) nil_chk(method)) isEqual:@"OPTIONS"] || [method isEqual:@"DELETE"] || [method isEqual:@"PROPFIND"] || [method isEqual:@"MKCOL"] || [method isEqual:@"LOCK"];
}

jboolean Okhttp3InternalHttpHttpMethod_redirectsToGetWithNSString_(NSString *method) {
  Okhttp3InternalHttpHttpMethod_initialize();
  return ![((NSString *) nil_chk(method)) isEqual:@"PROPFIND"];
}

void Okhttp3InternalHttpHttpMethod_init(Okhttp3InternalHttpHttpMethod *self) {
  NSObject_init(self);
}

Okhttp3InternalHttpHttpMethod *new_Okhttp3InternalHttpHttpMethod_init() {
  J2OBJC_NEW_IMPL(Okhttp3InternalHttpHttpMethod, init)
}

Okhttp3InternalHttpHttpMethod *create_Okhttp3InternalHttpHttpMethod_init() {
  J2OBJC_CREATE_IMPL(Okhttp3InternalHttpHttpMethod, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Okhttp3InternalHttpHttpMethod)
