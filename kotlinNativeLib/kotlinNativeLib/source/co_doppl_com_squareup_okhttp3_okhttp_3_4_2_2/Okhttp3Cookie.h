//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3Cookie")
#ifdef RESTRICT_Okhttp3Cookie
#define INCLUDE_ALL_Okhttp3Cookie 0
#else
#define INCLUDE_ALL_Okhttp3Cookie 1
#endif
#undef RESTRICT_Okhttp3Cookie

#if !defined (Okhttp3Cookie_) && (INCLUDE_ALL_Okhttp3Cookie || defined(INCLUDE_Okhttp3Cookie))
#define Okhttp3Cookie_

@class Okhttp3Headers;
@class Okhttp3HttpUrl;
@protocol JavaUtilList;

@interface Okhttp3Cookie : NSObject

#pragma mark Public

- (NSString *)domain;

- (jboolean)isEqual:(id)other;

- (jlong)expiresAt;

- (NSUInteger)hash;

- (jboolean)hostOnly;

- (jboolean)httpOnly;

- (jboolean)matchesWithOkhttp3HttpUrl:(Okhttp3HttpUrl *)url;

- (NSString *)name;

+ (Okhttp3Cookie *)parseWithOkhttp3HttpUrl:(Okhttp3HttpUrl *)url
                              withNSString:(NSString *)setCookie;

+ (id<JavaUtilList>)parseAllWithOkhttp3HttpUrl:(Okhttp3HttpUrl *)url
                            withOkhttp3Headers:(Okhttp3Headers *)headers;

- (NSString *)path;

- (jboolean)persistent;

- (jboolean)secure;

- (NSString *)description;

- (NSString *)value;

#pragma mark Package-Private

+ (Okhttp3Cookie *)parseWithLong:(jlong)currentTimeMillis
              withOkhttp3HttpUrl:(Okhttp3HttpUrl *)url
                    withNSString:(NSString *)setCookie;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(Okhttp3Cookie)

FOUNDATION_EXPORT Okhttp3Cookie *Okhttp3Cookie_parseWithOkhttp3HttpUrl_withNSString_(Okhttp3HttpUrl *url, NSString *setCookie);

FOUNDATION_EXPORT Okhttp3Cookie *Okhttp3Cookie_parseWithLong_withOkhttp3HttpUrl_withNSString_(jlong currentTimeMillis, Okhttp3HttpUrl *url, NSString *setCookie);

FOUNDATION_EXPORT id<JavaUtilList> Okhttp3Cookie_parseAllWithOkhttp3HttpUrl_withOkhttp3Headers_(Okhttp3HttpUrl *url, Okhttp3Headers *headers);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3Cookie)

#endif

#if !defined (Okhttp3Cookie_Builder_) && (INCLUDE_ALL_Okhttp3Cookie || defined(INCLUDE_Okhttp3Cookie_Builder))
#define Okhttp3Cookie_Builder_

@class Okhttp3Cookie;

@interface Okhttp3Cookie_Builder : NSObject {
 @public
  NSString *name_;
  NSString *value_;
  jlong expiresAt_;
  NSString *domain_;
  NSString *path_;
  jboolean secure_;
  jboolean httpOnly_;
  jboolean persistent_;
  jboolean hostOnly_;
}

#pragma mark Public

- (instancetype)init;

- (Okhttp3Cookie *)build;

- (Okhttp3Cookie_Builder *)domainWithNSString:(NSString *)domain;

- (Okhttp3Cookie_Builder *)expiresAtWithLong:(jlong)expiresAt;

- (Okhttp3Cookie_Builder *)hostOnlyDomainWithNSString:(NSString *)domain;

- (Okhttp3Cookie_Builder *)httpOnly;

- (Okhttp3Cookie_Builder *)nameWithNSString:(NSString *)name;

- (Okhttp3Cookie_Builder *)pathWithNSString:(NSString *)path;

- (Okhttp3Cookie_Builder *)secure;

- (Okhttp3Cookie_Builder *)valueWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3Cookie_Builder)

J2OBJC_FIELD_SETTER(Okhttp3Cookie_Builder, name_, NSString *)
J2OBJC_FIELD_SETTER(Okhttp3Cookie_Builder, value_, NSString *)
J2OBJC_FIELD_SETTER(Okhttp3Cookie_Builder, domain_, NSString *)
J2OBJC_FIELD_SETTER(Okhttp3Cookie_Builder, path_, NSString *)

FOUNDATION_EXPORT void Okhttp3Cookie_Builder_init(Okhttp3Cookie_Builder *self);

FOUNDATION_EXPORT Okhttp3Cookie_Builder *new_Okhttp3Cookie_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3Cookie_Builder *create_Okhttp3Cookie_Builder_init();

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3Cookie_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3Cookie")
