//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DINTSeedInteractor_Factory")
#ifdef RESTRICT_DINTSeedInteractor_Factory
#define INCLUDE_ALL_DINTSeedInteractor_Factory 0
#else
#define INCLUDE_ALL_DINTSeedInteractor_Factory 1
#endif
#undef RESTRICT_DINTSeedInteractor_Factory

#if !defined (DINTSeedInteractor_Factory_) && (INCLUDE_ALL_DINTSeedInteractor_Factory || defined(INCLUDE_DINTSeedInteractor_Factory))
#define DINTSeedInteractor_Factory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DINTSeedInteractor;
@protocol JavaxInjectProvider;

@interface DINTSeedInteractor_Factory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)conferenceDataHelperProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

+ (id<DaggerInternalFactory>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)conferenceDataHelperProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)appPrefsProvider;

- (DINTSeedInteractor *)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DINTSeedInteractor_Factory)

FOUNDATION_EXPORT void DINTSeedInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_(DINTSeedInteractor_Factory *self, id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT DINTSeedInteractor_Factory *new_DINTSeedInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DINTSeedInteractor_Factory *create_DINTSeedInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider);

FOUNDATION_EXPORT id<DaggerInternalFactory> DINTSeedInteractor_Factory_createWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> conferenceDataHelperProvider, id<JavaxInjectProvider> appPrefsProvider);

J2OBJC_TYPE_LITERAL_HEADER(DINTSeedInteractor_Factory)

@compatibility_alias CoTouchlabDroidconandroidSharedInteractorsSeedInteractor_Factory DINTSeedInteractor_Factory;

#endif

#pragma pop_macro("INCLUDE_ALL_DINTSeedInteractor_Factory")
