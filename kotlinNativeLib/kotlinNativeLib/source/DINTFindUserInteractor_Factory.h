//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DINTFindUserInteractor_Factory")
#ifdef RESTRICT_DINTFindUserInteractor_Factory
#define INCLUDE_ALL_DINTFindUserInteractor_Factory 0
#else
#define INCLUDE_ALL_DINTFindUserInteractor_Factory 1
#endif
#undef RESTRICT_DINTFindUserInteractor_Factory

#if !defined (DINTFindUserInteractor_Factory_) && (INCLUDE_ALL_DINTFindUserInteractor_Factory || defined(INCLUDE_DINTFindUserInteractor_Factory))
#define DINTFindUserInteractor_Factory_

#define RESTRICT_DaggerInternalFactory 1
#define INCLUDE_DaggerInternalFactory 1
#include "DaggerInternalFactory.h"

@class DINTFindUserInteractor;
@protocol JavaxInjectProvider;

@interface DINTFindUserInteractor_Factory : NSObject < DaggerInternalFactory >

#pragma mark Public

- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)helperProvider
                    withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider;

+ (id<DaggerInternalFactory>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)helperProvider
                                   withJavaxInjectProvider:(id<JavaxInjectProvider>)requestProvider;

- (DINTFindUserInteractor *)get;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(DINTFindUserInteractor_Factory)

FOUNDATION_EXPORT void DINTFindUserInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_(DINTFindUserInteractor_Factory *self, id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider);

FOUNDATION_EXPORT DINTFindUserInteractor_Factory *new_DINTFindUserInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DINTFindUserInteractor_Factory *create_DINTFindUserInteractor_Factory_initWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider);

FOUNDATION_EXPORT id<DaggerInternalFactory> DINTFindUserInteractor_Factory_createWithJavaxInjectProvider_withJavaxInjectProvider_(id<JavaxInjectProvider> helperProvider, id<JavaxInjectProvider> requestProvider);

J2OBJC_TYPE_LITERAL_HEADER(DINTFindUserInteractor_Factory)

@compatibility_alias CoTouchlabDroidconandroidSharedInteractorsFindUserInteractor_Factory DINTFindUserInteractor_Factory;

#endif

#pragma pop_macro("INCLUDE_ALL_DINTFindUserInteractor_Factory")
