//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidArchPersistenceDbSupportSQLiteDatabase.h"
#include "AndroidArchPersistenceDbSupportSQLiteOpenHelper.h"
#include "AndroidArchPersistenceRoomDatabaseConfiguration.h"
#include "AndroidArchPersistenceRoomInvalidationTracker.h"
#include "AndroidArchPersistenceRoomRoomDatabase.h"
#include "AndroidArchPersistenceRoomRoomOpenHelper.h"
#include "AndroidArchPersistenceRoomUtilTableInfo.h"
#include "AndroidContentContext.h"
#include "DDAOBlockDao.h"
#include "DDAOBlockDao_Impl.h"
#include "DDAOEventDao.h"
#include "DDAOEventDao_Impl.h"
#include "DDAOEventSpeakerDao.h"
#include "DDAOEventSpeakerDao_Impl.h"
#include "DDAOUserAccountDao.h"
#include "DDAOUserAccountDao_Impl.h"
#include "DDATDroidconDatabase.h"
#include "DDATDroidconDatabase_Impl.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"

@interface DDATDroidconDatabase_Impl () {
 @public
  volatile_id _blockDao_;
  volatile_id _userAccountDao_;
  volatile_id _eventSpeakerDao_;
  volatile_id _eventDao_;
}

@end

J2OBJC_VOLATILE_FIELD_SETTER(DDATDroidconDatabase_Impl, _blockDao_, id<DDAOBlockDao>)
J2OBJC_VOLATILE_FIELD_SETTER(DDATDroidconDatabase_Impl, _userAccountDao_, id<DDAOUserAccountDao>)
J2OBJC_VOLATILE_FIELD_SETTER(DDATDroidconDatabase_Impl, _eventSpeakerDao_, id<DDAOEventSpeakerDao>)
J2OBJC_VOLATILE_FIELD_SETTER(DDATDroidconDatabase_Impl, _eventDao_, id<DDAOEventDao>)

@interface DDATDroidconDatabase_Impl_1 : AndroidArchPersistenceRoomRoomOpenHelper_Delegate {
 @public
  DDATDroidconDatabase_Impl *this$0_;
}

- (instancetype)initWithDDATDroidconDatabase_Impl:(DDATDroidconDatabase_Impl *)outer$
                                          withInt:(jint)x0;

- (void)createAllTablesWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db;

- (void)dropAllTablesWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db;

- (void)onCreateWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db;

- (void)onOpenWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db;

- (void)validateMigrationWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db;

@end

J2OBJC_EMPTY_STATIC_INIT(DDATDroidconDatabase_Impl_1)

__attribute__((unused)) static void DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(DDATDroidconDatabase_Impl_1 *self, DDATDroidconDatabase_Impl *outer$, jint x0);

__attribute__((unused)) static DDATDroidconDatabase_Impl_1 *new_DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(DDATDroidconDatabase_Impl *outer$, jint x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DDATDroidconDatabase_Impl_1 *create_DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(DDATDroidconDatabase_Impl *outer$, jint x0);

@implementation DDATDroidconDatabase_Impl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DDATDroidconDatabase_Impl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<AndroidArchPersistenceDbSupportSQLiteOpenHelper>)createOpenHelperWithAndroidArchPersistenceRoomDatabaseConfiguration:(AndroidArchPersistenceRoomDatabaseConfiguration *)configuration {
  AndroidArchPersistenceDbSupportSQLiteOpenHelper_Callback *_openCallback = create_AndroidArchPersistenceRoomRoomOpenHelper_initWithAndroidArchPersistenceRoomDatabaseConfiguration_withAndroidArchPersistenceRoomRoomOpenHelper_Delegate_withNSString_(configuration, create_DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(self, 1), @"4042825130f2baf87cad257e55afeba1");
  AndroidArchPersistenceDbSupportSQLiteOpenHelper_Configuration *_sqliteConfig = [((AndroidArchPersistenceDbSupportSQLiteOpenHelper_Configuration_Builder *) nil_chk([((AndroidArchPersistenceDbSupportSQLiteOpenHelper_Configuration_Builder *) nil_chk([((AndroidArchPersistenceDbSupportSQLiteOpenHelper_Configuration_Builder *) nil_chk(AndroidArchPersistenceDbSupportSQLiteOpenHelper_Configuration_builderWithAndroidContentContext_(((AndroidArchPersistenceRoomDatabaseConfiguration *) nil_chk(configuration))->context_))) nameWithNSString:configuration->name_])) callbackWithAndroidArchPersistenceDbSupportSQLiteOpenHelper_Callback:_openCallback])) build];
  id<AndroidArchPersistenceDbSupportSQLiteOpenHelper> _helper = [((id<AndroidArchPersistenceDbSupportSQLiteOpenHelper_Factory>) nil_chk(configuration->sqliteOpenHelperFactory_)) createWithAndroidArchPersistenceDbSupportSQLiteOpenHelper_Configuration:_sqliteConfig];
  return _helper;
}

- (AndroidArchPersistenceRoomInvalidationTracker *)createInvalidationTracker {
  return create_AndroidArchPersistenceRoomInvalidationTracker_initWithAndroidArchPersistenceRoomRoomDatabase_withNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"Block", @"Event", @"EventSpeaker", @"UserAccount" } count:4 type:NSString_class_()]);
}

- (id<DDAOBlockDao>)blockDao {
  if (JreLoadVolatileId(&_blockDao_) != nil) {
    return JreLoadVolatileId(&_blockDao_);
  }
  else {
    @synchronized(self) {
      if (JreLoadVolatileId(&_blockDao_) == nil) {
        JreVolatileStrongAssign(&_blockDao_, create_DDAOBlockDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(self));
      }
      return JreRetainedLocalValue(JreLoadVolatileId(&_blockDao_));
    }
  }
}

- (id<DDAOUserAccountDao>)userAccountDao {
  if (JreLoadVolatileId(&_userAccountDao_) != nil) {
    return JreLoadVolatileId(&_userAccountDao_);
  }
  else {
    @synchronized(self) {
      if (JreLoadVolatileId(&_userAccountDao_) == nil) {
        JreVolatileStrongAssign(&_userAccountDao_, create_DDAOUserAccountDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(self));
      }
      return JreRetainedLocalValue(JreLoadVolatileId(&_userAccountDao_));
    }
  }
}

- (id<DDAOEventSpeakerDao>)eventSpeakerDao {
  if (JreLoadVolatileId(&_eventSpeakerDao_) != nil) {
    return JreLoadVolatileId(&_eventSpeakerDao_);
  }
  else {
    @synchronized(self) {
      if (JreLoadVolatileId(&_eventSpeakerDao_) == nil) {
        JreVolatileStrongAssign(&_eventSpeakerDao_, create_DDAOEventSpeakerDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(self));
      }
      return JreRetainedLocalValue(JreLoadVolatileId(&_eventSpeakerDao_));
    }
  }
}

- (id<DDAOEventDao>)eventDao {
  if (JreLoadVolatileId(&_eventDao_) != nil) {
    return JreLoadVolatileId(&_eventDao_);
  }
  else {
    @synchronized(self) {
      if (JreLoadVolatileId(&_eventDao_) == nil) {
        JreVolatileStrongAssign(&_eventDao_, create_DDAOEventDao_Impl_initWithAndroidArchPersistenceRoomRoomDatabase_(self));
      }
      return JreRetainedLocalValue(JreLoadVolatileId(&_eventDao_));
    }
  }
}

- (void)__javaClone:(DDATDroidconDatabase_Impl *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&_blockDao_, &original->_blockDao_);
  JreCloneVolatileStrong(&_userAccountDao_, &original->_userAccountDao_);
  JreCloneVolatileStrong(&_eventSpeakerDao_, &original->_eventSpeakerDao_);
  JreCloneVolatileStrong(&_eventDao_, &original->_eventDao_);
}

- (void)dealloc {
  JreReleaseVolatile(&_blockDao_);
  JreReleaseVolatile(&_userAccountDao_);
  JreReleaseVolatile(&_eventSpeakerDao_);
  JreReleaseVolatile(&_eventDao_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchPersistenceDbSupportSQLiteOpenHelper;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidArchPersistenceRoomInvalidationTracker;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDDAOBlockDao;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDDAOUserAccountDao;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDDAOEventSpeakerDao;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDDAOEventDao;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createOpenHelperWithAndroidArchPersistenceRoomDatabaseConfiguration:);
  methods[2].selector = @selector(createInvalidationTracker);
  methods[3].selector = @selector(blockDao);
  methods[4].selector = @selector(userAccountDao);
  methods[5].selector = @selector(eventSpeakerDao);
  methods[6].selector = @selector(eventDao);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_blockDao_", "LDDAOBlockDao;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "_userAccountDao_", "LDDAOUserAccountDao;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "_eventSpeakerDao_", "LDDAOEventSpeakerDao;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "_eventDao_", "LDDAOEventDao;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createOpenHelper", "LAndroidArchPersistenceRoomDatabaseConfiguration;" };
  static const J2ObjcClassInfo _DDATDroidconDatabase_Impl = { "DroidconDatabase_Impl", "co.touchlab.droidconandroid.shared.data", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_DDATDroidconDatabase_Impl;
}

@end

void DDATDroidconDatabase_Impl_init(DDATDroidconDatabase_Impl *self) {
  DDATDroidconDatabase_init(self);
}

DDATDroidconDatabase_Impl *new_DDATDroidconDatabase_Impl_init() {
  J2OBJC_NEW_IMPL(DDATDroidconDatabase_Impl, init)
}

DDATDroidconDatabase_Impl *create_DDATDroidconDatabase_Impl_init() {
  J2OBJC_CREATE_IMPL(DDATDroidconDatabase_Impl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DDATDroidconDatabase_Impl)

@implementation DDATDroidconDatabase_Impl_1

- (instancetype)initWithDDATDroidconDatabase_Impl:(DDATDroidconDatabase_Impl *)outer$
                                          withInt:(jint)x0 {
  DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(self, outer$, x0);
  return self;
}

- (void)createAllTablesWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db {
  [((id<AndroidArchPersistenceDbSupportSQLiteDatabase>) nil_chk(_db)) execSQLWithNSString:@"CREATE TABLE IF NOT EXISTS `Block` (`id` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `startDateLong` INTEGER, `endDateLong` INTEGER, `startDate` TEXT, `endDate` TEXT, PRIMARY KEY(`id`))"];
  [_db execSQLWithNSString:@"CREATE TABLE IF NOT EXISTS `Event` (`id` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `category` TEXT, `startDateLong` INTEGER, `endDateLong` INTEGER, `publicEvent` INTEGER NOT NULL, `rsvpLimit` INTEGER, `rsvpCount` INTEGER, `rsvpUuid` TEXT, `vote` INTEGER, `startDate` TEXT, `endDate` TEXT, `venue_name` TEXT, `venue_description` TEXT, PRIMARY KEY(`id`))"];
  [_db execSQLWithNSString:@"CREATE TABLE IF NOT EXISTS `EventSpeaker` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `event_id` INTEGER NOT NULL, `user_id` INTEGER NOT NULL, `name` TEXT, `displayOrder` INTEGER NOT NULL, FOREIGN KEY(`event_id`) REFERENCES `Event`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`) REFERENCES `UserAccount`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )"];
  [_db execSQLWithNSString:@"CREATE TABLE IF NOT EXISTS `UserAccount` (`id` INTEGER, `name` TEXT, `profile` TEXT, `avatarKey` TEXT, `userCode` TEXT, `company` TEXT, `facebook` TEXT, `twitter` TEXT, `linkedIn` TEXT, `website` TEXT, `following` INTEGER NOT NULL, `email` TEXT, `gPlus` TEXT, `phone` TEXT, `coverKey` TEXT, `emailPublic` INTEGER, PRIMARY KEY(`id`))"];
  [_db execSQLWithNSString:@"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)"];
  [_db execSQLWithNSString:@"INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"4042825130f2baf87cad257e55afeba1\")"];
}

- (void)dropAllTablesWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db {
  [((id<AndroidArchPersistenceDbSupportSQLiteDatabase>) nil_chk(_db)) execSQLWithNSString:@"DROP TABLE IF EXISTS `Block`"];
  [_db execSQLWithNSString:@"DROP TABLE IF EXISTS `Event`"];
  [_db execSQLWithNSString:@"DROP TABLE IF EXISTS `EventSpeaker`"];
  [_db execSQLWithNSString:@"DROP TABLE IF EXISTS `UserAccount`"];
}

- (void)onCreateWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db {
  if (this$0_->mCallbacks_ != nil) {
    for (jint _i = 0, _size = [this$0_->mCallbacks_ size]; _i < _size; _i++) {
      [((AndroidArchPersistenceRoomRoomDatabase_Callback *) nil_chk([((id<JavaUtilList>) nil_chk(this$0_->mCallbacks_)) getWithInt:_i])) onCreateWithAndroidArchPersistenceDbSupportSQLiteDatabase:_db];
    }
  }
}

- (void)onOpenWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db {
  JreVolatileStrongAssign(&this$0_->mDatabase_, _db);
  [((id<AndroidArchPersistenceDbSupportSQLiteDatabase>) nil_chk(_db)) execSQLWithNSString:@"PRAGMA foreign_keys = ON"];
  [this$0_ internalInitInvalidationTrackerWithAndroidArchPersistenceDbSupportSQLiteDatabase:_db];
  if (this$0_->mCallbacks_ != nil) {
    for (jint _i = 0, _size = [this$0_->mCallbacks_ size]; _i < _size; _i++) {
      [((AndroidArchPersistenceRoomRoomDatabase_Callback *) nil_chk([((id<JavaUtilList>) nil_chk(this$0_->mCallbacks_)) getWithInt:_i])) onOpenWithAndroidArchPersistenceDbSupportSQLiteDatabase:_db];
    }
  }
}

- (void)validateMigrationWithAndroidArchPersistenceDbSupportSQLiteDatabase:(id<AndroidArchPersistenceDbSupportSQLiteDatabase>)_db {
  JavaUtilHashMap *_columnsBlock = create_JavaUtilHashMap_initWithInt_(7);
  [_columnsBlock putWithId:@"id" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"id", @"INTEGER", true, 1)];
  [_columnsBlock putWithId:@"name" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"name", @"TEXT", false, 0)];
  [_columnsBlock putWithId:@"description" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"description", @"TEXT", false, 0)];
  [_columnsBlock putWithId:@"startDateLong" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"startDateLong", @"INTEGER", false, 0)];
  [_columnsBlock putWithId:@"endDateLong" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"endDateLong", @"INTEGER", false, 0)];
  [_columnsBlock putWithId:@"startDate" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"startDate", @"TEXT", false, 0)];
  [_columnsBlock putWithId:@"endDate" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"endDate", @"TEXT", false, 0)];
  JavaUtilHashSet *_foreignKeysBlock = create_JavaUtilHashSet_initWithInt_(0);
  JavaUtilHashSet *_indicesBlock = create_JavaUtilHashSet_initWithInt_(0);
  AndroidArchPersistenceRoomUtilTableInfo *_infoBlock = create_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(@"Block", _columnsBlock, _foreignKeysBlock, _indicesBlock);
  AndroidArchPersistenceRoomUtilTableInfo *_existingBlock = AndroidArchPersistenceRoomUtilTableInfo_readWithAndroidArchPersistenceDbSupportSQLiteDatabase_withNSString_(_db, @"Block");
  if (![_infoBlock isEqual:_existingBlock]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@", @"Migration didn't properly handle Block(co.touchlab.droidconandroid.shared.data.Block).\n Expected:\n", _infoBlock, @"\n Found:\n", _existingBlock));
  }
  JavaUtilHashMap *_columnsEvent = create_JavaUtilHashMap_initWithInt_(15);
  [_columnsEvent putWithId:@"id" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"id", @"INTEGER", true, 1)];
  [_columnsEvent putWithId:@"name" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"name", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"description" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"description", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"category" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"category", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"startDateLong" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"startDateLong", @"INTEGER", false, 0)];
  [_columnsEvent putWithId:@"endDateLong" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"endDateLong", @"INTEGER", false, 0)];
  [_columnsEvent putWithId:@"publicEvent" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"publicEvent", @"INTEGER", true, 0)];
  [_columnsEvent putWithId:@"rsvpLimit" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"rsvpLimit", @"INTEGER", false, 0)];
  [_columnsEvent putWithId:@"rsvpCount" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"rsvpCount", @"INTEGER", false, 0)];
  [_columnsEvent putWithId:@"rsvpUuid" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"rsvpUuid", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"vote" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"vote", @"INTEGER", false, 0)];
  [_columnsEvent putWithId:@"startDate" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"startDate", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"endDate" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"endDate", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"venue_name" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"venue_name", @"TEXT", false, 0)];
  [_columnsEvent putWithId:@"venue_description" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"venue_description", @"TEXT", false, 0)];
  JavaUtilHashSet *_foreignKeysEvent = create_JavaUtilHashSet_initWithInt_(0);
  JavaUtilHashSet *_indicesEvent = create_JavaUtilHashSet_initWithInt_(0);
  AndroidArchPersistenceRoomUtilTableInfo *_infoEvent = create_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(@"Event", _columnsEvent, _foreignKeysEvent, _indicesEvent);
  AndroidArchPersistenceRoomUtilTableInfo *_existingEvent = AndroidArchPersistenceRoomUtilTableInfo_readWithAndroidArchPersistenceDbSupportSQLiteDatabase_withNSString_(_db, @"Event");
  if (![_infoEvent isEqual:_existingEvent]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@", @"Migration didn't properly handle Event(co.touchlab.droidconandroid.shared.data.Event).\n Expected:\n", _infoEvent, @"\n Found:\n", _existingEvent));
  }
  JavaUtilHashMap *_columnsEventSpeaker = create_JavaUtilHashMap_initWithInt_(5);
  [_columnsEventSpeaker putWithId:@"id" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"id", @"INTEGER", false, 1)];
  [_columnsEventSpeaker putWithId:@"event_id" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"event_id", @"INTEGER", true, 0)];
  [_columnsEventSpeaker putWithId:@"user_id" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"user_id", @"INTEGER", true, 0)];
  [_columnsEventSpeaker putWithId:@"name" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"name", @"TEXT", false, 0)];
  [_columnsEventSpeaker putWithId:@"displayOrder" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"displayOrder", @"INTEGER", true, 0)];
  JavaUtilHashSet *_foreignKeysEventSpeaker = create_JavaUtilHashSet_initWithInt_(2);
  [_foreignKeysEventSpeaker addWithId:create_AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_initWithNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(@"Event", @"CASCADE", @"NO ACTION", JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"event_id" } count:1 type:NSString_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"id" } count:1 type:NSString_class_()]))];
  [_foreignKeysEventSpeaker addWithId:create_AndroidArchPersistenceRoomUtilTableInfo_ForeignKey_initWithNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(@"UserAccount", @"CASCADE", @"NO ACTION", JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"user_id" } count:1 type:NSString_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"id" } count:1 type:NSString_class_()]))];
  JavaUtilHashSet *_indicesEventSpeaker = create_JavaUtilHashSet_initWithInt_(0);
  AndroidArchPersistenceRoomUtilTableInfo *_infoEventSpeaker = create_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(@"EventSpeaker", _columnsEventSpeaker, _foreignKeysEventSpeaker, _indicesEventSpeaker);
  AndroidArchPersistenceRoomUtilTableInfo *_existingEventSpeaker = AndroidArchPersistenceRoomUtilTableInfo_readWithAndroidArchPersistenceDbSupportSQLiteDatabase_withNSString_(_db, @"EventSpeaker");
  if (![_infoEventSpeaker isEqual:_existingEventSpeaker]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@", @"Migration didn't properly handle EventSpeaker(co.touchlab.droidconandroid.shared.data.EventSpeaker).\n Expected:\n", _infoEventSpeaker, @"\n Found:\n", _existingEventSpeaker));
  }
  JavaUtilHashMap *_columnsUserAccount = create_JavaUtilHashMap_initWithInt_(16);
  [_columnsUserAccount putWithId:@"id" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"id", @"INTEGER", false, 1)];
  [_columnsUserAccount putWithId:@"name" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"name", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"profile" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"profile", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"avatarKey" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"avatarKey", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"userCode" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"userCode", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"company" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"company", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"facebook" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"facebook", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"twitter" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"twitter", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"linkedIn" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"linkedIn", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"website" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"website", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"following" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"following", @"INTEGER", true, 0)];
  [_columnsUserAccount putWithId:@"email" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"email", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"gPlus" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"gPlus", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"phone" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"phone", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"coverKey" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"coverKey", @"TEXT", false, 0)];
  [_columnsUserAccount putWithId:@"emailPublic" withId:create_AndroidArchPersistenceRoomUtilTableInfo_Column_initWithNSString_withNSString_withBoolean_withInt_(@"emailPublic", @"INTEGER", false, 0)];
  JavaUtilHashSet *_foreignKeysUserAccount = create_JavaUtilHashSet_initWithInt_(0);
  JavaUtilHashSet *_indicesUserAccount = create_JavaUtilHashSet_initWithInt_(0);
  AndroidArchPersistenceRoomUtilTableInfo *_infoUserAccount = create_AndroidArchPersistenceRoomUtilTableInfo_initWithNSString_withJavaUtilMap_withJavaUtilSet_withJavaUtilSet_(@"UserAccount", _columnsUserAccount, _foreignKeysUserAccount, _indicesUserAccount);
  AndroidArchPersistenceRoomUtilTableInfo *_existingUserAccount = AndroidArchPersistenceRoomUtilTableInfo_readWithAndroidArchPersistenceDbSupportSQLiteDatabase_withNSString_(_db, @"UserAccount");
  if (![_infoUserAccount isEqual:_existingUserAccount]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@", @"Migration didn't properly handle UserAccount(co.touchlab.droidconandroid.shared.data.UserAccount).\n Expected:\n", _infoUserAccount, @"\n Found:\n", _existingUserAccount));
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDDATDroidconDatabase_Impl:withInt:);
  methods[1].selector = @selector(createAllTablesWithAndroidArchPersistenceDbSupportSQLiteDatabase:);
  methods[2].selector = @selector(dropAllTablesWithAndroidArchPersistenceDbSupportSQLiteDatabase:);
  methods[3].selector = @selector(onCreateWithAndroidArchPersistenceDbSupportSQLiteDatabase:);
  methods[4].selector = @selector(onOpenWithAndroidArchPersistenceDbSupportSQLiteDatabase:);
  methods[5].selector = @selector(validateMigrationWithAndroidArchPersistenceDbSupportSQLiteDatabase:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LDDATDroidconDatabase_Impl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "createAllTables", "LAndroidArchPersistenceDbSupportSQLiteDatabase;", "dropAllTables", "onCreate", "onOpen", "validateMigration", "LDDATDroidconDatabase_Impl;", "createOpenHelperWithAndroidArchPersistenceRoomDatabaseConfiguration:" };
  static const J2ObjcClassInfo _DDATDroidconDatabase_Impl_1 = { "", "co.touchlab.droidconandroid.shared.data", ptrTable, methods, fields, 7, 0x8018, 6, 1, 7, -1, 8, -1, -1 };
  return &_DDATDroidconDatabase_Impl_1;
}

@end

void DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(DDATDroidconDatabase_Impl_1 *self, DDATDroidconDatabase_Impl *outer$, jint x0) {
  JreStrongAssign(&self->this$0_, outer$);
  AndroidArchPersistenceRoomRoomOpenHelper_Delegate_initWithInt_(self, x0);
}

DDATDroidconDatabase_Impl_1 *new_DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(DDATDroidconDatabase_Impl *outer$, jint x0) {
  J2OBJC_NEW_IMPL(DDATDroidconDatabase_Impl_1, initWithDDATDroidconDatabase_Impl_withInt_, outer$, x0)
}

DDATDroidconDatabase_Impl_1 *create_DDATDroidconDatabase_Impl_1_initWithDDATDroidconDatabase_Impl_withInt_(DDATDroidconDatabase_Impl *outer$, jint x0) {
  J2OBJC_CREATE_IMPL(DDATDroidconDatabase_Impl_1, initWithDDATDroidconDatabase_Impl_withInt_, outer$, x0)
}
