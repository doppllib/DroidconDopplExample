//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "DDAGAppComponent.h"
#include "DINTSeedInteractor.h"
#include "DVMAppManager.h"
#include "DVMLoadDataSeed.h"
#include "DVMPlatformClient.h"
#include "J2ObjC_source.h"

@interface DVMAppManager () {
 @public
  id<DDAGAppComponent> appComponent_;
  id<DVMPlatformClient> platformClient_;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                        withDVMPlatformClient:(id<DVMPlatformClient>)platformClient
                         withDDAGAppComponent:(id<DDAGAppComponent>)appComponent;

@end

J2OBJC_FIELD_SETTER(DVMAppManager, appComponent_, id<DDAGAppComponent>)
J2OBJC_FIELD_SETTER(DVMAppManager, platformClient_, id<DVMPlatformClient>)

inline DVMAppManager *DVMAppManager_get_instance();
inline DVMAppManager *DVMAppManager_set_instance(DVMAppManager *value);
static DVMAppManager *DVMAppManager_instance;
J2OBJC_STATIC_FIELD_OBJ(DVMAppManager, instance, DVMAppManager *)

__attribute__((unused)) static void DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(DVMAppManager *self, AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent);

__attribute__((unused)) static DVMAppManager *new_DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent) NS_RETURNS_RETAINED;

__attribute__((unused)) static DVMAppManager *create_DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent);

NSString *DVMAppManager_FIRST_SEED = @"FIRST_SEED";

@implementation DVMAppManager

+ (NSString *)FIRST_SEED {
  return DVMAppManager_FIRST_SEED;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                        withDVMPlatformClient:(id<DVMPlatformClient>)platformClient
                         withDDAGAppComponent:(id<DDAGAppComponent>)appComponent {
  DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(self, context, platformClient, appComponent);
  return self;
}

+ (DVMAppManager *)getInstance {
  return DVMAppManager_getInstance();
}

+ (void)createWithAndroidContentContext:(AndroidContentContext *)context
                  withDVMPlatformClient:(id<DVMPlatformClient>)platformClient
                   withDDAGAppComponent:(id<DDAGAppComponent>)appComponent {
  DVMAppManager_createWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(context, platformClient, appComponent);
}

- (void)seedWithDVMLoadDataSeed:(id<DVMLoadDataSeed>)loadDataSeed {
  DINTSeedInteractor *seedInteractor = [((id<DDAGAppComponent>) nil_chk(appComponent_)) seedInteractor];
  [((DINTSeedInteractor *) nil_chk(seedInteractor)) seedDatabaseWithDVMLoadDataSeed:loadDataSeed];
}

- (id<DDAGAppComponent>)getAppComponent {
  return appComponent_;
}

- (id<DVMPlatformClient>)getPlatformClient {
  return platformClient_;
}

- (void)dealloc {
  RELEASE_(appComponent_);
  RELEASE_(platformClient_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LDVMAppManager;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LDDAGAppComponent;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDVMPlatformClient;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidContentContext:withDVMPlatformClient:withDDAGAppComponent:);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(createWithAndroidContentContext:withDVMPlatformClient:withDDAGAppComponent:);
  methods[3].selector = @selector(seedWithDVMLoadDataSeed:);
  methods[4].selector = @selector(getAppComponent);
  methods[5].selector = @selector(getPlatformClient);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIRST_SEED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "instance", "LDVMAppManager;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
    { "appComponent_", "LDDAGAppComponent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "platformClient_", "LDVMPlatformClient;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidContentContext;LDVMPlatformClient;LDDAGAppComponent;", "create", "seed", "LDVMLoadDataSeed;", &DVMAppManager_FIRST_SEED, &DVMAppManager_instance };
  static const J2ObjcClassInfo _DVMAppManager = { "AppManager", "co.touchlab.droidconandroid.shared.viewmodel", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_DVMAppManager;
}

@end

void DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(DVMAppManager *self, AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent) {
  NSObject_init(self);
  JreStrongAssign(&self->appComponent_, appComponent);
  JreStrongAssign(&self->platformClient_, platformClient);
}

DVMAppManager *new_DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent) {
  J2OBJC_NEW_IMPL(DVMAppManager, initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_, context, platformClient, appComponent)
}

DVMAppManager *create_DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent) {
  J2OBJC_CREATE_IMPL(DVMAppManager, initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_, context, platformClient, appComponent)
}

DVMAppManager *DVMAppManager_getInstance() {
  DVMAppManager_initialize();
  return DVMAppManager_instance;
}

void DVMAppManager_createWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(AndroidContentContext *context, id<DVMPlatformClient> platformClient, id<DDAGAppComponent> appComponent) {
  DVMAppManager_initialize();
  if (DVMAppManager_instance == nil) {
    JreStrongAssignAndConsume(&DVMAppManager_instance, new_DVMAppManager_initWithAndroidContentContext_withDVMPlatformClient_withDDAGAppComponent_(context, platformClient, appComponent));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DVMAppManager)
