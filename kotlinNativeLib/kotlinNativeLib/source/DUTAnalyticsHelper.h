//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DUTAnalyticsHelper")
#ifdef RESTRICT_DUTAnalyticsHelper
#define INCLUDE_ALL_DUTAnalyticsHelper 0
#else
#define INCLUDE_ALL_DUTAnalyticsHelper 1
#endif
#undef RESTRICT_DUTAnalyticsHelper

#if !defined (DUTAnalyticsHelper_) && (INCLUDE_ALL_DUTAnalyticsHelper || defined(INCLUDE_DUTAnalyticsHelper))
#define DUTAnalyticsHelper_

@class DDATEvent;

@interface DUTAnalyticsHelper : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)recordAnalyticsWithNSString:(NSString *)analyticsKey;

+ (void)recordAnalyticsWithNSString:(NSString *)analyticsKey
                      withDDATEvent:(DDATEvent *)event;

+ (void)recordAnalyticsWithNSString:(NSString *)analyticsKey
                           withLong:(jlong)eventId;

@end

J2OBJC_EMPTY_STATIC_INIT(DUTAnalyticsHelper)

FOUNDATION_EXPORT void DUTAnalyticsHelper_init(DUTAnalyticsHelper *self);

FOUNDATION_EXPORT DUTAnalyticsHelper *new_DUTAnalyticsHelper_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DUTAnalyticsHelper *create_DUTAnalyticsHelper_init();

FOUNDATION_EXPORT void DUTAnalyticsHelper_recordAnalyticsWithNSString_(NSString *analyticsKey);

FOUNDATION_EXPORT void DUTAnalyticsHelper_recordAnalyticsWithNSString_withLong_(NSString *analyticsKey, jlong eventId);

FOUNDATION_EXPORT void DUTAnalyticsHelper_recordAnalyticsWithNSString_withDDATEvent_(NSString *analyticsKey, DDATEvent *event);

J2OBJC_TYPE_LITERAL_HEADER(DUTAnalyticsHelper)

@compatibility_alias CoTouchlabDroidconandroidSharedUtilsAnalyticsHelper DUTAnalyticsHelper;

#endif

#pragma pop_macro("INCLUDE_ALL_DUTAnalyticsHelper")
