//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DDATUserAccount.h"
#include "DINTDaggerTestComponent.h"
#include "DINTFindUserInteractor.h"
#include "DINTTestComponent.h"
#include "DINTTestSchedulerModule.h"
#include "DINTUserDetailViewModelTest.h"
#include "DPRESUserDetailHost.h"
#include "DPRESUserDetailViewModel.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IoReactivexObservable.h"
#include "IoReactivexObservableTransformer.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/After.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/stubbing/OngoingStubbing.h"
#include "org/mockito/verification/VerificationMode.h"

@interface DINTUserDetailViewModelTest () {
 @public
  DPRESUserDetailViewModel_Factory *factory_;
  DPRESUserDetailViewModel *viewModel_;
  DDATUserAccount *user_;
}

@end

J2OBJC_FIELD_SETTER(DINTUserDetailViewModelTest, factory_, DPRESUserDetailViewModel_Factory *)
J2OBJC_FIELD_SETTER(DINTUserDetailViewModelTest, viewModel_, DPRESUserDetailViewModel *)
J2OBJC_FIELD_SETTER(DINTUserDetailViewModelTest, user_, DDATUserAccount *)

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *DINTUserDetailViewModelTest__Annotations$7();

@implementation DINTUserDetailViewModelTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DINTUserDetailViewModelTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
  id<DINTTestComponent> component = [((DINTDaggerTestComponent_Builder *) nil_chk([((DINTDaggerTestComponent_Builder *) nil_chk(DINTDaggerTestComponent_builder())) testSchedulerModuleWithDINTTestSchedulerModule:create_DINTTestSchedulerModule_init()])) build];
  id<IoReactivexObservableTransformer> transformer = [((id<DINTTestComponent>) nil_chk(component)) getTransformer];
  JreStrongAssignAndConsume(&factory_, new_DPRESUserDetailViewModel_Factory_initWithDINTFindUserInteractor_withIoReactivexObservableTransformer_(interactor_, transformer));
  JreStrongAssign(&viewModel_, [factory_ createWithIOSClass:DPRESUserDetailViewModel_class_()]);
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) register__WithDPRESUserDetailHost:host_];
}

- (void)tearDown {
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) unregister];
}

- (void)whenSuccessGettingUserDetail_shouldShowResults {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:OrgMockitoMatchers_anyInt()]))) thenReturnWithId:IoReactivexObservable_justWithId_(user_)];
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) findUserWithLong:100];
  [((id<DPRESUserDetailHost>) nil_chk(OrgMockitoMockito_verifyWithId_(host_))) onUserFoundWithDDATUserAccount:user_];
}

- (void)whenErrorGettingUserDetail_shouldShowError {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:OrgMockitoMatchers_anyInt()]))) thenReturnWithId:IoReactivexObservable_errorWithNSException_(create_NSException_init())];
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) findUserWithLong:100];
  [((id<DPRESUserDetailHost>) nil_chk(OrgMockitoMockito_verifyWithId_(host_))) findUserError];
}

- (void)whenLoadUserSuccessful_ShouldCacheResult {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:OrgMockitoMatchers_anyInt()]))) thenReturnWithId:IoReactivexObservable_justWithId_(user_)];
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) findUserWithLong:100];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:OrgMockitoMatchers_anyInt()]))) thenReturnWithId:IoReactivexObservable_justWithId_(user_)];
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) findUserWithLong:100];
  [((DINTFindUserInteractor *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(interactor_, OrgMockitoMockito_timesWithInt_(1)))) loadUserAccountWithLong:100];
}

- (void)whenErrorLoadingUser_ShouldNotCacheResult {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:OrgMockitoMatchers_anyInt()]))) thenReturnWithId:IoReactivexObservable_errorWithNSException_(create_NSException_init())];
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) findUserWithLong:100];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((DINTFindUserInteractor *) nil_chk(interactor_)) loadUserAccountWithLong:OrgMockitoMatchers_anyInt()]))) thenReturnWithId:IoReactivexObservable_justWithId_(user_)];
  [((DPRESUserDetailViewModel *) nil_chk(viewModel_)) findUserWithLong:100];
  [((DINTFindUserInteractor *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(interactor_, OrgMockitoMockito_timesWithInt_(2)))) loadUserAccountWithLong:100];
}

- (void)dealloc {
  RELEASE_(interactor_);
  RELEASE_(host_);
  RELEASE_(factory_);
  RELEASE_(viewModel_);
  RELEASE_(user_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(tearDown);
  methods[3].selector = @selector(whenSuccessGettingUserDetail_shouldShowResults);
  methods[4].selector = @selector(whenErrorGettingUserDetail_shouldShowError);
  methods[5].selector = @selector(whenLoadUserSuccessful_ShouldCacheResult);
  methods[6].selector = @selector(whenErrorLoadingUser_ShouldNotCacheResult);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "interactor_", "LDINTFindUserInteractor;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 6 },
    { "host_", "LDPRESUserDetailHost;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 7 },
    { "factory_", "LDPRESUserDetailViewModel_Factory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "viewModel_", "LDPRESUserDetailViewModel;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "user_", "LDDATUserAccount;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&DINTUserDetailViewModelTest__Annotations$0, (void *)&DINTUserDetailViewModelTest__Annotations$1, (void *)&DINTUserDetailViewModelTest__Annotations$2, (void *)&DINTUserDetailViewModelTest__Annotations$3, (void *)&DINTUserDetailViewModelTest__Annotations$4, (void *)&DINTUserDetailViewModelTest__Annotations$5, (void *)&DINTUserDetailViewModelTest__Annotations$6, (void *)&DINTUserDetailViewModelTest__Annotations$7 };
  static const J2ObjcClassInfo _DINTUserDetailViewModelTest = { "UserDetailViewModelTest", "co.touchlab.droidconandroid.shared.interactors", ptrTable, methods, fields, 7, 0x1, 7, 5, -1, -1, -1, -1, -1 };
  return &_DINTUserDetailViewModelTest;
}

@end

void DINTUserDetailViewModelTest_init(DINTUserDetailViewModelTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->user_, new_DDATUserAccount_init());
}

DINTUserDetailViewModelTest *new_DINTUserDetailViewModelTest_init() {
  J2OBJC_NEW_IMPL(DINTUserDetailViewModelTest, init)
}

DINTUserDetailViewModelTest *create_DINTUserDetailViewModelTest_init() {
  J2OBJC_CREATE_IMPL(DINTUserDetailViewModelTest, init)
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DINTUserDetailViewModelTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DINTUserDetailViewModelTest)
