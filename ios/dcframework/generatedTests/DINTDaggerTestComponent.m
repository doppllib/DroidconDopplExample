//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DINTDaggerTestComponent.h"
#include "DINTTestComponent.h"
#include "DINTTestSchedulerModule.h"
#include "DINTTestSchedulerModule_ProvidesTransformerFactory.h"
#include "DaggerInternalFactory.h"
#include "DaggerInternalPreconditions.h"
#include "IoReactivexObservableTransformer.h"
#include "J2ObjC_source.h"
#include "javax/inject/Provider.h"

@interface DINTDaggerTestComponent () {
 @public
  id<JavaxInjectProvider> providesTransformerProvider_;
}

- (instancetype)initWithDINTDaggerTestComponent_Builder:(DINTDaggerTestComponent_Builder *)builder;

- (void)initialize__WithDINTDaggerTestComponent_Builder:(DINTDaggerTestComponent_Builder *)builder OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(DINTDaggerTestComponent, providesTransformerProvider_, id<JavaxInjectProvider>)

__attribute__((unused)) static void DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent *self, DINTDaggerTestComponent_Builder *builder);

__attribute__((unused)) static DINTDaggerTestComponent *new_DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static DINTDaggerTestComponent *create_DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent_Builder *builder);

__attribute__((unused)) static void DINTDaggerTestComponent_initialize__WithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent *self, DINTDaggerTestComponent_Builder *builder);

@interface DINTDaggerTestComponent_Builder () {
 @public
  DINTTestSchedulerModule *testSchedulerModule_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(DINTDaggerTestComponent_Builder, testSchedulerModule_, DINTTestSchedulerModule *)

__attribute__((unused)) static void DINTDaggerTestComponent_Builder_init(DINTDaggerTestComponent_Builder *self);

__attribute__((unused)) static DINTDaggerTestComponent_Builder *new_DINTDaggerTestComponent_Builder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DINTDaggerTestComponent_Builder *create_DINTDaggerTestComponent_Builder_init();

@implementation DINTDaggerTestComponent

- (instancetype)initWithDINTDaggerTestComponent_Builder:(DINTDaggerTestComponent_Builder *)builder {
  DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(self, builder);
  return self;
}

+ (DINTDaggerTestComponent_Builder *)builder {
  return DINTDaggerTestComponent_builder();
}

+ (id<DINTTestComponent>)create {
  return DINTDaggerTestComponent_create();
}

- (void)initialize__WithDINTDaggerTestComponent_Builder:(DINTDaggerTestComponent_Builder *)builder {
  DINTDaggerTestComponent_initialize__WithDINTDaggerTestComponent_Builder_(self, builder);
}

- (id<IoReactivexObservableTransformer>)getTransformer {
  return [((id<JavaxInjectProvider>) nil_chk(providesTransformerProvider_)) get];
}

- (void)dealloc {
  RELEASE_(providesTransformerProvider_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LDINTDaggerTestComponent_Builder;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDINTTestComponent;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, "LIoReactivexObservableTransformer;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDINTDaggerTestComponent_Builder:);
  methods[1].selector = @selector(builder);
  methods[2].selector = @selector(create);
  methods[3].selector = @selector(initialize__WithDINTDaggerTestComponent_Builder:);
  methods[4].selector = @selector(getTransformer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "providesTransformerProvider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x2, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LDINTDaggerTestComponent_Builder;", "initialize", "Ljavax/inject/Provider<Lio/reactivex/ObservableTransformer;>;" };
  static const J2ObjcClassInfo _DINTDaggerTestComponent = { "DaggerTestComponent", "co.touchlab.droidconandroid.shared.interactors", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, 0, -1, -1, -1 };
  return &_DINTDaggerTestComponent;
}

@end

void DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent *self, DINTDaggerTestComponent_Builder *builder) {
  NSObject_init(self);
  JreAssert((builder != nil), (@"co/touchlab/droidconandroid/shared/interactors/DaggerTestComponent.java:16 condition failed: assert builder != null;"));
  DINTDaggerTestComponent_initialize__WithDINTDaggerTestComponent_Builder_(self, builder);
}

DINTDaggerTestComponent *new_DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent_Builder *builder) {
  J2OBJC_NEW_IMPL(DINTDaggerTestComponent, initWithDINTDaggerTestComponent_Builder_, builder)
}

DINTDaggerTestComponent *create_DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent_Builder *builder) {
  J2OBJC_CREATE_IMPL(DINTDaggerTestComponent, initWithDINTDaggerTestComponent_Builder_, builder)
}

DINTDaggerTestComponent_Builder *DINTDaggerTestComponent_builder() {
  DINTDaggerTestComponent_initialize();
  return create_DINTDaggerTestComponent_Builder_init();
}

id<DINTTestComponent> DINTDaggerTestComponent_create() {
  DINTDaggerTestComponent_initialize();
  return [((DINTDaggerTestComponent_Builder *) nil_chk(DINTDaggerTestComponent_builder())) build];
}

void DINTDaggerTestComponent_initialize__WithDINTDaggerTestComponent_Builder_(DINTDaggerTestComponent *self, DINTDaggerTestComponent_Builder *builder) {
  JreStrongAssign(&self->providesTransformerProvider_, DINTTestSchedulerModule_ProvidesTransformerFactory_createWithDINTTestSchedulerModule_(((DINTDaggerTestComponent_Builder *) nil_chk(builder))->testSchedulerModule_));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DINTDaggerTestComponent)

@implementation DINTDaggerTestComponent_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DINTDaggerTestComponent_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<DINTTestComponent>)build {
  if (testSchedulerModule_ == nil) {
    JreStrongAssignAndConsume(&self->testSchedulerModule_, new_DINTTestSchedulerModule_init());
  }
  return create_DINTDaggerTestComponent_initWithDINTDaggerTestComponent_Builder_(self);
}

- (DINTDaggerTestComponent_Builder *)testSchedulerModuleWithDINTTestSchedulerModule:(DINTTestSchedulerModule *)testSchedulerModule {
  JreStrongAssign(&self->testSchedulerModule_, DaggerInternalPreconditions_checkNotNullWithId_(testSchedulerModule));
  return self;
}

- (void)dealloc {
  RELEASE_(testSchedulerModule_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDINTTestComponent;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LDINTDaggerTestComponent_Builder;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(build);
  methods[2].selector = @selector(testSchedulerModuleWithDINTTestSchedulerModule:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "testSchedulerModule_", "LDINTTestSchedulerModule;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "testSchedulerModule", "LDINTTestSchedulerModule;", "LDINTDaggerTestComponent;" };
  static const J2ObjcClassInfo _DINTDaggerTestComponent_Builder = { "Builder", "co.touchlab.droidconandroid.shared.interactors", ptrTable, methods, fields, 7, 0x19, 3, 1, 2, -1, -1, -1, -1 };
  return &_DINTDaggerTestComponent_Builder;
}

@end

void DINTDaggerTestComponent_Builder_init(DINTDaggerTestComponent_Builder *self) {
  NSObject_init(self);
}

DINTDaggerTestComponent_Builder *new_DINTDaggerTestComponent_Builder_init() {
  J2OBJC_NEW_IMPL(DINTDaggerTestComponent_Builder, init)
}

DINTDaggerTestComponent_Builder *create_DINTDaggerTestComponent_Builder_init() {
  J2OBJC_CREATE_IMPL(DINTDaggerTestComponent_Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DINTDaggerTestComponent_Builder)
