//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDopplUtilsXcodeUtils.h"
#include "J2ObjC_source.h"

#include  <stdio.h>
#include  <signal.h>

@implementation CoTouchlabDopplUtilsXcodeUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabDopplUtilsXcodeUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)triggerXcodeBreakpoint {
  CoTouchlabDopplUtilsXcodeUtils_triggerXcodeBreakpoint();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x109, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(triggerXcodeBreakpoint);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _CoTouchlabDopplUtilsXcodeUtils = { "XcodeUtils", "co.touchlab.doppl.utils", NULL, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabDopplUtilsXcodeUtils;
}

@end

void CoTouchlabDopplUtilsXcodeUtils_init(CoTouchlabDopplUtilsXcodeUtils *self) {
  NSObject_init(self);
}

CoTouchlabDopplUtilsXcodeUtils *new_CoTouchlabDopplUtilsXcodeUtils_init() {
  J2OBJC_NEW_IMPL(CoTouchlabDopplUtilsXcodeUtils, init)
}

CoTouchlabDopplUtilsXcodeUtils *create_CoTouchlabDopplUtilsXcodeUtils_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabDopplUtilsXcodeUtils, init)
}

void CoTouchlabDopplUtilsXcodeUtils_triggerXcodeBreakpoint() {
  CoTouchlabDopplUtilsXcodeUtils_initialize();
  //    if(AmIBeingDebugged()){
    raise(SIGSTOP);
    //    }
  }

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplUtilsXcodeUtils)
