//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDopplTestingDopplJunitTestHelper.h"
#include "DINTOneTest.h"
#include "J2ObjC_source.h"

@implementation DINTOneTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DINTOneTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)runDopplResourcesWithNSString:(NSString *)resourceName {
  return DINTOneTest_runDopplResourcesWithNSString_(resourceName);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runDopplResourcesWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "runDopplResources", "LNSString;" };
  static const J2ObjcClassInfo _DINTOneTest = { "OneTest", "co.touchlab.droidconandroid.shared.interactors", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_DINTOneTest;
}

@end

void DINTOneTest_init(DINTOneTest *self) {
  NSObject_init(self);
}

DINTOneTest *new_DINTOneTest_init() {
  J2OBJC_NEW_IMPL(DINTOneTest, init)
}

DINTOneTest *create_DINTOneTest_init() {
  J2OBJC_CREATE_IMPL(DINTOneTest, init)
}

jint DINTOneTest_runDopplResourcesWithNSString_(NSString *resourceName) {
  DINTOneTest_initialize();
  return CoTouchlabDopplTestingDopplJunitTestHelper_runResourceWithNSString_(resourceName);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DINTOneTest)
